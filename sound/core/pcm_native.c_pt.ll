; ModuleID = '/llk/IR_all_yes/sound/core/pcm_native.c_pt.bc'
source_filename = "../sound/core/pcm_native.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_stream_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stream_lock\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stream_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stream_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stream_lock\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stream_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_stream_unlock\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stream_unlock\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stream_unlock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stream_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stream_unlock\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stream_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_stream_lock_irq\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stream_lock_irq\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stream_lock_irq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stream_lock_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stream_lock_irq\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stream_lock_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_stream_unlock_irq\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stream_unlock_irq\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stream_unlock_irq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stream_unlock_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stream_unlock_irq\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stream_unlock_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+_snd_pcm_stream_lock_irqsave\22, \22a\22\09"
module asm "\09.weak\09__crc__snd_pcm_stream_lock_irqsave\09\09\09\09"
module asm "\09.long\09__crc__snd_pcm_stream_lock_irqsave\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__snd_pcm_stream_lock_irqsave:\09\09\09\09\09"
module asm "\09.asciz \09\22_snd_pcm_stream_lock_irqsave\22\09\09\09\09\09"
module asm "__kstrtabns__snd_pcm_stream_lock_irqsave:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+_snd_pcm_stream_lock_irqsave_nested\22, \22a\22\09"
module asm "\09.weak\09__crc__snd_pcm_stream_lock_irqsave_nested\09\09\09\09"
module asm "\09.long\09__crc__snd_pcm_stream_lock_irqsave_nested\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__snd_pcm_stream_lock_irqsave_nested:\09\09\09\09\09"
module asm "\09.asciz \09\22_snd_pcm_stream_lock_irqsave_nested\22\09\09\09\09\09"
module asm "__kstrtabns__snd_pcm_stream_lock_irqsave_nested:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_stream_unlock_irqrestore\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stream_unlock_irqrestore\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stream_unlock_irqrestore\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stream_unlock_irqrestore:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stream_unlock_irqrestore\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stream_unlock_irqrestore:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_hw_refine\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_hw_refine\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_hw_refine\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_hw_refine:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_hw_refine\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_hw_refine:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_stop\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stop\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stop\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_stop_xrun\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_stop_xrun\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_stop_xrun\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_stop_xrun:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_stop_xrun\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_stop_xrun:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_suspend_all\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_suspend_all\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_suspend_all\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_suspend_all:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_suspend_all\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_suspend_all:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_release_substream\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_release_substream\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_release_substream\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_release_substream:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_release_substream\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_release_substream:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_open_substream\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_open_substream\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_open_substream\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_open_substream:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_open_substream\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_open_substream:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_kernel_ioctl\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_kernel_ioctl\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_kernel_ioctl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_kernel_ioctl:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_kernel_ioctl\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_kernel_ioctl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_lib_default_mmap\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_lib_default_mmap\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_lib_default_mmap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_lib_default_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_lib_default_mmap\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_lib_default_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+snd_pcm_mmap_data\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_mmap_data\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_mmap_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_mmap_data:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_mmap_data\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_mmap_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.110 }
%union.anon.110 = type { %struct.anon.111 }
%struct.anon.111 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.112, %struct.trace_event, ptr, ptr, %union.anon.113, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.112 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.113 = type { ptr }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.action_ops = type { ptr, ptr, ptr, ptr }
%struct.snd_pcm_hw_constraint_list = type { ptr, i32, i32 }
%struct.vm_operations_struct = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon }
%union.anon = type { i32 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_hw_mask_param = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [8 x i32], [8 x i32], [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.snd_pcm = type { ptr, %struct.list_head, i32, i32, i16, i16, [64 x i8], [80 x i8], [2 x %struct.snd_pcm_str], %struct.mutex, %struct.wait_queue_head, ptr, ptr, i8, i8, i8, %struct.snd_pcm_oss }
%struct.snd_pcm_str = type { i32, ptr, i32, i32, ptr, %struct.snd_pcm_oss_stream, ptr, i32, ptr, %struct.device }
%struct.snd_pcm_oss_stream = type { ptr, %struct.mutex, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.snd_pcm_oss = type { i32, i32 }
%struct.snd_pcm_substream = type { ptr, ptr, ptr, i32, [32 x i8], i32, %struct.pm_qos_request, i32, %struct.snd_dma_buffer, i32, ptr, ptr, ptr, i8, i32, ptr, %struct.list_head, %struct.snd_pcm_group, ptr, i32, %struct.atomic_t, i32, ptr, ptr, %struct.snd_pcm_oss_substream, ptr, i8 }
%struct.pm_qos_request = type { %struct.plist_node, ptr }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.snd_dma_buffer = type { %struct.snd_dma_device, ptr, i32, i32, ptr }
%struct.snd_dma_device = type { i32, i32, i8, ptr }
%struct.snd_pcm_group = type { %struct.spinlock, %struct.mutex, %struct.list_head, %struct.refcount_struct }
%struct.snd_pcm_oss_substream = type { i8, %struct.snd_pcm_oss_setup }
%struct.snd_pcm_oss_setup = type { ptr, i8, i32, i32, ptr }
%struct.snd_pcm_runtime = type { ptr, %struct.timespec64, i8, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %union.snd_pcm_sync_id, ptr, ptr, i32, %struct.wait_queue_head, %struct.wait_queue_head, ptr, i8, ptr, ptr, %struct.snd_pcm_hardware, %struct.snd_pcm_hw_constraints, i32, i32, ptr, i32, i32, ptr, i8, [3 x i8], %struct.snd_pcm_audio_tstamp_config, %struct.snd_pcm_audio_tstamp_report, %struct.timespec64, %struct.snd_pcm_oss_runtime }
%union.snd_pcm_sync_id = type { [4 x i32] }
%struct.snd_pcm_hardware = type { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.snd_pcm_hw_constraints = type { [3 x %struct.snd_mask], [12 x %struct.snd_interval], i32, i32, ptr }
%struct.snd_mask = type { [8 x i32] }
%struct.snd_interval = type { i32, i32, i8 }
%struct.snd_pcm_audio_tstamp_config = type { i8, [3 x i8] }
%struct.snd_pcm_audio_tstamp_report = type { i8, i32 }
%struct.timespec64 = type { i64, i32 }
%struct.snd_pcm_oss_runtime = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.atomic_t, ptr, ptr, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_hw_interval_param = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.snd_pcm_info = type { i32, i32, i32, i32, [64 x i8], [80 x i8], [32 x i8], i32, i32, i32, i32, %union.snd_pcm_sync_id, [64 x i8] }
%struct.snd_pcm_hw_params = type { i32, [3 x %struct.snd_mask], [5 x %struct.snd_mask], [12 x %struct.snd_interval], [9 x %struct.snd_interval], i32, i32, i32, i32, i32, i32, i32, [64 x i8] }
%struct.snd_pcm_hw_rule = type { i32, i32, [5 x i32], ptr, ptr }
%struct.snd_pcm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.snd_card = type { i32, [16 x i8], [16 x i8], [32 x i8], [80 x i8], [32 x i8], [80 x i8], [128 x i8], ptr, ptr, ptr, %struct.list_head, %struct.device, i32, %struct.rw_semaphore, %struct.rwlock_t, i32, i32, %struct.list_head, %struct.list_head, ptr, ptr, %struct.list_head, ptr, %struct.spinlock, i32, ptr, ptr, %struct.device, [4 x ptr], i8, i8, i8, i32, %struct.wait_queue_head, i32, %struct.mutex, ptr, i32, %struct.atomic_t, %struct.wait_queue_head, %struct.wait_queue_head, ptr, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.snd_pcm_status64 = type { i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, i32, [20 x i8] }
%struct.snd_pcm_mmap_status = type { i32, i32, [4 x i8], i32, [0 x i8], %struct.__kernel_timespec, i32, i32, %struct.__kernel_timespec }
%struct.__kernel_timespec = type { i64, i64 }
%struct.snd_pcm_mmap_control = type { [4 x i8], i32, [4 x i8], [4 x i8], i32, [0 x i8] }
%struct.snd_pcm_sw_params = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [56 x i8] }
%struct.file = type { %union.anon.16, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.16 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.kuid_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.54, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.30 }
%struct.llist_node = type { ptr }
%union.anon.30 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.32 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.54 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.12, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.12 = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type { ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.60, %union.anon.61 }
%union.anon.60 = type { ptr }
%union.anon.61 = type { i64 }
%struct.iovec = type { ptr, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.72, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.73, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.74, ptr, %struct.address_space, %struct.list_head, %union.anon.75, i32, i32, ptr, ptr, ptr, ptr }
%struct.kgid_t = type { i32 }
%union.anon.72 = type { i32 }
%union.anon.73 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.74 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%union.anon.75 = type { ptr }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.anon.14 = type { ptr, i32, i32, i32 }
%struct.page = type { i32, %union.anon.3, %union.anon.67, %struct.atomic_t, i32 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.67 = type { %struct.atomic_t }
%struct.vm_fault = type { %struct.anon.14, i32, ptr, ptr, %union.anon.15, ptr, ptr, ptr, ptr, ptr }
%union.anon.15 = type { i32 }
%struct.snd_pcm_file = type { ptr, i32, i32 }
%struct.snd_pcm_status32 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [36 x i8] }
%struct.snd_pcm_channel_info = type { i32, i32, i32, i32 }
%struct.snd_pcm_sync_ptr32 = type { i32, %union.anon.119, %union.anon.120 }
%union.anon.119 = type { %struct.snd_pcm_mmap_status32, [32 x i8] }
%struct.snd_pcm_mmap_status32 = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.120 = type { %struct.snd_pcm_mmap_control32, [56 x i8] }
%struct.snd_pcm_mmap_control32 = type { i32, i32 }
%struct.snd_pcm_sync_ptr = type { i32, i32, %union.anon.121, %union.anon.122 }
%union.anon.121 = type { %struct.snd_pcm_mmap_status, [8 x i8] }
%union.anon.122 = type { %struct.snd_pcm_mmap_control, [44 x i8] }
%struct.snd_pcm_hw_params_old = type { i32, [3 x i32], [12 x %struct.snd_interval], i32, i32, i32, i32, i32, i32, i32, [64 x i8] }
%struct.snd_xferi = type { i32, ptr, i32 }
%struct.snd_xfern = type { i32, ptr, i32 }

@__tpstrtab_hw_mask_param = internal constant [14 x i8] c"hw_mask_param\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_hw_mask_param = dso_local global %struct.static_call_key { ptr @__traceiter_hw_mask_param }, align 4
@__tracepoint_hw_mask_param = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_hw_mask_param, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_hw_mask_param, ptr null, ptr @__traceiter_hw_mask_param, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_hw_mask_param = internal constant ptr @__tracepoint_hw_mask_param, section "__tracepoints_ptrs", align 4
@__tpstrtab_hw_interval_param = internal constant [18 x i8] c"hw_interval_param\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_hw_interval_param = dso_local global %struct.static_call_key { ptr @__traceiter_hw_interval_param }, align 4
@__tracepoint_hw_interval_param = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_hw_interval_param, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_hw_interval_param, ptr null, ptr @__traceiter_hw_interval_param, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_hw_interval_param = internal constant ptr @__tracepoint_hw_interval_param, section "__tracepoints_ptrs", align 4
@str__snd_pcm__trace_system_name = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"snd_pcm\00", [24 x i8] zeroinitializer }, align 32
@trace_event_fields_hw_mask_param = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.9, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.10, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.11, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.12, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.13, %union.anon.110 { %struct.anon.111 { ptr @.str.14, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.15, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.16, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.17, %union.anon.110 { %struct.anon.111 { ptr @.str.18, i32 32, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.17, %union.anon.110 { %struct.anon.111 { ptr @.str.19, i32 32, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_hw_mask_param = internal global %struct.trace_event_class { ptr @str__snd_pcm__trace_system_name, ptr @trace_event_raw_event_hw_mask_param, ptr @perf_trace_hw_mask_param, ptr @trace_event_reg, ptr @trace_event_fields_hw_mask_param, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_hw_mask_param, i64 24), ptr getelementptr (i8, ptr @event_class_hw_mask_param, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_hw_mask_param = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_hw_mask_param, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_hw_mask_param = internal global { [620 x i8], [148 x i8] } { [620 x i8] c"\22pcmC%dD%d%s:%d %03d/%03d %s %08x%08x%08x%08x %08x%08x%08x%08x\22, REC->card, REC->device, REC->direction ? \22c\22 : \22p\22, REC->subdevice, REC->index, REC->total, __print_symbolic(REC->type, {0, \22ACCESS\22}, {1, \22FORMAT\22}, {2, \22SUBFORMAT\22}, {8, \22SAMPLE_BITS\22}, {9, \22FRAME_BITS\22}, {10, \22CHANNELS\22}, {11, \22RATE\22}, {12, \22PERIOD_TIME\22}, {13, \22PERIOD_SIZE\22}, {14, \22PERIOD_BYTES\22}, {15, \22PERIODS\22}, {16, \22BUFFER_TIME\22}, {17, \22BUFFER_SIZE\22}, {18, \22BUFFER_BYTES\22}, {19, \22TICK_TIME\22}), REC->prev_bits[3], REC->prev_bits[2], REC->prev_bits[1], REC->prev_bits[0], REC->curr_bits[3], REC->curr_bits[2], REC->curr_bits[1], REC->curr_bits[0]\00", [148 x i8] zeroinitializer }, align 32
@event_hw_mask_param = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_hw_mask_param, %union.anon.112 { ptr @__tracepoint_hw_mask_param }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_hw_mask_param }, ptr @print_fmt_hw_mask_param, ptr null, %union.anon.113 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_hw_mask_param = internal global ptr @event_hw_mask_param, section "_ftrace_events", align 4
@trace_event_fields_hw_interval_param = internal global { [20 x %struct.trace_event_fields], [96 x i8] } { [20 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.9, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.10, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.11, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.12, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.13, %union.anon.110 { %struct.anon.111 { ptr @.str.14, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.15, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.8, %union.anon.110 { %struct.anon.111 { ptr @.str.16, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.40, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.41, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.43, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.44, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.45, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.46, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.47, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.48, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.110 { %struct.anon.111 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_hw_interval_param = internal global %struct.trace_event_class { ptr @str__snd_pcm__trace_system_name, ptr @trace_event_raw_event_hw_interval_param, ptr @perf_trace_hw_interval_param, ptr @trace_event_reg, ptr @trace_event_fields_hw_interval_param, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_hw_interval_param, i64 24), ptr getelementptr (i8, ptr @event_class_hw_interval_param, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_hw_interval_param = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_hw_interval_param, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_hw_interval_param = internal global { [722 x i8], [174 x i8] } { [722 x i8] c"\22pcmC%dD%d%s:%d %03d/%03d %s %d %d %s%u %u%s %d %d %s%u %u%s\22, REC->card, REC->device, REC->direction ? \22c\22 : \22p\22, REC->subdevice, REC->index, REC->total, __print_symbolic(REC->type, {0, \22ACCESS\22}, {1, \22FORMAT\22}, {2, \22SUBFORMAT\22}, {8, \22SAMPLE_BITS\22}, {9, \22FRAME_BITS\22}, {10, \22CHANNELS\22}, {11, \22RATE\22}, {12, \22PERIOD_TIME\22}, {13, \22PERIOD_SIZE\22}, {14, \22PERIOD_BYTES\22}, {15, \22PERIODS\22}, {16, \22BUFFER_TIME\22}, {17, \22BUFFER_SIZE\22}, {18, \22BUFFER_BYTES\22}, {19, \22TICK_TIME\22}), REC->prev_empty, REC->prev_integer, REC->prev_openmin ? \22(\22 : \22[\22, REC->prev_min, REC->prev_max, REC->prev_openmax ? \22)\22 : \22]\22, REC->curr_empty, REC->curr_integer, REC->curr_openmin ? \22(\22 : \22[\22, REC->curr_min, REC->curr_max, REC->curr_openmax ? \22)\22 : \22]\22\00", [174 x i8] zeroinitializer }, align 32
@event_hw_interval_param = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_hw_interval_param, %union.anon.112 { ptr @__tracepoint_hw_interval_param }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_hw_interval_param }, ptr @print_fmt_hw_interval_param, ptr null, %union.anon.113 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_hw_interval_param = internal global ptr @event_hw_interval_param, section "_ftrace_events", align 4
@__bpf_trace_tp_map_hw_mask_param = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_hw_mask_param, ptr @__bpf_trace_hw_mask_param, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_hw_interval_param = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_hw_interval_param, ptr @__bpf_trace_hw_interval_param, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@snd_pcm_group_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&group->lock\00", [19 x i8] zeroinitializer }, align 32
@snd_pcm_group_init.__key.1 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.2 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"&group->mutex\00", [18 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_stream_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stream_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stream_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stream_lock to i32), ptr @__kstrtab_snd_pcm_stream_lock, ptr @__kstrtabns_snd_pcm_stream_lock }, section "___ksymtab_gpl+snd_pcm_stream_lock", align 4
@__kstrtab_snd_pcm_stream_unlock = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stream_unlock = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stream_unlock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stream_unlock to i32), ptr @__kstrtab_snd_pcm_stream_unlock, ptr @__kstrtabns_snd_pcm_stream_unlock }, section "___ksymtab_gpl+snd_pcm_stream_unlock", align 4
@__kstrtab_snd_pcm_stream_lock_irq = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stream_lock_irq = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stream_lock_irq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stream_lock_irq to i32), ptr @__kstrtab_snd_pcm_stream_lock_irq, ptr @__kstrtabns_snd_pcm_stream_lock_irq }, section "___ksymtab_gpl+snd_pcm_stream_lock_irq", align 4
@__kstrtab_snd_pcm_stream_unlock_irq = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stream_unlock_irq = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stream_unlock_irq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stream_unlock_irq to i32), ptr @__kstrtab_snd_pcm_stream_unlock_irq, ptr @__kstrtabns_snd_pcm_stream_unlock_irq }, section "___ksymtab_gpl+snd_pcm_stream_unlock_irq", align 4
@__kstrtab__snd_pcm_stream_lock_irqsave = external dso_local constant [0 x i8], align 1
@__kstrtabns__snd_pcm_stream_lock_irqsave = external dso_local constant [0 x i8], align 1
@__ksymtab__snd_pcm_stream_lock_irqsave = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_snd_pcm_stream_lock_irqsave to i32), ptr @__kstrtab__snd_pcm_stream_lock_irqsave, ptr @__kstrtabns__snd_pcm_stream_lock_irqsave }, section "___ksymtab_gpl+_snd_pcm_stream_lock_irqsave", align 4
@__kstrtab__snd_pcm_stream_lock_irqsave_nested = external dso_local constant [0 x i8], align 1
@__kstrtabns__snd_pcm_stream_lock_irqsave_nested = external dso_local constant [0 x i8], align 1
@__ksymtab__snd_pcm_stream_lock_irqsave_nested = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_snd_pcm_stream_lock_irqsave_nested to i32), ptr @__kstrtab__snd_pcm_stream_lock_irqsave_nested, ptr @__kstrtabns__snd_pcm_stream_lock_irqsave_nested }, section "___ksymtab_gpl+_snd_pcm_stream_lock_irqsave_nested", align 4
@__kstrtab_snd_pcm_stream_unlock_irqrestore = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stream_unlock_irqrestore = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stream_unlock_irqrestore = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stream_unlock_irqrestore to i32), ptr @__kstrtab_snd_pcm_stream_unlock_irqrestore, ptr @__kstrtabns_snd_pcm_stream_unlock_irqrestore }, section "___ksymtab_gpl+snd_pcm_stream_unlock_irqrestore", align 4
@__kstrtab_snd_pcm_hw_refine = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_hw_refine = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_hw_refine = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_hw_refine to i32), ptr @__kstrtab_snd_pcm_hw_refine, ptr @__kstrtabns_snd_pcm_hw_refine }, section "___ksymtab+snd_pcm_hw_refine", align 4
@snd_pcm_action_start = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_start, ptr @snd_pcm_do_start, ptr @snd_pcm_undo_start, ptr @snd_pcm_post_start }, [16 x i8] zeroinitializer }, align 32
@snd_pcm_action_stop = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_stop, ptr @snd_pcm_do_stop, ptr null, ptr @snd_pcm_post_stop }, [16 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_stop = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stop = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stop to i32), ptr @__kstrtab_snd_pcm_stop, ptr @__kstrtabns_snd_pcm_stop }, section "___ksymtab+snd_pcm_stop", align 4
@__kstrtab_snd_pcm_stop_xrun = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_stop_xrun = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_stop_xrun = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_stop_xrun to i32), ptr @__kstrtab_snd_pcm_stop_xrun, ptr @__kstrtabns_snd_pcm_stop_xrun }, section "___ksymtab_gpl+snd_pcm_stop_xrun", align 4
@__kstrtab_snd_pcm_suspend_all = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_suspend_all = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_suspend_all = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_suspend_all to i32), ptr @__kstrtab_snd_pcm_suspend_all, ptr @__kstrtabns_snd_pcm_suspend_all }, section "___ksymtab+snd_pcm_suspend_all", align 4
@rates = internal constant { [15 x i32], [36 x i8] } { [15 x i32] [i32 5512, i32 8000, i32 11025, i32 16000, i32 22050, i32 32000, i32 44100, i32 48000, i32 64000, i32 88200, i32 96000, i32 176400, i32 192000, i32 352800, i32 384000], [36 x i8] zeroinitializer }, align 32
@snd_pcm_known_rates = dso_local constant { %struct.snd_pcm_hw_constraint_list, [20 x i8] } { %struct.snd_pcm_hw_constraint_list { ptr @rates, i32 15, i32 0 }, [20 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_release_substream = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_release_substream = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_release_substream = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_release_substream to i32), ptr @__kstrtab_snd_pcm_release_substream, ptr @__kstrtabns_snd_pcm_release_substream }, section "___ksymtab+snd_pcm_release_substream", align 4
@snd_pcm_open_substream.__UNIQUE_ID_ddebug277 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, i8 2, i8 -97, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.3 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"snd_pcm\00", [24 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"snd_pcm_open_substream\00", [41 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"sound/core/pcm_native.c\00", [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"snd_pcm_hw_constraints_init failed\0A\00", [60 x i8] zeroinitializer }, align 32
@snd_pcm_open_substream.__UNIQUE_ID_ddebug278 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.7, i8 2, i8 -94, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.7 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"snd_pcm_hw_constraints_complete failed\0A\00", [56 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_open_substream = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_open_substream = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_open_substream = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_open_substream to i32), ptr @__kstrtab_snd_pcm_open_substream, ptr @__kstrtabns_snd_pcm_open_substream }, section "___ksymtab+snd_pcm_open_substream", align 4
@__kstrtab_snd_pcm_kernel_ioctl = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_kernel_ioctl = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_kernel_ioctl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_kernel_ioctl to i32), ptr @__kstrtab_snd_pcm_kernel_ioctl, ptr @__kstrtabns_snd_pcm_kernel_ioctl }, section "___ksymtab+snd_pcm_kernel_ioctl", align 4
@snd_pcm_vm_ops_data_fault = internal constant { %struct.vm_operations_struct, [40 x i8] } { %struct.vm_operations_struct { ptr @snd_pcm_mmap_data_open, ptr @snd_pcm_mmap_data_close, ptr null, ptr null, ptr null, ptr @snd_pcm_mmap_data_fault, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_lib_default_mmap = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_lib_default_mmap = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_lib_default_mmap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_lib_default_mmap to i32), ptr @__kstrtab_snd_pcm_lib_default_mmap, ptr @__kstrtabns_snd_pcm_lib_default_mmap }, section "___ksymtab_gpl+snd_pcm_lib_default_mmap", align 4
@snd_pcm_vm_ops_data = internal constant { %struct.vm_operations_struct, [40 x i8] } { %struct.vm_operations_struct { ptr @snd_pcm_mmap_data_open, ptr @snd_pcm_mmap_data_close, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_mmap_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_mmap_data = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_mmap_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_mmap_data to i32), ptr @__kstrtab_snd_pcm_mmap_data, ptr @__kstrtabns_snd_pcm_mmap_data }, section "___ksymtab+snd_pcm_mmap_data", align 4
@snd_pcm_f_ops = dso_local constant { [2 x %struct.file_operations], [64 x i8] } { [2 x %struct.file_operations] [%struct.file_operations { ptr null, ptr @no_llseek, ptr null, ptr @snd_pcm_write, ptr null, ptr @snd_pcm_writev, ptr null, ptr null, ptr null, ptr @snd_pcm_poll, ptr @snd_pcm_ioctl, ptr null, ptr @snd_pcm_mmap, i32 0, ptr @snd_pcm_playback_open, ptr null, ptr @snd_pcm_release, ptr null, ptr @snd_pcm_fasync, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, %struct.file_operations { ptr null, ptr @no_llseek, ptr @snd_pcm_read, ptr null, ptr @snd_pcm_readv, ptr null, ptr null, ptr null, ptr null, ptr @snd_pcm_poll, ptr @snd_pcm_ioctl, ptr null, ptr @snd_pcm_mmap, i32 0, ptr @snd_pcm_capture_open, ptr null, ptr @snd_pcm_release, ptr null, ptr @snd_pcm_fasync, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }], [64 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"card\00", [27 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"device\00", [25 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"subdevice\00", [22 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"direction\00", [22 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"snd_pcm_hw_param_t\00", [45 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"index\00", [26 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"total\00", [26 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__u32[8]\00", [23 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"prev_bits\00", [22 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"curr_bits\00", [22 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"pcmC%dD%d%s:%d %03d/%03d %s %08x%08x%08x%08x %08x%08x%08x%08x\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"c\00", [30 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"p\00", [30 x i8] zeroinitializer }, align 32
@trace_raw_output_hw_mask_param.symbols = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.23 }, %struct.trace_print_flags { i32 1, ptr @.str.24 }, %struct.trace_print_flags { i32 2, ptr @.str.25 }, %struct.trace_print_flags { i32 8, ptr @.str.26 }, %struct.trace_print_flags { i32 9, ptr @.str.27 }, %struct.trace_print_flags { i32 10, ptr @.str.28 }, %struct.trace_print_flags { i32 11, ptr @.str.29 }, %struct.trace_print_flags { i32 12, ptr @.str.30 }, %struct.trace_print_flags { i32 13, ptr @.str.31 }, %struct.trace_print_flags { i32 14, ptr @.str.32 }, %struct.trace_print_flags { i32 15, ptr @.str.33 }, %struct.trace_print_flags { i32 16, ptr @.str.34 }, %struct.trace_print_flags { i32 17, ptr @.str.35 }, %struct.trace_print_flags { i32 18, ptr @.str.36 }, %struct.trace_print_flags { i32 19, ptr @.str.37 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ACCESS\00", [25 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"FORMAT\00", [25 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SUBFORMAT\00", [22 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SAMPLE_BITS\00", [20 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"FRAME_BITS\00", [21 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CHANNELS\00", [23 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RATE\00", [27 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"PERIOD_TIME\00", [20 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"PERIOD_SIZE\00", [20 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"PERIOD_BYTES\00", [19 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"PERIODS\00", [24 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"BUFFER_TIME\00", [20 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"BUFFER_SIZE\00", [20 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"BUFFER_BYTES\00", [19 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"TICK_TIME\00", [22 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"prev_min\00", [23 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"prev_max\00", [23 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"prev_openmin\00", [19 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"prev_openmax\00", [19 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"prev_integer\00", [19 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"prev_empty\00", [21 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"curr_min\00", [23 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"curr_max\00", [23 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"curr_openmin\00", [19 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"curr_openmax\00", [19 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"curr_integer\00", [19 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"curr_empty\00", [21 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"pcmC%dD%d%s:%d %03d/%03d %s %d %d %s%u %u%s %d %d %s%u %u%s\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_hw_interval_param.symbols = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.23 }, %struct.trace_print_flags { i32 1, ptr @.str.24 }, %struct.trace_print_flags { i32 2, ptr @.str.25 }, %struct.trace_print_flags { i32 8, ptr @.str.26 }, %struct.trace_print_flags { i32 9, ptr @.str.27 }, %struct.trace_print_flags { i32 10, ptr @.str.28 }, %struct.trace_print_flags { i32 11, ptr @.str.29 }, %struct.trace_print_flags { i32 12, ptr @.str.30 }, %struct.trace_print_flags { i32 13, ptr @.str.31 }, %struct.trace_print_flags { i32 14, ptr @.str.32 }, %struct.trace_print_flags { i32 15, ptr @.str.33 }, %struct.trace_print_flags { i32 16, ptr @.str.34 }, %struct.trace_print_flags { i32 17, ptr @.str.35 }, %struct.trace_print_flags { i32 18, ptr @.str.36 }, %struct.trace_print_flags { i32 19, ptr @.str.37 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"(\00", [30 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"[\00", [30 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c")\00", [30 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"]\00", [30 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.58 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"sound/core/pcm_param_trace.h\00", [35 x i8] zeroinitializer }, align 32
@trace_hw_mask_param.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.60 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.61 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@trace_hw_interval_param.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@snd_pcm_action_suspend = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_suspend, ptr @snd_pcm_do_suspend, ptr null, ptr @snd_pcm_post_suspend }, [16 x i8] zeroinitializer }, align 32
@snd_pcm_action_pause = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_pause, ptr @snd_pcm_do_pause, ptr @snd_pcm_undo_pause, ptr @snd_pcm_post_pause }, [16 x i8] zeroinitializer }, align 32
@snd_pcm_hw_params_choose.vars = internal constant { [9 x i32], [60 x i8] } { [9 x i32] [i32 0, i32 1, i32 2, i32 10, i32 11, i32 12, i32 17, i32 19, i32 -1], [60 x i8] zeroinitializer }, align 32
@snd_pcm_action_prepare = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_prepare, ptr @snd_pcm_do_prepare, ptr null, ptr @snd_pcm_post_prepare }, [16 x i8] zeroinitializer }, align 32
@snd_pcm_link_rwsem = internal global { %struct.rw_semaphore, [32 x i8] } { %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.62, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.list_head { ptr getelementptr (i8, ptr @snd_pcm_link_rwsem, i64 56), ptr getelementptr (i8, ptr @snd_pcm_link_rwsem, i64 56) }, ptr @snd_pcm_link_rwsem, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.63, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [32 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"snd_pcm_link_rwsem.wait_lock\00", [35 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"snd_pcm_link_rwsem\00", [45 x i8] zeroinitializer }, align 32
@snd_pcm_action_drain_init = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_drain_init, ptr @snd_pcm_do_drain_init, ptr null, ptr @snd_pcm_post_drain_init }, [16 x i8] zeroinitializer }, align 32
@snd_pcm_drain.__UNIQUE_ID_ddebug276 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.64, ptr @.str.5, ptr @.str.65, i8 2, i8 20, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.64 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"snd_pcm_drain\00", [18 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"playback drain error (DMA or IRQ trouble?)\0A\00", [52 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@.str.66 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@snd_pcm_common_ioctl.__UNIQUE_ID_ddebug280 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.67, ptr @.str.5, ptr @.str.68, i8 3, i8 66, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"snd_pcm_common_ioctl\00", [43 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"unknown ioctl = 0x%x\0A\00", [42 x i8] zeroinitializer }, align 32
@snd_pcm_action_reset = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_reset, ptr @snd_pcm_do_reset, ptr null, ptr @snd_pcm_post_reset }, [16 x i8] zeroinitializer }, align 32
@snd_major = external dso_local local_unnamed_addr global i32, align 4
@snd_pcm_action_resume = internal constant { %struct.action_ops, [16 x i8] } { %struct.action_ops { ptr @snd_pcm_pre_resume, ptr @snd_pcm_do_resume, ptr @snd_pcm_undo_resume, ptr @snd_pcm_post_resume }, [16 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.69 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.70 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.71 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.72 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.73 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.74 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.75 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 8]
@__sancov_gen_cov_switch_values.76 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 7]
@__sancov_gen_cov_switch_values.77 = internal global [10 x i64] [i64 8, i64 32, i64 16704, i64 16706, i64 16707, i64 16708, i64 1074020681, i64 2147762465, i64 3228057875, i64 3260825873]
@__sancov_gen_cov_switch_values.78 = internal global [8 x i64] [i64 6, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.79 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.80 = internal global [4 x i64] [i64 2, i64 32, i64 6, i64 7]
@__sancov_gen_cov_switch_values.81 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 3, i64 5, i64 8]
@__sancov_gen_cov_switch_values.82 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 7, i64 8]
@__sancov_gen_cov_switch_values.83 = internal global [8 x i64] [i64 6, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.84 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 8]
@__sancov_gen_cov_switch_values.85 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 8]
@__sancov_gen_cov_switch_values.86 = internal global [6 x i64] [i64 4, i64 32, i64 2, i64 3, i64 5, i64 6]
@__sancov_gen_cov_switch_values.87 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 8]
@__sancov_gen_cov_switch_values.88 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 8]
@__sancov_gen_cov_switch_values.89 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.90 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.91 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.92 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 7]
@__sancov_gen_cov_switch_values.93 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 3, i64 5, i64 8]
@__sancov_gen_cov_switch_values.94 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 7, i64 8]
@__sancov_gen_cov_switch_values.95 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.96 = internal global [38 x i64] [i64 36, i64 32, i64 16658, i64 16674, i64 16704, i64 16705, i64 16706, i64 16707, i64 16708, i64 16711, i64 16712, i64 16737, i64 1074020610, i64 1074020611, i64 1074020612, i64 1074020677, i64 1074020678, i64 1074020681, i64 1074020704, i64 1074544976, i64 1074544978, i64 2147762432, i64 2147762465, i64 2148286801, i64 2148286803, i64 2148548914, i64 2154578208, i64 2155888928, i64 2166374657, i64 3228057875, i64 3228320036, i64 3229630756, i64 3229892899, i64 3230155043, i64 3237757200, i64 3237757201, i64 3260825872, i64 3260825873]
@__sancov_gen_cov_switch_values.97 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.98 = internal global [8 x i64] [i64 6, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.99 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.100 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@___asan_gen_.101 = private unnamed_addr constant [32 x i8] c"str__snd_pcm__trace_system_name\00", align 1
@___asan_gen_.102 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.102, i32 36, i32 1 }
@___asan_gen_.104 = private unnamed_addr constant [33 x i8] c"trace_event_fields_hw_mask_param\00", align 1
@___asan_gen_.107 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_hw_mask_param\00", align 1
@___asan_gen_.110 = private unnamed_addr constant [24 x i8] c"print_fmt_hw_mask_param\00", align 1
@___asan_gen_.113 = private unnamed_addr constant [20 x i8] c"event_hw_mask_param\00", align 1
@___asan_gen_.116 = private unnamed_addr constant [37 x i8] c"trace_event_fields_hw_interval_param\00", align 1
@___asan_gen_.119 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_hw_interval_param\00", align 1
@___asan_gen_.122 = private unnamed_addr constant [28 x i8] c"print_fmt_hw_interval_param\00", align 1
@___asan_gen_.125 = private unnamed_addr constant [24 x i8] c"event_hw_interval_param\00", align 1
@___asan_gen_.133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 79, i32 2 }
@___asan_gen_.134 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 80, i32 2 }
@___asan_gen_.140 = private unnamed_addr constant [21 x i8] c"snd_pcm_action_start\00", align 1
@___asan_gen_.142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1408, i32 32 }
@___asan_gen_.143 = private unnamed_addr constant [20 x i8] c"snd_pcm_action_stop\00", align 1
@___asan_gen_.145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1472, i32 32 }
@___asan_gen_.146 = private unnamed_addr constant [6 x i8] c"rates\00", align 1
@___asan_gen_.148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 2399, i32 27 }
@___asan_gen_.149 = private unnamed_addr constant [20 x i8] c"snd_pcm_known_rates\00", align 1
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 2404, i32 41 }
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 2685, i32 3 }
@___asan_gen_.166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 2697, i32 3 }
@___asan_gen_.167 = private unnamed_addr constant [26 x i8] c"snd_pcm_vm_ops_data_fault\00", align 1
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 3746, i32 42 }
@___asan_gen_.170 = private unnamed_addr constant [20 x i8] c"snd_pcm_vm_ops_data\00", align 1
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 3741, i32 42 }
@___asan_gen_.173 = private unnamed_addr constant [14 x i8] c"snd_pcm_f_ops\00", align 1
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 4053, i32 30 }
@___asan_gen_.311 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.333, i32 68, i32 1 }
@___asan_gen_.327 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.327, i32 174, i32 2 }
@___asan_gen_.333 = private unnamed_addr constant [34 x i8] c"../sound/core/./pcm_param_trace.h\00", align 1
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.333, i32 28, i32 1 }
@___asan_gen_.336 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.336, i32 108, i32 2 }
@___asan_gen_.338 = private unnamed_addr constant [23 x i8] c"snd_pcm_action_suspend\00", align 1
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1663, i32 32 }
@___asan_gen_.341 = private unnamed_addr constant [21 x i8] c"snd_pcm_action_pause\00", align 1
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1595, i32 32 }
@___asan_gen_.344 = private unnamed_addr constant [5 x i8] c"vars\00", align 1
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 639, i32 19 }
@___asan_gen_.347 = private unnamed_addr constant [23 x i8] c"snd_pcm_action_prepare\00", align 1
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1914, i32 32 }
@___asan_gen_.350 = private unnamed_addr constant [19 x i8] c"snd_pcm_link_rwsem\00", align 1
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 75, i32 8 }
@___asan_gen_.359 = private unnamed_addr constant [26 x i8] c"snd_pcm_action_drain_init\00", align 1
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 2022, i32 32 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 2130, i32 5 }
@___asan_gen_.369 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.369, i32 1160, i32 2 }
@___asan_gen_.374 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 3338, i32 2 }
@___asan_gen_.377 = private unnamed_addr constant [21 x i8] c"snd_pcm_action_reset\00", align 1
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1864, i32 32 }
@___asan_gen_.380 = private unnamed_addr constant [22 x i8] c"snd_pcm_action_resume\00", align 1
@___asan_gen_.381 = private constant [27 x i8] c"../sound/core/pcm_native.c\00", align 1
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 1772, i32 32 }
@llvm.compiler.used = appending global [120 x ptr] [ptr @__bpf_trace_tp_map_hw_interval_param, ptr @__bpf_trace_tp_map_hw_mask_param, ptr @__event_hw_interval_param, ptr @__event_hw_mask_param, ptr @__ksymtab__snd_pcm_stream_lock_irqsave, ptr @__ksymtab__snd_pcm_stream_lock_irqsave_nested, ptr @__ksymtab_snd_pcm_hw_refine, ptr @__ksymtab_snd_pcm_kernel_ioctl, ptr @__ksymtab_snd_pcm_lib_default_mmap, ptr @__ksymtab_snd_pcm_mmap_data, ptr @__ksymtab_snd_pcm_open_substream, ptr @__ksymtab_snd_pcm_release_substream, ptr @__ksymtab_snd_pcm_stop, ptr @__ksymtab_snd_pcm_stop_xrun, ptr @__ksymtab_snd_pcm_stream_lock, ptr @__ksymtab_snd_pcm_stream_lock_irq, ptr @__ksymtab_snd_pcm_stream_unlock, ptr @__ksymtab_snd_pcm_stream_unlock_irq, ptr @__ksymtab_snd_pcm_stream_unlock_irqrestore, ptr @__ksymtab_snd_pcm_suspend_all, ptr @__tracepoint_hw_interval_param, ptr @__tracepoint_hw_mask_param, ptr @__tracepoint_ptr_hw_interval_param, ptr @__tracepoint_ptr_hw_mask_param, ptr @event_class_hw_interval_param, ptr @event_class_hw_mask_param, ptr @event_hw_interval_param, ptr @event_hw_mask_param, ptr @str__snd_pcm__trace_system_name, ptr @trace_event_fields_hw_mask_param, ptr @trace_event_type_funcs_hw_mask_param, ptr @print_fmt_hw_mask_param, ptr @trace_event_fields_hw_interval_param, ptr @trace_event_type_funcs_hw_interval_param, ptr @print_fmt_hw_interval_param, ptr @snd_pcm_group_init.__key, ptr @.str, ptr @snd_pcm_group_init.__key.1, ptr @.str.2, ptr @snd_pcm_action_start, ptr @snd_pcm_action_stop, ptr @rates, ptr @snd_pcm_known_rates, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @snd_pcm_vm_ops_data_fault, ptr @snd_pcm_vm_ops_data, ptr @snd_pcm_f_ops, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @trace_raw_output_hw_mask_param.symbols, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @trace_raw_output_hw_interval_param.symbols, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @snd_pcm_action_suspend, ptr @snd_pcm_action_pause, ptr @snd_pcm_hw_params_choose.vars, ptr @snd_pcm_action_prepare, ptr @snd_pcm_link_rwsem, ptr @.str.62, ptr @.str.63, ptr @snd_pcm_action_drain_init, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @snd_pcm_action_reset, ptr @snd_pcm_action_resume], section "llvm.metadata"
@0 = internal global [94 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__snd_pcm__trace_system_name to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_hw_mask_param to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_hw_mask_param to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_hw_mask_param to i32), i32 620, i32 768, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_hw_mask_param to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_hw_interval_param to i32), i32 480, i32 576, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_hw_interval_param to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_hw_interval_param to i32), i32 722, i32 896, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_hw_interval_param to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.125 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_group_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_group_init.__key.1 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_start to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_stop to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rates to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_known_rates to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.149 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_vm_ops_data_fault to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.167 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_vm_ops_data to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_f_ops to i32), i32 256, i32 320, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_hw_mask_param.symbols to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_hw_interval_param.symbols to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_suspend to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_pause to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_hw_params_choose.vars to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_prepare to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_link_rwsem to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_drain_init to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_reset to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_action_resume to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_hw_mask_param(ptr nocapture readnone %__data, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_hw_interval_param(ptr nocapture readnone %__data, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_hw_mask_param(ptr noundef %__data, ptr nocapture noundef readonly %substream, i32 noundef %type, i32 noundef %index, ptr nocapture noundef readonly %prev, ptr nocapture noundef readonly %curr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !195

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !196

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 100) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %3 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %substream, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 8
  %card6 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %card6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %card6, align 4
  %10 = load ptr, ptr %substream, align 4
  %device = getelementptr inbounds %struct.snd_pcm, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %device, align 4
  %device8 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %device8 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %device8, align 4
  %number9 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 3
  %14 = ptrtoint ptr %number9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %number9, align 4
  %subdevice = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %subdevice to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %subdevice, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %17 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %stream, align 4
  %direction = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %direction to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %direction, align 4
  %type10 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %type10 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %type, ptr %type10, align 4
  %index11 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %index11 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %index, ptr %index11, align 4
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %22 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %runtime, align 4
  %rules_num = getelementptr inbounds %struct.snd_pcm_runtime, ptr %23, i32 0, i32 47, i32 2
  %24 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rules_num, align 8
  %total = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 7
  %26 = ptrtoint ptr %total to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %total, align 4
  %prev_bits = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 8
  %27 = call ptr @memcpy(ptr %prev_bits, ptr %prev, i32 32)
  %curr_bits = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call3, i32 0, i32 9
  %28 = call ptr @memcpy(ptr %curr_bits, ptr %curr, i32 32)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_hw_mask_param(ptr noundef %__data, ptr nocapture noundef readonly %substream, i32 noundef %type, i32 noundef %index, ptr nocapture noundef readonly %prev, ptr nocapture noundef readonly %curr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !197
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !197
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 100, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !185) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %substream, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 8
  %card17 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %card17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %card17, align 4
  %34 = load ptr, ptr %substream, align 4
  %device = getelementptr inbounds %struct.snd_pcm, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %device, align 4
  %device19 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %device19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %device19, align 4
  %number20 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 3
  %38 = ptrtoint ptr %number20 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %number20, align 4
  %subdevice = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %subdevice to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %subdevice, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %41 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %stream, align 4
  %direction = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %direction to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %direction, align 4
  %type21 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %type21 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %type, ptr %type21, align 4
  %index22 = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %index22 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %index, ptr %index22, align 4
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %46 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %runtime, align 4
  %rules_num = getelementptr inbounds %struct.snd_pcm_runtime, ptr %47, i32 0, i32 47, i32 2
  %48 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rules_num, align 8
  %total = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 7
  %50 = ptrtoint ptr %total to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %total, align 4
  %prev_bits = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 8
  %51 = call ptr @memcpy(ptr %prev_bits, ptr %prev, i32 32)
  %curr_bits = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %call13, i32 0, i32 9
  %52 = call ptr @memcpy(ptr %curr_bits, ptr %curr, i32 32)
  %53 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rctx, align 4
  %55 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 100, i32 noundef %54, ptr noundef %__data, i64 noundef 1, ptr noundef %56, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_hw_interval_param(ptr noundef %__data, ptr nocapture noundef readonly %substream, i32 noundef %type, i32 noundef %index, ptr nocapture noundef readonly %prev, ptr nocapture noundef readonly %curr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !195

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !196

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 84) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %3 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %substream, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 8
  %card6 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %card6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %card6, align 4
  %10 = load ptr, ptr %substream, align 4
  %device = getelementptr inbounds %struct.snd_pcm, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %device, align 4
  %device8 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %device8 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %device8, align 4
  %number9 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 3
  %14 = ptrtoint ptr %number9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %number9, align 4
  %subdevice = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %subdevice to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %subdevice, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %17 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %stream, align 4
  %direction = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %direction to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %direction, align 4
  %type10 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %type10 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %type, ptr %type10, align 4
  %index11 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %index11 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %index, ptr %index11, align 4
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %22 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %runtime, align 4
  %rules_num = getelementptr inbounds %struct.snd_pcm_runtime, ptr %23, i32 0, i32 47, i32 2
  %24 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rules_num, align 8
  %total = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 7
  %26 = ptrtoint ptr %total to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %total, align 4
  %27 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %prev, align 4
  %prev_min = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 8
  %29 = ptrtoint ptr %prev_min to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %prev_min, align 4
  %max = getelementptr inbounds %struct.snd_interval, ptr %prev, i32 0, i32 1
  %30 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %max, align 4
  %prev_max = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 9
  %32 = ptrtoint ptr %prev_max to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %prev_max, align 4
  %openmin = getelementptr inbounds %struct.snd_interval, ptr %prev, i32 0, i32 2
  %33 = ptrtoint ptr %openmin to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load = load i8, ptr %openmin, align 4
  %bf.lshr = lshr i8 %bf.load, 7
  %bf.cast = zext i8 %bf.lshr to i32
  %prev_openmin = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 10
  %34 = ptrtoint ptr %prev_openmin to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %bf.cast, ptr %prev_openmin, align 4
  %bf.load12 = load i8, ptr %openmin, align 4
  %bf.lshr13 = lshr i8 %bf.load12, 6
  %bf.clear = and i8 %bf.lshr13, 1
  %bf.cast14 = zext i8 %bf.clear to i32
  %prev_openmax = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 11
  %35 = ptrtoint ptr %prev_openmax to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %bf.cast14, ptr %prev_openmax, align 4
  %bf.load15 = load i8, ptr %openmin, align 4
  %bf.lshr16 = lshr i8 %bf.load15, 5
  %bf.clear17 = and i8 %bf.lshr16, 1
  %bf.cast18 = zext i8 %bf.clear17 to i32
  %prev_integer = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 12
  %36 = ptrtoint ptr %prev_integer to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %bf.cast18, ptr %prev_integer, align 4
  %bf.load19 = load i8, ptr %openmin, align 4
  %bf.lshr20 = lshr i8 %bf.load19, 4
  %bf.clear21 = and i8 %bf.lshr20, 1
  %bf.cast22 = zext i8 %bf.clear21 to i32
  %prev_empty = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 13
  %37 = ptrtoint ptr %prev_empty to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %bf.cast22, ptr %prev_empty, align 4
  %38 = ptrtoint ptr %curr to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %curr, align 4
  %curr_min = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 14
  %40 = ptrtoint ptr %curr_min to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %curr_min, align 4
  %max24 = getelementptr inbounds %struct.snd_interval, ptr %curr, i32 0, i32 1
  %41 = ptrtoint ptr %max24 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %max24, align 4
  %curr_max = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 15
  %43 = ptrtoint ptr %curr_max to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %curr_max, align 4
  %openmin25 = getelementptr inbounds %struct.snd_interval, ptr %curr, i32 0, i32 2
  %44 = ptrtoint ptr %openmin25 to i32
  call void @__asan_load1_noabort(i32 %44)
  %bf.load26 = load i8, ptr %openmin25, align 4
  %bf.lshr27 = lshr i8 %bf.load26, 7
  %bf.cast28 = zext i8 %bf.lshr27 to i32
  %curr_openmin = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 16
  %45 = ptrtoint ptr %curr_openmin to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %bf.cast28, ptr %curr_openmin, align 4
  %bf.load30 = load i8, ptr %openmin25, align 4
  %bf.lshr31 = lshr i8 %bf.load30, 6
  %bf.clear32 = and i8 %bf.lshr31, 1
  %bf.cast33 = zext i8 %bf.clear32 to i32
  %curr_openmax = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 17
  %46 = ptrtoint ptr %curr_openmax to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %bf.cast33, ptr %curr_openmax, align 4
  %bf.load35 = load i8, ptr %openmin25, align 4
  %bf.lshr36 = lshr i8 %bf.load35, 5
  %bf.clear37 = and i8 %bf.lshr36, 1
  %bf.cast38 = zext i8 %bf.clear37 to i32
  %curr_integer = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 18
  %47 = ptrtoint ptr %curr_integer to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %bf.cast38, ptr %curr_integer, align 4
  %bf.load40 = load i8, ptr %openmin25, align 4
  %bf.lshr41 = lshr i8 %bf.load40, 4
  %bf.clear42 = and i8 %bf.lshr41, 1
  %bf.cast43 = zext i8 %bf.clear42 to i32
  %curr_empty = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call3, i32 0, i32 19
  %48 = ptrtoint ptr %curr_empty to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %bf.cast43, ptr %curr_empty, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_hw_interval_param(ptr noundef %__data, ptr nocapture noundef readonly %substream, i32 noundef %type, i32 noundef %index, ptr nocapture noundef readonly %prev, ptr nocapture noundef readonly %curr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !197
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !197
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !185) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %substream, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 8
  %card17 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %card17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %card17, align 4
  %34 = load ptr, ptr %substream, align 4
  %device = getelementptr inbounds %struct.snd_pcm, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %device, align 4
  %device19 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %device19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %device19, align 4
  %number20 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 3
  %38 = ptrtoint ptr %number20 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %number20, align 4
  %subdevice = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %subdevice to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %subdevice, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %41 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %stream, align 4
  %direction = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %direction to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %direction, align 4
  %type21 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %type21 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %type, ptr %type21, align 4
  %index22 = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %index22 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %index, ptr %index22, align 4
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %46 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %runtime, align 4
  %rules_num = getelementptr inbounds %struct.snd_pcm_runtime, ptr %47, i32 0, i32 47, i32 2
  %48 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rules_num, align 8
  %total = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 7
  %50 = ptrtoint ptr %total to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %total, align 4
  %51 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %prev, align 4
  %prev_min = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 8
  %53 = ptrtoint ptr %prev_min to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %prev_min, align 4
  %max = getelementptr inbounds %struct.snd_interval, ptr %prev, i32 0, i32 1
  %54 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %max, align 4
  %prev_max = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 9
  %56 = ptrtoint ptr %prev_max to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %prev_max, align 4
  %openmin = getelementptr inbounds %struct.snd_interval, ptr %prev, i32 0, i32 2
  %57 = ptrtoint ptr %openmin to i32
  call void @__asan_load1_noabort(i32 %57)
  %bf.load = load i8, ptr %openmin, align 4
  %bf.lshr = lshr i8 %bf.load, 7
  %bf.cast = zext i8 %bf.lshr to i32
  %prev_openmin = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 10
  %58 = ptrtoint ptr %prev_openmin to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %bf.cast, ptr %prev_openmin, align 4
  %bf.load23 = load i8, ptr %openmin, align 4
  %bf.lshr24 = lshr i8 %bf.load23, 6
  %bf.clear = and i8 %bf.lshr24, 1
  %bf.cast25 = zext i8 %bf.clear to i32
  %prev_openmax = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 11
  %59 = ptrtoint ptr %prev_openmax to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %bf.cast25, ptr %prev_openmax, align 4
  %bf.load26 = load i8, ptr %openmin, align 4
  %bf.lshr27 = lshr i8 %bf.load26, 5
  %bf.clear28 = and i8 %bf.lshr27, 1
  %bf.cast29 = zext i8 %bf.clear28 to i32
  %prev_integer = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 12
  %60 = ptrtoint ptr %prev_integer to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %bf.cast29, ptr %prev_integer, align 4
  %bf.load30 = load i8, ptr %openmin, align 4
  %bf.lshr31 = lshr i8 %bf.load30, 4
  %bf.clear32 = and i8 %bf.lshr31, 1
  %bf.cast33 = zext i8 %bf.clear32 to i32
  %prev_empty = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 13
  %61 = ptrtoint ptr %prev_empty to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %bf.cast33, ptr %prev_empty, align 4
  %62 = ptrtoint ptr %curr to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %curr, align 4
  %curr_min = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 14
  %64 = ptrtoint ptr %curr_min to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %curr_min, align 4
  %max35 = getelementptr inbounds %struct.snd_interval, ptr %curr, i32 0, i32 1
  %65 = ptrtoint ptr %max35 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %max35, align 4
  %curr_max = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 15
  %67 = ptrtoint ptr %curr_max to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %curr_max, align 4
  %openmin36 = getelementptr inbounds %struct.snd_interval, ptr %curr, i32 0, i32 2
  %68 = ptrtoint ptr %openmin36 to i32
  call void @__asan_load1_noabort(i32 %68)
  %bf.load37 = load i8, ptr %openmin36, align 4
  %bf.lshr38 = lshr i8 %bf.load37, 7
  %bf.cast39 = zext i8 %bf.lshr38 to i32
  %curr_openmin = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 16
  %69 = ptrtoint ptr %curr_openmin to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %bf.cast39, ptr %curr_openmin, align 4
  %bf.load41 = load i8, ptr %openmin36, align 4
  %bf.lshr42 = lshr i8 %bf.load41, 6
  %bf.clear43 = and i8 %bf.lshr42, 1
  %bf.cast44 = zext i8 %bf.clear43 to i32
  %curr_openmax = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 17
  %70 = ptrtoint ptr %curr_openmax to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %bf.cast44, ptr %curr_openmax, align 4
  %bf.load46 = load i8, ptr %openmin36, align 4
  %bf.lshr47 = lshr i8 %bf.load46, 5
  %bf.clear48 = and i8 %bf.lshr47, 1
  %bf.cast49 = zext i8 %bf.clear48 to i32
  %curr_integer = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 18
  %71 = ptrtoint ptr %curr_integer to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %bf.cast49, ptr %curr_integer, align 4
  %bf.load51 = load i8, ptr %openmin36, align 4
  %bf.lshr52 = lshr i8 %bf.load51, 4
  %bf.clear53 = and i8 %bf.lshr52, 1
  %bf.cast54 = zext i8 %bf.clear53 to i32
  %curr_empty = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %call13, i32 0, i32 19
  %72 = ptrtoint ptr %curr_empty to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %bf.cast54, ptr %curr_empty, align 4
  %73 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %rctx, align 4
  %75 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %74, ptr noundef %__data, i64 noundef 1, ptr noundef %76, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_hw_mask_param(ptr noundef %__data, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %substream to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %type to i64
  %conv8 = zext i32 %index to i64
  %1 = ptrtoint ptr %prev to i32
  %conv12 = zext i32 %1 to i64
  %2 = ptrtoint ptr %curr to i32
  %conv16 = zext i32 %2 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_hw_interval_param(ptr noundef %__data, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %substream to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %type to i64
  %conv8 = zext i32 %index to i64
  %1 = ptrtoint ptr %prev to i32
  %conv12 = zext i32 %1 to i64
  %2 = ptrtoint ptr %curr to i32
  %conv16 = zext i32 %2 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_group_init(ptr noundef %group) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__raw_spin_lock_init(ptr noundef %group, ptr noundef nonnull @.str, ptr noundef nonnull @snd_pcm_group_init.__key, i16 noundef signext 3) #14
  %mutex = getelementptr inbounds %struct.snd_pcm_group, ptr %group, i32 0, i32 1
  tail call void @__mutex_init(ptr noundef %mutex, ptr noundef nonnull @.str.2, ptr noundef nonnull @snd_pcm_group_init.__key.1) #14
  %substreams = getelementptr inbounds %struct.snd_pcm_group, ptr %group, i32 0, i32 2
  %0 = ptrtoint ptr %substreams to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %substreams, ptr %substreams, align 4
  %prev.i = getelementptr inbounds %struct.snd_pcm_group, ptr %group, i32 0, i32 2, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %substreams, ptr %prev.i, align 4
  %refs = getelementptr inbounds %struct.snd_pcm_group, ptr %group, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  %2 = ptrtoint ptr %refs to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 1, ptr %refs, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_stream_lock(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #14
  br label %snd_pcm_group_lock.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock(ptr noundef %self_group) #14
  br label %snd_pcm_group_lock.exit

snd_pcm_group_lock.exit:                          ; preds = %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_stream_unlock(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i) #14
  br label %snd_pcm_group_unlock.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock(ptr noundef %self_group) #14
  br label %snd_pcm_group_unlock.exit

snd_pcm_group_unlock.exit:                        ; preds = %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_stream_lock_irq(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #14
  br label %snd_pcm_group_lock_irq.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group) #14
  br label %snd_pcm_group_lock_irq.exit

snd_pcm_group_lock_irq.exit:                      ; preds = %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_stream_unlock_irq(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i) #14
  br label %snd_pcm_group_unlock_irq.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group) #14
  br label %snd_pcm_group_unlock_irq.exit

snd_pcm_group_unlock_irq.exit:                    ; preds = %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @_snd_pcm_stream_lock_irqsave(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %do.body1, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #14
  br label %if.end

do.body1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %self_group2) #14
  br label %if.end

if.end:                                           ; preds = %do.body1, %if.then
  %flags.0 = phi i32 [ 0, %if.then ], [ %call3, %do.body1 ]
  ret i32 %flags.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @_snd_pcm_stream_lock_irqsave_nested(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %do.body1, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 1) #14
  br label %if.end

do.body1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %call3 = tail call i32 @_raw_spin_lock_irqsave_nested(ptr noundef %self_group2, i32 noundef 1) #14
  br label %if.end

if.end:                                           ; preds = %do.body1, %if.then
  %flags.0 = phi i32 [ 0, %if.then ], [ %call3, %do.body1 ]
  ret i32 %flags.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave_nested(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_stream_unlock_irqrestore(ptr noundef %substream, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex) #14
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %self_group1, i32 noundef %flags) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_info(ptr noundef %substream, ptr noundef %info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %pstr2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 1
  %2 = ptrtoint ptr %pstr2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pstr2, align 4
  %4 = call ptr @memset(ptr %info, i32 0, i32 288)
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 8
  %card3 = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 3
  %9 = ptrtoint ptr %card3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %card3, align 4
  %device = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %device, align 4
  %12 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %info, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %13 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %stream, align 4
  %stream5 = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 2
  %15 = ptrtoint ptr %stream5 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %stream5, align 4
  %number6 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 3
  %16 = ptrtoint ptr %number6 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %number6, align 4
  %subdevice = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 1
  %18 = ptrtoint ptr %subdevice to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %subdevice, align 4
  %id = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 4
  %id7 = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 6
  %call = tail call i32 @strscpy(ptr noundef %id, ptr noundef %id7, i32 noundef 64) #14
  %name = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 5
  %name10 = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 7
  %call12 = tail call i32 @strscpy(ptr noundef %name, ptr noundef %name10, i32 noundef 80) #14
  %dev_class = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 4
  %19 = ptrtoint ptr %dev_class to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %dev_class, align 4
  %conv = zext i16 %20 to i32
  %dev_class13 = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 7
  %21 = ptrtoint ptr %dev_class13 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %conv, ptr %dev_class13, align 4
  %dev_subclass = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 5
  %22 = ptrtoint ptr %dev_subclass to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %dev_subclass, align 2
  %conv14 = zext i16 %23 to i32
  %dev_subclass15 = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 8
  %24 = ptrtoint ptr %dev_subclass15 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %conv14, ptr %dev_subclass15, align 4
  %substream_count = getelementptr inbounds %struct.snd_pcm_str, ptr %3, i32 0, i32 2
  %25 = ptrtoint ptr %substream_count to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %substream_count, align 8
  %subdevices_count = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 9
  %27 = ptrtoint ptr %subdevices_count to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %subdevices_count, align 4
  %28 = load i32, ptr %substream_count, align 8
  %substream_opened = getelementptr inbounds %struct.snd_pcm_str, ptr %3, i32 0, i32 3
  %29 = ptrtoint ptr %substream_opened to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %substream_opened, align 4
  %sub = sub i32 %28, %30
  %subdevices_avail = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 10
  %31 = ptrtoint ptr %subdevices_avail to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %sub, ptr %subdevices_avail, align 4
  %subname = getelementptr inbounds %struct.snd_pcm_info, ptr %info, i32 0, i32 6
  %name18 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 4
  %call20 = tail call i32 @strscpy(ptr noundef %subname, ptr noundef %name18, i32 noundef 32) #14
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_info_user(ptr noundef %substream, ptr noundef %_info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 288) #17
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %substream, align 4
  %pstr2.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 1
  %3 = ptrtoint ptr %pstr2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pstr2.i, align 4
  %5 = getelementptr inbounds i8, ptr %call7.i, i32 16
  %6 = call ptr @memset(ptr %5, i32 0, i32 272)
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %2, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 8
  %card3.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 3
  %11 = ptrtoint ptr %card3.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %card3.i, align 4
  %device.i = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 2
  %12 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device.i, align 4
  %14 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %call7.i, align 8
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %15 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %stream.i, align 4
  %stream5.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 2
  %17 = ptrtoint ptr %stream5.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %stream5.i, align 8
  %number6.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 3
  %18 = ptrtoint ptr %number6.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %number6.i, align 4
  %subdevice.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 1
  %20 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %subdevice.i, align 4
  %id.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 4
  %id7.i = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 6
  %call.i = tail call i32 @strscpy(ptr noundef %id.i, ptr noundef %id7.i, i32 noundef 64) #14
  %name.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 5
  %name10.i = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 7
  %call12.i = tail call i32 @strscpy(ptr noundef %name.i, ptr noundef %name10.i, i32 noundef 80) #14
  %dev_class.i = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 4
  %21 = ptrtoint ptr %dev_class.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %dev_class.i, align 4
  %conv.i = zext i16 %22 to i32
  %dev_class13.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 7
  %23 = ptrtoint ptr %dev_class13.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %conv.i, ptr %dev_class13.i, align 8
  %dev_subclass.i = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 5
  %24 = ptrtoint ptr %dev_subclass.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %dev_subclass.i, align 2
  %conv14.i = zext i16 %25 to i32
  %dev_subclass15.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 8
  %26 = ptrtoint ptr %dev_subclass15.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %conv14.i, ptr %dev_subclass15.i, align 4
  %substream_count.i = getelementptr inbounds %struct.snd_pcm_str, ptr %4, i32 0, i32 2
  %27 = ptrtoint ptr %substream_count.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %substream_count.i, align 8
  %subdevices_count.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 9
  %29 = ptrtoint ptr %subdevices_count.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %subdevices_count.i, align 8
  %30 = load i32, ptr %substream_count.i, align 8
  %substream_opened.i = getelementptr inbounds %struct.snd_pcm_str, ptr %4, i32 0, i32 3
  %31 = ptrtoint ptr %substream_opened.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %substream_opened.i, align 4
  %sub.i = sub i32 %30, %32
  %subdevices_avail.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 10
  %33 = ptrtoint ptr %subdevices_avail.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %sub.i, ptr %subdevices_avail.i, align 4
  %subname.i = getelementptr inbounds %struct.snd_pcm_info, ptr %call7.i, i32 0, i32 6
  %name18.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 4
  %call20.i = tail call i32 @strscpy(ptr noundef %subname.i, ptr noundef %name18.i, i32 noundef 32) #14
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

if.end.copy_to_user.exit.thread_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %if.end
  %34 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_info, i32 288, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %34, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call7.i, i32 noundef 288) #14
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %_info, ptr noundef nonnull %call7.i, i32 noundef 288) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool4.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool4.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %if.end.copy_to_user.exit.thread_crit_edge
  %35 = phi i32 [ -14, %if.end.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef nonnull %call7.i) #14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %35, %copy_to_user.exit.thread ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_hw_refine(ptr noundef %substream, ptr noundef %params) #0 align 64 {
entry:
  %old_interval.i = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %info = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 7
  %0 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %info, align 4
  %fifo_size = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 11
  %1 = ptrtoint ptr %fifo_size to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %fifo_size, align 4
  %rmask = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 5
  %2 = ptrtoint ptr %rmask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rmask, align 4
  %and = and i32 %3, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %msbits = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 8
  %4 = ptrtoint ptr %msbits to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %msbits, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %and2 = and i32 %3, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.then4

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %rate_num = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 9
  %5 = ptrtoint ptr %rate_num to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %rate_num, align 4
  %rate_den = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 10
  %6 = ptrtoint ptr %rate_den to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %rate_den, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end.if.end5_crit_edge
  %call = tail call fastcc i32 @constrain_mask_params(ptr noundef %substream, ptr noundef %params)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.end5.cleanup_crit_edge, label %if.end7

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end5
  %runtime.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %7 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %runtime.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %old_interval.i) #14
  %9 = call ptr @memset(ptr %old_interval.i, i32 255, i32 12)
  %cmask.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 6
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end7
  %k.038.i = phi i32 [ 8, %if.end7 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %sub.i.i = add nsw i32 %k.038.i, -8
  %arrayidx.i.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i.i
  %empty.i.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i.i, i32 2
  %10 = ptrtoint ptr %empty.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load.i.i = load i8, ptr %empty.i.i, align 4
  %11 = and i8 %bf.load.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.constrain_interval_params.exit.thread_crit_edge

for.body.i.constrain_interval_params.exit.thread_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %constrain_interval_params.exit.thread

if.end.i:                                         ; preds = %for.body.i
  %12 = ptrtoint ptr %rmask to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rmask, align 4
  %shl.i = shl nuw nsw i32 1, %k.038.i
  %and.i = and i32 %13, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %if.end.i.for.inc.i_crit_edge, label %if.end4.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end4.i:                                        ; preds = %if.end.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@snd_pcm_hw_refine, %if.then6.i)) #14
          to label %if.end7.i [label %if.then6.i], !srcloc !200

if.then6.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %14 = call ptr @memcpy(ptr %old_interval.i, ptr %arrayidx.i.i, i32 12)
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.end4.i
  %arrayidx.i36.i = getelementptr %struct.snd_pcm_runtime, ptr %8, i32 0, i32 47, i32 1, i32 %sub.i.i
  %call9.i = call i32 @snd_interval_refine(ptr noundef %arrayidx.i.i, ptr noundef %arrayidx.i36.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp10.i = icmp slt i32 %call9.i, 0
  br i1 %cmp10.i, label %if.end7.i.constrain_interval_params.exit.thread_crit_edge, label %if.end12.i

if.end7.i.constrain_interval_params.exit.thread_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %constrain_interval_params.exit.thread

if.end12.i:                                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp13.i = icmp eq i32 %call9.i, 0
  br i1 %cmp13.i, label %if.end12.i.for.inc.i_crit_edge, label %if.end15.i

if.end12.i.for.inc.i_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end15.i:                                       ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @trace_hw_interval_param(ptr noundef %substream, i32 noundef %k.038.i, i32 noundef 0, ptr noundef nonnull %old_interval.i, ptr noundef %arrayidx.i.i) #14
  %15 = ptrtoint ptr %cmask.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cmask.i, align 4
  %or.i = or i32 %16, %shl.i
  store i32 %or.i, ptr %cmask.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end15.i, %if.end12.i.for.inc.i_crit_edge, %if.end.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %k.038.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %if.end11, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

constrain_interval_params.exit.thread:            ; preds = %if.end7.i.constrain_interval_params.exit.thread_crit_edge, %for.body.i.constrain_interval_params.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ %call9.i, %if.end7.i.constrain_interval_params.exit.thread_crit_edge ], [ -22, %for.body.i.constrain_interval_params.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %old_interval.i) #14
  br label %cleanup

if.end11:                                         ; preds = %for.inc.i
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %old_interval.i) #14
  %call12 = call fastcc i32 @constrain_params_by_rules(ptr noundef %substream, ptr noundef %params)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp13 = icmp slt i32 %call12, 0
  br i1 %cmp13, label %if.end11.cleanup_crit_edge, label %if.end15

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  %17 = ptrtoint ptr %rmask to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %rmask, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.end11.cleanup_crit_edge, %constrain_interval_params.exit.thread, %if.end5.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end15 ], [ %call, %if.end5.cleanup_crit_edge ], [ %call12, %if.end11.cleanup_crit_edge ], [ %retval.0.i.ph, %constrain_interval_params.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @constrain_mask_params(ptr noundef %substream, ptr noundef %params) unnamed_addr #0 align 64 {
entry:
  %old.i = alloca %struct.snd_mask, align 4
  %old_mask = alloca %struct.snd_mask, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %hw_constraints = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %old_mask) #14
  %rmask = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 5
  %cmask = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 6
  %2 = call ptr @memset(ptr %old_mask, i32 255, i32 32)
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %k.042 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 %k.042
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %snd_mask_empty.exit, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_mask_empty.exit:                              ; preds = %for.body
  %arrayidx.1.i = getelementptr [8 x i32], ptr %arrayidx.i, i32 0, i32 1
  %5 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.1.i.not = icmp eq i32 %6, 0
  br i1 %tobool.not.1.i.not, label %snd_mask_empty.exit.cleanup_crit_edge, label %snd_mask_empty.exit.if.end_crit_edge

snd_mask_empty.exit.if.end_crit_edge:             ; preds = %snd_mask_empty.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_mask_empty.exit.cleanup_crit_edge:            ; preds = %snd_mask_empty.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %snd_mask_empty.exit.if.end_crit_edge, %for.body.if.end_crit_edge
  %7 = ptrtoint ptr %rmask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rmask, align 4
  %shl = shl nuw nsw i32 1, %k.042
  %and = and i32 %8, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.for.inc_crit_edge, label %if.end4

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end4:                                          ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@constrain_mask_params, %if.then6)) #14
          to label %if.end7 [label %if.then6], !srcloc !200

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %9 = call ptr @memcpy(ptr %old_mask, ptr %arrayidx.i, i32 32)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4
  %arrayidx.i35 = getelementptr [3 x %struct.snd_mask], ptr %hw_constraints, i32 0, i32 %k.042
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %old.i) #14
  %10 = call ptr @memcpy(ptr %old.i, ptr %arrayidx.i, i32 32)
  %11 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i35, align 4
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %and.i.i = and i32 %14, %12
  store i32 %and.i.i, ptr %arrayidx.i, align 4
  %arrayidx.1.i.i = getelementptr [8 x i32], ptr %arrayidx.i35, i32 0, i32 1
  %15 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.1.i.i, align 4
  %arrayidx2.1.i.i = getelementptr [8 x i32], ptr %arrayidx.i, i32 0, i32 1
  %17 = ptrtoint ptr %arrayidx2.1.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx2.1.i.i, align 4
  %and.1.i.i = and i32 %18, %16
  store i32 %and.1.i.i, ptr %arrayidx2.1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i.i)
  %tobool.not.1.i.not.i = icmp eq i32 %and.1.i.i, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 %tobool.not.1.i.not.i, i1 false
  br i1 %or.cond.i, label %snd_mask_refine.exit.thread, label %snd_mask_refine.exit

snd_mask_refine.exit.thread:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %old.i) #14
  br label %cleanup

snd_mask_refine.exit:                             ; preds = %if.end7
  %bcmp.i.i = call i32 @bcmp(ptr noundef dereferenceable(8) %arrayidx.i, ptr noundef nonnull dereferenceable(8) %old.i, i32 8) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i.i)
  %tobool.not.i7.i.not = icmp eq i32 %bcmp.i.i, 0
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %old.i) #14
  br i1 %tobool.not.i7.i.not, label %snd_mask_refine.exit.for.inc_crit_edge, label %if.end15

snd_mask_refine.exit.for.inc_crit_edge:           ; preds = %snd_mask_refine.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end15:                                         ; preds = %snd_mask_refine.exit
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @trace_hw_mask_param(ptr noundef %substream, i32 noundef %k.042, i32 noundef 0, ptr noundef nonnull %old_mask, ptr noundef %arrayidx.i)
  %19 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cmask, align 4
  %or = or i32 %20, %shl
  store i32 %or, ptr %cmask, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end15, %snd_mask_refine.exit.for.inc_crit_edge, %if.end.for.inc_crit_edge
  %inc = add nuw nsw i32 %k.042, 1
  %exitcond.not = icmp eq i32 %inc, 3
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %snd_mask_refine.exit.thread, %snd_mask_empty.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %snd_mask_refine.exit.thread ], [ 0, %for.inc.cleanup_crit_edge ], [ -22, %snd_mask_empty.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %old_mask) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @constrain_params_by_rules(ptr noundef %substream, ptr noundef %params) unnamed_addr #0 align 64 {
entry:
  %vstamps = alloca [20 x i32], align 4
  %old_mask = alloca %struct.snd_mask, align 4
  %old_interval = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %vstamps) #14
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %old_mask) #14
  %2 = call ptr @memset(ptr %old_mask, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %old_interval) #14
  %3 = call ptr @memset(ptr %old_interval, i32 255, i32 12)
  %rules_num = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 47, i32 2
  %4 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rules_num, align 4
  %6 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %5, i32 4) #14
  %7 = extractvalue { i32, i1 } %6, 1
  br i1 %7, label %entry.cleanup_crit_edge, label %if.end7.i.i, !prof !196

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7.i.i:                                      ; preds = %entry
  %8 = extractvalue { i32, i1 } %6, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %8, i32 noundef 3520) #20
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.cleanup_crit_edge, label %for.cond.preheader

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end7.i.i
  %rmask = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 5
  %9 = ptrtoint ptr %rmask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rmask, align 4
  %11 = and i32 %10, 1
  %12 = ptrtoint ptr %vstamps to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %vstamps, align 4
  %13 = lshr i32 %10, 1
  %14 = and i32 %13, 1
  %arrayidx.1 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 1
  %15 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %arrayidx.1, align 4
  %16 = lshr i32 %10, 2
  %17 = and i32 %16, 1
  %arrayidx.2 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 2
  %18 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %arrayidx.2, align 4
  %19 = lshr i32 %10, 3
  %20 = and i32 %19, 1
  %arrayidx.3 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 3
  %21 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %arrayidx.3, align 4
  %22 = lshr i32 %10, 4
  %23 = and i32 %22, 1
  %arrayidx.4 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 4
  %24 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.4, align 4
  %25 = lshr i32 %10, 5
  %26 = and i32 %25, 1
  %arrayidx.5 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 5
  %27 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx.5, align 4
  %28 = lshr i32 %10, 6
  %29 = and i32 %28, 1
  %arrayidx.6 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 6
  %30 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %arrayidx.6, align 4
  %31 = lshr i32 %10, 7
  %32 = and i32 %31, 1
  %arrayidx.7 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 7
  %33 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx.7, align 4
  %34 = lshr i32 %10, 8
  %35 = and i32 %34, 1
  %arrayidx.8 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 8
  %36 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %arrayidx.8, align 4
  %37 = lshr i32 %10, 9
  %38 = and i32 %37, 1
  %arrayidx.9 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 9
  %39 = ptrtoint ptr %arrayidx.9 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %arrayidx.9, align 4
  %40 = lshr i32 %10, 10
  %41 = and i32 %40, 1
  %arrayidx.10 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 10
  %42 = ptrtoint ptr %arrayidx.10 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %arrayidx.10, align 4
  %43 = lshr i32 %10, 11
  %44 = and i32 %43, 1
  %arrayidx.11 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 11
  %45 = ptrtoint ptr %arrayidx.11 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %arrayidx.11, align 4
  %46 = lshr i32 %10, 12
  %47 = and i32 %46, 1
  %arrayidx.12 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 12
  %48 = ptrtoint ptr %arrayidx.12 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %arrayidx.12, align 4
  %49 = lshr i32 %10, 13
  %50 = and i32 %49, 1
  %arrayidx.13 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 13
  %51 = ptrtoint ptr %arrayidx.13 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %arrayidx.13, align 4
  %52 = lshr i32 %10, 14
  %53 = and i32 %52, 1
  %arrayidx.14 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 14
  %54 = ptrtoint ptr %arrayidx.14 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %arrayidx.14, align 4
  %55 = lshr i32 %10, 15
  %56 = and i32 %55, 1
  %arrayidx.15 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 15
  %57 = ptrtoint ptr %arrayidx.15 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %arrayidx.15, align 4
  %58 = lshr i32 %10, 16
  %59 = and i32 %58, 1
  %arrayidx.16 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 16
  %60 = ptrtoint ptr %arrayidx.16 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %arrayidx.16, align 4
  %61 = lshr i32 %10, 17
  %62 = and i32 %61, 1
  %arrayidx.17 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 17
  %63 = ptrtoint ptr %arrayidx.17 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %62, ptr %arrayidx.17, align 4
  %64 = lshr i32 %10, 18
  %65 = and i32 %64, 1
  %arrayidx.18 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 18
  %66 = ptrtoint ptr %arrayidx.18 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %arrayidx.18, align 4
  %67 = lshr i32 %10, 19
  %68 = and i32 %67, 1
  %arrayidx.19 = getelementptr inbounds [20 x i32], ptr %vstamps, i32 0, i32 19
  %69 = ptrtoint ptr %arrayidx.19 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %arrayidx.19, align 4
  %rules = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 47, i32 4
  %cmask = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 6
  %70 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %70)
  %.pr = load i32, ptr %rules_num, align 4
  br label %retry

retry:                                            ; preds = %for.end87.retry_crit_edge, %for.cond.preheader
  %71 = phi i32 [ %.pr, %for.cond.preheader ], [ %113, %for.end87.retry_crit_edge ]
  %stamp.0 = phi i32 [ 2, %for.cond.preheader ], [ %stamp.2, %for.end87.retry_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp4176.not = icmp eq i32 %71, 0
  br i1 %cmp4176.not, label %retry.out_crit_edge, label %retry.for.body5_crit_edge

retry.for.body5_crit_edge:                        ; preds = %retry
  br label %for.body5

retry.out_crit_edge:                              ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

for.body5:                                        ; preds = %for.inc85.for.body5_crit_edge, %retry.for.body5_crit_edge
  %again.0.off0186 = phi i1 [ %again.2.off0, %for.inc85.for.body5_crit_edge ], [ false, %retry.for.body5_crit_edge ]
  %stamp.1185 = phi i32 [ %stamp.2, %for.inc85.for.body5_crit_edge ], [ %stamp.0, %retry.for.body5_crit_edge ]
  %k.1177 = phi i32 [ %inc86, %for.inc85.for.body5_crit_edge ], [ 0, %retry.for.body5_crit_edge ]
  %72 = ptrtoint ptr %rules to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %rules, align 4
  %arrayidx6 = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177
  %74 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx6, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool8.not = icmp eq i32 %75, 0
  br i1 %tobool8.not, label %for.body5.if.end13_crit_edge, label %land.lhs.true

for.body5.if.end13_crit_edge:                     ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

land.lhs.true:                                    ; preds = %for.body5
  %76 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %params, align 4
  %and10 = and i32 %77, %75
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %land.lhs.true.for.inc85_crit_edge, label %land.lhs.true.if.end13_crit_edge

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

land.lhs.true.for.inc85_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc85

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %for.body5.if.end13_crit_edge
  %arrayidx15173 = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177, i32 2, i32 0
  %78 = ptrtoint ptr %arrayidx15173 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx15173, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %79)
  %cmp16174 = icmp sgt i32 %79, -1
  br i1 %cmp16174, label %for.body17.lr.ph, label %if.end13.for.inc85_crit_edge

if.end13.for.inc85_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc85

for.body17.lr.ph:                                 ; preds = %if.end13
  %arrayidx21 = getelementptr i32, ptr %call8.i.i, i32 %k.1177
  %80 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx21, align 4
  br label %for.body17

for.cond14:                                       ; preds = %for.body17
  %inc26 = add i32 %d.0175, 1
  %arrayidx15 = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177, i32 2, i32 %inc26
  %82 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx15, align 4
  %cmp16 = icmp sgt i32 %83, -1
  br i1 %cmp16, label %for.cond14.for.body17_crit_edge, label %for.cond14.for.inc85_crit_edge

for.cond14.for.inc85_crit_edge:                   ; preds = %for.cond14
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc85

for.cond14.for.body17_crit_edge:                  ; preds = %for.cond14
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body17

for.body17:                                       ; preds = %for.cond14.for.body17_crit_edge, %for.body17.lr.ph
  %84 = phi i32 [ %79, %for.body17.lr.ph ], [ %83, %for.cond14.for.body17_crit_edge ]
  %d.0175 = phi i32 [ 0, %for.body17.lr.ph ], [ %inc26, %for.cond14.for.body17_crit_edge ]
  %arrayidx20 = getelementptr [20 x i32], ptr %vstamps, i32 0, i32 %84
  %85 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx20, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %86, i32 %81)
  %cmp22 = icmp ugt i32 %86, %81
  br i1 %cmp22, label %if.end32, label %for.cond14

if.end32:                                         ; preds = %for.body17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@constrain_params_by_rules, %if.then34)) #14
          to label %if.end41 [label %if.then34], !srcloc !200

if.then34:                                        ; preds = %if.end32
  %var = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177, i32 1
  %87 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %var, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %88)
  %89 = icmp ugt i32 %88, 2
  br i1 %89, label %if.then34.if.end41_crit_edge, label %if.then37

if.then34.if.end41_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then37:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 %88
  %90 = call ptr @memcpy(ptr %old_mask, ptr %arrayidx.i, i32 32)
  br label %if.end41

if.end41:                                         ; preds = %if.then37, %if.then34.if.end41_crit_edge, %if.end32
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@constrain_params_by_rules, %if.then43)) #14
          to label %if.end51 [label %if.then43], !srcloc !200

if.then43:                                        ; preds = %if.end41
  %var44 = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177, i32 1
  %91 = ptrtoint ptr %var44 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %var44, align 4
  %93 = add i32 %92, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %93)
  %94 = icmp ugt i32 %93, 11
  br i1 %94, label %if.then43.if.end51_crit_edge, label %if.then47

if.then43.if.end51_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end51

if.then47:                                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i160 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %93
  %95 = call ptr @memcpy(ptr %old_interval, ptr %arrayidx.i160, i32 12)
  br label %if.end51

if.end51:                                         ; preds = %if.then47, %if.then43.if.end51_crit_edge, %if.end41
  %func = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177, i32 3
  %96 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %func, align 4
  %call52 = call i32 %97(ptr noundef %params, ptr noundef %arrayidx6) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %cmp53 = icmp slt i32 %call52, 0
  br i1 %cmp53, label %if.end51.out_crit_edge, label %if.end55

if.end51.out_crit_edge:                           ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end55:                                         ; preds = %if.end51
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool56.not = icmp eq i32 %call52, 0
  br i1 %tobool56.not, label %if.end55.if.end82_crit_edge, label %land.lhs.true57

if.end55.if.end82_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end82

land.lhs.true57:                                  ; preds = %if.end55
  %var58 = getelementptr %struct.snd_pcm_hw_rule, ptr %73, i32 %k.1177, i32 1
  %98 = ptrtoint ptr %var58 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %var58, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %99)
  %cmp59 = icmp sgt i32 %99, -1
  br i1 %cmp59, label %if.then60, label %land.lhs.true57.if.end82_crit_edge

land.lhs.true57.if.end82_crit_edge:               ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end82

if.then60:                                        ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %99)
  %100 = icmp ugt i32 %99, 2
  br i1 %100, label %if.then60.if.end68_crit_edge, label %if.then64

if.then60.if.end68_crit_edge:                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end68

if.then64:                                        ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #16
  %add = add nuw i32 %k.1177, 1
  %arrayidx.i161 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 %99
  call fastcc void @trace_hw_mask_param(ptr noundef %substream, i32 noundef %99, i32 noundef %add, ptr noundef nonnull %old_mask, ptr noundef %arrayidx.i161)
  br label %if.end68

if.end68:                                         ; preds = %if.then64, %if.then60.if.end68_crit_edge
  %101 = ptrtoint ptr %var58 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %var58, align 4
  %103 = add i32 %102, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %103)
  %104 = icmp ugt i32 %103, 11
  br i1 %104, label %if.end68.if.end77_crit_edge, label %if.then72

if.end68.if.end77_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end77

if.then72:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #16
  %add74 = add nuw i32 %k.1177, 1
  %arrayidx.i163 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %103
  call fastcc void @trace_hw_interval_param(ptr noundef %substream, i32 noundef %102, i32 noundef %add74, ptr noundef nonnull %old_interval, ptr noundef %arrayidx.i163)
  br label %if.end77

if.end77:                                         ; preds = %if.then72, %if.end68.if.end77_crit_edge
  %105 = ptrtoint ptr %var58 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %var58, align 4
  %shl79 = shl nuw i32 1, %106
  %107 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %cmask, align 4
  %or = or i32 %108, %shl79
  store i32 %or, ptr %cmask, align 4
  %109 = load i32, ptr %var58, align 4
  %arrayidx81 = getelementptr [20 x i32], ptr %vstamps, i32 0, i32 %109
  %110 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %stamp.1185, ptr %arrayidx81, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.end77, %land.lhs.true57.if.end82_crit_edge, %if.end55.if.end82_crit_edge
  %again.1.off0 = phi i1 [ true, %if.end77 ], [ %again.0.off0186, %land.lhs.true57.if.end82_crit_edge ], [ %again.0.off0186, %if.end55.if.end82_crit_edge ]
  %inc83 = add i32 %stamp.1185, 1
  %111 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %stamp.1185, ptr %arrayidx21, align 4
  br label %for.inc85

for.inc85:                                        ; preds = %if.end82, %for.cond14.for.inc85_crit_edge, %if.end13.for.inc85_crit_edge, %land.lhs.true.for.inc85_crit_edge
  %stamp.2 = phi i32 [ %inc83, %if.end82 ], [ %stamp.1185, %land.lhs.true.for.inc85_crit_edge ], [ %stamp.1185, %if.end13.for.inc85_crit_edge ], [ %stamp.1185, %for.cond14.for.inc85_crit_edge ]
  %again.2.off0 = phi i1 [ %again.1.off0, %if.end82 ], [ %again.0.off0186, %land.lhs.true.for.inc85_crit_edge ], [ %again.0.off0186, %if.end13.for.inc85_crit_edge ], [ %again.0.off0186, %for.cond14.for.inc85_crit_edge ]
  %inc86 = add nuw i32 %k.1177, 1
  %112 = ptrtoint ptr %rules_num to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %rules_num, align 4
  %cmp4 = icmp ult i32 %inc86, %113
  br i1 %cmp4, label %for.inc85.for.body5_crit_edge, label %for.end87

for.inc85.for.body5_crit_edge:                    ; preds = %for.inc85
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body5

for.end87:                                        ; preds = %for.inc85
  br i1 %again.2.off0, label %for.end87.retry_crit_edge, label %for.end87.out_crit_edge

for.end87.out_crit_edge:                          ; preds = %for.end87
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

for.end87.retry_crit_edge:                        ; preds = %for.end87
  call void @__sanitizer_cov_trace_pc() #16
  br label %retry

out:                                              ; preds = %for.end87.out_crit_edge, %if.end51.out_crit_edge, %retry.out_crit_edge
  %err.0 = phi i32 [ %call52, %if.end51.out_crit_edge ], [ 0, %for.end87.out_crit_edge ], [ 0, %retry.out_crit_edge ]
  call void @kfree(ptr noundef nonnull %call8.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end7.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %out ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %old_interval) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %old_mask) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %vstamps) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_sync_stop(ptr noundef %substream, i1 noundef zeroext %sync_irq) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end20_crit_edge, label %land.lhs.true

entry.if.end20_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

land.lhs.true:                                    ; preds = %entry
  %stop_operating = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 43
  %2 = ptrtoint ptr %stop_operating to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %stop_operating, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not = icmp eq i8 %3, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end20_crit_edge, label %if.then

land.lhs.true.if.end20_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.then:                                          ; preds = %land.lhs.true
  %4 = ptrtoint ptr %stop_operating to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %stop_operating, align 4
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %tobool5.not = icmp eq ptr %6, null
  br i1 %tobool5.not, label %if.then.if.else_crit_edge, label %land.lhs.true6

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true6:                                   ; preds = %if.then
  %sync_stop = getelementptr inbounds %struct.snd_pcm_ops, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %sync_stop to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sync_stop, align 4
  %tobool8.not = icmp eq ptr %8, null
  br i1 %tobool8.not, label %land.lhs.true6.if.else_crit_edge, label %if.then9

land.lhs.true6.if.else_crit_edge:                 ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then9:                                         ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 %8(ptr noundef %substream) #14
  br label %if.end20

if.else:                                          ; preds = %land.lhs.true6.if.else_crit_edge, %if.then.if.else_crit_edge
  br i1 %sync_irq, label %land.lhs.true13, label %if.else.if.end20_crit_edge

if.else.if.end20_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

land.lhs.true13:                                  ; preds = %if.else
  %9 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %substream, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  %sync_irq14 = getelementptr inbounds %struct.snd_card, ptr %12, i32 0, i32 33
  %13 = ptrtoint ptr %sync_irq14 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sync_irq14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp = icmp sgt i32 %14, 0
  br i1 %cmp, label %if.then15, label %land.lhs.true13.if.end20_crit_edge

land.lhs.true13.if.end20_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.then15:                                        ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @synchronize_irq(i32 noundef %14) #14
  br label %if.end20

if.end20:                                         ; preds = %if.then15, %land.lhs.true13.if.end20_crit_edge, %if.else.if.end20_crit_edge, %if.then9, %land.lhs.true.if.end20_crit_edge, %entry.if.end20_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_irq(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_status64(ptr noundef %substream, ptr nocapture noundef %status) local_unnamed_addr #0 align 64 {
entry:
  %tstamp64 = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %2 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %audio_tstamp_data = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 13
  %6 = ptrtoint ptr %audio_tstamp_data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %audio_tstamp_data, align 4
  %audio_tstamp_config = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 56
  %8 = trunc i32 %7 to i8
  %9 = ptrtoint ptr %audio_tstamp_config to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load.i = load i8, ptr %audio_tstamp_config, align 4
  %bf.shl.i = shl i8 %8, 4
  %bf.clear.i = and i8 %bf.load.i, 7
  %bf.set.i = or i8 %bf.clear.i, %bf.shl.i
  %10 = lshr i8 %8, 1
  %bf.shl4.i = and i8 %10, 8
  %bf.set6.i = or i8 %bf.set.i, %bf.shl4.i
  store i8 %bf.set6.i, ptr %audio_tstamp_config, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %bf.set6.i)
  %cmp = icmp ult i8 %bf.set6.i, 16
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %hw = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46
  %11 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %hw, align 8
  %and = and i32 %12, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %storemerge.v = select i1 %tobool.not, i8 16, i8 32
  %storemerge = or i8 %storemerge.v, %bf.set6.i
  %13 = ptrtoint ptr %audio_tstamp_config to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %storemerge, ptr %audio_tstamp_config, align 8
  %audio_tstamp_report = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 57
  %14 = ptrtoint ptr %audio_tstamp_report to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load10 = load i8, ptr %audio_tstamp_report, align 4
  %bf.clear11 = and i8 %bf.load10, 127
  store i8 %bf.clear11, ptr %audio_tstamp_report, align 4
  br label %if.end18

if.else13:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %audio_tstamp_report14 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 57
  %15 = ptrtoint ptr %audio_tstamp_report14 to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load15 = load i8, ptr %audio_tstamp_report14, align 4
  %bf.set17 = or i8 %bf.load15, -128
  store i8 %bf.set17, ptr %audio_tstamp_report14, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.else13, %if.then
  %status19 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %16 = ptrtoint ptr %status19 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %status19, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 8
  %20 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %status, align 8
  %21 = load ptr, ptr %status19, align 4
  %suspended_state = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %21, i32 0, i32 6
  %22 = ptrtoint ptr %suspended_state to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %suspended_state, align 8
  %suspended_state22 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 12
  %24 = ptrtoint ptr %suspended_state22 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %suspended_state22, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp24 = icmp eq i32 %19, 0
  br i1 %cmp24, label %if.end18._end_crit_edge, label %if.end26

if.end18._end_crit_edge:                          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

if.end26:                                         ; preds = %if.end18
  %trigger_tstamp = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 1
  %25 = ptrtoint ptr %trigger_tstamp to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %trigger_tstamp, align 8
  %trigger_tstamp_sec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 2
  %27 = ptrtoint ptr %trigger_tstamp_sec to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %trigger_tstamp_sec, align 8
  %tv_nsec = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %tv_nsec, align 8
  %conv = sext i32 %29 to i64
  %trigger_tstamp_nsec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 3
  %30 = ptrtoint ptr %trigger_tstamp_nsec to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %conv, ptr %trigger_tstamp_nsec, align 8
  %31 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %runtime1, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %32, i32 0, i32 37
  %33 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %status.i, align 4
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %34, align 8
  %37 = zext i32 %36 to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values)
  switch i32 %36, label %if.end26.if.else59_crit_edge [
    i32 3, label %if.end26.if.then29_crit_edge
    i32 5, label %snd_pcm_running.exit
  ]

if.end26.if.then29_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then29

if.end26.if.else59_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else59

snd_pcm_running.exit:                             ; preds = %if.end26
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %38 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp5.i.not = icmp eq i32 %39, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.if.then29_crit_edge, label %snd_pcm_running.exit.if.else59_crit_edge

snd_pcm_running.exit.if.else59_crit_edge:         ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else59

snd_pcm_running.exit.if.then29_crit_edge:         ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then29

if.then29:                                        ; preds = %snd_pcm_running.exit.if.then29_crit_edge, %if.end26.if.then29_crit_edge
  %call30 = tail call i32 @snd_pcm_update_hw_ptr(ptr noundef %substream) #14
  %tstamp_mode = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 27
  %40 = ptrtoint ptr %tstamp_mode to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %tstamp_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %41)
  %cmp31 = icmp eq i32 %41, 1
  br i1 %cmp31, label %if.then33, label %if.then29._tstamp_end_crit_edge

if.then29._tstamp_end_crit_edge:                  ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #16
  br label %_tstamp_end

if.then33:                                        ; preds = %if.then29
  %42 = ptrtoint ptr %status19 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %status19, align 4
  %tstamp = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %43, i32 0, i32 5
  %44 = ptrtoint ptr %tstamp to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %tstamp, align 8
  %tstamp_sec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 4
  %46 = ptrtoint ptr %tstamp_sec to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %tstamp_sec, align 8
  %47 = load ptr, ptr %status19, align 4
  %tv_nsec38 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %47, i32 0, i32 5, i32 1
  %48 = ptrtoint ptr %tv_nsec38 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %tv_nsec38, align 8
  %tstamp_nsec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 5
  %50 = ptrtoint ptr %tstamp_nsec to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %tstamp_nsec, align 8
  %driver_tstamp = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 58
  %51 = ptrtoint ptr %driver_tstamp to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %driver_tstamp, align 8
  %driver_tstamp_sec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 16
  %53 = ptrtoint ptr %driver_tstamp_sec to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %52, ptr %driver_tstamp_sec, align 8
  %tv_nsec41 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 58, i32 1
  %54 = ptrtoint ptr %tv_nsec41 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %tv_nsec41, align 8
  %conv42 = sext i32 %55 to i64
  %driver_tstamp_nsec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 17
  %56 = ptrtoint ptr %driver_tstamp_nsec to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %conv42, ptr %driver_tstamp_nsec, align 8
  %57 = load ptr, ptr %status19, align 4
  %audio_tstamp = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %57, i32 0, i32 8
  %58 = ptrtoint ptr %audio_tstamp to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %audio_tstamp, align 8
  %audio_tstamp_sec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 14
  %60 = ptrtoint ptr %audio_tstamp_sec to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %59, ptr %audio_tstamp_sec, align 8
  %61 = load ptr, ptr %status19, align 4
  %tv_nsec47 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %61, i32 0, i32 8, i32 1
  %62 = ptrtoint ptr %tv_nsec47 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %tv_nsec47, align 8
  %audio_tstamp_nsec = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 15
  %64 = ptrtoint ptr %audio_tstamp_nsec to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %63, ptr %audio_tstamp_nsec, align 8
  %audio_tstamp_report48 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 57
  %65 = ptrtoint ptr %audio_tstamp_report48 to i32
  call void @__asan_load1_noabort(i32 %65)
  %bf.load49 = load i8, ptr %audio_tstamp_report48, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load49)
  %cmp52 = icmp slt i8 %bf.load49, 0
  br i1 %cmp52, label %if.then54, label %if.then33._tstamp_end_crit_edge

if.then33._tstamp_end_crit_edge:                  ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  br label %_tstamp_end

if.then54:                                        ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  %audio_tstamp_accuracy = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 18
  %66 = shl i8 %bf.load49, 2
  %67 = and i8 %66, 16
  %bf.lshr2.i = lshr i8 %bf.load49, 3
  %bf.clear3.i = and i8 %bf.lshr2.i, 15
  %or21.i = or i8 %67, %bf.clear3.i
  %or922.i = tail call i8 @llvm.fshl.i8(i8 %or21.i, i8 %bf.load49, i8 1) #14
  %or9.i = zext i8 %or922.i to i32
  %68 = ptrtoint ptr %audio_tstamp_data to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %audio_tstamp_data, align 4
  %and.i = and i32 %69, 65535
  %shl10.i = shl nuw nsw i32 %or9.i, 16
  %or11.i = or i32 %and.i, %shl10.i
  store i32 %or11.i, ptr %audio_tstamp_data, align 4
  %accuracy12.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 57, i32 1
  %70 = ptrtoint ptr %accuracy12.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %accuracy12.i, align 4
  %72 = ptrtoint ptr %audio_tstamp_accuracy to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %71, ptr %audio_tstamp_accuracy, align 4
  br label %_tstamp_end

if.else59:                                        ; preds = %snd_pcm_running.exit.if.else59_crit_edge, %if.end26.if.else59_crit_edge
  %tstamp_mode60 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 27
  %73 = ptrtoint ptr %tstamp_mode60 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %tstamp_mode60, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %74)
  %cmp61 = icmp eq i32 %74, 1
  br i1 %cmp61, label %if.then63, label %if.else59._tstamp_end_crit_edge

if.else59._tstamp_end_crit_edge:                  ; preds = %if.else59
  call void @__sanitizer_cov_trace_pc() #16
  br label %_tstamp_end

if.then63:                                        ; preds = %if.else59
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tstamp64) #14
  %75 = call ptr @memset(ptr %tstamp64, i32 255, i32 16)
  %tstamp_type.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 49
  %76 = ptrtoint ptr %tstamp_type.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %tstamp_type.i, align 8
  %78 = zext i32 %77 to i64
  call void @__sanitizer_cov_trace_switch(i64 %78, ptr @__sancov_gen_cov_switch_values.69)
  switch i32 %77, label %sw.default.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb1.i
  ]

sw.bb.i:                                          ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  call void @ktime_get_ts64(ptr noundef nonnull %tstamp64) #14
  br label %snd_pcm_gettime.exit

sw.bb1.i:                                         ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  call void @ktime_get_raw_ts64(ptr noundef nonnull %tstamp64) #14
  br label %snd_pcm_gettime.exit

sw.default.i:                                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  call void @ktime_get_real_ts64(ptr noundef nonnull %tstamp64) #14
  br label %snd_pcm_gettime.exit

snd_pcm_gettime.exit:                             ; preds = %sw.default.i, %sw.bb1.i, %sw.bb.i
  %79 = ptrtoint ptr %tstamp64 to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %tstamp64, align 8
  %tstamp_sec66 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 4
  %81 = ptrtoint ptr %tstamp_sec66 to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %80, ptr %tstamp_sec66, align 8
  %tv_nsec67 = getelementptr inbounds %struct.timespec64, ptr %tstamp64, i32 0, i32 1
  %82 = ptrtoint ptr %tv_nsec67 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %tv_nsec67, align 8
  %conv68 = sext i32 %83 to i64
  %tstamp_nsec69 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 5
  %84 = ptrtoint ptr %tstamp_nsec69 to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 %conv68, ptr %tstamp_nsec69, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tstamp64) #14
  br label %_tstamp_end

_tstamp_end:                                      ; preds = %snd_pcm_gettime.exit, %if.else59._tstamp_end_crit_edge, %if.then54, %if.then33._tstamp_end_crit_edge, %if.then29._tstamp_end_crit_edge
  %control = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %85 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %control, align 8
  %appl_ptr = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %appl_ptr to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %appl_ptr, align 4
  %appl_ptr72 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 6
  %89 = ptrtoint ptr %appl_ptr72 to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %88, ptr %appl_ptr72, align 8
  %90 = ptrtoint ptr %status19 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %status19, align 4
  %hw_ptr = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %91, i32 0, i32 3
  %92 = ptrtoint ptr %hw_ptr to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %hw_ptr, align 4
  %hw_ptr74 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 7
  %94 = ptrtoint ptr %hw_ptr74 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %93, ptr %hw_ptr74, align 4
  %stream.i139 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %95 = ptrtoint ptr %stream.i139 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %stream.i139, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %cmp.i = icmp eq i32 %96, 0
  %97 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %runtime1, align 4
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %98, i32 0, i32 37
  %99 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %status.i.i, align 4
  %hw_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %100, i32 0, i32 3
  %101 = ptrtoint ptr %hw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %hw_ptr.i.i, align 4
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_tstamp_end
  call void @__sanitizer_cov_trace_pc() #16
  %buffer_size.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %98, i32 0, i32 18
  %103 = ptrtoint ptr %buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %buffer_size.i.i, align 4
  %add.i.i = add i32 %104, %102
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %98, i32 0, i32 38
  %105 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %control.i.i, align 8
  %appl_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %106, i32 0, i32 1
  %107 = ptrtoint ptr %appl_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %appl_ptr.i.i, align 4
  %sub.i.i = sub i32 %add.i.i, %108
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %98, i32 0, i32 33
  %109 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %boundary.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %110)
  %cmp3.not.i.i = icmp ult i32 %sub.i.i, %110
  %sub6.i.i = select i1 %cmp3.not.i.i, i32 0, i32 %110
  %111 = sub i32 0, %sub6.i.i
  %avail.0.p.i.i = select i1 %cmp.i.i, i32 %110, i32 %111
  %avail.0.i.i = add i32 %avail.0.p.i.i, %sub.i.i
  br label %snd_pcm_avail.exit

if.else.i:                                        ; preds = %_tstamp_end
  %control.i7.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %98, i32 0, i32 38
  %112 = ptrtoint ptr %control.i7.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %control.i7.i, align 8
  %appl_ptr.i8.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %appl_ptr.i8.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %appl_ptr.i8.i, align 4
  %sub.i9.i = sub i32 %102, %115
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i9.i)
  %cmp.i10.i = icmp slt i32 %sub.i9.i, 0
  br i1 %cmp.i10.i, label %if.then.i.i141, label %if.else.i.snd_pcm_avail.exit_crit_edge

if.else.i.snd_pcm_avail.exit_crit_edge:           ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_avail.exit

if.then.i.i141:                                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i11.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %98, i32 0, i32 33
  %116 = ptrtoint ptr %boundary.i11.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %boundary.i11.i, align 8
  %add.i12.i = add i32 %117, %sub.i9.i
  br label %snd_pcm_avail.exit

snd_pcm_avail.exit:                               ; preds = %if.then.i.i141, %if.else.i.snd_pcm_avail.exit_crit_edge, %if.then.i
  %retval.0.i = phi i32 [ %avail.0.i.i, %if.then.i ], [ %add.i12.i, %if.then.i.i141 ], [ %sub.i9.i, %if.else.i.snd_pcm_avail.exit_crit_edge ]
  %avail = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 9
  %118 = ptrtoint ptr %avail to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 %retval.0.i, ptr %avail, align 4
  %119 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %runtime1, align 4
  %status.i143 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 37
  %121 = ptrtoint ptr %status.i143 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %status.i143, align 4
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %122, align 8
  %125 = zext i32 %124 to i64
  call void @__sanitizer_cov_trace_switch(i64 %125, ptr @__sancov_gen_cov_switch_values.70)
  switch i32 %124, label %snd_pcm_avail.exit.cond.end_crit_edge [
    i32 3, label %cond.true
    i32 5, label %snd_pcm_running.exit149
  ]

snd_pcm_avail.exit.cond.end_crit_edge:            ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

snd_pcm_running.exit149:                          ; preds = %snd_pcm_avail.exit
  %126 = ptrtoint ptr %stream.i139 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %stream.i139, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %127)
  %cmp5.i145.not = icmp eq i32 %127, 0
  br i1 %cmp5.i145.not, label %snd_pcm_running.exit149.if.then.i155_crit_edge, label %snd_pcm_running.exit149.cond.end_crit_edge

snd_pcm_running.exit149.cond.end_crit_edge:       ; preds = %snd_pcm_running.exit149
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

snd_pcm_running.exit149.if.then.i155_crit_edge:   ; preds = %snd_pcm_running.exit149
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i155

cond.true:                                        ; preds = %snd_pcm_avail.exit
  %128 = ptrtoint ptr %stream.i139 to i32
  call void @__asan_load4_noabort(i32 %128)
  %.pr = load i32, ptr %stream.i139, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %phi.cmp = icmp eq i32 %.pr, 0
  br i1 %phi.cmp, label %cond.true.if.then.i155_crit_edge, label %if.else.i161

cond.true.if.then.i155_crit_edge:                 ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i155

if.then.i155:                                     ; preds = %cond.true.if.then.i155_crit_edge, %snd_pcm_running.exit149.if.then.i155_crit_edge
  %buffer_size.i.i153 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 18
  %129 = ptrtoint ptr %buffer_size.i.i153 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %buffer_size.i.i153, align 4
  %hw_ptr.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %122, i32 0, i32 3
  %131 = ptrtoint ptr %hw_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %hw_ptr.i.i.i, align 4
  %add.i.i.i = add i32 %132, %130
  %control.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 38
  %133 = ptrtoint ptr %control.i.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %control.i.i.i, align 8
  %appl_ptr.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %134, i32 0, i32 1
  %135 = ptrtoint ptr %appl_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %appl_ptr.i.i.i, align 4
  %sub.i.i.i = sub i32 %add.i.i.i, %136
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp slt i32 %sub.i.i.i, 0
  %boundary.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 33
  %137 = ptrtoint ptr %boundary.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %boundary.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %138)
  %cmp3.not.i.i.i = icmp ult i32 %sub.i.i.i, %138
  %sub6.i.i.i = select i1 %cmp3.not.i.i.i, i32 0, i32 %138
  %139 = sub i32 0, %sub6.i.i.i
  %avail.0.p.i.i.i = select i1 %cmp.i.i.i, i32 %138, i32 %139
  %140 = add i32 %sub.i.i.i, %avail.0.p.i.i.i
  %sub.i.i154 = sub i32 %130, %140
  br label %snd_pcm_calc_delay.exit

if.else.i161:                                     ; preds = %cond.true
  %hw_ptr.i.i157 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %122, i32 0, i32 3
  %141 = ptrtoint ptr %hw_ptr.i.i157 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %hw_ptr.i.i157, align 4
  %control.i.i158 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 38
  %143 = ptrtoint ptr %control.i.i158 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %control.i.i158, align 8
  %appl_ptr.i.i159 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %144, i32 0, i32 1
  %145 = ptrtoint ptr %appl_ptr.i.i159 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %appl_ptr.i.i159, align 4
  %sub.i8.i = sub i32 %142, %146
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i8.i)
  %cmp.i.i160 = icmp slt i32 %sub.i8.i, 0
  br i1 %cmp.i.i160, label %if.then.i.i164, label %if.else.i161.snd_pcm_calc_delay.exit_crit_edge

if.else.i161.snd_pcm_calc_delay.exit_crit_edge:   ; preds = %if.else.i161
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_calc_delay.exit

if.then.i.i164:                                   ; preds = %if.else.i161
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i.i162 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 33
  %147 = ptrtoint ptr %boundary.i.i162 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %boundary.i.i162, align 8
  %add.i.i163 = add i32 %148, %sub.i8.i
  br label %snd_pcm_calc_delay.exit

snd_pcm_calc_delay.exit:                          ; preds = %if.then.i.i164, %if.else.i161.snd_pcm_calc_delay.exit_crit_edge, %if.then.i155
  %delay.0.i = phi i32 [ %sub.i.i154, %if.then.i155 ], [ %add.i.i163, %if.then.i.i164 ], [ %sub.i8.i, %if.else.i161.snd_pcm_calc_delay.exit_crit_edge ]
  %delay4.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %120, i32 0, i32 9
  %149 = ptrtoint ptr %delay4.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %delay4.i, align 4
  %add.i = add i32 %150, %delay.0.i
  br label %cond.end

cond.end:                                         ; preds = %snd_pcm_calc_delay.exit, %snd_pcm_running.exit149.cond.end_crit_edge, %snd_pcm_avail.exit.cond.end_crit_edge
  %cond = phi i32 [ %add.i, %snd_pcm_calc_delay.exit ], [ 0, %snd_pcm_running.exit149.cond.end_crit_edge ], [ 0, %snd_pcm_avail.exit.cond.end_crit_edge ]
  %delay = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 8
  %151 = ptrtoint ptr %delay to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %cond, ptr %delay, align 8
  %avail_max = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 4
  %152 = ptrtoint ptr %avail_max to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %avail_max, align 8
  %avail_max79 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 10
  %154 = ptrtoint ptr %avail_max79 to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %153, ptr %avail_max79, align 8
  %overrange = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 3
  %155 = ptrtoint ptr %overrange to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %overrange, align 4
  %overrange80 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 11
  %157 = ptrtoint ptr %overrange80 to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %156, ptr %overrange80, align 4
  store i32 0, ptr %avail_max, align 8
  store i32 0, ptr %overrange, align 4
  br label %_end

_end:                                             ; preds = %cond.end, %if.end18._end_crit_edge
  %158 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %substream, align 4
  %nonatomic.i165 = getelementptr inbounds %struct.snd_pcm, ptr %159, i32 0, i32 14
  %160 = ptrtoint ptr %nonatomic.i165 to i32
  call void @__asan_load1_noabort(i32 %160)
  %161 = load i8, ptr %nonatomic.i165, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %161)
  %tobool.not.i166 = icmp eq i8 %161, 0
  br i1 %tobool.not.i166, label %if.else.i.i170, label %if.then.i.i168

if.then.i.i168:                                   ; preds = %_end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i167 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_unlock(ptr noundef %mutex.i.i167) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i170:                                   ; preds = %_end
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i169 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i169) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i170, %if.then.i.i168
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_update_hw_ptr(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_start(ptr noundef %substream) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_start, ptr noundef %substream, i32 noundef 3, i1 noundef zeroext true) #14
  br label %snd_pcm_action.exit

if.else.i:                                        ; preds = %entry
  %runtime1.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1.i, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.not.i2 = icmp eq i32 %5, 2
  br i1 %cmp.not.i2, label %if.end.i3, label %if.else.i.snd_pcm_action.exit_crit_edge

if.else.i.snd_pcm_action.exit_crit_edge:          ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.end.i3:                                        ; preds = %if.else.i
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %6 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp3.i = icmp eq i32 %7, 0
  br i1 %cmp3.i, label %land.lhs.true.i, label %if.end.i3.if.end.i.i_crit_edge

if.end.i3.if.end.i.i_crit_edge:                   ; preds = %if.end.i3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

land.lhs.true.i:                                  ; preds = %if.end.i3
  %stop_threshold.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 30
  %8 = ptrtoint ptr %stop_threshold.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %stop_threshold.i.i, align 4
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 33
  %10 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %boundary.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp.not.i.i = icmp ult i32 %9, %11
  br i1 %cmp.not.i.i, label %snd_pcm_playback_data.exit.i, label %land.lhs.true.i.if.end.i.i_crit_edge

land.lhs.true.i.if.end.i.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

snd_pcm_playback_data.exit.i:                     ; preds = %land.lhs.true.i
  %hw_ptr.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %3, i32 0, i32 3
  %12 = ptrtoint ptr %hw_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %hw_ptr.i.i.i, align 4
  %buffer_size.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %14 = ptrtoint ptr %buffer_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %buffer_size.i.i.i, align 4
  %add.i.i.i = add i32 %15, %13
  %control.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %16 = ptrtoint ptr %control.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %control.i.i.i, align 8
  %appl_ptr.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %appl_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %appl_ptr.i.i.i, align 4
  %sub.i.i.i = sub i32 %add.i.i.i, %19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp slt i32 %sub.i.i.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %11)
  %cmp3.not.i.i.i = icmp ult i32 %sub.i.i.i, %11
  %sub6.i.i.i = select i1 %cmp3.not.i.i.i, i32 0, i32 %11
  %20 = sub i32 0, %sub6.i.i.i
  %avail.0.p.i.i.i = select i1 %cmp.i.i.i, i32 %11, i32 %20
  %avail.0.i.i.i = add i32 %avail.0.p.i.i.i, %sub.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %avail.0.i.i.i, i32 %15)
  %cmp2.i.not.i = icmp ult i32 %avail.0.i.i.i, %15
  br i1 %cmp2.i.not.i, label %snd_pcm_playback_data.exit.i.if.end.i.i_crit_edge, label %snd_pcm_playback_data.exit.i.snd_pcm_action.exit_crit_edge

snd_pcm_playback_data.exit.i.snd_pcm_action.exit_crit_edge: ; preds = %snd_pcm_playback_data.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

snd_pcm_playback_data.exit.i.if.end.i.i_crit_edge: ; preds = %snd_pcm_playback_data.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %snd_pcm_playback_data.exit.i.if.end.i.i_crit_edge, %land.lhs.true.i.if.end.i.i_crit_edge, %if.end.i3.if.end.i.i_crit_edge
  %trigger_tstamp_latched.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 2
  %21 = ptrtoint ptr %trigger_tstamp_latched.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %trigger_tstamp_latched.i, align 8
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %substream, ptr %1, align 8
  %23 = ptrtoint ptr %runtime1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %runtime1.i, align 4
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 8
  %cmp.not.i = icmp eq ptr %26, %substream
  br i1 %cmp.not.i, label %snd_pcm_do_start.exit, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

snd_pcm_do_start.exit:                            ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %27 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i, align 4
  %trigger.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %28, i32 0, i32 6
  %29 = ptrtoint ptr %trigger.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %trigger.i, align 4
  %call.i1 = tail call i32 %30(ptr noundef %substream, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1)
  %cmp2.i.i = icmp eq i32 %call.i1, 0
  %spec.select11 = select i1 %cmp2.i.i, ptr @snd_pcm_post_start, ptr @snd_pcm_undo_start
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %snd_pcm_do_start.exit, %if.end.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.i9 = phi i32 [ 0, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ], [ %call.i1, %snd_pcm_do_start.exit ]
  %.sink.i.i = phi ptr [ @snd_pcm_post_start, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ], [ %spec.select11, %snd_pcm_do_start.exit ]
  tail call void %.sink.i.i(ptr noundef %substream, i32 noundef 3) #14
  br label %snd_pcm_action.exit

snd_pcm_action.exit:                              ; preds = %cleanup.sink.split.i.i, %snd_pcm_playback_data.exit.i.snd_pcm_action.exit_crit_edge, %if.else.i.snd_pcm_action.exit_crit_edge, %if.then.i
  %res.0.i = phi i32 [ %call1.i, %if.then.i ], [ %retval.0.i9, %cleanup.sink.split.i.i ], [ -32, %snd_pcm_playback_data.exit.i.snd_pcm_action.exit_crit_edge ], [ -77, %if.else.i.snd_pcm_action.exit_crit_edge ]
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %call.i, ptr noundef %substream) #14
  ret i32 %res.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_stop(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_stop, ptr noundef %substream, i32 noundef %state, i1 noundef zeroext true) #14
  br label %snd_pcm_action.exit

if.else.i:                                        ; preds = %entry
  %runtime1.i4 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1.i4 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1.i4, align 4
  %status.i5 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status.i5 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status.i5, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i6 = icmp eq i32 %5, 0
  br i1 %cmp.i6, label %if.else.i.snd_pcm_action.exit_crit_edge, label %if.end.i.i

if.else.i.snd_pcm_action.exit_crit_edge:          ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.end.i.i:                                       ; preds = %if.else.i
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %substream, ptr %1, align 8
  %7 = ptrtoint ptr %runtime1.i4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %runtime1.i4, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 8
  %cmp.i = icmp eq ptr %10, %substream
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i.i.if.then3.i.i_crit_edge

if.end.i.i.if.then3.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i.i

land.lhs.true.i:                                  ; preds = %if.end.i.i
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %8, i32 0, i32 37
  %11 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %status.i.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 8
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.71)
  switch i32 %14, label %land.lhs.true.i.if.then3.i.i_crit_edge [
    i32 3, label %land.lhs.true.i.if.then.i3_crit_edge
    i32 5, label %snd_pcm_running.exit.i
  ]

land.lhs.true.i.if.then.i3_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i3

land.lhs.true.i.if.then3.i.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i.i

snd_pcm_running.exit.i:                           ; preds = %land.lhs.true.i
  %stream.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %16 = ptrtoint ptr %stream.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %stream.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp5.i.not.i = icmp eq i32 %17, 0
  br i1 %cmp5.i.not.i, label %snd_pcm_running.exit.i.if.then.i3_crit_edge, label %snd_pcm_running.exit.i.if.then3.i.i_crit_edge

snd_pcm_running.exit.i.if.then3.i.i_crit_edge:    ; preds = %snd_pcm_running.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i.i

snd_pcm_running.exit.i.if.then.i3_crit_edge:      ; preds = %snd_pcm_running.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i3

if.then.i3:                                       ; preds = %snd_pcm_running.exit.i.if.then.i3_crit_edge, %land.lhs.true.i.if.then.i3_crit_edge
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %18 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i, align 4
  %trigger.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %trigger.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %trigger.i, align 4
  %call1.i2 = tail call i32 %21(ptr noundef %substream, i32 noundef 0) #14
  %22 = ptrtoint ptr %runtime1.i4 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %runtime1.i4, align 4
  %stop_operating.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %23, i32 0, i32 43
  %24 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 1, ptr %stop_operating.i, align 4
  br label %if.then3.i.i

if.then3.i.i:                                     ; preds = %if.then.i3, %snd_pcm_running.exit.i.if.then3.i.i_crit_edge, %land.lhs.true.i.if.then3.i.i_crit_edge, %if.end.i.i.if.then3.i.i_crit_edge
  %25 = ptrtoint ptr %runtime1.i4 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %runtime1.i4, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %26, i32 0, i32 37
  %27 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %status.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %state)
  %cmp.not.i = icmp eq i32 %30, %state
  br i1 %cmp.not.i, label %if.then3.i.i.snd_pcm_post_stop.exit_crit_edge, label %if.then.i1

if.then3.i.i.snd_pcm_post_stop.exit_crit_edge:    ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_stop.exit

if.then.i1:                                       ; preds = %if.then3.i.i
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream) #14
  %31 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %status.i, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %state, ptr %32, align 8
  %timer.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %34 = ptrtoint ptr %timer.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %timer.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %35, null
  br i1 %tobool.not.i.i, label %if.then.i1.snd_pcm_post_stop.exit_crit_edge, label %if.then.i.i

if.then.i1.snd_pcm_post_stop.exit_crit_edge:      ; preds = %if.then.i1
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_stop.exit

if.then.i.i:                                      ; preds = %if.then.i1
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %runtime1.i4 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %runtime1.i4, align 4
  %trigger_tstamp.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %37, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %35, i32 noundef 13, ptr noundef %trigger_tstamp.i.i) #14
  br label %snd_pcm_post_stop.exit

snd_pcm_post_stop.exit:                           ; preds = %if.then.i.i, %if.then.i1.snd_pcm_post_stop.exit_crit_edge, %if.then3.i.i.snd_pcm_post_stop.exit_crit_edge
  %sleep.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %26, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %26, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  br label %snd_pcm_action.exit

snd_pcm_action.exit:                              ; preds = %snd_pcm_post_stop.exit, %if.else.i.snd_pcm_action.exit_crit_edge, %if.then.i
  %res.0.i = phi i32 [ %call1.i, %if.then.i ], [ 0, %snd_pcm_post_stop.exit ], [ -77, %if.else.i.snd_pcm_action.exit_crit_edge ]
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %call.i, ptr noundef %substream) #14
  ret i32 %res.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_drain_done(ptr noundef %substream) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1.i6 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1.i6 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1.i6, align 4
  %status.i7 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status.i7 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status.i7, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i8 = icmp eq i32 %5, 0
  br i1 %cmp.i8, label %entry.snd_pcm_action_single.exit_crit_edge, label %if.end.i

entry.snd_pcm_action_single.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_single.exit

if.end.i:                                         ; preds = %entry
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %substream, ptr %1, align 8
  %7 = ptrtoint ptr %runtime1.i6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %runtime1.i6, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 8
  %cmp.i2 = icmp eq ptr %10, %substream
  br i1 %cmp.i2, label %land.lhs.true.i, label %if.end.i.if.then3.i_crit_edge

if.end.i.if.then3.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %8, i32 0, i32 37
  %11 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %status.i.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 8
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.72)
  switch i32 %14, label %land.lhs.true.i.if.then3.i_crit_edge [
    i32 3, label %land.lhs.true.i.if.then.i4_crit_edge
    i32 5, label %snd_pcm_running.exit.i
  ]

land.lhs.true.i.if.then.i4_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i4

land.lhs.true.i.if.then3.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i

snd_pcm_running.exit.i:                           ; preds = %land.lhs.true.i
  %stream.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %16 = ptrtoint ptr %stream.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %stream.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp5.i.not.i = icmp eq i32 %17, 0
  br i1 %cmp5.i.not.i, label %snd_pcm_running.exit.i.if.then.i4_crit_edge, label %snd_pcm_running.exit.i.if.then3.i_crit_edge

snd_pcm_running.exit.i.if.then3.i_crit_edge:      ; preds = %snd_pcm_running.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i

snd_pcm_running.exit.i.if.then.i4_crit_edge:      ; preds = %snd_pcm_running.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i4

if.then.i4:                                       ; preds = %snd_pcm_running.exit.i.if.then.i4_crit_edge, %land.lhs.true.i.if.then.i4_crit_edge
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %18 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i, align 4
  %trigger.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %trigger.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %trigger.i, align 4
  %call1.i3 = tail call i32 %21(ptr noundef %substream, i32 noundef 0) #14
  %22 = ptrtoint ptr %runtime1.i6 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %runtime1.i6, align 4
  %stop_operating.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %23, i32 0, i32 43
  %24 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 1, ptr %stop_operating.i, align 4
  br label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i4, %snd_pcm_running.exit.i.if.then3.i_crit_edge, %land.lhs.true.i.if.then3.i_crit_edge, %if.end.i.if.then3.i_crit_edge
  %25 = ptrtoint ptr %runtime1.i6 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %runtime1.i6, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %26, i32 0, i32 37
  %27 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %status.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.not.i = icmp eq i32 %30, 1
  br i1 %cmp.not.i, label %if.then3.i.snd_pcm_post_stop.exit_crit_edge, label %if.then.i

if.then3.i.snd_pcm_post_stop.exit_crit_edge:      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_stop.exit

if.then.i:                                        ; preds = %if.then3.i
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream) #14
  %31 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %status.i, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %32, align 8
  %timer.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %34 = ptrtoint ptr %timer.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %timer.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %35, null
  br i1 %tobool.not.i.i, label %if.then.i.snd_pcm_post_stop.exit_crit_edge, label %if.then.i.i

if.then.i.snd_pcm_post_stop.exit_crit_edge:       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_stop.exit

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %runtime1.i6 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %runtime1.i6, align 4
  %trigger_tstamp.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %37, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %35, i32 noundef 13, ptr noundef %trigger_tstamp.i.i) #14
  br label %snd_pcm_post_stop.exit

snd_pcm_post_stop.exit:                           ; preds = %if.then.i.i, %if.then.i.snd_pcm_post_stop.exit_crit_edge, %if.then3.i.snd_pcm_post_stop.exit_crit_edge
  %sleep.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %26, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %26, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  br label %snd_pcm_action_single.exit

snd_pcm_action_single.exit:                       ; preds = %snd_pcm_post_stop.exit, %entry.snd_pcm_action_single.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %snd_pcm_post_stop.exit ], [ -77, %entry.snd_pcm_action_single.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_stop_xrun(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %do.body1.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #14
  br label %_snd_pcm_stream_lock_irqsave.exit

do.body1.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group2.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %self_group2.i) #14
  br label %_snd_pcm_stream_lock_irqsave.exit

_snd_pcm_stream_lock_irqsave.exit:                ; preds = %do.body1.i, %if.then.i
  %flags.0.i = phi i32 [ 0, %if.then.i ], [ %call3.i, %do.body1.i ]
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %4 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %_snd_pcm_stream_lock_irqsave.exit.if.end_crit_edge, label %land.lhs.true

_snd_pcm_stream_lock_irqsave.exit.if.end_crit_edge: ; preds = %_snd_pcm_stream_lock_irqsave.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %_snd_pcm_stream_lock_irqsave.exit
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.73)
  switch i32 %9, label %land.lhs.true.if.end_crit_edge [
    i32 3, label %land.lhs.true.if.then_crit_edge
    i32 5, label %snd_pcm_running.exit
  ]

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_running.exit:                             ; preds = %land.lhs.true
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %11 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp5.i.not = icmp eq i32 %12, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.if.then_crit_edge, label %snd_pcm_running.exit.if.end_crit_edge

snd_pcm_running.exit.if.end_crit_edge:            ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_running.exit.if.then_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %snd_pcm_running.exit.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  tail call void @__snd_pcm_xrun(ptr noundef %substream) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %snd_pcm_running.exit.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %_snd_pcm_stream_lock_irqsave.exit.if.end_crit_edge
  %13 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %substream, align 4
  %nonatomic.i7 = getelementptr inbounds %struct.snd_pcm, ptr %14, i32 0, i32 14
  %15 = ptrtoint ptr %nonatomic.i7 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %nonatomic.i7, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i8 = icmp eq i8 %16, 0
  br i1 %tobool.not.i8, label %if.else.i, label %if.then.i10

if.then.i10:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i9 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i9) #14
  br label %snd_pcm_stream_unlock_irqrestore.exit

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %self_group1.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %self_group1.i, i32 noundef %flags.0.i) #14
  br label %snd_pcm_stream_unlock_irqrestore.exit

snd_pcm_stream_unlock_irqrestore.exit:            ; preds = %if.else.i, %if.then.i10
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__snd_pcm_xrun(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_suspend_all(ptr noundef readonly %pcm) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %pcm, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %for.inc15.for.body_crit_edge, %entry.for.body_crit_edge
  %stream.061 = phi i32 [ %inc, %for.inc15.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %substream1 = getelementptr %struct.snd_pcm, ptr %pcm, i32 0, i32 8, i32 %stream.061, i32 4
  %0 = ptrtoint ptr %substream1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %substream.051 = load ptr, ptr %substream1, align 4
  %tobool3.not52 = icmp eq ptr %substream.051, null
  br i1 %tobool3.not52, label %for.body.for.inc15_crit_edge, label %for.body.for.body4_crit_edge

for.body.for.body4_crit_edge:                     ; preds = %for.body
  br label %for.body4

for.body.for.inc15_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc15

for.body4:                                        ; preds = %for.inc.for.body4_crit_edge, %for.body.for.body4_crit_edge
  %substream.053 = phi ptr [ %substream.0, %for.inc.for.body4_crit_edge ], [ %substream.051, %for.body.for.body4_crit_edge ]
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 11
  %1 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %runtime, align 4
  %tobool5.not = icmp eq ptr %2, null
  br i1 %tobool5.not, label %for.body4.for.inc_crit_edge, label %if.end7

for.body4.for.inc_crit_edge:                      ; preds = %for.body4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end7:                                          ; preds = %for.body4
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 10
  %3 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops, align 4
  %tobool8.not = icmp eq ptr %4, null
  br i1 %tobool8.not, label %if.end7.for.inc_crit_edge, label %if.end10

if.end7.for.inc_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end10:                                         ; preds = %if.end7
  %5 = ptrtoint ptr %substream.053 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %substream.053, align 4
  %nonatomic.i.i = getelementptr inbounds %struct.snd_pcm, ptr %6, i32 0, i32 14
  %7 = ptrtoint ptr %nonatomic.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %nonatomic.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i.i, label %do.body1.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %_snd_pcm_stream_lock_irqsave.exit.i

do.body1.i.i:                                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %self_group2.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 17
  %call3.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %self_group2.i.i) #14
  br label %_snd_pcm_stream_lock_irqsave.exit.i

_snd_pcm_stream_lock_irqsave.exit.i:              ; preds = %do.body1.i.i, %if.then.i.i
  %flags.0.i.i = phi i32 [ 0, %if.then.i.i ], [ %call3.i.i, %do.body1.i.i ]
  %call.i.i = tail call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef nonnull %substream.053) #14
  %tobool.not.i4.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i4.i, label %if.else.i.i, label %if.then.i5.i

if.then.i5.i:                                     ; preds = %_snd_pcm_stream_lock_irqsave.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_suspend, ptr noundef nonnull %substream.053, i32 noundef 0, i1 noundef zeroext true) #14
  br label %snd_pcm_action.exit.i

if.else.i.i:                                      ; preds = %_snd_pcm_stream_lock_irqsave.exit.i
  %9 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %runtime, align 4
  %status.i13.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %10, i32 0, i32 37
  %11 = ptrtoint ptr %status.i13.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %status.i13.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %14)
  %15 = icmp ult i32 %14, 9
  br i1 %15, label %switch.hole_check, label %if.else.i.i.if.end.i.i.i_crit_edge

if.else.i.i.if.end.i.i.i_crit_edge:               ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %switch.hole_check.if.end.i.i.i_crit_edge, %if.else.i.i.if.end.i.i.i_crit_edge
  %16 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %substream.053, ptr %10, align 8
  %17 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %runtime, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 8
  %cmp.not.i.i = icmp eq ptr %20, %substream.053
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.end.i.i.i.if.then3.i.i.i_crit_edge

if.end.i.i.i.if.then3.i.i.i_crit_edge:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i.i.i

if.end.i.i:                                       ; preds = %if.end.i.i.i
  %status.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %18, i32 0, i32 37
  %21 = ptrtoint ptr %status.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %status.i.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 8
  %25 = zext i32 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.74)
  switch i32 %24, label %if.end.i.i.if.then3.i.i.i_crit_edge [
    i32 3, label %if.end.i.i.if.end3.i.i_crit_edge
    i32 5, label %snd_pcm_running.exit.i.i
  ]

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3.i.i

if.end.i.i.if.then3.i.i.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i.i.i

snd_pcm_running.exit.i.i:                         ; preds = %if.end.i.i
  %stream.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 5
  %26 = ptrtoint ptr %stream.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %stream.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp5.i.not.i.i = icmp eq i32 %27, 0
  br i1 %cmp5.i.not.i.i, label %snd_pcm_running.exit.i.i.if.end3.i.i_crit_edge, label %snd_pcm_running.exit.i.i.if.then3.i.i.i_crit_edge

snd_pcm_running.exit.i.i.if.then3.i.i.i_crit_edge: ; preds = %snd_pcm_running.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3.i.i.i

snd_pcm_running.exit.i.i.if.end3.i.i_crit_edge:   ; preds = %snd_pcm_running.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %snd_pcm_running.exit.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %28 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ops, align 4
  %trigger.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %29, i32 0, i32 6
  %30 = ptrtoint ptr %trigger.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %trigger.i.i, align 4
  %call4.i.i = tail call i32 %31(ptr noundef nonnull %substream.053, i32 noundef 5) #14
  %stop_operating.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %18, i32 0, i32 43
  %32 = ptrtoint ptr %stop_operating.i.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %stop_operating.i.i, align 4
  br label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.end3.i.i, %snd_pcm_running.exit.i.i.if.then3.i.i.i_crit_edge, %if.end.i.i.if.then3.i.i.i_crit_edge, %if.end.i.i.i.if.then3.i.i.i_crit_edge
  %33 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %runtime, align 4
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef nonnull %substream.053) #14
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %34, i32 0, i32 37
  %35 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %status.i.i, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 8
  %suspended_state.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %36, i32 0, i32 6
  %39 = ptrtoint ptr %suspended_state.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %suspended_state.i.i, align 8
  %40 = load ptr, ptr %status.i.i, align 4
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 7, ptr %40, align 8
  %timer.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 12
  %42 = ptrtoint ptr %timer.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %timer.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %43, null
  br i1 %tobool.not.i.i.i, label %if.then3.i.i.i.snd_pcm_post_suspend.exit.i_crit_edge, label %if.then.i.i.i

if.then3.i.i.i.snd_pcm_post_suspend.exit.i_crit_edge: ; preds = %if.then3.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_suspend.exit.i

if.then.i.i.i:                                    ; preds = %if.then3.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %44 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %runtime, align 4
  %trigger_tstamp.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %43, i32 noundef 17, ptr noundef %trigger_tstamp.i.i.i) #14
  br label %snd_pcm_post_suspend.exit.i

snd_pcm_post_suspend.exit.i:                      ; preds = %if.then.i.i.i, %if.then3.i.i.i.snd_pcm_post_suspend.exit.i_crit_edge
  %sleep.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %34, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep.i.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %34, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep.i.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  br label %snd_pcm_action.exit.i

switch.hole_check:                                ; preds = %if.else.i.i
  %switch.maskindex = trunc i32 %14 to i16
  %switch.shifted = lshr i16 387, %switch.maskindex
  %46 = and i16 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %46)
  %switch.lobit.not = icmp eq i16 %46, 0
  br i1 %switch.lobit.not, label %switch.hole_check.if.end.i.i.i_crit_edge, label %switch.hole_check.snd_pcm_action.exit.i_crit_edge

switch.hole_check.snd_pcm_action.exit.i_crit_edge: ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit.i

switch.hole_check.if.end.i.i.i_crit_edge:         ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

snd_pcm_action.exit.i:                            ; preds = %switch.hole_check.snd_pcm_action.exit.i_crit_edge, %snd_pcm_post_suspend.exit.i, %if.then.i5.i
  %res.0.i.i = phi i32 [ %call1.i.i, %if.then.i5.i ], [ 0, %snd_pcm_post_suspend.exit.i ], [ -16, %switch.hole_check.snd_pcm_action.exit.i_crit_edge ]
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %call.i.i, ptr noundef nonnull %substream.053) #14
  %47 = ptrtoint ptr %substream.053 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %substream.053, align 4
  %nonatomic.i6.i = getelementptr inbounds %struct.snd_pcm, ptr %48, i32 0, i32 14
  %49 = ptrtoint ptr %nonatomic.i6.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %nonatomic.i6.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool.not.i7.i = icmp eq i8 %50, 0
  br i1 %tobool.not.i7.i, label %if.else.i10.i, label %if.then.i9.i

if.then.i9.i:                                     ; preds = %snd_pcm_action.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i8.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i8.i) #14
  br label %snd_pcm_suspend.exit

if.else.i10.i:                                    ; preds = %snd_pcm_action.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group1.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %self_group1.i.i, i32 noundef %flags.0.i.i) #14
  br label %snd_pcm_suspend.exit

snd_pcm_suspend.exit:                             ; preds = %if.else.i10.i, %if.then.i9.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %res.0.i.i)
  %cmp11 = icmp sgt i32 %res.0.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %res.0.i.i)
  %cmp12.not = icmp eq i32 %res.0.i.i, -16
  %or.cond = or i1 %cmp11, %cmp12.not
  br i1 %or.cond, label %snd_pcm_suspend.exit.for.inc_crit_edge, label %snd_pcm_suspend.exit.cleanup_crit_edge

snd_pcm_suspend.exit.cleanup_crit_edge:           ; preds = %snd_pcm_suspend.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

snd_pcm_suspend.exit.for.inc_crit_edge:           ; preds = %snd_pcm_suspend.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

for.inc:                                          ; preds = %snd_pcm_suspend.exit.for.inc_crit_edge, %if.end7.for.inc_crit_edge, %for.body4.for.inc_crit_edge
  %next = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.053, i32 0, i32 15
  %51 = ptrtoint ptr %next to i32
  call void @__asan_load4_noabort(i32 %51)
  %substream.0 = load ptr, ptr %next, align 4
  %tobool3.not = icmp eq ptr %substream.0, null
  br i1 %tobool3.not, label %for.inc.for.inc15_crit_edge, label %for.inc.for.body4_crit_edge

for.inc.for.body4_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body4

for.inc.for.inc15_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc15

for.inc15:                                        ; preds = %for.inc.for.inc15_crit_edge, %for.body.for.inc15_crit_edge
  %inc = add nuw nsw i32 %stream.061, 1
  %exitcond.not = icmp eq i32 %inc, 2
  br i1 %exitcond.not, label %for.body19.preheader, label %for.inc15.for.body_crit_edge

for.inc15.for.body_crit_edge:                     ; preds = %for.inc15
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body19.preheader:                             ; preds = %for.inc15
  %substream22 = getelementptr %struct.snd_pcm, ptr %pcm, i32 0, i32 8, i32 0, i32 4
  %52 = ptrtoint ptr %substream22 to i32
  call void @__asan_load4_noabort(i32 %52)
  %substream.162 = load ptr, ptr %substream22, align 4
  %tobool24.not63 = icmp eq ptr %substream.162, null
  br i1 %tobool24.not63, label %for.body19.preheader.for.inc29_crit_edge, label %for.body19.preheader.for.body25_crit_edge

for.body19.preheader.for.body25_crit_edge:        ; preds = %for.body19.preheader
  br label %for.body25

for.body19.preheader.for.inc29_crit_edge:         ; preds = %for.body19.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc29

for.body25:                                       ; preds = %snd_pcm_sync_stop.exit.for.body25_crit_edge, %for.body19.preheader.for.body25_crit_edge
  %substream.164 = phi ptr [ %substream.1, %snd_pcm_sync_stop.exit.for.body25_crit_edge ], [ %substream.162, %for.body19.preheader.for.body25_crit_edge ]
  %runtime.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.164, i32 0, i32 11
  %53 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %runtime.i, align 4
  %tobool.not.i = icmp eq ptr %54, null
  br i1 %tobool.not.i, label %for.body25.snd_pcm_sync_stop.exit_crit_edge, label %land.lhs.true.i

for.body25.snd_pcm_sync_stop.exit_crit_edge:      ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

land.lhs.true.i:                                  ; preds = %for.body25
  %stop_operating.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %54, i32 0, i32 43
  %55 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %stop_operating.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool2.not.i = icmp eq i8 %56, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge, label %if.then.i

land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %57 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 0, ptr %stop_operating.i, align 4
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.164, i32 0, i32 10
  %58 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ops.i, align 4
  %tobool5.not.i = icmp eq ptr %59, null
  br i1 %tobool5.not.i, label %if.then.i.snd_pcm_sync_stop.exit_crit_edge, label %land.lhs.true6.i

if.then.i.snd_pcm_sync_stop.exit_crit_edge:       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

land.lhs.true6.i:                                 ; preds = %if.then.i
  %sync_stop.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %59, i32 0, i32 7
  %60 = ptrtoint ptr %sync_stop.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %sync_stop.i, align 4
  %tobool8.not.i = icmp eq ptr %61, null
  br i1 %tobool8.not.i, label %land.lhs.true6.i.snd_pcm_sync_stop.exit_crit_edge, label %if.then9.i

land.lhs.true6.i.snd_pcm_sync_stop.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

if.then9.i:                                       ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %61(ptr noundef nonnull %substream.164) #14
  br label %snd_pcm_sync_stop.exit

snd_pcm_sync_stop.exit:                           ; preds = %if.then9.i, %land.lhs.true6.i.snd_pcm_sync_stop.exit_crit_edge, %if.then.i.snd_pcm_sync_stop.exit_crit_edge, %land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge, %for.body25.snd_pcm_sync_stop.exit_crit_edge
  %next27 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.164, i32 0, i32 15
  %62 = ptrtoint ptr %next27 to i32
  call void @__asan_load4_noabort(i32 %62)
  %substream.1 = load ptr, ptr %next27, align 4
  %tobool24.not = icmp eq ptr %substream.1, null
  br i1 %tobool24.not, label %snd_pcm_sync_stop.exit.for.inc29_crit_edge, label %snd_pcm_sync_stop.exit.for.body25_crit_edge

snd_pcm_sync_stop.exit.for.body25_crit_edge:      ; preds = %snd_pcm_sync_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body25

snd_pcm_sync_stop.exit.for.inc29_crit_edge:       ; preds = %snd_pcm_sync_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc29

for.inc29:                                        ; preds = %snd_pcm_sync_stop.exit.for.inc29_crit_edge, %for.body19.preheader.for.inc29_crit_edge
  %substream22.1 = getelementptr %struct.snd_pcm, ptr %pcm, i32 0, i32 8, i32 1, i32 4
  %63 = ptrtoint ptr %substream22.1 to i32
  call void @__asan_load4_noabort(i32 %63)
  %substream.162.1 = load ptr, ptr %substream22.1, align 4
  %tobool24.not63.1 = icmp eq ptr %substream.162.1, null
  br i1 %tobool24.not63.1, label %for.inc29.cleanup_crit_edge, label %for.inc29.for.body25.1_crit_edge

for.inc29.for.body25.1_crit_edge:                 ; preds = %for.inc29
  br label %for.body25.1

for.inc29.cleanup_crit_edge:                      ; preds = %for.inc29
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body25.1:                                     ; preds = %snd_pcm_sync_stop.exit.1.for.body25.1_crit_edge, %for.inc29.for.body25.1_crit_edge
  %substream.164.1 = phi ptr [ %substream.1.1, %snd_pcm_sync_stop.exit.1.for.body25.1_crit_edge ], [ %substream.162.1, %for.inc29.for.body25.1_crit_edge ]
  %runtime.i.1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.164.1, i32 0, i32 11
  %64 = ptrtoint ptr %runtime.i.1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %runtime.i.1, align 4
  %tobool.not.i.1 = icmp eq ptr %65, null
  br i1 %tobool.not.i.1, label %for.body25.1.snd_pcm_sync_stop.exit.1_crit_edge, label %land.lhs.true.i.1

for.body25.1.snd_pcm_sync_stop.exit.1_crit_edge:  ; preds = %for.body25.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.1

land.lhs.true.i.1:                                ; preds = %for.body25.1
  %stop_operating.i.1 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %65, i32 0, i32 43
  %66 = ptrtoint ptr %stop_operating.i.1 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %stop_operating.i.1, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool2.not.i.1 = icmp eq i8 %67, 0
  br i1 %tobool2.not.i.1, label %land.lhs.true.i.1.snd_pcm_sync_stop.exit.1_crit_edge, label %if.then.i.1

land.lhs.true.i.1.snd_pcm_sync_stop.exit.1_crit_edge: ; preds = %land.lhs.true.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.1

if.then.i.1:                                      ; preds = %land.lhs.true.i.1
  %68 = ptrtoint ptr %stop_operating.i.1 to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 0, ptr %stop_operating.i.1, align 4
  %ops.i.1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.164.1, i32 0, i32 10
  %69 = ptrtoint ptr %ops.i.1 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ops.i.1, align 4
  %tobool5.not.i.1 = icmp eq ptr %70, null
  br i1 %tobool5.not.i.1, label %if.then.i.1.snd_pcm_sync_stop.exit.1_crit_edge, label %land.lhs.true6.i.1

if.then.i.1.snd_pcm_sync_stop.exit.1_crit_edge:   ; preds = %if.then.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.1

land.lhs.true6.i.1:                               ; preds = %if.then.i.1
  %sync_stop.i.1 = getelementptr inbounds %struct.snd_pcm_ops, ptr %70, i32 0, i32 7
  %71 = ptrtoint ptr %sync_stop.i.1 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sync_stop.i.1, align 4
  %tobool8.not.i.1 = icmp eq ptr %72, null
  br i1 %tobool8.not.i.1, label %land.lhs.true6.i.1.snd_pcm_sync_stop.exit.1_crit_edge, label %if.then9.i.1

land.lhs.true6.i.1.snd_pcm_sync_stop.exit.1_crit_edge: ; preds = %land.lhs.true6.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.1

if.then9.i.1:                                     ; preds = %land.lhs.true6.i.1
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.1 = tail call i32 %72(ptr noundef nonnull %substream.164.1) #14
  br label %snd_pcm_sync_stop.exit.1

snd_pcm_sync_stop.exit.1:                         ; preds = %if.then9.i.1, %land.lhs.true6.i.1.snd_pcm_sync_stop.exit.1_crit_edge, %if.then.i.1.snd_pcm_sync_stop.exit.1_crit_edge, %land.lhs.true.i.1.snd_pcm_sync_stop.exit.1_crit_edge, %for.body25.1.snd_pcm_sync_stop.exit.1_crit_edge
  %next27.1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream.164.1, i32 0, i32 15
  %73 = ptrtoint ptr %next27.1 to i32
  call void @__asan_load4_noabort(i32 %73)
  %substream.1.1 = load ptr, ptr %next27.1, align 4
  %tobool24.not.1 = icmp eq ptr %substream.1.1, null
  br i1 %tobool24.not.1, label %snd_pcm_sync_stop.exit.1.cleanup_crit_edge, label %snd_pcm_sync_stop.exit.1.for.body25.1_crit_edge

snd_pcm_sync_stop.exit.1.for.body25.1_crit_edge:  ; preds = %snd_pcm_sync_stop.exit.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body25.1

snd_pcm_sync_stop.exit.1.cleanup_crit_edge:       ; preds = %snd_pcm_sync_stop.exit.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %snd_pcm_sync_stop.exit.1.cleanup_crit_edge, %for.inc29.cleanup_crit_edge, %snd_pcm_suspend.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc29.cleanup_crit_edge ], [ 0, %snd_pcm_sync_stop.exit.1.cleanup_crit_edge ], [ %res.0.i.i, %snd_pcm_suspend.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_pcm_release_substream(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ref_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 19
  %0 = ptrtoint ptr %ref_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ref_count, align 4
  %dec = add i32 %1, -1
  store i32 %dec, ptr %ref_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp = icmp sgt i32 %dec, 0
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @snd_pcm_drop(ptr noundef %substream)
  %hw_opened = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 26
  %2 = ptrtoint ptr %hw_opened to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %hw_opened, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end.if.end10_crit_edge, label %if.then2

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.then2:                                         ; preds = %if.end
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %3 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %runtime, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %4, i32 0, i32 37
  %5 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %status, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp3.not = icmp eq i32 %8, 0
  br i1 %cmp3.not, label %if.then2.if.end6_crit_edge, label %if.then4

if.then2.if.end6_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then4:                                         ; preds = %if.then2
  %tobool.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i, label %if.then4.snd_pcm_sync_stop.exit.i_crit_edge, label %land.lhs.true.i.i

if.then4.snd_pcm_sync_stop.exit.i_crit_edge:      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.i

land.lhs.true.i.i:                                ; preds = %if.then4
  %stop_operating.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %4, i32 0, i32 43
  %9 = ptrtoint ptr %stop_operating.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %stop_operating.i.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool2.not.i.i = icmp eq i8 %10, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.snd_pcm_sync_stop.exit.i_crit_edge, label %if.then.i.i

land.lhs.true.i.i.snd_pcm_sync_stop.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  %11 = ptrtoint ptr %stop_operating.i.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %stop_operating.i.i, align 4
  %ops.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %12 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops.i.i, align 4
  %tobool5.not.i.i = icmp eq ptr %13, null
  br i1 %tobool5.not.i.i, label %if.then.i.i.if.else.i.i_crit_edge, label %land.lhs.true6.i.i

if.then.i.i.if.else.i.i_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i.i

land.lhs.true6.i.i:                               ; preds = %if.then.i.i
  %sync_stop.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %sync_stop.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sync_stop.i.i, align 4
  %tobool8.not.i.i = icmp eq ptr %15, null
  br i1 %tobool8.not.i.i, label %land.lhs.true6.i.i.if.else.i.i_crit_edge, label %if.then9.i.i

land.lhs.true6.i.i.if.else.i.i_crit_edge:         ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i.i

if.then9.i.i:                                     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i = tail call i32 %15(ptr noundef %substream) #14
  br label %snd_pcm_sync_stop.exit.i

if.else.i.i:                                      ; preds = %land.lhs.true6.i.i.if.else.i.i_crit_edge, %if.then.i.i.if.else.i.i_crit_edge
  %16 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %substream, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 8
  %sync_irq14.i.i = getelementptr inbounds %struct.snd_card, ptr %19, i32 0, i32 33
  %20 = ptrtoint ptr %sync_irq14.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sync_irq14.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i.i = icmp sgt i32 %21, 0
  br i1 %cmp.i.i, label %if.then15.i.i, label %if.else.i.i.snd_pcm_sync_stop.exit.i_crit_edge

if.else.i.i.snd_pcm_sync_stop.exit.i_crit_edge:   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.i

if.then15.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @synchronize_irq(i32 noundef %21) #14
  br label %snd_pcm_sync_stop.exit.i

snd_pcm_sync_stop.exit.i:                         ; preds = %if.then15.i.i, %if.else.i.i.snd_pcm_sync_stop.exit.i_crit_edge, %if.then9.i.i, %land.lhs.true.i.i.snd_pcm_sync_stop.exit.i_crit_edge, %if.then4.snd_pcm_sync_stop.exit.i_crit_edge
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %22 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i, align 4
  %hw_free.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %hw_free.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw_free.i, align 4
  %tobool.not.i = icmp eq ptr %25, null
  br i1 %tobool.not.i, label %snd_pcm_sync_stop.exit.i.if.end.i_crit_edge, label %if.then.i

snd_pcm_sync_stop.exit.i.if.end.i_crit_edge:      ; preds = %snd_pcm_sync_stop.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %snd_pcm_sync_stop.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %25(ptr noundef %substream) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %snd_pcm_sync_stop.exit.i.if.end.i_crit_edge
  %26 = ptrtoint ptr %hw_opened to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load.i = load i8, ptr %hw_opened, align 4
  %27 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool3.not.i = icmp eq i8 %27, 0
  br i1 %tobool3.not.i, label %if.end.i.if.end6_crit_edge, label %if.then4.i

if.end.i.if.end6_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i = tail call i32 @snd_pcm_lib_free_pages(ptr noundef %substream) #14
  br label %if.end6

if.end6:                                          ; preds = %if.then4.i, %if.end.i.if.end6_crit_edge, %if.then2.if.end6_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %28 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ops, align 4
  %close = getelementptr inbounds %struct.snd_pcm_ops, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %close to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %close, align 4
  %call7 = tail call i32 %31(ptr noundef %substream) #14
  %32 = ptrtoint ptr %hw_opened to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load9 = load i8, ptr %hw_opened, align 4
  %bf.clear = and i8 %bf.load9, 127
  store i8 %bf.clear, ptr %hw_opened, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end6, %if.end.if.end10_crit_edge
  %latency_pm_qos_req = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 6
  %call11 = tail call zeroext i1 @cpu_latency_qos_request_active(ptr noundef %latency_pm_qos_req) #14
  br i1 %call11, label %if.then12, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @cpu_latency_qos_remove_request(ptr noundef %latency_pm_qos_req) #14
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10.if.end14_crit_edge
  %pcm_release = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 22
  %33 = ptrtoint ptr %pcm_release to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pcm_release, align 4
  %tobool15.not = icmp eq ptr %34, null
  br i1 %tobool15.not, label %if.end14.if.end19_crit_edge, label %if.then16

if.end14.if.end19_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %34(ptr noundef %substream) #14
  %35 = ptrtoint ptr %pcm_release to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %pcm_release, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.end14.if.end19_crit_edge
  tail call void @snd_pcm_detach_substream(ptr noundef %substream) #14
  br label %return

return:                                           ; preds = %if.end19, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_drop(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %substream, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %lor.rhs.do.end_crit_edge, label %if.end25, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 2155, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end25:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.75)
  switch i32 %5, label %if.end31 [
    i32 0, label %if.end25.cleanup_crit_edge
    i32 8, label %if.end25.cleanup_crit_edge54
  ]

if.end25.cleanup_crit_edge54:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end31:                                         ; preds = %if.end25
  %7 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %8, i32 0, i32 14
  %9 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.i = icmp eq i8 %10, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %11 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %status, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %14)
  %cmp34 = icmp eq i32 %14, 6
  br i1 %cmp34, label %if.then35, label %snd_pcm_stream_lock_irq.exit.if.end36_crit_edge

snd_pcm_stream_lock_irq.exit.if.end36_crit_edge:  ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36

if.then35:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @snd_pcm_pause(ptr noundef nonnull %substream)
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %snd_pcm_stream_lock_irq.exit.if.end36_crit_edge
  %call37 = tail call i32 @snd_pcm_stop(ptr noundef nonnull %substream, i32 noundef 1)
  %15 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %substream, align 4
  %nonatomic.i48 = getelementptr inbounds %struct.snd_pcm, ptr %16, i32 0, i32 14
  %17 = ptrtoint ptr %nonatomic.i48 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %nonatomic.i48, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i49 = icmp eq i8 %18, 0
  br i1 %tobool.not.i49, label %if.else.i.i53, label %if.then.i.i51

if.then.i.i51:                                    ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i50 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i50) #14
  br label %cleanup

if.else.i.i53:                                    ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i52 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i52) #14
  br label %cleanup

cleanup:                                          ; preds = %if.else.i.i53, %if.then.i.i51, %if.end25.cleanup_crit_edge, %if.end25.cleanup_crit_edge54, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ -77, %if.end25.cleanup_crit_edge ], [ -77, %if.end25.cleanup_crit_edge54 ], [ 0, %if.then.i.i51 ], [ 0, %if.else.i.i53 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cpu_latency_qos_request_active(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpu_latency_qos_remove_request(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_pcm_detach_substream(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_open_substream(ptr noundef %pcm, i32 noundef %stream, ptr noundef %file, ptr nocapture noundef writeonly %rsubstream) #0 align 64 {
entry:
  %substream = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %substream) #14
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %substream, align 4, !annotation !197
  %call = call i32 @snd_pcm_attach_substream(ptr noundef %pcm, i32 noundef %stream, ptr noundef %file, ptr noundef nonnull %substream) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %substream, align 4
  %ref_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %2, i32 0, i32 19
  %3 = ptrtoint ptr %ref_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %ref_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp1 = icmp sgt i32 %4, 1
  br i1 %cmp1, label %if.then2, label %snd_interval_setinteger.exit197.i

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %rsubstream to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %2, ptr %rsubstream, align 4
  br label %cleanup

snd_interval_setinteger.exit197.i:                ; preds = %if.end
  %runtime1.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %2, i32 0, i32 11
  %6 = ptrtoint ptr %runtime1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime1.i, align 4
  %hw_constraints.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47
  %8 = ptrtoint ptr %hw_constraints.i to i32
  call void @__asan_storeN_noabort(i32 %8, i32 8)
  store i64 -1, ptr %hw_constraints.i, align 4
  %arrayidx.i.1.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 0, i32 1
  %9 = ptrtoint ptr %arrayidx.i.1.i to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 -1, ptr %arrayidx.i.1.i, align 4
  %arrayidx.i.2.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 0, i32 2
  %10 = ptrtoint ptr %arrayidx.i.2.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 -1, ptr %arrayidx.i.2.i, align 4
  %arrayidx.i170.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 0
  %11 = ptrtoint ptr %arrayidx.i170.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %arrayidx.i170.i, align 4
  %openmin.i.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 0, i32 2
  %12 = ptrtoint ptr %openmin.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load.i.i = load i8, ptr %openmin.i.i, align 4
  %max.i.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 0, i32 1
  %13 = ptrtoint ptr %max.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %max.i.i, align 4
  %bf.clear8.i.i = and i8 %bf.load.i.i, 15
  store i8 %bf.clear8.i.i, ptr %openmin.i.i, align 4
  %arrayidx.i170.1.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 1
  %14 = ptrtoint ptr %arrayidx.i170.1.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %arrayidx.i170.1.i, align 4
  %openmin.i.1.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 1, i32 2
  %15 = ptrtoint ptr %openmin.i.1.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load.i.1.i = load i8, ptr %openmin.i.1.i, align 4
  %max.i.1.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 1, i32 1
  %16 = ptrtoint ptr %max.i.1.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %max.i.1.i, align 4
  %bf.clear8.i.1.i = and i8 %bf.load.i.1.i, 15
  store i8 %bf.clear8.i.1.i, ptr %openmin.i.1.i, align 4
  %arrayidx.i170.2.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 2
  %17 = ptrtoint ptr %arrayidx.i170.2.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %arrayidx.i170.2.i, align 4
  %openmin.i.2.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 2, i32 2
  %18 = ptrtoint ptr %openmin.i.2.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load.i.2.i = load i8, ptr %openmin.i.2.i, align 4
  %max.i.2.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 2, i32 1
  %19 = ptrtoint ptr %max.i.2.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %max.i.2.i, align 4
  %bf.clear8.i.2.i = and i8 %bf.load.i.2.i, 15
  %arrayidx.i170.3.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 3
  %20 = ptrtoint ptr %arrayidx.i170.3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %arrayidx.i170.3.i, align 4
  %openmin.i.3.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 3, i32 2
  %21 = ptrtoint ptr %openmin.i.3.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %bf.load.i.3.i = load i8, ptr %openmin.i.3.i, align 4
  %max.i.3.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 3, i32 1
  %22 = ptrtoint ptr %max.i.3.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -1, ptr %max.i.3.i, align 4
  %bf.clear8.i.3.i = and i8 %bf.load.i.3.i, 15
  store i8 %bf.clear8.i.3.i, ptr %openmin.i.3.i, align 4
  %arrayidx.i170.4.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 4
  %23 = ptrtoint ptr %arrayidx.i170.4.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %arrayidx.i170.4.i, align 4
  %openmin.i.4.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 4, i32 2
  %24 = ptrtoint ptr %openmin.i.4.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i.4.i = load i8, ptr %openmin.i.4.i, align 4
  %max.i.4.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 4, i32 1
  %25 = ptrtoint ptr %max.i.4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -1, ptr %max.i.4.i, align 4
  %bf.clear8.i.4.i = and i8 %bf.load.i.4.i, 15
  store i8 %bf.clear8.i.4.i, ptr %openmin.i.4.i, align 4
  %arrayidx.i170.5.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 5
  %26 = ptrtoint ptr %arrayidx.i170.5.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %arrayidx.i170.5.i, align 4
  %openmin.i.5.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 5, i32 2
  %27 = ptrtoint ptr %openmin.i.5.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %bf.load.i.5.i = load i8, ptr %openmin.i.5.i, align 4
  %max.i.5.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 5, i32 1
  %28 = ptrtoint ptr %max.i.5.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %max.i.5.i, align 4
  %bf.clear8.i.5.i = and i8 %bf.load.i.5.i, 15
  store i8 %bf.clear8.i.5.i, ptr %openmin.i.5.i, align 4
  %arrayidx.i170.6.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 6
  %29 = ptrtoint ptr %arrayidx.i170.6.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %arrayidx.i170.6.i, align 4
  %openmin.i.6.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 6, i32 2
  %30 = ptrtoint ptr %openmin.i.6.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load.i.6.i = load i8, ptr %openmin.i.6.i, align 4
  %max.i.6.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 6, i32 1
  %31 = ptrtoint ptr %max.i.6.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -1, ptr %max.i.6.i, align 4
  %bf.clear8.i.6.i = and i8 %bf.load.i.6.i, 15
  store i8 %bf.clear8.i.6.i, ptr %openmin.i.6.i, align 4
  %arrayidx.i170.7.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 7
  %32 = ptrtoint ptr %arrayidx.i170.7.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %arrayidx.i170.7.i, align 4
  %openmin.i.7.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 7, i32 2
  %33 = ptrtoint ptr %openmin.i.7.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load.i.7.i = load i8, ptr %openmin.i.7.i, align 4
  %max.i.7.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 7, i32 1
  %34 = ptrtoint ptr %max.i.7.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %max.i.7.i, align 4
  %bf.clear8.i.7.i = and i8 %bf.load.i.7.i, 15
  store i8 %bf.clear8.i.7.i, ptr %openmin.i.7.i, align 4
  %arrayidx.i170.8.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 8
  %35 = ptrtoint ptr %arrayidx.i170.8.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %arrayidx.i170.8.i, align 4
  %openmin.i.8.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 8, i32 2
  %36 = ptrtoint ptr %openmin.i.8.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %bf.load.i.8.i = load i8, ptr %openmin.i.8.i, align 4
  %max.i.8.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 8, i32 1
  %37 = ptrtoint ptr %max.i.8.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 -1, ptr %max.i.8.i, align 4
  %bf.clear8.i.8.i = and i8 %bf.load.i.8.i, 15
  store i8 %bf.clear8.i.8.i, ptr %openmin.i.8.i, align 4
  %arrayidx.i170.9.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 9
  %38 = ptrtoint ptr %arrayidx.i170.9.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %arrayidx.i170.9.i, align 4
  %openmin.i.9.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 9, i32 2
  %39 = ptrtoint ptr %openmin.i.9.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %bf.load.i.9.i = load i8, ptr %openmin.i.9.i, align 4
  %max.i.9.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 9, i32 1
  %40 = ptrtoint ptr %max.i.9.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 -1, ptr %max.i.9.i, align 4
  %bf.clear8.i.9.i = and i8 %bf.load.i.9.i, 15
  %arrayidx.i170.10.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 10
  %41 = ptrtoint ptr %arrayidx.i170.10.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %arrayidx.i170.10.i, align 4
  %openmin.i.10.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 10, i32 2
  %42 = ptrtoint ptr %openmin.i.10.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %bf.load.i.10.i = load i8, ptr %openmin.i.10.i, align 4
  %max.i.10.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 10, i32 1
  %43 = ptrtoint ptr %max.i.10.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %max.i.10.i, align 4
  %bf.clear8.i.10.i = and i8 %bf.load.i.10.i, 15
  %arrayidx.i170.11.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 11
  %44 = ptrtoint ptr %arrayidx.i170.11.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %arrayidx.i170.11.i, align 4
  %openmin.i.11.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 11, i32 2
  %45 = ptrtoint ptr %openmin.i.11.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %bf.load.i.11.i = load i8, ptr %openmin.i.11.i, align 4
  %max.i.11.i = getelementptr %struct.snd_pcm_runtime, ptr %7, i32 0, i32 47, i32 1, i32 11, i32 1
  %46 = ptrtoint ptr %max.i.11.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 -1, ptr %max.i.11.i, align 4
  %bf.clear8.i.11.i = and i8 %bf.load.i.11.i, 15
  store i8 %bf.clear8.i.11.i, ptr %openmin.i.11.i, align 4
  %bf.set.i.i = or i8 %bf.clear8.i.2.i, 32
  store i8 %bf.set.i.i, ptr %openmin.i.2.i, align 4
  %bf.set.i183.i = or i8 %bf.clear8.i.9.i, 32
  store i8 %bf.set.i183.i, ptr %openmin.i.9.i, align 4
  %bf.set.i195.i = or i8 %bf.clear8.i.10.i, 32
  store i8 %bf.set.i195.i, ptr %openmin.i.10.i, align 4
  %bf.load.i200.i = load i8, ptr %openmin.i.i, align 4
  %47 = and i8 %bf.load.i200.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool.not.i201.i = icmp eq i8 %47, 0
  br i1 %tobool.not.i201.i, label %if.end.i203.i, label %snd_interval_setinteger.exit197.i.snd_interval_setinteger.exit209.i_crit_edge

snd_interval_setinteger.exit197.i.snd_interval_setinteger.exit209.i_crit_edge: ; preds = %snd_interval_setinteger.exit197.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_interval_setinteger.exit209.i

if.end.i203.i:                                    ; preds = %snd_interval_setinteger.exit197.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 -65, i8 %bf.load.i200.i)
  %.not.i202.i = icmp ugt i8 %bf.load.i200.i, -65
  br i1 %.not.i202.i, label %land.lhs.true10.i206.i, label %if.end.i203.i.if.end12.i208.i_crit_edge

if.end.i203.i.if.end12.i208.i_crit_edge:          ; preds = %if.end.i203.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i208.i

land.lhs.true10.i206.i:                           ; preds = %if.end.i203.i
  %48 = ptrtoint ptr %arrayidx.i170.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.i170.i, align 4
  %50 = ptrtoint ptr %max.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %max.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %51)
  %cmp.i205.i = icmp eq i32 %49, %51
  br i1 %cmp.i205.i, label %land.lhs.true10.i206.i.snd_interval_setinteger.exit209.i_crit_edge, label %land.lhs.true10.i206.i.if.end12.i208.i_crit_edge

land.lhs.true10.i206.i.if.end12.i208.i_crit_edge: ; preds = %land.lhs.true10.i206.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i208.i

land.lhs.true10.i206.i.snd_interval_setinteger.exit209.i_crit_edge: ; preds = %land.lhs.true10.i206.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_interval_setinteger.exit209.i

if.end12.i208.i:                                  ; preds = %land.lhs.true10.i206.i.if.end12.i208.i_crit_edge, %if.end.i203.i.if.end12.i208.i_crit_edge
  %bf.set.i207.i = or i8 %bf.load.i200.i, 32
  %52 = ptrtoint ptr %openmin.i.i to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 %bf.set.i207.i, ptr %openmin.i.i, align 4
  br label %snd_interval_setinteger.exit209.i

snd_interval_setinteger.exit209.i:                ; preds = %if.end12.i208.i, %land.lhs.true10.i206.i.snd_interval_setinteger.exit209.i_crit_edge, %snd_interval_setinteger.exit197.i.snd_interval_setinteger.exit209.i_crit_edge
  %53 = ptrtoint ptr %openmin.i.1.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load.i212.i = load i8, ptr %openmin.i.1.i, align 4
  %54 = and i8 %bf.load.i212.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool.not.i213.i = icmp eq i8 %54, 0
  br i1 %tobool.not.i213.i, label %if.end.i215.i, label %snd_interval_setinteger.exit209.i.snd_interval_setinteger.exit221.i_crit_edge

snd_interval_setinteger.exit209.i.snd_interval_setinteger.exit221.i_crit_edge: ; preds = %snd_interval_setinteger.exit209.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_interval_setinteger.exit221.i

if.end.i215.i:                                    ; preds = %snd_interval_setinteger.exit209.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 -65, i8 %bf.load.i212.i)
  %.not.i214.i = icmp ugt i8 %bf.load.i212.i, -65
  br i1 %.not.i214.i, label %land.lhs.true10.i218.i, label %if.end.i215.i.if.end12.i220.i_crit_edge

if.end.i215.i.if.end12.i220.i_crit_edge:          ; preds = %if.end.i215.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i220.i

land.lhs.true10.i218.i:                           ; preds = %if.end.i215.i
  %55 = ptrtoint ptr %arrayidx.i170.1.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx.i170.1.i, align 4
  %57 = ptrtoint ptr %max.i.1.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %max.i.1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %58)
  %cmp.i217.i = icmp eq i32 %56, %58
  br i1 %cmp.i217.i, label %land.lhs.true10.i218.i.snd_interval_setinteger.exit221.i_crit_edge, label %land.lhs.true10.i218.i.if.end12.i220.i_crit_edge

land.lhs.true10.i218.i.if.end12.i220.i_crit_edge: ; preds = %land.lhs.true10.i218.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i220.i

land.lhs.true10.i218.i.snd_interval_setinteger.exit221.i_crit_edge: ; preds = %land.lhs.true10.i218.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_interval_setinteger.exit221.i

if.end12.i220.i:                                  ; preds = %land.lhs.true10.i218.i.if.end12.i220.i_crit_edge, %if.end.i215.i.if.end12.i220.i_crit_edge
  %bf.set.i219.i = or i8 %bf.load.i212.i, 32
  %59 = ptrtoint ptr %openmin.i.1.i to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %bf.set.i219.i, ptr %openmin.i.1.i, align 4
  br label %snd_interval_setinteger.exit221.i

snd_interval_setinteger.exit221.i:                ; preds = %if.end12.i220.i, %land.lhs.true10.i218.i.snd_interval_setinteger.exit221.i_crit_edge, %snd_interval_setinteger.exit209.i.snd_interval_setinteger.exit221.i_crit_edge
  %call19.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 1, ptr noundef nonnull @snd_pcm_hw_rule_format, ptr noundef null, i32 noundef 8, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %cmp20.i = icmp slt i32 %call19.i, 0
  br i1 %cmp20.i, label %snd_interval_setinteger.exit221.i.do.body_crit_edge, label %if.end.i

snd_interval_setinteger.exit221.i.do.body_crit_edge: ; preds = %snd_interval_setinteger.exit221.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end.i:                                         ; preds = %snd_interval_setinteger.exit221.i
  %call21.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 8, ptr noundef nonnull @snd_pcm_hw_rule_sample_bits, ptr noundef null, i32 noundef 1, i32 noundef 8, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %cmp22.i = icmp slt i32 %call21.i, 0
  br i1 %cmp22.i, label %if.end.i.do.body_crit_edge, label %if.end24.i

if.end.i.do.body_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end24.i:                                       ; preds = %if.end.i
  %call25.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 8, ptr noundef nonnull @snd_pcm_hw_rule_div, ptr noundef null, i32 noundef 9, i32 noundef 10, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %cmp26.i = icmp slt i32 %call25.i, 0
  br i1 %cmp26.i, label %if.end24.i.do.body_crit_edge, label %if.end28.i

if.end24.i.do.body_crit_edge:                     ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end28.i:                                       ; preds = %if.end24.i
  %call29.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 9, ptr noundef nonnull @snd_pcm_hw_rule_mul, ptr noundef null, i32 noundef 8, i32 noundef 10, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i)
  %cmp30.i = icmp slt i32 %call29.i, 0
  br i1 %cmp30.i, label %if.end28.i.do.body_crit_edge, label %if.end32.i

if.end28.i.do.body_crit_edge:                     ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end32.i:                                       ; preds = %if.end28.i
  %call33.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 9, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 8 to ptr), i32 noundef 14, i32 noundef 13, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %cmp34.i = icmp slt i32 %call33.i, 0
  br i1 %cmp34.i, label %if.end32.i.do.body_crit_edge, label %if.end36.i

if.end32.i.do.body_crit_edge:                     ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end36.i:                                       ; preds = %if.end32.i
  %call37.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 9, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 8 to ptr), i32 noundef 18, i32 noundef 17, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i)
  %cmp38.i = icmp slt i32 %call37.i, 0
  br i1 %cmp38.i, label %if.end36.i.do.body_crit_edge, label %if.end40.i

if.end36.i.do.body_crit_edge:                     ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end40.i:                                       ; preds = %if.end36.i
  %call41.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 10, ptr noundef nonnull @snd_pcm_hw_rule_div, ptr noundef null, i32 noundef 9, i32 noundef 8, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41.i)
  %cmp42.i = icmp slt i32 %call41.i, 0
  br i1 %cmp42.i, label %if.end40.i.do.body_crit_edge, label %if.end44.i

if.end40.i.do.body_crit_edge:                     ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end44.i:                                       ; preds = %if.end40.i
  %call45.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 11, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 1000000 to ptr), i32 noundef 13, i32 noundef 12, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45.i)
  %cmp46.i = icmp slt i32 %call45.i, 0
  br i1 %cmp46.i, label %if.end44.i.do.body_crit_edge, label %if.end48.i

if.end44.i.do.body_crit_edge:                     ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end48.i:                                       ; preds = %if.end44.i
  %call49.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 11, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 1000000 to ptr), i32 noundef 17, i32 noundef 16, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49.i)
  %cmp50.i = icmp slt i32 %call49.i, 0
  br i1 %cmp50.i, label %if.end48.i.do.body_crit_edge, label %if.end52.i

if.end48.i.do.body_crit_edge:                     ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end52.i:                                       ; preds = %if.end48.i
  %call53.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 15, ptr noundef nonnull @snd_pcm_hw_rule_div, ptr noundef null, i32 noundef 17, i32 noundef 13, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53.i)
  %cmp54.i = icmp slt i32 %call53.i, 0
  br i1 %cmp54.i, label %if.end52.i.do.body_crit_edge, label %if.end56.i

if.end52.i.do.body_crit_edge:                     ; preds = %if.end52.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end56.i:                                       ; preds = %if.end52.i
  %call57.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 13, ptr noundef nonnull @snd_pcm_hw_rule_div, ptr noundef null, i32 noundef 17, i32 noundef 15, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i)
  %cmp58.i = icmp slt i32 %call57.i, 0
  br i1 %cmp58.i, label %if.end56.i.do.body_crit_edge, label %if.end60.i

if.end56.i.do.body_crit_edge:                     ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end60.i:                                       ; preds = %if.end56.i
  %call61.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 13, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 8 to ptr), i32 noundef 14, i32 noundef 9, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61.i)
  %cmp62.i = icmp slt i32 %call61.i, 0
  br i1 %cmp62.i, label %if.end60.i.do.body_crit_edge, label %if.end64.i

if.end60.i.do.body_crit_edge:                     ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end64.i:                                       ; preds = %if.end60.i
  %call65.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 13, ptr noundef nonnull @snd_pcm_hw_rule_muldivk, ptr noundef nonnull inttoptr (i32 1000000 to ptr), i32 noundef 12, i32 noundef 11, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65.i)
  %cmp66.i = icmp slt i32 %call65.i, 0
  br i1 %cmp66.i, label %if.end64.i.do.body_crit_edge, label %if.end68.i

if.end64.i.do.body_crit_edge:                     ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end68.i:                                       ; preds = %if.end64.i
  %call69.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 17, ptr noundef nonnull @snd_pcm_hw_rule_mul, ptr noundef null, i32 noundef 13, i32 noundef 15, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69.i)
  %cmp70.i = icmp slt i32 %call69.i, 0
  br i1 %cmp70.i, label %if.end68.i.do.body_crit_edge, label %if.end72.i

if.end68.i.do.body_crit_edge:                     ; preds = %if.end68.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end72.i:                                       ; preds = %if.end68.i
  %call73.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 17, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 8 to ptr), i32 noundef 18, i32 noundef 9, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73.i)
  %cmp74.i = icmp slt i32 %call73.i, 0
  br i1 %cmp74.i, label %if.end72.i.do.body_crit_edge, label %if.end76.i

if.end72.i.do.body_crit_edge:                     ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end76.i:                                       ; preds = %if.end72.i
  %call77.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 17, ptr noundef nonnull @snd_pcm_hw_rule_muldivk, ptr noundef nonnull inttoptr (i32 1000000 to ptr), i32 noundef 16, i32 noundef 11, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77.i)
  %cmp78.i = icmp slt i32 %call77.i, 0
  br i1 %cmp78.i, label %if.end76.i.do.body_crit_edge, label %if.end80.i

if.end76.i.do.body_crit_edge:                     ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end80.i:                                       ; preds = %if.end76.i
  %call81.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 14, ptr noundef nonnull @snd_pcm_hw_rule_muldivk, ptr noundef nonnull inttoptr (i32 8 to ptr), i32 noundef 13, i32 noundef 9, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call81.i)
  %cmp82.i = icmp slt i32 %call81.i, 0
  br i1 %cmp82.i, label %if.end80.i.do.body_crit_edge, label %if.end84.i

if.end80.i.do.body_crit_edge:                     ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end84.i:                                       ; preds = %if.end80.i
  %call85.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 18, ptr noundef nonnull @snd_pcm_hw_rule_muldivk, ptr noundef nonnull inttoptr (i32 8 to ptr), i32 noundef 17, i32 noundef 9, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call85.i)
  %cmp86.i = icmp slt i32 %call85.i, 0
  br i1 %cmp86.i, label %if.end84.i.do.body_crit_edge, label %if.end88.i

if.end84.i.do.body_crit_edge:                     ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end88.i:                                       ; preds = %if.end84.i
  %call89.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 12, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 1000000 to ptr), i32 noundef 13, i32 noundef 11, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89.i)
  %cmp90.i = icmp slt i32 %call89.i, 0
  br i1 %cmp90.i, label %if.end88.i.do.body_crit_edge, label %snd_pcm_hw_constraints_init.exit

if.end88.i.do.body_crit_edge:                     ; preds = %if.end88.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

snd_pcm_hw_constraints_init.exit:                 ; preds = %if.end88.i
  %call93.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %7, i32 noundef 0, i32 noundef 16, ptr noundef nonnull @snd_pcm_hw_rule_mulkdiv, ptr noundef nonnull inttoptr (i32 1000000 to ptr), i32 noundef 17, i32 noundef 11, i32 noundef -1) #14
  %60 = call i32 @llvm.smin.i32(i32 %call93.i, i32 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call93.i)
  %cmp5 = icmp slt i32 %call93.i, 0
  br i1 %cmp5, label %snd_pcm_hw_constraints_init.exit.do.body_crit_edge, label %if.end12

snd_pcm_hw_constraints_init.exit.do.body_crit_edge: ; preds = %snd_pcm_hw_constraints_init.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.body:                                          ; preds = %snd_pcm_hw_constraints_init.exit.do.body_crit_edge, %if.end88.i.do.body_crit_edge, %if.end84.i.do.body_crit_edge, %if.end80.i.do.body_crit_edge, %if.end76.i.do.body_crit_edge, %if.end72.i.do.body_crit_edge, %if.end68.i.do.body_crit_edge, %if.end64.i.do.body_crit_edge, %if.end60.i.do.body_crit_edge, %if.end56.i.do.body_crit_edge, %if.end52.i.do.body_crit_edge, %if.end48.i.do.body_crit_edge, %if.end44.i.do.body_crit_edge, %if.end40.i.do.body_crit_edge, %if.end36.i.do.body_crit_edge, %if.end32.i.do.body_crit_edge, %if.end28.i.do.body_crit_edge, %if.end24.i.do.body_crit_edge, %if.end.i.do.body_crit_edge, %snd_interval_setinteger.exit221.i.do.body_crit_edge
  %retval.0.i5874 = phi i32 [ %60, %snd_pcm_hw_constraints_init.exit.do.body_crit_edge ], [ %call89.i, %if.end88.i.do.body_crit_edge ], [ %call85.i, %if.end84.i.do.body_crit_edge ], [ %call81.i, %if.end80.i.do.body_crit_edge ], [ %call77.i, %if.end76.i.do.body_crit_edge ], [ %call73.i, %if.end72.i.do.body_crit_edge ], [ %call69.i, %if.end68.i.do.body_crit_edge ], [ %call65.i, %if.end64.i.do.body_crit_edge ], [ %call61.i, %if.end60.i.do.body_crit_edge ], [ %call57.i, %if.end56.i.do.body_crit_edge ], [ %call53.i, %if.end52.i.do.body_crit_edge ], [ %call49.i, %if.end48.i.do.body_crit_edge ], [ %call45.i, %if.end44.i.do.body_crit_edge ], [ %call41.i, %if.end40.i.do.body_crit_edge ], [ %call37.i, %if.end36.i.do.body_crit_edge ], [ %call33.i, %if.end32.i.do.body_crit_edge ], [ %call29.i, %if.end28.i.do.body_crit_edge ], [ %call25.i, %if.end24.i.do.body_crit_edge ], [ %call21.i, %if.end.i.do.body_crit_edge ], [ %call19.i, %snd_interval_setinteger.exit221.i.do.body_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_pcm_open_substream.__UNIQUE_ID_ddebug277, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_pcm_open_substream, %if.then10)) #14
          to label %error [label %if.then10], !srcloc !200

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %61 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %pcm, align 8
  %dev = getelementptr inbounds %struct.snd_card, ptr %62, i32 0, i32 27
  %63 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dev, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_pcm_open_substream.__UNIQUE_ID_ddebug277, ptr noundef %64, ptr noundef nonnull @.str.6) #14
  br label %error

if.end12:                                         ; preds = %snd_pcm_hw_constraints_init.exit
  %65 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %substream, align 4
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %66, i32 0, i32 10
  %67 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ops, align 4
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %68, align 4
  %call13 = call i32 %70(ptr noundef %66) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.end12.error_crit_edge, label %if.end16

if.end12.error_crit_edge:                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end16:                                         ; preds = %if.end12
  %71 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %substream, align 4
  %hw_opened = getelementptr inbounds %struct.snd_pcm_substream, ptr %72, i32 0, i32 26
  %73 = ptrtoint ptr %hw_opened to i32
  call void @__asan_load1_noabort(i32 %73)
  %bf.load = load i8, ptr %hw_opened, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %hw_opened, align 4
  %runtime1.i59 = getelementptr inbounds %struct.snd_pcm_substream, ptr %72, i32 0, i32 11
  %74 = ptrtoint ptr %runtime1.i59 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %runtime1.i59, align 4
  %hw2.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46
  %76 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %hw2.i, align 8
  %and.i = lshr i32 %77, 5
  %78 = and i32 %and.i, 24
  %and.i.i = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end16.if.end28.i61_crit_edge, label %if.end.i.i

if.end16.if.end28.i61_crit_edge:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28.i61

if.end.i.i:                                       ; preds = %if.end16
  %ops.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %72, i32 0, i32 10
  %79 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ops.i.i, align 4
  %mmap.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %80, i32 0, i32 14
  %81 = ptrtoint ptr %mmap.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %mmap.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %82, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i, label %if.end.i.i.if.then9.i_crit_edge

if.end.i.i.if.then9.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %page.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %80, i32 0, i32 13
  %83 = ptrtoint ptr %page.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %page.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %84, null
  br i1 %tobool3.not.i.i, label %if.end5.i.i, label %lor.lhs.false.i.i.if.then9.i_crit_edge

lor.lhs.false.i.i.if.then9.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9.i

if.end5.i.i:                                      ; preds = %lor.lhs.false.i.i
  %dma_buffer_p.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 53
  %85 = ptrtoint ptr %dma_buffer_p.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %dma_buffer_p.i.i, align 8
  %tobool7.not.i.i = icmp eq ptr %86, null
  %dma_buffer.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %72, i32 0, i32 8
  %spec.select.i.i = select i1 %tobool7.not.i.i, ptr %dma_buffer.i.i, ptr %86
  %87 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %spec.select.i.i, align 4
  %89 = zext i32 %88 to i64
  call void @__sanitizer_cov_trace_switch(i64 %89, ptr @__sancov_gen_cov_switch_values.76)
  switch i32 %88, label %hw_support_mmap.exit.i [
    i32 0, label %if.end5.i.i.if.then9.i_crit_edge
    i32 1, label %if.end5.i.i.if.then9.i_crit_edge80
    i32 7, label %if.end5.i.i.if.then9.i_crit_edge81
  ]

if.end5.i.i.if.then9.i_crit_edge81:               ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9.i

if.end5.i.i.if.then9.i_crit_edge80:               ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9.i

if.end5.i.i.if.then9.i_crit_edge:                 ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9.i

hw_support_mmap.exit.i:                           ; preds = %if.end5.i.i
  %dev12.i.i = getelementptr inbounds %struct.snd_dma_device, ptr %spec.select.i.i, i32 0, i32 3
  %90 = ptrtoint ptr %dev12.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %dev12.i.i, align 4
  %call.i.i = call zeroext i1 @dma_can_mmap(ptr noundef %91) #14
  br i1 %call.i.i, label %hw_support_mmap.exit.i.if.then9.i_crit_edge, label %hw_support_mmap.exit.i.if.end28.i61_crit_edge

hw_support_mmap.exit.i.if.end28.i61_crit_edge:    ; preds = %hw_support_mmap.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28.i61

hw_support_mmap.exit.i.if.then9.i_crit_edge:      ; preds = %hw_support_mmap.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9.i

if.then9.i:                                       ; preds = %hw_support_mmap.exit.i.if.then9.i_crit_edge, %if.end5.i.i.if.then9.i_crit_edge, %if.end5.i.i.if.then9.i_crit_edge80, %if.end5.i.i.if.then9.i_crit_edge81, %lor.lhs.false.i.i.if.then9.i_crit_edge, %if.end.i.i.if.then9.i_crit_edge
  %92 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %hw2.i, align 8
  %and11.i = lshr i32 %93, 8
  %94 = and i32 %and11.i, 1
  %95 = or i32 %94, %78
  %96 = and i32 %and11.i, 2
  %97 = or i32 %95, %96
  %98 = and i32 %and11.i, 4
  %99 = or i32 %97, %98
  br label %if.end28.i61

if.end28.i61:                                     ; preds = %if.then9.i, %hw_support_mmap.exit.i.if.end28.i61_crit_edge, %if.end16.if.end28.i61_crit_edge
  %mask.4.i = phi i32 [ %78, %hw_support_mmap.exit.i.if.end28.i61_crit_edge ], [ %99, %if.then9.i ], [ %78, %if.end16.if.end28.i61_crit_edge ]
  %call29.i60 = call i32 @snd_pcm_hw_constraint_mask(ptr noundef %75, i32 noundef 0, i32 noundef %mask.4.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i60)
  %cmp.i = icmp slt i32 %call29.i60, 0
  br i1 %cmp.i, label %if.end28.i61.do.body20_crit_edge, label %if.end31.i

if.end28.i61.do.body20_crit_edge:                 ; preds = %if.end28.i61
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end31.i:                                       ; preds = %if.end28.i61
  %formats.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 1
  %100 = ptrtoint ptr %formats.i to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %formats.i, align 8
  %call32.i = call i32 @snd_pcm_hw_constraint_mask64(ptr noundef %75, i32 noundef 1, i64 noundef %101) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32.i)
  %cmp33.i = icmp slt i32 %call32.i, 0
  br i1 %cmp33.i, label %if.end31.i.do.body20_crit_edge, label %if.end35.i

if.end31.i.do.body20_crit_edge:                   ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end35.i:                                       ; preds = %if.end31.i
  %call36.i = call i32 @snd_pcm_hw_constraint_mask(ptr noundef %75, i32 noundef 2, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i)
  %cmp37.i = icmp slt i32 %call36.i, 0
  br i1 %cmp37.i, label %if.end35.i.do.body20_crit_edge, label %if.end39.i

if.end35.i.do.body20_crit_edge:                   ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end39.i:                                       ; preds = %if.end35.i
  %channels_min.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 5
  %102 = ptrtoint ptr %channels_min.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %channels_min.i, align 4
  %channels_max.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 6
  %104 = ptrtoint ptr %channels_max.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %channels_max.i, align 8
  %call40.i = call i32 @snd_pcm_hw_constraint_minmax(ptr noundef %75, i32 noundef 10, i32 noundef %103, i32 noundef %105) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40.i)
  %cmp41.i = icmp slt i32 %call40.i, 0
  br i1 %cmp41.i, label %if.end39.i.do.body20_crit_edge, label %if.end43.i

if.end39.i.do.body20_crit_edge:                   ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end43.i:                                       ; preds = %if.end39.i
  %rate_min.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 3
  %106 = ptrtoint ptr %rate_min.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %rate_min.i, align 4
  %rate_max.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 4
  %108 = ptrtoint ptr %rate_max.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %rate_max.i, align 8
  %call44.i = call i32 @snd_pcm_hw_constraint_minmax(ptr noundef %75, i32 noundef 11, i32 noundef %107, i32 noundef %109) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i)
  %cmp45.i = icmp slt i32 %call44.i, 0
  br i1 %cmp45.i, label %if.end43.i.do.body20_crit_edge, label %if.end47.i

if.end43.i.do.body20_crit_edge:                   ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end47.i:                                       ; preds = %if.end43.i
  %period_bytes_min.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 8
  %110 = ptrtoint ptr %period_bytes_min.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %period_bytes_min.i, align 8
  %period_bytes_max.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 9
  %112 = ptrtoint ptr %period_bytes_max.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %period_bytes_max.i, align 4
  %call48.i = call i32 @snd_pcm_hw_constraint_minmax(ptr noundef %75, i32 noundef 14, i32 noundef %111, i32 noundef %113) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48.i)
  %cmp49.i = icmp slt i32 %call48.i, 0
  br i1 %cmp49.i, label %if.end47.i.do.body20_crit_edge, label %if.end51.i

if.end47.i.do.body20_crit_edge:                   ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end51.i:                                       ; preds = %if.end47.i
  %periods_min.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 10
  %114 = ptrtoint ptr %periods_min.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %periods_min.i, align 8
  %periods_max.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 11
  %116 = ptrtoint ptr %periods_max.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %periods_max.i, align 4
  %call52.i = call i32 @snd_pcm_hw_constraint_minmax(ptr noundef %75, i32 noundef 15, i32 noundef %115, i32 noundef %117) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52.i)
  %cmp53.i = icmp slt i32 %call52.i, 0
  br i1 %cmp53.i, label %if.end51.i.do.body20_crit_edge, label %if.end55.i

if.end51.i.do.body20_crit_edge:                   ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end55.i:                                       ; preds = %if.end51.i
  %118 = ptrtoint ptr %period_bytes_min.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %period_bytes_min.i, align 8
  %buffer_bytes_max.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 7
  %120 = ptrtoint ptr %buffer_bytes_max.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %buffer_bytes_max.i, align 4
  %call57.i62 = call i32 @snd_pcm_hw_constraint_minmax(ptr noundef %75, i32 noundef 18, i32 noundef %119, i32 noundef %121) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i62)
  %cmp58.i63 = icmp slt i32 %call57.i62, 0
  br i1 %cmp58.i63, label %if.end55.i.do.body20_crit_edge, label %if.end60.i66

if.end55.i.do.body20_crit_edge:                   ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end60.i66:                                     ; preds = %if.end55.i
  %call61.i64 = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %75, i32 noundef 0, i32 noundef 18, ptr noundef nonnull @snd_pcm_hw_rule_buffer_bytes_max, ptr noundef %72, i32 noundef 18, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61.i64)
  %cmp62.i65 = icmp slt i32 %call61.i64, 0
  br i1 %cmp62.i65, label %if.end60.i66.do.body20_crit_edge, label %if.end64.i67

if.end60.i66.do.body20_crit_edge:                 ; preds = %if.end60.i66
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end64.i67:                                     ; preds = %if.end60.i66
  %dma_bytes.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 52
  %122 = ptrtoint ptr %dma_bytes.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %dma_bytes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool65.not.i = icmp eq i32 %123, 0
  br i1 %tobool65.not.i, label %if.end64.i67.if.end72.i68_crit_edge, label %if.then66.i

if.end64.i67.if.end72.i68_crit_edge:              ; preds = %if.end64.i67
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end72.i68

if.then66.i:                                      ; preds = %if.end64.i67
  %call68.i = call i32 @snd_pcm_hw_constraint_minmax(ptr noundef %75, i32 noundef 18, i32 noundef 0, i32 noundef %123) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68.i)
  %cmp69.i = icmp slt i32 %call68.i, 0
  br i1 %cmp69.i, label %if.then66.i.do.body20_crit_edge, label %if.then66.i.if.end72.i68_crit_edge

if.then66.i.if.end72.i68_crit_edge:               ; preds = %if.then66.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end72.i68

if.then66.i.do.body20_crit_edge:                  ; preds = %if.then66.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

if.end72.i68:                                     ; preds = %if.then66.i.if.end72.i68_crit_edge, %if.end64.i67.if.end72.i68_crit_edge
  %rates.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %75, i32 0, i32 46, i32 2
  %124 = ptrtoint ptr %rates.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %rates.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %125)
  %tobool74.not.i = icmp ult i32 %125, 1073741824
  br i1 %tobool74.not.i, label %if.then75.i, label %if.end72.i68.if.end38_crit_edge

if.end72.i68.if.end38_crit_edge:                  ; preds = %if.end72.i68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.then75.i:                                      ; preds = %if.end72.i68
  %call76.i = call i32 (ptr, i32, i32, ptr, ptr, i32, ...) @snd_pcm_hw_rule_add(ptr noundef %75, i32 noundef 0, i32 noundef 11, ptr noundef nonnull @snd_pcm_hw_rule_rate, ptr noundef %hw2.i, i32 noundef 11, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76.i)
  %cmp77.i = icmp slt i32 %call76.i, 0
  br i1 %cmp77.i, label %if.then75.i.do.body20_crit_edge, label %if.then75.i.if.end38_crit_edge

if.then75.i.if.end38_crit_edge:                   ; preds = %if.then75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.then75.i.do.body20_crit_edge:                  ; preds = %if.then75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body20

do.body20:                                        ; preds = %if.then75.i.do.body20_crit_edge, %if.then66.i.do.body20_crit_edge, %if.end60.i66.do.body20_crit_edge, %if.end55.i.do.body20_crit_edge, %if.end51.i.do.body20_crit_edge, %if.end47.i.do.body20_crit_edge, %if.end43.i.do.body20_crit_edge, %if.end39.i.do.body20_crit_edge, %if.end35.i.do.body20_crit_edge, %if.end31.i.do.body20_crit_edge, %if.end28.i61.do.body20_crit_edge
  %retval.0.i71.ph = phi i32 [ %call76.i, %if.then75.i.do.body20_crit_edge ], [ %call68.i, %if.then66.i.do.body20_crit_edge ], [ %call61.i64, %if.end60.i66.do.body20_crit_edge ], [ %call57.i62, %if.end55.i.do.body20_crit_edge ], [ %call52.i, %if.end51.i.do.body20_crit_edge ], [ %call48.i, %if.end47.i.do.body20_crit_edge ], [ %call44.i, %if.end43.i.do.body20_crit_edge ], [ %call40.i, %if.end39.i.do.body20_crit_edge ], [ %call36.i, %if.end35.i.do.body20_crit_edge ], [ %call32.i, %if.end31.i.do.body20_crit_edge ], [ %call29.i60, %if.end28.i61.do.body20_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_pcm_open_substream.__UNIQUE_ID_ddebug278, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_pcm_open_substream, %if.then32)) #14
          to label %error [label %if.then32], !srcloc !200

if.then32:                                        ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #16
  %126 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %pcm, align 8
  %dev34 = getelementptr inbounds %struct.snd_card, ptr %127, i32 0, i32 27
  %128 = ptrtoint ptr %dev34 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %dev34, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_pcm_open_substream.__UNIQUE_ID_ddebug278, ptr noundef %129, ptr noundef nonnull @.str.7) #14
  br label %error

if.end38:                                         ; preds = %if.then75.i.if.end38_crit_edge, %if.end72.i68.if.end38_crit_edge
  %call81.i69 = call i32 @snd_pcm_hw_constraint_integer(ptr noundef %75, i32 noundef 13) #14
  %130 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %substream, align 4
  %managed_buffer_alloc = getelementptr inbounds %struct.snd_pcm_substream, ptr %131, i32 0, i32 26
  %132 = ptrtoint ptr %managed_buffer_alloc to i32
  call void @__asan_load1_noabort(i32 %132)
  %bf.load39 = load i8, ptr %managed_buffer_alloc, align 4
  %133 = and i8 %bf.load39, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %133)
  %tobool41.not = icmp eq i8 %133, 0
  br i1 %tobool41.not, label %if.end38.if.end45_crit_edge, label %land.lhs.true

if.end38.if.end45_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

land.lhs.true:                                    ; preds = %if.end38
  %need_sync = getelementptr inbounds %struct.snd_pcm_substream, ptr %131, i32 0, i32 8, i32 0, i32 2
  %134 = ptrtoint ptr %need_sync to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %need_sync, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %135)
  %tobool43.not = icmp eq i8 %135, 0
  br i1 %tobool43.not, label %land.lhs.true.if.end45_crit_edge, label %if.then44

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

if.then44:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %131, i32 0, i32 11
  %136 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %runtime, align 4
  %hw = getelementptr inbounds %struct.snd_pcm_runtime, ptr %137, i32 0, i32 46
  %138 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %hw, align 8
  %or = or i32 %139, 268435456
  store i32 %or, ptr %hw, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %land.lhs.true.if.end45_crit_edge, %if.end38.if.end45_crit_edge
  %140 = ptrtoint ptr %rsubstream to i32
  call void @__asan_store4_noabort(i32 %140)
  store ptr %131, ptr %rsubstream, align 4
  br label %cleanup

error:                                            ; preds = %if.then32, %do.body20, %if.end12.error_crit_edge, %if.then10, %do.body
  %err.0 = phi i32 [ %retval.0.i5874, %if.then10 ], [ %call13, %if.end12.error_crit_edge ], [ %retval.0.i71.ph, %if.then32 ], [ %retval.0.i5874, %do.body ], [ %retval.0.i71.ph, %do.body20 ]
  %141 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %substream, align 4
  call void @snd_pcm_release_substream(ptr noundef %142)
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end45, %if.then2, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then2 ], [ %err.0, %error ], [ 0, %if.end45 ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %substream) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_attach_substream(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_kernel_ioctl(ptr noundef %substream, i32 noundef %cmd, ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %5)
  %cmp = icmp eq i32 %5, 8
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.77)
  switch i32 %cmd, label %if.end.cleanup_crit_edge [
    i32 1074020681, label %sw.bb
    i32 -1034141423, label %sw.bb5
    i32 -1066909421, label %sw.bb7
    i32 16704, label %sw.bb9
    i32 16706, label %sw.bb11
    i32 16708, label %sw.bb13
    i32 16707, label %sw.bb15
    i32 -2147204831, label %sw.bb17
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb:                                            ; preds = %if.end
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %7 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp1.not = icmp eq i32 %8, 1
  br i1 %cmp1.not, label %if.end3, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arg, align 4
  %call = tail call fastcc i32 @snd_pcm_forward(ptr noundef %substream, i32 noundef %10)
  %11 = tail call i32 @llvm.smin.i32(i32 %call, i32 0)
  br label %cleanup

sw.bb5:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call6 = tail call fastcc i32 @snd_pcm_hw_params(ptr noundef %substream, ptr noundef %arg)
  br label %cleanup

sw.bb7:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call8 = tail call fastcc i32 @snd_pcm_sw_params(ptr noundef %substream, ptr noundef %arg)
  br label %cleanup

sw.bb9:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call10 = tail call fastcc i32 @snd_pcm_prepare(ptr noundef %substream, ptr noundef null)
  br label %cleanup

sw.bb11:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call fastcc i32 @snd_pcm_action_lock_irq(ptr noundef nonnull @snd_pcm_action_start, ptr noundef %substream, i32 noundef 3) #14
  br label %cleanup

sw.bb13:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call14 = tail call fastcc i32 @snd_pcm_drain(ptr noundef %substream, ptr noundef null)
  br label %cleanup

sw.bb15:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call16 = tail call fastcc i32 @snd_pcm_drop(ptr noundef %substream)
  br label %cleanup

sw.bb17:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call18 = tail call fastcc i32 @snd_pcm_delay(ptr noundef %substream, ptr noundef %arg)
  br label %cleanup

cleanup:                                          ; preds = %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %if.end3, %sw.bb.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call18, %sw.bb17 ], [ %call16, %sw.bb15 ], [ %call14, %sw.bb13 ], [ %call.i, %sw.bb11 ], [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb5 ], [ %11, %if.end3 ], [ -77, %entry.cleanup_crit_edge ], [ -22, %sw.bb.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_forward(ptr noundef %substream, i32 noundef %frames) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %frames)
  %cmp = icmp eq i32 %frames, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %runtime.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %4 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime.i, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.78)
  switch i32 %9, label %sw.default.i [
    i32 5, label %sw.bb.i
    i32 3, label %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge
    i32 2, label %snd_pcm_stream_lock_irq.exit.if.then1_crit_edge
    i32 6, label %snd_pcm_stream_lock_irq.exit.if.then1_crit_edge40
    i32 7, label %snd_pcm_stream_lock_irq.exit.if.end4_crit_edge
    i32 4, label %sw.bb4.i
  ]

snd_pcm_stream_lock_irq.exit.if.end4_crit_edge:   ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

snd_pcm_stream_lock_irq.exit.if.then1_crit_edge40: ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then1

snd_pcm_stream_lock_irq.exit.if.then1_crit_edge:  ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then1

snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_pcm_hwsync.exit

sw.bb.i:                                          ; preds = %snd_pcm_stream_lock_irq.exit
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %11 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp.i = icmp eq i32 %12, 1
  br i1 %cmp.i, label %sw.bb.i.if.end4_crit_edge, label %sw.bb.i.do_pcm_hwsync.exit_crit_edge

sw.bb.i.do_pcm_hwsync.exit_crit_edge:             ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_pcm_hwsync.exit

sw.bb.i.if.end4_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

sw.bb4.i:                                         ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

sw.default.i:                                     ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

do_pcm_hwsync.exit:                               ; preds = %sw.bb.i.do_pcm_hwsync.exit_crit_edge, %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge
  %call.i = tail call i32 @snd_pcm_update_hw_ptr(ptr noundef %substream) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %do_pcm_hwsync.exit.if.then1_crit_edge, label %do_pcm_hwsync.exit.if.end4_crit_edge

do_pcm_hwsync.exit.if.end4_crit_edge:             ; preds = %do_pcm_hwsync.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

do_pcm_hwsync.exit.if.then1_crit_edge:            ; preds = %do_pcm_hwsync.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then1

if.then1:                                         ; preds = %do_pcm_hwsync.exit.if.then1_crit_edge, %snd_pcm_stream_lock_irq.exit.if.then1_crit_edge, %snd_pcm_stream_lock_irq.exit.if.then1_crit_edge40
  %stream.i16 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %13 = ptrtoint ptr %stream.i16 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %stream.i16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.i17 = icmp eq i32 %14, 0
  %15 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %runtime.i, align 4
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 37
  %17 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %status.i.i, align 4
  %hw_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %hw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %hw_ptr.i.i, align 4
  br i1 %cmp.i17, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #16
  %buffer_size.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 18
  %21 = ptrtoint ptr %buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buffer_size.i.i, align 4
  %add.i.i = add i32 %22, %20
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 38
  %23 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %control.i.i, align 8
  %appl_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %appl_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %appl_ptr.i.i, align 4
  %sub.i.i = sub i32 %add.i.i, %26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 33
  %27 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %boundary.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %28)
  %cmp3.not.i.i = icmp ult i32 %sub.i.i, %28
  %sub6.i.i = select i1 %cmp3.not.i.i, i32 0, i32 %28
  %29 = sub i32 0, %sub6.i.i
  %avail.0.p.i.i = select i1 %cmp.i.i, i32 %28, i32 %29
  %avail.0.i.i = add i32 %avail.0.p.i.i, %sub.i.i
  br label %snd_pcm_avail.exit

if.else.i:                                        ; preds = %if.then1
  %control.i7.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 38
  %30 = ptrtoint ptr %control.i7.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %control.i7.i, align 8
  %appl_ptr.i8.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %appl_ptr.i8.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %appl_ptr.i8.i, align 4
  %sub.i9.i = sub i32 %20, %33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i9.i)
  %cmp.i10.i = icmp slt i32 %sub.i9.i, 0
  br i1 %cmp.i10.i, label %if.then.i.i19, label %if.else.i.snd_pcm_avail.exit_crit_edge

if.else.i.snd_pcm_avail.exit_crit_edge:           ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_avail.exit

if.then.i.i19:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i11.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 33
  %34 = ptrtoint ptr %boundary.i11.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %boundary.i11.i, align 8
  %add.i12.i = add i32 %35, %sub.i9.i
  br label %snd_pcm_avail.exit

snd_pcm_avail.exit:                               ; preds = %if.then.i.i19, %if.else.i.snd_pcm_avail.exit_crit_edge, %if.then.i
  %retval.0.i20 = phi i32 [ %avail.0.i.i, %if.then.i ], [ %add.i12.i, %if.then.i.i19 ], [ %sub.i9.i, %if.else.i.snd_pcm_avail.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i20)
  %cmp.i21 = icmp slt i32 %retval.0.i20, 1
  br i1 %cmp.i21, label %snd_pcm_avail.exit.if.end4_crit_edge, label %if.end.i

snd_pcm_avail.exit.if.end4_crit_edge:             ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.end.i:                                         ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  %36 = tail call i32 @llvm.umin.i32(i32 %frames, i32 %retval.0.i20) #14
  %control.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 38
  %37 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %control.i, align 8
  %appl_ptr5.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %appl_ptr5.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %appl_ptr5.i, align 4
  %add.i = add i32 %40, %36
  %boundary.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 33
  %41 = ptrtoint ptr %boundary.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %boundary.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %42)
  %cmp6.not.i = icmp slt i32 %add.i, %42
  %sub.i = select i1 %cmp6.not.i, i32 0, i32 %42
  %appl_ptr.0.i = sub i32 %add.i, %sub.i
  %call.i22 = tail call i32 @pcm_lib_apply_appl_ptr(ptr noundef %substream, i32 noundef %appl_ptr.0.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i22)
  %cmp10.i = icmp slt i32 %call.i22, 0
  %cond.i = select i1 %cmp10.i, i32 %call.i22, i32 %36
  br label %if.end4

if.end4:                                          ; preds = %if.end.i, %snd_pcm_avail.exit.if.end4_crit_edge, %do_pcm_hwsync.exit.if.end4_crit_edge, %sw.default.i, %sw.bb4.i, %sw.bb.i.if.end4_crit_edge, %snd_pcm_stream_lock_irq.exit.if.end4_crit_edge
  %ret.0 = phi i32 [ %call.i, %do_pcm_hwsync.exit.if.end4_crit_edge ], [ %cond.i, %if.end.i ], [ 0, %snd_pcm_avail.exit.if.end4_crit_edge ], [ -77, %sw.bb.i.if.end4_crit_edge ], [ -32, %sw.bb4.i ], [ -77, %sw.default.i ], [ -86, %snd_pcm_stream_lock_irq.exit.if.end4_crit_edge ]
  %43 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %substream, align 4
  %nonatomic.i24 = getelementptr inbounds %struct.snd_pcm, ptr %44, i32 0, i32 14
  %45 = ptrtoint ptr %nonatomic.i24 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %nonatomic.i24, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool.not.i25 = icmp eq i8 %46, 0
  br i1 %tobool.not.i25, label %if.else.i.i29, label %if.then.i.i27

if.then.i.i27:                                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i26 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i26) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i29:                                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i28 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i28) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i29, %if.then.i.i27
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %ret.0)
  %cmp5 = icmp sgt i32 %ret.0, -1
  br i1 %cmp5, label %if.then6, label %snd_pcm_stream_unlock_irq.exit.cleanup_crit_edge

snd_pcm_stream_unlock_irq.exit.cleanup_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then6:                                         ; preds = %snd_pcm_stream_unlock_irq.exit
  %47 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %runtime.i, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %48, i32 0, i32 23
  %49 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %info.i, align 8
  %and.i = and i32 %50, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i31 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i31, label %if.then6.cleanup_crit_edge, label %if.then.i32

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i32:                                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  %dma_buffer_p.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %48, i32 0, i32 53
  %51 = ptrtoint ptr %dma_buffer_p.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dma_buffer_p.i, align 8
  tail call void @snd_dma_buffer_sync(ptr noundef %52, i32 noundef 1) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then.i32, %if.then6.cleanup_crit_edge, %snd_pcm_stream_unlock_irq.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %ret.0, %snd_pcm_stream_unlock_irq.exit.cleanup_crit_edge ], [ %ret.0, %if.then6.cleanup_crit_edge ], [ %ret.0, %if.then.i32 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_params(ptr noundef %substream, ptr noundef %params) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %substream, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %lor.rhs.do.end_crit_edge, label %if.end25, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 696, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end25:                                         ; preds = %lor.rhs
  %2 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %9)
  %switch = icmp ult i32 %9, 3
  %10 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %substream, align 4
  %nonatomic.i260 = getelementptr inbounds %struct.snd_pcm, ptr %11, i32 0, i32 14
  %12 = ptrtoint ptr %nonatomic.i260 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %nonatomic.i260, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i261 = icmp eq i8 %13, 0
  br i1 %switch, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %snd_pcm_stream_lock_irq.exit
  br i1 %tobool.not.i261, label %if.else.i.i259, label %if.then.i.i257

if.then.i.i257:                                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i256 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i256) #14
  br label %cleanup

if.else.i.i259:                                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i258 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i258) #14
  br label %cleanup

sw.epilog:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  br i1 %tobool.not.i261, label %if.else.i.i265, label %if.then.i.i263

if.then.i.i263:                                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i262 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i262) #14
  br label %snd_pcm_stream_unlock_irq.exit266

if.else.i.i265:                                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i264 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i264) #14
  br label %snd_pcm_stream_unlock_irq.exit266

snd_pcm_stream_unlock_irq.exit266:                ; preds = %if.else.i.i265, %if.then.i.i263
  %oss = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 24
  %14 = ptrtoint ptr %oss to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load = load i8, ptr %oss, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool27.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool27.not, label %if.then28, label %snd_pcm_stream_unlock_irq.exit266.if.end32_crit_edge

snd_pcm_stream_unlock_irq.exit266.if.end32_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit266
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.then28:                                        ; preds = %snd_pcm_stream_unlock_irq.exit266
  %mmap_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %mmap_count, i32 noundef 4) #14
  %15 = ptrtoint ptr %mmap_count to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %mmap_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool29.not = icmp eq i32 %16, 0
  br i1 %tobool29.not, label %if.then28.if.end32_crit_edge, label %if.then28.cleanup_crit_edge

if.then28.cleanup_crit_edge:                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then28.if.end32_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.end32:                                         ; preds = %if.then28.if.end32_crit_edge, %snd_pcm_stream_unlock_irq.exit266.if.end32_crit_edge
  %17 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %runtime1, align 4
  %tobool.not.i267 = icmp eq ptr %18, null
  br i1 %tobool.not.i267, label %if.end32.snd_pcm_sync_stop.exit_crit_edge, label %land.lhs.true.i

if.end32.snd_pcm_sync_stop.exit_crit_edge:        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

land.lhs.true.i:                                  ; preds = %if.end32
  %stop_operating.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %18, i32 0, i32 43
  %19 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %stop_operating.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool2.not.i = icmp eq i8 %20, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge, label %if.then.i

land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %21 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %stop_operating.i, align 4
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %22 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i, align 4
  %tobool5.not.i = icmp eq ptr %23, null
  br i1 %tobool5.not.i, label %if.then.i.if.else.i_crit_edge, label %land.lhs.true6.i

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true6.i:                                 ; preds = %if.then.i
  %sync_stop.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %23, i32 0, i32 7
  %24 = ptrtoint ptr %sync_stop.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sync_stop.i, align 4
  %tobool8.not.i = icmp eq ptr %25, null
  br i1 %tobool8.not.i, label %land.lhs.true6.i.if.else.i_crit_edge, label %if.then9.i

land.lhs.true6.i.if.else.i_crit_edge:             ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

if.then9.i:                                       ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %25(ptr noundef nonnull %substream) #14
  br label %snd_pcm_sync_stop.exit

if.else.i:                                        ; preds = %land.lhs.true6.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  %26 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %substream, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 8
  %sync_irq14.i = getelementptr inbounds %struct.snd_card, ptr %29, i32 0, i32 33
  %30 = ptrtoint ptr %sync_irq14.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sync_irq14.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp.i = icmp sgt i32 %31, 0
  br i1 %cmp.i, label %if.then15.i, label %if.else.i.snd_pcm_sync_stop.exit_crit_edge

if.else.i.snd_pcm_sync_stop.exit_crit_edge:       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

if.then15.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @synchronize_irq(i32 noundef %31) #14
  br label %snd_pcm_sync_stop.exit

snd_pcm_sync_stop.exit:                           ; preds = %if.then15.i, %if.else.i.snd_pcm_sync_stop.exit_crit_edge, %if.then9.i, %land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge, %if.end32.snd_pcm_sync_stop.exit_crit_edge
  %rmask = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 5
  %32 = ptrtoint ptr %rmask to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 -1, ptr %rmask, align 4
  %call33 = tail call i32 @snd_pcm_hw_refine(ptr noundef nonnull %substream, ptr noundef %params)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %cmp = icmp slt i32 %call33, 0
  br i1 %cmp, label %snd_pcm_sync_stop.exit._error_crit_edge, label %if.end35

snd_pcm_sync_stop.exit._error_crit_edge:          ; preds = %snd_pcm_sync_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %_error

if.end35:                                         ; preds = %snd_pcm_sync_stop.exit
  %call36 = tail call fastcc i32 @snd_pcm_hw_params_choose(ptr noundef nonnull %substream, ptr noundef %params)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %cmp37 = icmp slt i32 %call36, 0
  br i1 %cmp37, label %if.end35._error_crit_edge, label %if.end39

if.end35._error_crit_edge:                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %_error

if.end39:                                         ; preds = %if.end35
  %call40 = tail call fastcc i32 @fixup_unreferenced_params(ptr noundef nonnull %substream, ptr noundef %params)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %cmp41 = icmp slt i32 %call40, 0
  br i1 %cmp41, label %if.end39._error_crit_edge, label %if.end43

if.end39._error_crit_edge:                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %_error

if.end43:                                         ; preds = %if.end39
  %managed_buffer_alloc = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 26
  %33 = ptrtoint ptr %managed_buffer_alloc to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load44 = load i8, ptr %managed_buffer_alloc, align 4
  %34 = and i8 %bf.load44, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool47.not = icmp eq i8 %34, 0
  br i1 %tobool47.not, label %if.end43.if.end57_crit_edge, label %if.then48

if.end43.if.end57_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

if.then48:                                        ; preds = %if.end43
  %arrayidx.i.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 10
  %35 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.i.i, align 4
  %call50 = tail call i32 @snd_pcm_lib_malloc_pages(ptr noundef nonnull %substream, i32 noundef %36) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %cmp51 = icmp slt i32 %call50, 0
  br i1 %cmp51, label %if.then48._error_crit_edge, label %if.end53

if.then48._error_crit_edge:                       ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  br label %_error

if.end53:                                         ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %cmp54.not = icmp eq i32 %call50, 0
  %buffer_changed = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 54
  %37 = ptrtoint ptr %buffer_changed to i32
  call void @__asan_load1_noabort(i32 %37)
  %bf.load55 = load i8, ptr %buffer_changed, align 4
  %bf.shl = select i1 %cmp54.not, i8 0, i8 -128
  %bf.clear56 = and i8 %bf.load55, 127
  %bf.set = or i8 %bf.clear56, %bf.shl
  store i8 %bf.set, ptr %buffer_changed, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.end53, %if.end43.if.end57_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %38 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ops, align 4
  %hw_params = getelementptr inbounds %struct.snd_pcm_ops, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %hw_params to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hw_params, align 4
  %cmp58.not = icmp eq ptr %41, null
  br i1 %cmp58.not, label %if.end57.if.end68_crit_edge, label %if.then60

if.end57.if.end68_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end68

if.then60:                                        ; preds = %if.end57
  %call63 = tail call i32 %41(ptr noundef nonnull %substream, ptr noundef %params) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %cmp64 = icmp slt i32 %call63, 0
  br i1 %cmp64, label %if.then60._error_crit_edge, label %if.then60.if.end68_crit_edge

if.then60.if.end68_crit_edge:                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end68

if.then60._error_crit_edge:                       ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #16
  br label %_error

if.end68:                                         ; preds = %if.then60.if.end68_crit_edge, %if.end57.if.end68_crit_edge
  %arrayidx.i.i268 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 0
  %42 = ptrtoint ptr %arrayidx.i.i268 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.i.i268, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i.i = icmp eq i32 %43, 0
  br i1 %tobool.not.i.i, label %for.inc.i.i, label %if.end68.if.then.i.i269_crit_edge

if.end68.if.then.i.i269_crit_edge:                ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i269

if.then.i.i269:                                   ; preds = %for.inc.i.i.if.then.i.i269_crit_edge, %if.end68.if.then.i.i269_crit_edge
  %i.09.lcssa.i.i = phi i32 [ 0, %if.end68.if.then.i.i269_crit_edge ], [ 32, %for.inc.i.i.if.then.i.i269_crit_edge ]
  %.lcssa.i.i = phi i32 [ %43, %if.end68.if.then.i.i269_crit_edge ], [ %46, %for.inc.i.i.if.then.i.i269_crit_edge ]
  %44 = tail call i32 @llvm.cttz.i32(i32 %.lcssa.i.i, i1 true) #14, !range !201
  %add.i.i = or i32 %44, %i.09.lcssa.i.i
  br label %params_access.exit

for.inc.i.i:                                      ; preds = %if.end68
  %arrayidx.1.i.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 0, i32 0, i32 1
  %45 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.1.i.i = icmp eq i32 %46, 0
  br i1 %tobool.not.1.i.i, label %for.inc.i.i.params_access.exit_crit_edge, label %for.inc.i.i.if.then.i.i269_crit_edge

for.inc.i.i.if.then.i.i269_crit_edge:             ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i269

for.inc.i.i.params_access.exit_crit_edge:         ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %params_access.exit

params_access.exit:                               ; preds = %for.inc.i.i.params_access.exit_crit_edge, %if.then.i.i269
  %retval.0.i.i = phi i32 [ %add.i.i, %if.then.i.i269 ], [ 0, %for.inc.i.i.params_access.exit_crit_edge ]
  %access = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 11
  %47 = ptrtoint ptr %access to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %retval.0.i.i, ptr %access, align 8
  %arrayidx.i.i270 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1
  %48 = ptrtoint ptr %arrayidx.i.i270 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.i.i270, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.i.i271 = icmp eq i32 %49, 0
  br i1 %tobool.not.i.i271, label %for.inc.i.i278, label %params_access.exit.if.then.i.i275_crit_edge

params_access.exit.if.then.i.i275_crit_edge:      ; preds = %params_access.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i275

if.then.i.i275:                                   ; preds = %for.inc.i.i278.if.then.i.i275_crit_edge, %params_access.exit.if.then.i.i275_crit_edge
  %i.09.lcssa.i.i272 = phi i32 [ 0, %params_access.exit.if.then.i.i275_crit_edge ], [ 32, %for.inc.i.i278.if.then.i.i275_crit_edge ]
  %.lcssa.i.i273 = phi i32 [ %49, %params_access.exit.if.then.i.i275_crit_edge ], [ %52, %for.inc.i.i278.if.then.i.i275_crit_edge ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %.lcssa.i.i273, i1 true) #14, !range !201
  %add.i.i274 = or i32 %50, %i.09.lcssa.i.i272
  br label %params_format.exit

for.inc.i.i278:                                   ; preds = %params_access.exit
  %arrayidx.1.i.i276 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1, i32 0, i32 1
  %51 = ptrtoint ptr %arrayidx.1.i.i276 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.1.i.i276, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.1.i.i277 = icmp eq i32 %52, 0
  br i1 %tobool.not.1.i.i277, label %for.inc.i.i278.params_format.exit_crit_edge, label %for.inc.i.i278.if.then.i.i275_crit_edge

for.inc.i.i278.if.then.i.i275_crit_edge:          ; preds = %for.inc.i.i278
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i275

for.inc.i.i278.params_format.exit_crit_edge:      ; preds = %for.inc.i.i278
  call void @__sanitizer_cov_trace_pc() #16
  br label %params_format.exit

params_format.exit:                               ; preds = %for.inc.i.i278.params_format.exit_crit_edge, %if.then.i.i275
  %retval.0.i.i279 = phi i32 [ %add.i.i274, %if.then.i.i275 ], [ 0, %for.inc.i.i278.params_format.exit_crit_edge ]
  %format = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 12
  %53 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %retval.0.i.i279, ptr %format, align 4
  %arrayidx.i.i280 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 2
  %54 = ptrtoint ptr %arrayidx.i.i280 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.i.i280, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool.not.i.i281 = icmp eq i32 %55, 0
  br i1 %tobool.not.i.i281, label %for.inc.i.i288, label %params_format.exit.if.then.i.i285_crit_edge

params_format.exit.if.then.i.i285_crit_edge:      ; preds = %params_format.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i285

if.then.i.i285:                                   ; preds = %for.inc.i.i288.if.then.i.i285_crit_edge, %params_format.exit.if.then.i.i285_crit_edge
  %i.09.lcssa.i.i282 = phi i32 [ 0, %params_format.exit.if.then.i.i285_crit_edge ], [ 32, %for.inc.i.i288.if.then.i.i285_crit_edge ]
  %.lcssa.i.i283 = phi i32 [ %55, %params_format.exit.if.then.i.i285_crit_edge ], [ %58, %for.inc.i.i288.if.then.i.i285_crit_edge ]
  %56 = tail call i32 @llvm.cttz.i32(i32 %.lcssa.i.i283, i1 true) #14, !range !201
  %add.i.i284 = or i32 %56, %i.09.lcssa.i.i282
  br label %params_subformat.exit

for.inc.i.i288:                                   ; preds = %params_format.exit
  %arrayidx.1.i.i286 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 2, i32 0, i32 1
  %57 = ptrtoint ptr %arrayidx.1.i.i286 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.1.i.i286, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.not.1.i.i287 = icmp eq i32 %58, 0
  br i1 %tobool.not.1.i.i287, label %for.inc.i.i288.params_subformat.exit_crit_edge, label %for.inc.i.i288.if.then.i.i285_crit_edge

for.inc.i.i288.if.then.i.i285_crit_edge:          ; preds = %for.inc.i.i288
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i285

for.inc.i.i288.params_subformat.exit_crit_edge:   ; preds = %for.inc.i.i288
  call void @__sanitizer_cov_trace_pc() #16
  br label %params_subformat.exit

params_subformat.exit:                            ; preds = %for.inc.i.i288.params_subformat.exit_crit_edge, %if.then.i.i285
  %retval.0.i.i289 = phi i32 [ %add.i.i284, %if.then.i.i285 ], [ 0, %for.inc.i.i288.params_subformat.exit_crit_edge ]
  %subformat = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 13
  %59 = ptrtoint ptr %subformat to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %retval.0.i.i289, ptr %subformat, align 8
  %arrayidx.i.i290 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 2
  %60 = ptrtoint ptr %arrayidx.i.i290 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.i.i290, align 4
  %channels = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 15
  %62 = ptrtoint ptr %channels to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %channels, align 8
  %arrayidx.i.i291 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 3
  %63 = ptrtoint ptr %arrayidx.i.i291 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.i.i291, align 4
  %rate = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 14
  %65 = ptrtoint ptr %rate to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %rate, align 4
  %arrayidx.i.i292 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 5
  %66 = ptrtoint ptr %arrayidx.i.i292 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.i.i292, align 4
  %period_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 16
  %68 = ptrtoint ptr %period_size to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %67, ptr %period_size, align 4
  %arrayidx.i.i293 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 7
  %69 = ptrtoint ptr %arrayidx.i.i293 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx.i.i293, align 4
  %periods = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 17
  %71 = ptrtoint ptr %periods to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %periods, align 8
  %arrayidx.i.i294 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 9
  %72 = ptrtoint ptr %arrayidx.i.i294 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx.i.i294, align 4
  %buffer_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %74 = ptrtoint ptr %buffer_size to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %buffer_size, align 4
  %info = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 7
  %75 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %info, align 4
  %info77 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 23
  %77 = ptrtoint ptr %info77 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %info77, align 8
  %rate_num = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 9
  %78 = ptrtoint ptr %rate_num to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %rate_num, align 4
  %rate_num78 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 24
  %80 = ptrtoint ptr %rate_num78 to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %79, ptr %rate_num78, align 4
  %rate_den = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 10
  %81 = ptrtoint ptr %rate_den to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %rate_den, align 4
  %rate_den79 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 25
  %83 = ptrtoint ptr %rate_den79 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %rate_den79, align 8
  %84 = load i32, ptr %info, align 4
  %and = and i32 %84, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool81.not = icmp eq i32 %and, 0
  br i1 %tobool81.not, label %params_subformat.exit.land.end_crit_edge, label %land.rhs

params_subformat.exit.land.end_crit_edge:         ; preds = %params_subformat.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.end

land.rhs:                                         ; preds = %params_subformat.exit
  call void @__sanitizer_cov_trace_pc() #16
  %85 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %params, align 4
  %87 = trunc i32 %86 to i8
  %88 = shl i8 %87, 5
  %89 = and i8 %88, -128
  br label %land.end

land.end:                                         ; preds = %land.rhs, %params_subformat.exit.land.end_crit_edge
  %90 = phi i8 [ 0, %params_subformat.exit.land.end_crit_edge ], [ %89, %land.rhs ]
  %no_period_wakeup = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 26
  %91 = ptrtoint ptr %no_period_wakeup to i32
  call void @__asan_load1_noabort(i32 %91)
  %bf.load84 = load i8, ptr %no_period_wakeup, align 4
  %bf.clear87 = and i8 %bf.load84, 127
  %bf.set88 = or i8 %bf.clear87, %90
  store i8 %bf.set88, ptr %no_period_wakeup, align 4
  %call91 = tail call i32 @snd_pcm_format_physical_width(i32 noundef %retval.0.i.i279) #14
  %sample_bits = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 22
  %92 = ptrtoint ptr %sample_bits to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %call91, ptr %sample_bits, align 4
  %93 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %channels, align 8
  %mul = mul i32 %94, %call91
  %frame_bits = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 21
  %95 = ptrtoint ptr %frame_bits to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %mul, ptr %frame_bits, align 8
  %rem321 = and i32 %mul, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem321)
  %cmp93.not322 = icmp eq i32 %rem321, 0
  br i1 %cmp93.not322, label %land.end.while.end_crit_edge, label %land.end.while.body_crit_edge

land.end.while.body_crit_edge:                    ; preds = %land.end
  br label %while.body

land.end.while.end_crit_edge:                     ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %land.end.while.body_crit_edge
  %frames.0324 = phi i32 [ %mul96, %while.body.while.body_crit_edge ], [ 1, %land.end.while.body_crit_edge ]
  %bits.0323 = phi i32 [ %mul95, %while.body.while.body_crit_edge ], [ %mul, %land.end.while.body_crit_edge ]
  %mul95 = shl i32 %bits.0323, 1
  %mul96 = shl i32 %frames.0324, 1
  %96 = and i32 %bits.0323, 3
  %cmp93.not = icmp eq i32 %96, 0
  br i1 %cmp93.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %land.end.while.end_crit_edge
  %bits.0.lcssa = phi i32 [ %mul, %land.end.while.end_crit_edge ], [ %mul95, %while.body.while.end_crit_edge ]
  %frames.0.lcssa = phi i32 [ 1, %land.end.while.end_crit_edge ], [ %mul96, %while.body.while.end_crit_edge ]
  %div253 = lshr i32 %bits.0.lcssa, 3
  %byte_align = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 20
  %97 = ptrtoint ptr %byte_align to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %div253, ptr %byte_align, align 4
  %min_align = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 19
  %98 = ptrtoint ptr %min_align to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %frames.0.lcssa, ptr %min_align, align 8
  %tstamp_mode = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 27
  %99 = ptrtoint ptr %tstamp_mode to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 0, ptr %tstamp_mode, align 8
  %period_step = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 28
  %100 = ptrtoint ptr %period_step to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 1, ptr %period_step, align 4
  %101 = ptrtoint ptr %period_size to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %period_size, align 4
  %control = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %103 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %control, align 8
  %avail_min = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %104, i32 0, i32 4
  %105 = ptrtoint ptr %avail_min to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %102, ptr %avail_min, align 4
  %start_threshold = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 29
  %106 = ptrtoint ptr %start_threshold to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 1, ptr %start_threshold, align 8
  %107 = ptrtoint ptr %buffer_size to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %buffer_size, align 4
  %stop_threshold = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 30
  %109 = ptrtoint ptr %stop_threshold to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %108, ptr %stop_threshold, align 4
  %silence_threshold = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 31
  %110 = ptrtoint ptr %silence_threshold to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 0, ptr %silence_threshold, align 8
  %silence_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 32
  %111 = ptrtoint ptr %silence_size to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 0, ptr %silence_size, align 4
  %112 = load i32, ptr %buffer_size, align 4
  %sub = sub i32 2147483647, %112
  br label %while.cond100

while.cond100:                                    ; preds = %while.cond100.while.cond100_crit_edge, %while.end
  %storemerge = phi i32 [ %108, %while.end ], [ %mul102, %while.cond100.while.cond100_crit_edge ]
  %mul102 = shl i32 %storemerge, 1
  %cmp104.not = icmp ugt i32 %mul102, %sub
  br i1 %cmp104.not, label %while.end109, label %while.cond100.while.cond100_crit_edge

while.cond100.while.cond100_crit_edge:            ; preds = %while.cond100
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond100

while.end109:                                     ; preds = %while.cond100
  %boundary = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 33
  %113 = ptrtoint ptr %boundary to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %storemerge, ptr %boundary, align 8
  %dma_area = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 50
  %114 = ptrtoint ptr %dma_area to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %dma_area, align 4
  %tobool110.not = icmp eq ptr %115, null
  br i1 %tobool110.not, label %while.end109.if.end121_crit_edge, label %land.lhs.true

while.end109.if.end121_crit_edge:                 ; preds = %while.end109
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end121

land.lhs.true:                                    ; preds = %while.end109
  %116 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %ops, align 4
  %copy_user = getelementptr inbounds %struct.snd_pcm_ops, ptr %117, i32 0, i32 11
  %118 = ptrtoint ptr %copy_user to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %copy_user, align 4
  %tobool112.not = icmp eq ptr %119, null
  br i1 %tobool112.not, label %if.then113, label %land.lhs.true.if.end121_crit_edge

land.lhs.true.if.end121_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end121

if.then113:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %dma_bytes = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 52
  %120 = ptrtoint ptr %dma_bytes to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %dma_bytes, align 4
  %122 = ptrtoint ptr %info77 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %info77, align 8
  %and115 = and i32 %123, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and115)
  %tobool116.not = icmp eq i32 %and115, 0
  %add = add i32 %121, 4095
  %and118 = and i32 %add, -4096
  %size.0 = select i1 %tobool116.not, i32 %121, i32 %and118
  %124 = call ptr @memset(ptr %115, i32 0, i32 %size.0)
  br label %if.end121

if.end121:                                        ; preds = %if.then113, %land.lhs.true.if.end121_crit_edge, %while.end109.if.end121_crit_edge
  tail call void @snd_pcm_timer_resolution_change(ptr noundef %substream) #14
  %125 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %substream, align 4
  %nonatomic.i.i = getelementptr inbounds %struct.snd_pcm, ptr %126, i32 0, i32 14
  %127 = ptrtoint ptr %nonatomic.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %nonatomic.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %128)
  %tobool.not.i.i295 = icmp eq i8 %128, 0
  br i1 %tobool.not.i.i295, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i

if.else.i.i.i:                                    ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_stream_lock_irq.exit.i

snd_pcm_stream_lock_irq.exit.i:                   ; preds = %if.else.i.i.i, %if.then.i.i.i
  %129 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %runtime1, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %130, i32 0, i32 37
  %131 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %status.i, align 4
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %132, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %134)
  %cmp.not.i = icmp eq i32 %134, 8
  br i1 %cmp.not.i, label %snd_pcm_stream_lock_irq.exit.i.if.end.i_crit_edge, label %if.then.i297

snd_pcm_stream_lock_irq.exit.i.if.end.i_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i297:                                     ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %135 = ptrtoint ptr %132 to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 1, ptr %132, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i297, %snd_pcm_stream_lock_irq.exit.i.if.end.i_crit_edge
  %136 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %substream, align 4
  %nonatomic.i8.i = getelementptr inbounds %struct.snd_pcm, ptr %137, i32 0, i32 14
  %138 = ptrtoint ptr %nonatomic.i8.i to i32
  call void @__asan_load1_noabort(i32 %138)
  %139 = load i8, ptr %nonatomic.i8.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %139)
  %tobool.not.i9.i = icmp eq i8 %139, 0
  br i1 %tobool.not.i9.i, label %if.else.i.i13.i, label %if.then.i.i11.i

if.then.i.i11.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i10.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i10.i) #14
  br label %snd_pcm_set_state.exit

if.else.i.i13.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i12.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i12.i) #14
  br label %snd_pcm_set_state.exit

snd_pcm_set_state.exit:                           ; preds = %if.else.i.i13.i, %if.then.i.i11.i
  %latency_pm_qos_req = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 6
  %call122 = tail call zeroext i1 @cpu_latency_qos_request_active(ptr noundef %latency_pm_qos_req) #14
  br i1 %call122, label %if.then123, label %snd_pcm_set_state.exit.if.end125_crit_edge

snd_pcm_set_state.exit.if.end125_crit_edge:       ; preds = %snd_pcm_set_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end125

if.then123:                                       ; preds = %snd_pcm_set_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @cpu_latency_qos_remove_request(ptr noundef %latency_pm_qos_req) #14
  br label %if.end125

if.end125:                                        ; preds = %if.then123, %snd_pcm_set_state.exit.if.end125_crit_edge
  %140 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %rate, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %tobool.not.i298 = icmp eq i32 %141, 0
  br i1 %tobool.not.i298, label %if.end125.cleanup_crit_edge, label %period_to_usecs.exit

if.end125.cleanup_crit_edge:                      ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

period_to_usecs.exit:                             ; preds = %if.end125
  %.frozen = freeze i32 %141
  %div.i = udiv i32 750000, %.frozen
  %142 = ptrtoint ptr %period_size to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %period_size, align 4
  %mul.i = mul i32 %143, %div.i
  %144 = mul i32 %div.i, %.frozen
  %rem.i.decomposed = sub i32 750000, %144
  %mul4.i = mul i32 %rem.i.decomposed, %143
  %div6.i = udiv i32 %mul4.i, %141
  %add.i = add i32 %div6.i, %mul.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %add.i)
  %cmp127 = icmp sgt i32 %add.i, -1
  br i1 %cmp127, label %if.then129, label %period_to_usecs.exit.cleanup_crit_edge

period_to_usecs.exit.cleanup_crit_edge:           ; preds = %period_to_usecs.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then129:                                       ; preds = %period_to_usecs.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @cpu_latency_qos_add_request(ptr noundef %latency_pm_qos_req, i32 noundef %add.i) #14
  br label %cleanup

_error:                                           ; preds = %if.then60._error_crit_edge, %if.then48._error_crit_edge, %if.end39._error_crit_edge, %if.end35._error_crit_edge, %snd_pcm_sync_stop.exit._error_crit_edge
  %err.0 = phi i32 [ %call33, %snd_pcm_sync_stop.exit._error_crit_edge ], [ %call36, %if.end35._error_crit_edge ], [ %call40, %if.end39._error_crit_edge ], [ %call50, %if.then48._error_crit_edge ], [ %call63, %if.then60._error_crit_edge ]
  %145 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %substream, align 4
  %nonatomic.i.i300 = getelementptr inbounds %struct.snd_pcm, ptr %146, i32 0, i32 14
  %147 = ptrtoint ptr %nonatomic.i.i300 to i32
  call void @__asan_load1_noabort(i32 %147)
  %148 = load i8, ptr %nonatomic.i.i300, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %148)
  %tobool.not.i.i301 = icmp eq i8 %148, 0
  br i1 %tobool.not.i.i301, label %if.else.i.i.i305, label %if.then.i.i.i303

if.then.i.i.i303:                                 ; preds = %_error
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i302 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i302, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i309

if.else.i.i.i305:                                 ; preds = %_error
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i.i304 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i304) #14
  br label %snd_pcm_stream_lock_irq.exit.i309

snd_pcm_stream_lock_irq.exit.i309:                ; preds = %if.else.i.i.i305, %if.then.i.i.i303
  %149 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %runtime1, align 4
  %status.i307 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %150, i32 0, i32 37
  %151 = ptrtoint ptr %status.i307 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %status.i307, align 4
  %153 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %152, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %154)
  %cmp.not.i308 = icmp eq i32 %154, 8
  br i1 %cmp.not.i308, label %snd_pcm_stream_lock_irq.exit.i309.if.end.i313_crit_edge, label %if.then.i310

snd_pcm_stream_lock_irq.exit.i309.if.end.i313_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i309
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i313

if.then.i310:                                     ; preds = %snd_pcm_stream_lock_irq.exit.i309
  call void @__sanitizer_cov_trace_pc() #16
  %155 = ptrtoint ptr %152 to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 0, ptr %152, align 8
  br label %if.end.i313

if.end.i313:                                      ; preds = %if.then.i310, %snd_pcm_stream_lock_irq.exit.i309.if.end.i313_crit_edge
  %156 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %substream, align 4
  %nonatomic.i8.i311 = getelementptr inbounds %struct.snd_pcm, ptr %157, i32 0, i32 14
  %158 = ptrtoint ptr %nonatomic.i8.i311 to i32
  call void @__asan_load1_noabort(i32 %158)
  %159 = load i8, ptr %nonatomic.i8.i311, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %159)
  %tobool.not.i9.i312 = icmp eq i8 %159, 0
  br i1 %tobool.not.i9.i312, label %if.else.i.i13.i317, label %if.then.i.i11.i315

if.then.i.i11.i315:                               ; preds = %if.end.i313
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i10.i314 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i10.i314) #14
  br label %snd_pcm_set_state.exit318

if.else.i.i13.i317:                               ; preds = %if.end.i313
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i12.i316 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i12.i316) #14
  br label %snd_pcm_set_state.exit318

snd_pcm_set_state.exit318:                        ; preds = %if.else.i.i13.i317, %if.then.i.i11.i315
  %ops132 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %160 = ptrtoint ptr %ops132 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %ops132, align 4
  %hw_free = getelementptr inbounds %struct.snd_pcm_ops, ptr %161, i32 0, i32 4
  %162 = ptrtoint ptr %hw_free to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %hw_free, align 4
  %cmp133.not = icmp eq ptr %163, null
  br i1 %cmp133.not, label %snd_pcm_set_state.exit318.if.end139_crit_edge, label %if.then135

snd_pcm_set_state.exit318.if.end139_crit_edge:    ; preds = %snd_pcm_set_state.exit318
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end139

if.then135:                                       ; preds = %snd_pcm_set_state.exit318
  call void @__sanitizer_cov_trace_pc() #16
  %call138 = tail call i32 %163(ptr noundef nonnull %substream) #14
  br label %if.end139

if.end139:                                        ; preds = %if.then135, %snd_pcm_set_state.exit318.if.end139_crit_edge
  %managed_buffer_alloc140 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 26
  %164 = ptrtoint ptr %managed_buffer_alloc140 to i32
  call void @__asan_load1_noabort(i32 %164)
  %bf.load141 = load i8, ptr %managed_buffer_alloc140, align 4
  %165 = and i8 %bf.load141, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %165)
  %tobool145.not = icmp eq i8 %165, 0
  br i1 %tobool145.not, label %if.end139.cleanup_crit_edge, label %if.then146

if.end139.cleanup_crit_edge:                      ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then146:                                       ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #16
  %call147 = tail call i32 @snd_pcm_lib_free_pages(ptr noundef nonnull %substream) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then146, %if.end139.cleanup_crit_edge, %if.then129, %period_to_usecs.exit.cleanup_crit_edge, %if.end125.cleanup_crit_edge, %if.then28.cleanup_crit_edge, %if.else.i.i259, %if.then.i.i257, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ -77, %if.then28.cleanup_crit_edge ], [ 0, %if.then129 ], [ 0, %period_to_usecs.exit.cleanup_crit_edge ], [ %err.0, %if.then146 ], [ %err.0, %if.end139.cleanup_crit_edge ], [ -77, %if.then.i.i257 ], [ -77, %if.else.i.i259 ], [ 0, %if.end125.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_sw_params(ptr noundef %substream, ptr nocapture noundef %params) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %substream, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %lor.rhs.do.end_crit_edge, label %if.end25, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 880, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end25:                                         ; preds = %lor.rhs
  %2 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp = icmp eq i32 %9, 0
  %10 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %substream, align 4
  %nonatomic.i132 = getelementptr inbounds %struct.snd_pcm, ptr %11, i32 0, i32 14
  %12 = ptrtoint ptr %nonatomic.i132 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %nonatomic.i132, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i133 = icmp eq i8 %13, 0
  br i1 %cmp, label %if.then27, label %if.end28

if.then27:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  br i1 %tobool.not.i133, label %if.else.i.i137, label %if.then.i.i135

if.then.i.i135:                                   ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i134 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i134) #14
  br label %cleanup

if.else.i.i137:                                   ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i136 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i136) #14
  br label %cleanup

if.end28:                                         ; preds = %snd_pcm_stream_lock_irq.exit
  br i1 %tobool.not.i133, label %if.else.i.i143, label %if.then.i.i141

if.then.i.i141:                                   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i140 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i140) #14
  br label %snd_pcm_stream_unlock_irq.exit144

if.else.i.i143:                                   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i142 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i142) #14
  br label %snd_pcm_stream_unlock_irq.exit144

snd_pcm_stream_unlock_irq.exit144:                ; preds = %if.else.i.i143, %if.then.i.i141
  %14 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %params, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %16 = icmp ugt i32 %15, 1
  br i1 %16, label %snd_pcm_stream_unlock_irq.exit144.cleanup_crit_edge, label %if.end33

snd_pcm_stream_unlock_irq.exit144.cleanup_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit144
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end33:                                         ; preds = %snd_pcm_stream_unlock_irq.exit144
  %proto = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 10
  %17 = ptrtoint ptr %proto to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %proto, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 131083, i32 %18)
  %cmp34 = icmp ugt i32 %18, 131083
  br i1 %cmp34, label %land.lhs.true, label %if.end33.if.end37_crit_edge

if.end33.if.end37_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

land.lhs.true:                                    ; preds = %if.end33
  %tstamp_type = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 11
  %19 = ptrtoint ptr %tstamp_type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %tstamp_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %20)
  %cmp35 = icmp ugt i32 %20, 2
  br i1 %cmp35, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end37_crit_edge

land.lhs.true.if.end37_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end37:                                         ; preds = %land.lhs.true.if.end37_crit_edge, %if.end33.if.end37_crit_edge
  %avail_min = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 3
  %21 = ptrtoint ptr %avail_min to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %avail_min, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp38 = icmp eq i32 %22, 0
  br i1 %cmp38, label %if.end37.cleanup_crit_edge, label %if.end40

if.end37.cleanup_crit_edge:                       ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end40:                                         ; preds = %if.end37
  %silence_size = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 8
  %23 = ptrtoint ptr %silence_size to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %silence_size, align 4
  %boundary = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 33
  %25 = ptrtoint ptr %boundary to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %boundary, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %26)
  %cmp41.not = icmp ult i32 %24, %26
  %silence_threshold47 = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 7
  %27 = ptrtoint ptr %silence_threshold47 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %silence_threshold47, align 4
  br i1 %cmp41.not, label %if.else, label %if.then42

if.then42:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp43.not = icmp eq i32 %28, 0
  br i1 %cmp43.not, label %if.then42.if.end55_crit_edge, label %if.then42.cleanup_crit_edge

if.then42.cleanup_crit_edge:                      ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then42.if.end55_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end55

if.else:                                          ; preds = %if.end40
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %28)
  %cmp48 = icmp ugt i32 %24, %28
  br i1 %cmp48, label %if.else.cleanup_crit_edge, label %if.end50

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end50:                                         ; preds = %if.else
  %buffer_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %29 = ptrtoint ptr %buffer_size to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %buffer_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %30)
  %cmp52 = icmp ugt i32 %28, %30
  br i1 %cmp52, label %if.end50.cleanup_crit_edge, label %if.end50.if.end55_crit_edge

if.end50.if.end55_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end55

if.end50.cleanup_crit_edge:                       ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end55:                                         ; preds = %if.end50.if.end55_crit_edge, %if.then42.if.end55_crit_edge
  %31 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %substream, align 4
  %nonatomic.i145 = getelementptr inbounds %struct.snd_pcm, ptr %32, i32 0, i32 14
  %33 = ptrtoint ptr %nonatomic.i145 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %nonatomic.i145, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i146 = icmp eq i8 %34, 0
  br i1 %tobool.not.i146, label %if.else.i.i150, label %if.then.i.i148

if.then.i.i148:                                   ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i147 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i147, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit151

if.else.i.i150:                                   ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i149 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i149) #14
  br label %snd_pcm_stream_lock_irq.exit151

snd_pcm_stream_lock_irq.exit151:                  ; preds = %if.else.i.i150, %if.then.i.i148
  %35 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %params, align 4
  %tstamp_mode57 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 27
  %37 = ptrtoint ptr %tstamp_mode57 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %tstamp_mode57, align 8
  %38 = ptrtoint ptr %proto to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %proto, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 131083, i32 %39)
  %cmp59 = icmp ugt i32 %39, 131083
  br i1 %cmp59, label %if.then60, label %snd_pcm_stream_lock_irq.exit151.if.end63_crit_edge

snd_pcm_stream_lock_irq.exit151.if.end63_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit151
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

if.then60:                                        ; preds = %snd_pcm_stream_lock_irq.exit151
  call void @__sanitizer_cov_trace_pc() #16
  %tstamp_type61 = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 11
  %40 = ptrtoint ptr %tstamp_type61 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %tstamp_type61, align 4
  %tstamp_type62 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 49
  %42 = ptrtoint ptr %tstamp_type62 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %tstamp_type62, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.then60, %snd_pcm_stream_lock_irq.exit151.if.end63_crit_edge
  %period_step = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 1
  %43 = ptrtoint ptr %period_step to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %period_step, align 4
  %period_step64 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 28
  %45 = ptrtoint ptr %period_step64 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %period_step64, align 4
  %46 = ptrtoint ptr %avail_min to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %avail_min, align 4
  %control = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %48 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %control, align 8
  %avail_min66 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %49, i32 0, i32 4
  %50 = ptrtoint ptr %avail_min66 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %47, ptr %avail_min66, align 4
  %start_threshold = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 5
  %51 = ptrtoint ptr %start_threshold to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %start_threshold, align 4
  %start_threshold67 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 29
  %53 = ptrtoint ptr %start_threshold67 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %start_threshold67, align 8
  %stop_threshold = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 6
  %54 = ptrtoint ptr %stop_threshold to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %stop_threshold, align 4
  %stop_threshold68 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 30
  %56 = ptrtoint ptr %stop_threshold68 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %stop_threshold68, align 4
  %silence_threshold69 = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 7
  %57 = ptrtoint ptr %silence_threshold69 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %silence_threshold69, align 4
  %silence_threshold70 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 31
  %59 = ptrtoint ptr %silence_threshold70 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %silence_threshold70, align 8
  %60 = ptrtoint ptr %silence_size to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %silence_size, align 4
  %silence_size72 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 32
  %62 = ptrtoint ptr %silence_size72 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %silence_size72, align 4
  %63 = ptrtoint ptr %boundary to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %boundary, align 8
  %boundary74 = getelementptr inbounds %struct.snd_pcm_sw_params, ptr %params, i32 0, i32 9
  %65 = ptrtoint ptr %boundary74 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %boundary74, align 4
  %66 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %runtime1, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %67, i32 0, i32 37
  %68 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %status.i, align 4
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 8
  %72 = zext i32 %71 to i64
  call void @__sanitizer_cov_trace_switch(i64 %72, ptr @__sancov_gen_cov_switch_values.79)
  switch i32 %71, label %if.end63.if.end84_crit_edge [
    i32 3, label %if.end63.if.then76_crit_edge
    i32 5, label %snd_pcm_running.exit
  ]

if.end63.if.then76_crit_edge:                     ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then76

if.end63.if.end84_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

snd_pcm_running.exit:                             ; preds = %if.end63
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %73 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %cmp5.i.not = icmp eq i32 %74, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.if.then76_crit_edge, label %snd_pcm_running.exit.if.end84_crit_edge

snd_pcm_running.exit.if.end84_crit_edge:          ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

snd_pcm_running.exit.if.then76_crit_edge:         ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then76

if.then76:                                        ; preds = %snd_pcm_running.exit.if.then76_crit_edge, %if.end63.if.then76_crit_edge
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %75 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %cmp77 = icmp eq i32 %76, 0
  br i1 %cmp77, label %land.lhs.true78, label %if.then76.if.end82_crit_edge

if.then76.if.end82_crit_edge:                     ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end82

land.lhs.true78:                                  ; preds = %if.then76
  %77 = ptrtoint ptr %silence_size72 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %silence_size72, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %cmp80.not = icmp eq i32 %78, 0
  br i1 %cmp80.not, label %land.lhs.true78.if.end82_crit_edge, label %if.then81

land.lhs.true78.if.end82_crit_edge:               ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end82

if.then81:                                        ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @snd_pcm_playback_silence(ptr noundef nonnull %substream, i32 noundef -1) #14
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %land.lhs.true78.if.end82_crit_edge, %if.then76.if.end82_crit_edge
  %call83 = tail call i32 @snd_pcm_update_state(ptr noundef nonnull %substream, ptr noundef nonnull %1) #14
  br label %if.end84

if.end84:                                         ; preds = %if.end82, %snd_pcm_running.exit.if.end84_crit_edge, %if.end63.if.end84_crit_edge
  %err.0 = phi i32 [ %call83, %if.end82 ], [ 0, %snd_pcm_running.exit.if.end84_crit_edge ], [ 0, %if.end63.if.end84_crit_edge ]
  %79 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %substream, align 4
  %nonatomic.i152 = getelementptr inbounds %struct.snd_pcm, ptr %80, i32 0, i32 14
  %81 = ptrtoint ptr %nonatomic.i152 to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %nonatomic.i152, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %82)
  %tobool.not.i153 = icmp eq i8 %82, 0
  br i1 %tobool.not.i153, label %if.else.i.i157, label %if.then.i.i155

if.then.i.i155:                                   ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i154 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i154) #14
  br label %cleanup

if.else.i.i157:                                   ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i156 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i156) #14
  br label %cleanup

cleanup:                                          ; preds = %if.else.i.i157, %if.then.i.i155, %if.end50.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then42.cleanup_crit_edge, %if.end37.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %snd_pcm_stream_unlock_irq.exit144.cleanup_crit_edge, %if.else.i.i137, %if.then.i.i135, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ -22, %snd_pcm_stream_unlock_irq.exit144.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ -22, %if.end37.cleanup_crit_edge ], [ -22, %if.then42.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ -22, %if.end50.cleanup_crit_edge ], [ -77, %if.then.i.i135 ], [ -77, %if.else.i.i137 ], [ %err.0, %if.then.i.i155 ], [ %err.0, %if.else.i.i157 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_prepare(ptr noundef %substream, ptr noundef readonly %file) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %file, null
  %f_flags1 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %f_flags2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 21
  %f_flags.0.in = select i1 %tobool.not, ptr %f_flags2, ptr %f_flags1
  %0 = ptrtoint ptr %f_flags.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %f_flags.0 = load i32, ptr %f_flags.0.in, align 4
  %1 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 14
  %3 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %5 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %runtime, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %6, i32 0, i32 37
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %status, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 8
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.80)
  switch i32 %10, label %snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge [
    i32 6, label %sw.bb
    i32 7, label %snd_pcm_stream_lock_irq.exit.sw.bb3_crit_edge
  ]

snd_pcm_stream_lock_irq.exit.sw.bb3_crit_edge:    ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb3

snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb:                                            ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @snd_pcm_pause(ptr noundef %substream)
  br label %sw.bb3

sw.bb3:                                           ; preds = %sw.bb, %snd_pcm_stream_lock_irq.exit.sw.bb3_crit_edge
  %call4 = tail call i32 @snd_pcm_stop(ptr noundef %substream, i32 noundef 1)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge
  %12 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %substream, align 4
  %nonatomic.i13 = getelementptr inbounds %struct.snd_pcm, ptr %13, i32 0, i32 14
  %14 = ptrtoint ptr %nonatomic.i13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %nonatomic.i13, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i14 = icmp eq i8 %15, 0
  br i1 %tobool.not.i14, label %if.else.i.i18, label %if.then.i.i16

if.then.i.i16:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i15 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i15) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i18:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i17 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i17) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i18, %if.then.i.i16
  tail call void @down_read(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  %group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %16 = ptrtoint ptr %group.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %group.i.i, align 4
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %cmp.i.not.i = icmp eq ptr %17, %self_group.i.i
  br i1 %cmp.i.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %snd_pcm_stream_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_prepare, ptr noundef %substream, i32 noundef %f_flags.0, i1 noundef zeroext false) #14
  br label %snd_pcm_action_nonatomic.exit

if.else.i:                                        ; preds = %snd_pcm_stream_unlock_irq.exit
  %18 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %runtime, align 4
  %status.i23 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %19, i32 0, i32 37
  %20 = ptrtoint ptr %status.i23 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %status.i23, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 8
  %24 = zext i32 %23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.81)
  switch i32 %23, label %if.else.i.if.end.i.i_crit_edge [
    i32 0, label %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge
    i32 8, label %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge26
    i32 3, label %cleanup.fold.split.i
    i32 5, label %snd_pcm_running.exit.i
  ]

if.else.i.snd_pcm_action_nonatomic.exit_crit_edge26: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.else.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.else.i.if.end.i.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

snd_pcm_running.exit.i:                           ; preds = %if.else.i
  %stream.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %25 = ptrtoint ptr %stream.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %stream.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp5.i.not.i = icmp eq i32 %26, 0
  br i1 %cmp5.i.not.i, label %snd_pcm_running.exit.i.snd_pcm_action_nonatomic.exit_crit_edge, label %snd_pcm_running.exit.i.if.end.i.i_crit_edge

snd_pcm_running.exit.i.if.end.i.i_crit_edge:      ; preds = %snd_pcm_running.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

snd_pcm_running.exit.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %snd_pcm_running.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

cleanup.fold.split.i:                             ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.end.i.i:                                       ; preds = %snd_pcm_running.exit.i.if.end.i.i_crit_edge, %if.else.i.if.end.i.i_crit_edge
  %27 = ptrtoint ptr %f_flags2 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %f_flags.0, ptr %f_flags2, align 4
  %call1.i.i = tail call i32 @snd_pcm_do_prepare(ptr noundef %substream, i32 noundef %f_flags.0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %cmp2.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i.snd_pcm_action_nonatomic.exit_crit_edge

if.end.i.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.then3.i.i:                                     ; preds = %if.end.i.i
  %28 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %runtime, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %29, i32 0, i32 37
  %30 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %status.i, align 4
  %hw_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %hw_ptr.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %hw_ptr.i, align 4
  %control.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %29, i32 0, i32 38
  %34 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %control.i, align 8
  %appl_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %appl_ptr.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %33, ptr %appl_ptr.i, align 4
  %37 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %substream, align 4
  %nonatomic.i.i.i = getelementptr inbounds %struct.snd_pcm, ptr %38, i32 0, i32 14
  %39 = ptrtoint ptr %nonatomic.i.i.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %nonatomic.i.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool.not.i.i.i = icmp eq i8 %40, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i.i

if.else.i.i.i.i:                                  ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_stream_lock_irq.exit.i.i

snd_pcm_stream_lock_irq.exit.i.i:                 ; preds = %if.else.i.i.i.i, %if.then.i.i.i.i
  %41 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %runtime, align 4
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %42, i32 0, i32 37
  %43 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %status.i.i, align 4
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %46)
  %cmp.not.i.i = icmp eq i32 %46, 8
  br i1 %cmp.not.i.i, label %snd_pcm_stream_lock_irq.exit.i.i.if.end.i.i21_crit_edge, label %if.then.i.i20

snd_pcm_stream_lock_irq.exit.i.i.if.end.i.i21_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i21

if.then.i.i20:                                    ; preds = %snd_pcm_stream_lock_irq.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %47 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 2, ptr %44, align 8
  br label %if.end.i.i21

if.end.i.i21:                                     ; preds = %if.then.i.i20, %snd_pcm_stream_lock_irq.exit.i.i.if.end.i.i21_crit_edge
  %48 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %substream, align 4
  %nonatomic.i8.i.i = getelementptr inbounds %struct.snd_pcm, ptr %49, i32 0, i32 14
  %50 = ptrtoint ptr %nonatomic.i8.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %nonatomic.i8.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool.not.i9.i.i = icmp eq i8 %51, 0
  br i1 %tobool.not.i9.i.i, label %if.else.i.i13.i.i, label %if.then.i.i11.i.i

if.then.i.i11.i.i:                                ; preds = %if.end.i.i21
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i10.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i10.i.i) #14
  br label %snd_pcm_action_nonatomic.exit

if.else.i.i13.i.i:                                ; preds = %if.end.i.i21
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_action_nonatomic.exit

snd_pcm_action_nonatomic.exit:                    ; preds = %if.else.i.i13.i.i, %if.then.i.i11.i.i, %if.end.i.i.snd_pcm_action_nonatomic.exit_crit_edge, %cleanup.fold.split.i, %snd_pcm_running.exit.i.snd_pcm_action_nonatomic.exit_crit_edge, %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge, %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge26, %if.then.i
  %res.0.i = phi i32 [ %call1.i, %if.then.i ], [ 0, %if.then.i.i11.i.i ], [ 0, %if.else.i.i13.i.i ], [ %call1.i.i, %if.end.i.i.snd_pcm_action_nonatomic.exit_crit_edge ], [ -16, %cleanup.fold.split.i ], [ -16, %snd_pcm_running.exit.i.snd_pcm_action_nonatomic.exit_crit_edge ], [ -77, %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge ], [ -77, %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge26 ]
  tail call void @up_read(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  ret i32 %res.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_drain(ptr noundef %substream, ptr noundef readonly %file) #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #14
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %2 = call ptr @memset(ptr %wait, i32 255, i32 20)
  %3 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %substream, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %7 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %runtime2, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %8, i32 0, i32 37
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %status, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp = icmp eq i32 %12, 0
  br i1 %cmp, label %entry.cleanup193_crit_edge, label %if.end

entry.cleanup193_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup193

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq ptr %file, null
  %f_flags = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %f_flags7 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 21
  %tobool22.not.in.in.in = select i1 %tobool.not, ptr %f_flags7, ptr %f_flags
  %13 = ptrtoint ptr %tobool22.not.in.in.in to i32
  call void @__asan_load4_noabort(i32 %13)
  %tobool22.not.in.in = load i32, ptr %tobool22.not.in.in.in, align 4
  %tobool22.not.in = and i32 %tobool22.not.in.in, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tobool22.not.in)
  %tobool22.not = icmp ne i32 %tobool22.not.in, 0
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %4, i32 0, i32 14
  %14 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i = icmp eq i8 %15, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %16 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %status, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %19)
  %cmp15 = icmp eq i32 %19, 6
  br i1 %cmp15, label %if.then16, label %snd_pcm_stream_lock_irq.exit.if.end17_crit_edge

snd_pcm_stream_lock_irq.exit.if.end17_crit_edge:  ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then16:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @snd_pcm_pause(ptr noundef %substream)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %snd_pcm_stream_lock_irq.exit.if.end17_crit_edge
  %call.i = tail call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream) #14
  %tobool.not.i248 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i248, label %if.else.i250, label %if.then.i249

if.then.i249:                                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_drain_init, ptr noundef %substream, i32 noundef 0, i1 noundef zeroext true) #14
  br label %snd_pcm_action.exit

if.else.i250:                                     ; preds = %if.end17
  %20 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %runtime2, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 37
  %22 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %status.i, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 8
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.82)
  switch i32 %25, label %if.end.i.i [
    i32 0, label %if.else.i250.snd_pcm_action.exit_crit_edge
    i32 8, label %if.else.i250.snd_pcm_action.exit_crit_edge315
    i32 7, label %if.else.i250.snd_pcm_action.exit_crit_edge316
  ]

if.else.i250.snd_pcm_action.exit_crit_edge316:    ; preds = %if.else.i250
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.else.i250.snd_pcm_action.exit_crit_edge315:    ; preds = %if.else.i250
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.else.i250.snd_pcm_action.exit_crit_edge:       ; preds = %if.else.i250
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.end.i.i:                                       ; preds = %if.else.i250
  call void @__sanitizer_cov_trace_pc() #16
  %27 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %substream, ptr %21, align 8
  %call1.i.i = tail call i32 @snd_pcm_do_drain_init(ptr noundef %substream, i32 noundef 0) #14
  br label %snd_pcm_action.exit

snd_pcm_action.exit:                              ; preds = %if.end.i.i, %if.else.i250.snd_pcm_action.exit_crit_edge, %if.else.i250.snd_pcm_action.exit_crit_edge315, %if.else.i250.snd_pcm_action.exit_crit_edge316, %if.then.i249
  %res.0.i = phi i32 [ %call1.i, %if.then.i249 ], [ %call1.i.i, %if.end.i.i ], [ -77, %if.else.i250.snd_pcm_action.exit_crit_edge ], [ -77, %if.else.i250.snd_pcm_action.exit_crit_edge315 ], [ -77, %if.else.i250.snd_pcm_action.exit_crit_edge316 ]
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %call.i, ptr noundef %substream) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i)
  %cmp19 = icmp slt i32 %res.0.i, 0
  %brmerge = select i1 %cmp19, i1 true, i1 %tobool22.not
  %call18.mux = select i1 %cmp19, i32 %res.0.i, i32 -11
  br i1 %brmerge, label %snd_pcm_action.exit.unlock_crit_edge, label %for.cond.preheader

snd_pcm_action.exit.unlock_crit_edge:             ; preds = %snd_pcm_action.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

for.cond.preheader:                               ; preds = %snd_pcm_action.exit
  %group31 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %mutex.i.i258 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  %self_group.i260 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %shutdown = getelementptr inbounds %struct.snd_card, ptr %6, i32 0, i32 25
  br label %for.cond

for.cond:                                         ; preds = %if.end163.for.cond_crit_edge, %for.cond.preheader
  %28 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %stack.i.i, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %36 = and i32 %35, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i253 = icmp eq i32 %36, 0
  br i1 %tobool.not.i253, label %signal_pending.exit, label %for.cond.unlock_crit_edge, !prof !195

for.cond.unlock_crit_edge:                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

signal_pending.exit:                              ; preds = %for.cond
  %37 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %33, align 4
  %and1.i.i.i.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool27.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool27.not, label %if.end29, label %signal_pending.exit.unlock_crit_edge

signal_pending.exit.unlock_crit_edge:             ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end29:                                         ; preds = %signal_pending.exit
  %call30 = call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream)
  %39 = ptrtoint ptr %group31 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %group31, align 4
  %substreams = getelementptr inbounds %struct.snd_pcm_group, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %substreams to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn292 = load ptr, ptr %substreams, align 4
  %cmp35.not293 = icmp eq ptr %.pn292, %substreams
  br i1 %cmp35.not293, label %if.end29.for.end.thread_crit_edge, label %if.end29.for.body_crit_edge

if.end29.for.body_crit_edge:                      ; preds = %if.end29
  br label %for.body

if.end29.for.end.thread_crit_edge:                ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread

for.end.thread:                                   ; preds = %for.inc.for.end.thread_crit_edge, %if.end29.for.end.thread_crit_edge
  call fastcc void @snd_pcm_group_unref(ptr noundef %call30, ptr noundef %substream)
  br label %unlock

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end29.for.body_crit_edge
  %.pn294 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn292, %if.end29.for.body_crit_edge ]
  %stream = getelementptr i8, ptr %.pn294, i32 -92
  %42 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp36.not = icmp eq i32 %43, 0
  br i1 %cmp36.not, label %if.end38, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end38:                                         ; preds = %for.body
  %runtime39 = getelementptr i8, ptr %.pn294, i32 -20
  %44 = ptrtoint ptr %runtime39 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %runtime39, align 4
  %status40 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 37
  %46 = ptrtoint ptr %status40 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %status40, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %49)
  %cmp42 = icmp eq i32 %49, 5
  br i1 %cmp42, label %for.end, label %if.end38.for.inc_crit_edge

if.end38.for.inc_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

for.inc:                                          ; preds = %if.end38.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %50 = ptrtoint ptr %.pn294 to i32
  call void @__asan_load4_noabort(i32 %50)
  %.pn = load ptr, ptr %.pn294, align 4
  %cmp35.not = icmp eq ptr %.pn, %substreams
  br i1 %cmp35.not, label %for.inc.for.end.thread_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end.thread_crit_edge:                 ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread

for.end:                                          ; preds = %if.end38
  call fastcc void @snd_pcm_group_unref(ptr noundef %call30, ptr noundef %substream)
  %tobool50.not = icmp eq ptr %45, null
  br i1 %tobool50.not, label %for.end.unlock_crit_edge, label %if.end52

for.end.unlock_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end52:                                         ; preds = %for.end
  %51 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task, align 8
  %53 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %wait, align 4
  %54 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %52, ptr %0, align 4
  %55 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @default_wake_function, ptr %1, align 4
  br label %__here

__here:                                           ; preds = %if.end52
  %56 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %57, i32 0, i32 212
  %58 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 ptrtoint (ptr blockaddress(@snd_pcm_drain, %__here) to i32), ptr %task_state_change, align 4
  %59 = load ptr, ptr %task, align 8
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile i32 1, ptr %59, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !202
  %sleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 40
  call void @add_wait_queue(ptr noundef %sleep, ptr noundef nonnull %wait) #14
  %61 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %substream, align 4
  %nonatomic.i256 = getelementptr inbounds %struct.snd_pcm, ptr %62, i32 0, i32 14
  %63 = ptrtoint ptr %nonatomic.i256 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %nonatomic.i256, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %tobool.not.i257 = icmp eq i8 %64, 0
  br i1 %tobool.not.i257, label %if.else.i.i261, label %if.then.i.i259

if.then.i.i259:                                   ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #16
  call void @mutex_unlock(ptr noundef %mutex.i.i258) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i261:                                   ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #16
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i260) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i261, %if.then.i.i259
  %no_period_wakeup = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 26
  %65 = ptrtoint ptr %no_period_wakeup to i32
  call void @__asan_load1_noabort(i32 %65)
  %bf.load = load i8, ptr %no_period_wakeup, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool121.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool121.not, label %if.else123, label %snd_pcm_stream_unlock_irq.exit.if.end132_crit_edge

snd_pcm_stream_unlock_irq.exit.if.end132_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end132

if.else123:                                       ; preds = %snd_pcm_stream_unlock_irq.exit
  %rate = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 14
  %66 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %rate, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool124.not = icmp eq i32 %67, 0
  br i1 %tobool124.not, label %if.else123.if.else.i_crit_edge, label %if.then125

if.else123.if.else.i_crit_edge:                   ; preds = %if.else123
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

if.then125:                                       ; preds = %if.else123
  call void @__sanitizer_cov_trace_pc() #16
  %period_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 16
  %68 = ptrtoint ptr %period_size to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %period_size, align 4
  %mul = shl i32 %69, 1
  %div = udiv i32 %mul, %67
  %70 = call i32 @llvm.smax.i32(i32 %div, i32 10)
  br label %if.else.i

if.else.i:                                        ; preds = %if.then125, %if.else123.if.else.i_crit_edge
  %tout.0 = phi i32 [ %70, %if.then125 ], [ 10, %if.else123.if.else.i_crit_edge ]
  %mul130 = mul i32 %tout.0, 1000
  %call2.i = call i32 @__msecs_to_jiffies(i32 noundef %mul130) #14
  br label %if.end132

if.end132:                                        ; preds = %if.else.i, %snd_pcm_stream_unlock_irq.exit.if.end132_crit_edge
  %tout.1 = phi i32 [ 2147483647, %snd_pcm_stream_unlock_irq.exit.if.end132_crit_edge ], [ %call2.i, %if.else.i ]
  %call133 = call i32 @schedule_timeout(i32 noundef %tout.1) #14
  %71 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %substream, align 4
  %nonatomic.i262 = getelementptr inbounds %struct.snd_pcm, ptr %72, i32 0, i32 14
  %73 = ptrtoint ptr %nonatomic.i262 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %nonatomic.i262, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool.not.i263 = icmp eq i8 %74, 0
  br i1 %tobool.not.i263, label %if.else.i.i267, label %if.then.i.i265

if.then.i.i265:                                   ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #16
  call void @mutex_lock_nested(ptr noundef %mutex.i.i258, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit268

if.else.i.i267:                                   ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #16
  call void @_raw_spin_lock_irq(ptr noundef %self_group.i260) #14
  br label %snd_pcm_stream_lock_irq.exit268

snd_pcm_stream_lock_irq.exit268:                  ; preds = %if.else.i.i267, %if.then.i.i265
  %call134 = call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream)
  %75 = ptrtoint ptr %group31 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %group31, align 4
  %substreams137 = getelementptr inbounds %struct.snd_pcm_group, ptr %76, i32 0, i32 2
  br label %for.cond141

for.cond141:                                      ; preds = %for.body148.for.cond141_crit_edge, %snd_pcm_stream_lock_irq.exit268
  %.pn245.in = phi ptr [ %substreams137, %snd_pcm_stream_lock_irq.exit268 ], [ %.pn245, %for.body148.for.cond141_crit_edge ]
  %77 = ptrtoint ptr %.pn245.in to i32
  call void @__asan_load4_noabort(i32 %77)
  %.pn245 = load ptr, ptr %.pn245.in, align 4
  %cmp145.not = icmp eq ptr %.pn245, %substreams137
  br i1 %cmp145.not, label %for.cond141.for.end160_crit_edge, label %for.body148

for.cond141.for.end160_crit_edge:                 ; preds = %for.cond141
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end160

for.body148:                                      ; preds = %for.cond141
  %runtime149 = getelementptr i8, ptr %.pn245, i32 -20
  %78 = ptrtoint ptr %runtime149 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %runtime149, align 4
  %cmp150 = icmp eq ptr %79, %45
  br i1 %cmp150, label %if.then151, label %for.body148.for.cond141_crit_edge

for.body148.for.cond141_crit_edge:                ; preds = %for.body148
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond141

if.then151:                                       ; preds = %for.body148
  call void @__sanitizer_cov_trace_pc() #16
  call void @remove_wait_queue(ptr noundef %sleep, ptr noundef nonnull %wait) #14
  br label %for.end160

for.end160:                                       ; preds = %if.then151, %for.cond141.for.end160_crit_edge
  call fastcc void @snd_pcm_group_unref(ptr noundef %call134, ptr noundef %substream)
  %80 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %shutdown, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool161.not = icmp eq i32 %81, 0
  br i1 %tobool161.not, label %if.end163, label %for.end160.unlock_crit_edge

for.end160.unlock_crit_edge:                      ; preds = %for.end160
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end163:                                        ; preds = %for.end160
  %cmp164 = icmp eq i32 %call133, 0
  br i1 %cmp164, label %if.then165, label %if.end163.for.cond_crit_edge

if.end163.for.cond_crit_edge:                     ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond

if.then165:                                       ; preds = %if.end163
  %82 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %runtime2, align 4
  %status167 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %83, i32 0, i32 37
  %84 = ptrtoint ptr %status167 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %status167, align 4
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %85, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %87)
  %cmp169 = icmp eq i32 %87, 7
  br i1 %cmp169, label %if.then165.unlock_crit_edge, label %do.body172

if.then165.unlock_crit_edge:                      ; preds = %if.then165
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

do.body172:                                       ; preds = %if.then165
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_pcm_drain.__UNIQUE_ID_ddebug276, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_pcm_drain, %if.then182)) #14
          to label %do.end187 [label %if.then182], !srcloc !200

if.then182:                                       ; preds = %do.body172
  call void @__sanitizer_cov_trace_pc() #16
  %88 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %substream, align 4
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %89, align 8
  %dev = getelementptr inbounds %struct.snd_card, ptr %91, i32 0, i32 27
  %92 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %dev, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_pcm_drain.__UNIQUE_ID_ddebug276, ptr noundef %93, ptr noundef nonnull @.str.65) #14
  br label %do.end187

do.end187:                                        ; preds = %if.then182, %do.body172
  %call188 = call i32 @snd_pcm_stop(ptr noundef %substream, i32 noundef 1)
  br label %unlock

unlock:                                           ; preds = %do.end187, %if.then165.unlock_crit_edge, %for.end160.unlock_crit_edge, %for.end.unlock_crit_edge, %for.end.thread, %signal_pending.exit.unlock_crit_edge, %for.cond.unlock_crit_edge, %snd_pcm_action.exit.unlock_crit_edge
  %result.3 = phi i32 [ %call18.mux, %snd_pcm_action.exit.unlock_crit_edge ], [ %res.0.i, %for.end.thread ], [ -86, %if.then165.unlock_crit_edge ], [ -5, %do.end187 ], [ -512, %for.cond.unlock_crit_edge ], [ -512, %signal_pending.exit.unlock_crit_edge ], [ %res.0.i, %for.end.unlock_crit_edge ], [ -19, %for.end160.unlock_crit_edge ]
  %94 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %substream, align 4
  %nonatomic.i269 = getelementptr inbounds %struct.snd_pcm, ptr %95, i32 0, i32 14
  %96 = ptrtoint ptr %nonatomic.i269 to i32
  call void @__asan_load1_noabort(i32 %96)
  %97 = load i8, ptr %nonatomic.i269, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %97)
  %tobool.not.i270 = icmp eq i8 %97, 0
  br i1 %tobool.not.i270, label %if.else.i.i274, label %if.then.i.i272

if.then.i.i272:                                   ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i271 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_unlock(ptr noundef %mutex.i.i271) #14
  br label %cleanup193

if.else.i.i274:                                   ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i273 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i273) #14
  br label %cleanup193

cleanup193:                                       ; preds = %if.else.i.i274, %if.then.i.i272, %entry.cleanup193_crit_edge
  %retval.0 = phi i32 [ -77, %entry.cleanup193_crit_edge ], [ %result.3, %if.then.i.i272 ], [ %result.3, %if.else.i.i274 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_delay(ptr noundef %substream, ptr noundef writeonly %delay) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %runtime.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %4 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime.i, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.83)
  switch i32 %9, label %sw.default.i [
    i32 5, label %sw.bb.i
    i32 3, label %snd_pcm_stream_lock_irq.exit.sw.bb1.i_crit_edge
    i32 2, label %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge
    i32 6, label %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge28
    i32 7, label %snd_pcm_stream_lock_irq.exit.if.end_crit_edge
    i32 4, label %sw.bb4.i
  ]

snd_pcm_stream_lock_irq.exit.if.end_crit_edge:    ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge28: ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_pcm_hwsync.exit

snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_pcm_hwsync.exit

snd_pcm_stream_lock_irq.exit.sw.bb1.i_crit_edge:  ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb1.i

sw.bb.i:                                          ; preds = %snd_pcm_stream_lock_irq.exit
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %11 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp.i = icmp eq i32 %12, 1
  br i1 %cmp.i, label %sw.bb.i.if.end_crit_edge, label %sw.bb.i.sw.bb1.i_crit_edge

sw.bb.i.sw.bb1.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb1.i

sw.bb.i.if.end_crit_edge:                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

sw.bb1.i:                                         ; preds = %sw.bb.i.sw.bb1.i_crit_edge, %snd_pcm_stream_lock_irq.exit.sw.bb1.i_crit_edge
  %call.i = tail call i32 @snd_pcm_update_hw_ptr(ptr noundef %substream) #14
  br label %do_pcm_hwsync.exit

sw.bb4.i:                                         ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

sw.default.i:                                     ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do_pcm_hwsync.exit:                               ; preds = %sw.bb1.i, %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge, %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge28
  %retval.0.i = phi i32 [ %call.i, %sw.bb1.i ], [ 0, %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge ], [ 0, %snd_pcm_stream_lock_irq.exit.do_pcm_hwsync.exit_crit_edge28 ]
  %tobool.not = icmp ne ptr %delay, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool1.not = icmp eq i32 %retval.0.i, 0
  %or.cond = select i1 %tobool.not, i1 %tobool1.not, i1 false
  br i1 %or.cond, label %if.then, label %do_pcm_hwsync.exit.if.end_crit_edge

do_pcm_hwsync.exit.if.end_crit_edge:              ; preds = %do_pcm_hwsync.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %do_pcm_hwsync.exit
  %stream.i9 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %13 = ptrtoint ptr %stream.i9 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %stream.i9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.i10 = icmp eq i32 %14, 0
  %15 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %runtime.i, align 4
  br i1 %cmp.i10, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %buffer_size.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 18
  %17 = ptrtoint ptr %buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %buffer_size.i.i, align 4
  %status.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 37
  %19 = ptrtoint ptr %status.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %status.i.i.i, align 4
  %hw_ptr.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %hw_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %hw_ptr.i.i.i, align 4
  %add.i.i.i = add i32 %22, %18
  %control.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 38
  %23 = ptrtoint ptr %control.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %control.i.i.i, align 8
  %appl_ptr.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %appl_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %appl_ptr.i.i.i, align 4
  %sub.i.i.i = sub i32 %add.i.i.i, %26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp slt i32 %sub.i.i.i, 0
  %boundary.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 33
  %27 = ptrtoint ptr %boundary.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %boundary.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %28)
  %cmp3.not.i.i.i = icmp ult i32 %sub.i.i.i, %28
  %sub6.i.i.i = select i1 %cmp3.not.i.i.i, i32 0, i32 %28
  %29 = sub i32 0, %sub6.i.i.i
  %avail.0.p.i.i.i = select i1 %cmp.i.i.i, i32 %28, i32 %29
  %30 = add i32 %sub.i.i.i, %avail.0.p.i.i.i
  %sub.i.i = sub i32 %18, %30
  br label %snd_pcm_calc_delay.exit

if.else.i:                                        ; preds = %if.then
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 37
  %31 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %status.i.i, align 4
  %hw_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %hw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %hw_ptr.i.i, align 4
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 38
  %35 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %control.i.i, align 8
  %appl_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %appl_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %appl_ptr.i.i, align 4
  %sub.i8.i = sub i32 %34, %38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i8.i)
  %cmp.i.i = icmp slt i32 %sub.i8.i, 0
  br i1 %cmp.i.i, label %if.then.i.i12, label %if.else.i.snd_pcm_calc_delay.exit_crit_edge

if.else.i.snd_pcm_calc_delay.exit_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_calc_delay.exit

if.then.i.i12:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 33
  %39 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %boundary.i.i, align 8
  %add.i.i = add i32 %40, %sub.i8.i
  br label %snd_pcm_calc_delay.exit

snd_pcm_calc_delay.exit:                          ; preds = %if.then.i.i12, %if.else.i.snd_pcm_calc_delay.exit_crit_edge, %if.then.i
  %delay.0.i = phi i32 [ %sub.i.i, %if.then.i ], [ %add.i.i, %if.then.i.i12 ], [ %sub.i8.i, %if.else.i.snd_pcm_calc_delay.exit_crit_edge ]
  %delay4.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 9
  %41 = ptrtoint ptr %delay4.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %delay4.i, align 4
  %add.i = add i32 %42, %delay.0.i
  %43 = ptrtoint ptr %delay to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %add.i, ptr %delay, align 4
  br label %if.end

if.end:                                           ; preds = %snd_pcm_calc_delay.exit, %do_pcm_hwsync.exit.if.end_crit_edge, %sw.default.i, %sw.bb4.i, %sw.bb.i.if.end_crit_edge, %snd_pcm_stream_lock_irq.exit.if.end_crit_edge
  %retval.0.i26 = phi i32 [ 0, %snd_pcm_calc_delay.exit ], [ %retval.0.i, %do_pcm_hwsync.exit.if.end_crit_edge ], [ -77, %sw.bb.i.if.end_crit_edge ], [ -32, %sw.bb4.i ], [ -77, %sw.default.i ], [ -86, %snd_pcm_stream_lock_irq.exit.if.end_crit_edge ]
  %44 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %substream, align 4
  %nonatomic.i13 = getelementptr inbounds %struct.snd_pcm, ptr %45, i32 0, i32 14
  %46 = ptrtoint ptr %nonatomic.i13 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %nonatomic.i13, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool.not.i14 = icmp eq i8 %47, 0
  br i1 %tobool.not.i14, label %if.else.i.i18, label %if.then.i.i16

if.then.i.i16:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i15 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i15) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i18:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i17 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i17) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i18, %if.then.i.i16
  %48 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %runtime.i, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %49, i32 0, i32 23
  %50 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %info.i, align 8
  %and.i = and i32 %51, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i20 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i20, label %snd_pcm_stream_unlock_irq.exit.snd_pcm_dma_buffer_sync.exit_crit_edge, label %if.then.i21

snd_pcm_stream_unlock_irq.exit.snd_pcm_dma_buffer_sync.exit_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_dma_buffer_sync.exit

if.then.i21:                                      ; preds = %snd_pcm_stream_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %dma_buffer_p.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %49, i32 0, i32 53
  %52 = ptrtoint ptr %dma_buffer_p.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %dma_buffer_p.i, align 8
  tail call void @snd_dma_buffer_sync(ptr noundef %53, i32 noundef 0) #14
  br label %snd_pcm_dma_buffer_sync.exit

snd_pcm_dma_buffer_sync.exit:                     ; preds = %if.then.i21, %snd_pcm_stream_unlock_irq.exit.snd_pcm_dma_buffer_sync.exit_crit_edge
  ret i32 %retval.0.i26
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_lib_default_mmap(ptr nocapture noundef readonly %substream, ptr noundef %area) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags, align 4
  %or = or i32 %1, 67371008
  store i32 %or, ptr %vm_flags, align 4
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %page = getelementptr inbounds %struct.snd_pcm_ops, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %page, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %6 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime, align 4
  %dma_buffer_p = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 53
  %8 = ptrtoint ptr %dma_buffer_p to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dma_buffer_p, align 8
  %call = tail call i32 @snd_dma_buffer_mmap(ptr noundef %9, ptr noundef %area) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %land.lhs.true.return_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 12
  %10 = ptrtoint ptr %vm_ops to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @snd_pcm_vm_ops_data_fault, ptr %vm_ops, align 4
  br label %return

return:                                           ; preds = %if.end, %land.lhs.true.return_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_dma_buffer_mmap(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_pcm_mmap_data(ptr noundef %substream, ptr nocapture readnone %file, ptr noundef %area) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %0 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags, align 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %and = and i32 %3, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else:                                          ; preds = %entry
  %and3 = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.else.cleanup_crit_edge, label %if.else.if.end7_crit_edge

if.else.if.end7_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.else.if.end7_crit_edge, %if.then.if.end7_crit_edge
  %runtime8 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %4 = ptrtoint ptr %runtime8 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime8, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp9 = icmp eq i32 %9, 0
  br i1 %cmp9, label %if.end7.cleanup_crit_edge, label %if.end11

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  %info = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 23
  %10 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %info, align 8
  %and12 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.end11.cleanup_crit_edge, label %if.end15

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %if.end11
  %access = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 11
  %12 = ptrtoint ptr %access to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %access, align 8
  %.off = add i32 %13, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end15.cleanup_crit_edge, label %if.end20

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %if.end15
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 1
  %14 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vm_end, align 4
  %16 = ptrtoint ptr %area to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %area, align 4
  %sub = sub i32 %15, %17
  %dma_bytes21 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 52
  %18 = ptrtoint ptr %dma_bytes21 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dma_bytes21, align 4
  %add = add i32 %19, 4095
  %and22 = and i32 %add, -4096
  call void @__sanitizer_cov_trace_cmp4(i32 %and22, i32 %sub)
  %cmp23 = icmp ult i32 %and22, %sub
  br i1 %cmp23, label %if.end20.cleanup_crit_edge, label %if.end25

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end25:                                         ; preds = %if.end20
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 13
  %20 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vm_pgoff, align 4
  %shl = shl i32 %21, 12
  %sub26 = sub i32 %and22, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %sub26)
  %cmp27 = icmp ugt i32 %shl, %sub26
  br i1 %cmp27, label %if.end25.cleanup_crit_edge, label %if.end29

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end29:                                         ; preds = %if.end25
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 12
  %22 = ptrtoint ptr %vm_ops to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @snd_pcm_vm_ops_data, ptr %vm_ops, align 4
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 15
  %23 = ptrtoint ptr %vm_private_data to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %substream, ptr %vm_private_data, align 4
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %24 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ops, align 4
  %mmap = getelementptr inbounds %struct.snd_pcm_ops, ptr %25, i32 0, i32 14
  %26 = ptrtoint ptr %mmap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mmap, align 4
  %tobool30.not = icmp eq ptr %27, null
  br i1 %tobool30.not, label %if.end36.thread, label %if.end36

if.end36.thread:                                  ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %call35 = tail call i32 @snd_pcm_lib_default_mmap(ptr noundef %substream, ptr noundef %area)
  br label %if.then38

if.end36:                                         ; preds = %if.end29
  %call = tail call i32 %27(ptr noundef %substream, ptr noundef %area) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool37.not = icmp eq i32 %call, 0
  br i1 %tobool37.not, label %if.end36.if.then38_crit_edge, label %if.end36.cleanup_crit_edge

if.end36.cleanup_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end36.if.then38_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then38

if.then38:                                        ; preds = %if.end36.if.then38_crit_edge, %if.end36.thread
  %mmap_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %mmap_count, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %mmap_count, i32 1, i32 3, i32 1) #14
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %mmap_count, ptr %mmap_count, i32 1, ptr elementtype(i32) %mmap_count) #14, !srcloc !203
  br label %cleanup

cleanup:                                          ; preds = %if.then38, %if.end36.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ -77, %if.end7.cleanup_crit_edge ], [ -6, %if.end11.cleanup_crit_edge ], [ -22, %if.end15.cleanup_crit_edge ], [ -22, %if.end20.cleanup_crit_edge ], [ -22, %if.end25.cleanup_crit_edge ], [ 0, %if.then38 ], [ %call, %if.end36.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @no_llseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_write(ptr nocapture noundef readonly %file, ptr noundef %buf, i32 noundef %count, ptr nocapture noundef readnone %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime2, align 4
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %lor.rhs.do.end_crit_edge, label %if.end26, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3439, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end26:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.84)
  switch i32 %9, label %if.end32 [
    i32 0, label %if.end26.cleanup_crit_edge
    i32 8, label %if.end26.cleanup_crit_edge60
  ]

if.end26.cleanup_crit_edge60:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end32:                                         ; preds = %if.end26
  %byte_align.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 20
  %11 = ptrtoint ptr %byte_align.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %byte_align.i, align 4
  %rem.i = urem i32 %count, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %cmp.i.not = icmp eq i32 %rem.i, 0
  br i1 %cmp.i.not, label %if.end35, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end35:                                         ; preds = %if.end32
  %mul.i = shl i32 %count, 3
  %frame_bits.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 21
  %13 = ptrtoint ptr %frame_bits.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %frame_bits.i, align 8
  %div.i = udiv i32 %mul.i, %14
  %call.i = tail call i32 @__snd_pcm_lib_xfer(ptr noundef nonnull %3, ptr noundef %buf, i1 noundef zeroext true, i32 noundef %div.i, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp38 = icmp sgt i32 %call.i, 0
  br i1 %cmp38, label %if.then39, label %if.end35.cleanup_crit_edge

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then39:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %frame_bits.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %frame_bits.i, align 8
  %mul.i59 = mul i32 %16, %call.i
  %div1.i = lshr i32 %mul.i59, 3
  br label %cleanup

cleanup:                                          ; preds = %if.then39, %if.end35.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end26.cleanup_crit_edge60, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ -77, %if.end26.cleanup_crit_edge ], [ -77, %if.end26.cleanup_crit_edge60 ], [ -22, %if.end32.cleanup_crit_edge ], [ %div1.i, %if.then39 ], [ %call.i, %if.end35.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_writev(ptr nocapture noundef readonly %iocb, ptr nocapture noundef readonly %from) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %private_data = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 16
  %2 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private_data, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime2, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %lor.rhs.do.end_crit_edge, label %if.end26, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3503, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end26:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 37
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %status, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 8
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.85)
  switch i32 %11, label %if.end32 [
    i32 0, label %if.end26.cleanup_crit_edge
    i32 8, label %if.end26.cleanup_crit_edge97
  ]

if.end26.cleanup_crit_edge97:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end32:                                         ; preds = %if.end26
  %13 = ptrtoint ptr %from to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %from, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp.i = icmp eq i8 %14, 0
  br i1 %cmp.i, label %if.end34, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end34:                                         ; preds = %if.end32
  %15 = getelementptr inbounds %struct.iov_iter, ptr %from, i32 0, i32 6
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %17)
  %cmp35 = icmp ugt i32 %17, 128
  br i1 %cmp35, label %if.end34.cleanup_crit_edge, label %lor.lhs.false36

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false36:                                  ; preds = %if.end34
  %channels = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 15
  %18 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %channels, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp37.not = icmp eq i32 %17, %19
  br i1 %cmp37.not, label %lor.lhs.false38, label %lor.lhs.false36.cleanup_crit_edge

lor.lhs.false36.cleanup_crit_edge:                ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false38:                                  ; preds = %lor.lhs.false36
  %20 = getelementptr inbounds %struct.iov_iter, ptr %from, i32 0, i32 5
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %iov_len = getelementptr inbounds %struct.iovec, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %iov_len, align 4
  %byte_align.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 20
  %25 = ptrtoint ptr %byte_align.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %byte_align.i, align 4
  %rem.i = urem i32 %24, %26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %cmp.i88.not = icmp eq i32 %rem.i, 0
  br i1 %cmp.i88.not, label %if.end42, label %lor.lhs.false38.cleanup_crit_edge

lor.lhs.false38.cleanup_crit_edge:                ; preds = %lor.lhs.false38
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end42:                                         ; preds = %lor.lhs.false38
  %mul.i = shl i32 %24, 3
  %sample_bits.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 22
  %27 = ptrtoint ptr %sample_bits.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sample_bits.i, align 4
  %div.i = udiv i32 %mul.i, %28
  %29 = shl nuw nsw i32 %17, 2
  %call8.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %29, i32 noundef 3264) #20
  %cmp46 = icmp eq ptr %call8.i, null
  br i1 %cmp46, label %if.end42.cleanup_crit_edge, label %for.cond.preheader

if.end42.cleanup_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end42
  %30 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp4992.not = icmp eq i32 %31, 0
  br i1 %cmp4992.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.preheader

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %32 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %20, align 4
  %34 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %15, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.093 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr %struct.iovec, ptr %33, i32 %i.093
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx, align 4
  %arrayidx50 = getelementptr ptr, ptr %call8.i, i32 %i.093
  %38 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %arrayidx50, align 4
  %inc = add nuw i32 %i.093, 1
  %cmp49 = icmp ult i32 %inc, %35
  br i1 %cmp49, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %call.i = tail call i32 @__snd_pcm_lib_xfer(ptr noundef nonnull %5, ptr noundef nonnull %call8.i, i1 noundef zeroext false, i32 noundef %div.i, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp52 = icmp sgt i32 %call.i, 0
  br i1 %cmp52, label %if.then53, label %for.end.if.end55_crit_edge

for.end.if.end55_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end55

if.then53:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %frame_bits.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 21
  %39 = ptrtoint ptr %frame_bits.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %frame_bits.i, align 8
  %mul.i89 = mul i32 %40, %call.i
  %div1.i = lshr i32 %mul.i89, 3
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %for.end.if.end55_crit_edge
  %result.0 = phi i32 [ %div1.i, %if.then53 ], [ %call.i, %for.end.if.end55_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call8.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.end42.cleanup_crit_edge, %lor.lhs.false38.cleanup_crit_edge, %lor.lhs.false36.cleanup_crit_edge, %if.end34.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end26.cleanup_crit_edge97, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ %result.0, %if.end55 ], [ -77, %if.end26.cleanup_crit_edge ], [ -77, %if.end26.cleanup_crit_edge97 ], [ -22, %if.end32.cleanup_crit_edge ], [ -22, %lor.lhs.false38.cleanup_crit_edge ], [ -22, %lor.lhs.false36.cleanup_crit_edge ], [ -22, %if.end34.cleanup_crit_edge ], [ -12, %if.end42.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_poll(ptr noundef %file, ptr noundef %wait) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp = icmp eq i32 %5, 0
  %. = select i1 %cmp, i32 260, i32 65
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 11
  %6 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime2, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %lor.rhs.do.end_crit_edge, label %if.end28, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3542, i32 noundef 9, ptr noundef null) #14
  %or = or i32 %., 8
  br label %cleanup

if.end28:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 37
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %status, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %11)
  %cmp30 = icmp eq i32 %11, 8
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %or32 = or i32 %., 8
  br label %cleanup

if.end33:                                         ; preds = %if.end28
  %sleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 40
  %tobool.not.i = icmp eq ptr %wait, null
  br i1 %tobool.not.i, label %if.end33.poll_wait.exit_crit_edge, label %land.lhs.true.i

if.end33.poll_wait.exit_crit_edge:                ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %poll_wait.exit

land.lhs.true.i:                                  ; preds = %if.end33
  %12 = ptrtoint ptr %wait to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %wait, align 4
  %tobool1.not.i = icmp eq ptr %13, null
  %tobool3.not.i = icmp eq ptr %sleep, null
  %or.cond.i = or i1 %tobool3.not.i, %tobool1.not.i
  br i1 %or.cond.i, label %land.lhs.true.i.poll_wait.exit_crit_edge, label %if.then.i

land.lhs.true.i.poll_wait.exit_crit_edge:         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %poll_wait.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %13(ptr noundef %file, ptr noundef nonnull %sleep, ptr noundef nonnull %wait) #14
  br label %poll_wait.exit

poll_wait.exit:                                   ; preds = %if.then.i, %land.lhs.true.i.poll_wait.exit_crit_edge, %if.end33.poll_wait.exit_crit_edge
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %3, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %15, i32 0, i32 14
  %16 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i73 = icmp eq i8 %17, 0
  br i1 %tobool.not.i73, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %poll_wait.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %poll_wait.exit
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %18 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp.i = icmp eq i32 %19, 0
  %20 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %runtime2, align 4
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 37
  %22 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %status.i.i, align 4
  %hw_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %hw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %hw_ptr.i.i, align 4
  br i1 %cmp.i, label %if.then.i74, label %if.else.i

if.then.i74:                                      ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %buffer_size.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 18
  %26 = ptrtoint ptr %buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %buffer_size.i.i, align 4
  %add.i.i = add i32 %27, %25
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 38
  %28 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %control.i.i, align 8
  %appl_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %appl_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %appl_ptr.i.i, align 4
  %sub.i.i = sub i32 %add.i.i, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 33
  %32 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %boundary.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %33)
  %cmp3.not.i.i = icmp ult i32 %sub.i.i, %33
  %sub6.i.i = select i1 %cmp3.not.i.i, i32 0, i32 %33
  %34 = sub i32 0, %sub6.i.i
  %avail.0.p.i.i = select i1 %cmp.i.i, i32 %33, i32 %34
  %avail.0.i.i = add i32 %avail.0.p.i.i, %sub.i.i
  br label %snd_pcm_avail.exit

if.else.i:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  %control.i7.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 38
  %35 = ptrtoint ptr %control.i7.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %control.i7.i, align 8
  %appl_ptr.i8.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %appl_ptr.i8.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %appl_ptr.i8.i, align 4
  %sub.i9.i = sub i32 %25, %38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i9.i)
  %cmp.i10.i = icmp slt i32 %sub.i9.i, 0
  br i1 %cmp.i10.i, label %if.then.i.i75, label %if.else.i.snd_pcm_avail.exit_crit_edge

if.else.i.snd_pcm_avail.exit_crit_edge:           ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_avail.exit

if.then.i.i75:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i11.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %21, i32 0, i32 33
  %39 = ptrtoint ptr %boundary.i11.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %boundary.i11.i, align 8
  %add.i12.i = add i32 %40, %sub.i9.i
  br label %snd_pcm_avail.exit

snd_pcm_avail.exit:                               ; preds = %if.then.i.i75, %if.else.i.snd_pcm_avail.exit_crit_edge, %if.then.i74
  %retval.0.i = phi i32 [ %avail.0.i.i, %if.then.i74 ], [ %add.i12.i, %if.then.i.i75 ], [ %sub.i9.i, %if.else.i.snd_pcm_avail.exit_crit_edge ]
  %41 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %status, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 8
  %45 = zext i32 %44 to i64
  call void @__sanitizer_cov_trace_switch(i64 %45, ptr @__sancov_gen_cov_switch_values.86)
  switch i32 %44, label %sw.default [
    i32 3, label %snd_pcm_avail.exit.sw.bb_crit_edge
    i32 2, label %snd_pcm_avail.exit.sw.bb_crit_edge82
    i32 6, label %snd_pcm_avail.exit.sw.bb_crit_edge83
    i32 5, label %sw.bb39
  ]

snd_pcm_avail.exit.sw.bb_crit_edge83:             ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

snd_pcm_avail.exit.sw.bb_crit_edge82:             ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

snd_pcm_avail.exit.sw.bb_crit_edge:               ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

sw.bb:                                            ; preds = %snd_pcm_avail.exit.sw.bb_crit_edge, %snd_pcm_avail.exit.sw.bb_crit_edge82, %snd_pcm_avail.exit.sw.bb_crit_edge83
  %control = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 38
  %46 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %control, align 8
  %avail_min = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %47, i32 0, i32 4
  %48 = ptrtoint ptr %avail_min to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %avail_min, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %49)
  %cmp36.not = icmp ult i32 %retval.0.i, %49
  %spec.select = select i1 %cmp36.not, i32 0, i32 %.
  br label %sw.epilog

sw.bb39:                                          ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp41 = icmp eq i32 %19, 1
  br i1 %cmp41, label %if.then42, label %sw.bb39.sw.epilog_crit_edge

sw.bb39.sw.epilog_crit_edge:                      ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.then42:                                        ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool43.not = icmp eq i32 %retval.0.i, 0
  %or45 = or i32 %., 8
  %spec.select72 = select i1 %tobool43.not, i32 %or45, i32 %.
  br label %sw.epilog

sw.default:                                       ; preds = %snd_pcm_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  %or48 = or i32 %., 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then42, %sw.bb39.sw.epilog_crit_edge, %sw.bb
  %mask.0 = phi i32 [ %or48, %sw.default ], [ 0, %sw.bb39.sw.epilog_crit_edge ], [ %spec.select, %sw.bb ], [ %spec.select72, %if.then42 ]
  %50 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %3, align 4
  %nonatomic.i76 = getelementptr inbounds %struct.snd_pcm, ptr %51, i32 0, i32 14
  %52 = ptrtoint ptr %nonatomic.i76 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %nonatomic.i76, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool.not.i77 = icmp eq i8 %53, 0
  br i1 %tobool.not.i77, label %if.else.i.i81, label %if.then.i.i79

if.then.i.i79:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i78 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i78) #14
  br label %cleanup

if.else.i.i81:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i80 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i80) #14
  br label %cleanup

cleanup:                                          ; preds = %if.else.i.i81, %if.then.i.i79, %if.then31, %do.end
  %retval.0 = phi i32 [ %or, %do.end ], [ %or32, %if.then31 ], [ %mask.0, %if.then.i.i79 ], [ %mask.0, %if.else.i.i81 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_ioctl(ptr noundef %file, i32 noundef %cmd, i32 noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = and i32 %cmd, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 16640, i32 %0)
  %cmp.not = icmp eq i32 %0, 16640
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %1 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %private_data, align 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %5 = inttoptr i32 %arg to ptr
  %call = tail call fastcc i32 @snd_pcm_common_ioctl(ptr noundef %file, ptr noundef %4, i32 noundef %cmd, ptr noundef %5)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ -25, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_mmap(ptr nocapture noundef readonly %file, ptr noundef %area) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %lor.rhs.do.end_crit_edge, label %if.end25, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3856, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end25:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %9)
  %cmp = icmp eq i32 %9, 8
  br i1 %cmp, label %if.end25.cleanup_crit_edge, label %if.end28

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end28:                                         ; preds = %if.end25
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 13
  %10 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vm_pgoff, align 4
  %12 = lshr i32 %11, 12
  %13 = and i32 %12, 252
  %14 = shl i32 %11, 20
  %15 = or i32 %13, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %15)
  %switch = icmp eq i32 %15, 128
  br i1 %switch, label %if.end28.cleanup_crit_edge, label %sw.default

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.default:                                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @snd_pcm_mmap_data(ptr noundef nonnull %3, ptr undef, ptr noundef %area)
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %if.end28.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ %call, %sw.default ], [ -77, %if.end25.cleanup_crit_edge ], [ -6, %if.end28.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_playback_open(ptr noundef %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nonseekable_open(ptr noundef %inode, ptr noundef %file) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %i_rdev.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 13
  %0 = ptrtoint ptr %i_rdev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %i_rdev.i, align 8
  %and.i = and i32 %1, 1048575
  %call2 = tail call ptr @snd_lookup_minor_data(i32 noundef %and.i, i32 noundef 5) #14
  %call3 = tail call fastcc i32 @snd_pcm_open(ptr noundef %file, ptr noundef %call2, i32 noundef 0)
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.then4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %call2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call2, align 8
  %card_dev.i = getelementptr inbounds %struct.snd_card, ptr %3, i32 0, i32 28
  tail call void @put_device(ptr noundef %card_dev.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call3, %if.then4 ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_release(ptr nocapture noundef readnone %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %do.end, label %if.end24, !prof !196

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 2835, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end24:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %call = tail call i32 @snd_power_wait(ptr noundef %7) #14
  %open_mutex = getelementptr inbounds %struct.snd_pcm, ptr %5, i32 0, i32 9
  tail call void @mutex_lock_nested(ptr noundef %open_mutex, i32 noundef 0) #14
  tail call void @snd_pcm_release_substream(ptr noundef nonnull %3)
  tail call void @kfree(ptr noundef %1) #14
  tail call void @mutex_unlock(ptr noundef %open_mutex) #14
  %open_wait = getelementptr inbounds %struct.snd_pcm, ptr %5, i32 0, i32 10
  tail call void @__wake_up(ptr noundef %open_wait, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %module = getelementptr inbounds %struct.snd_card, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %module to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %module, align 4
  tail call void @module_put(ptr noundef %11) #14
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %5, align 8
  %call29 = tail call i32 @snd_card_file_remove(ptr noundef %13, ptr noundef %file) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ 0, %if.end24 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_fasync(i32 noundef %fd, ptr noundef %file, i32 noundef %on) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime2, align 4
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %lor.rhs.do.end_crit_edge, label %if.end26, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3893, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end26:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %9)
  %cmp = icmp eq i32 %9, 8
  br i1 %cmp, label %if.end26.cleanup_crit_edge, label %if.end29

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end29:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  %fasync = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 42
  %call = tail call i32 @fasync_helper(i32 noundef %fd, ptr noundef %file, i32 noundef %on, ptr noundef %fasync) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %if.end26.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ %call, %if.end29 ], [ -77, %if.end26.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_read(ptr nocapture noundef readonly %file, ptr noundef %buf, i32 noundef %count, ptr nocapture noundef readnone %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime2, align 4
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %lor.rhs.do.end_crit_edge, label %if.end26, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3414, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end26:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.87)
  switch i32 %9, label %if.end32 [
    i32 0, label %if.end26.cleanup_crit_edge
    i32 8, label %if.end26.cleanup_crit_edge60
  ]

if.end26.cleanup_crit_edge60:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end32:                                         ; preds = %if.end26
  %byte_align.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 20
  %11 = ptrtoint ptr %byte_align.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %byte_align.i, align 4
  %rem.i = urem i32 %count, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %cmp.i.not = icmp eq i32 %rem.i, 0
  br i1 %cmp.i.not, label %if.end35, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end35:                                         ; preds = %if.end32
  %mul.i = shl i32 %count, 3
  %frame_bits.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 21
  %13 = ptrtoint ptr %frame_bits.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %frame_bits.i, align 8
  %div.i = udiv i32 %mul.i, %14
  %call.i = tail call i32 @__snd_pcm_lib_xfer(ptr noundef nonnull %3, ptr noundef %buf, i1 noundef zeroext true, i32 noundef %div.i, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp38 = icmp sgt i32 %call.i, 0
  br i1 %cmp38, label %if.then39, label %if.end35.cleanup_crit_edge

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then39:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %frame_bits.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %frame_bits.i, align 8
  %mul.i59 = mul i32 %16, %call.i
  %div1.i = lshr i32 %mul.i59, 3
  br label %cleanup

cleanup:                                          ; preds = %if.then39, %if.end35.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end26.cleanup_crit_edge60, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ -77, %if.end26.cleanup_crit_edge ], [ -77, %if.end26.cleanup_crit_edge60 ], [ -22, %if.end32.cleanup_crit_edge ], [ %div1.i, %if.then39 ], [ %call.i, %if.end35.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_readv(ptr nocapture noundef readonly %iocb, ptr nocapture noundef readonly %to) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %private_data = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 16
  %2 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private_data, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime2 = getelementptr inbounds %struct.snd_pcm_substream, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %runtime2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime2, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %lor.rhs.do.end_crit_edge, label %if.end26, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3466, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end26:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 37
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %status, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 8
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.88)
  switch i32 %11, label %if.end32 [
    i32 0, label %if.end26.cleanup_crit_edge
    i32 8, label %if.end26.cleanup_crit_edge98
  ]

if.end26.cleanup_crit_edge98:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end32:                                         ; preds = %if.end26
  %13 = ptrtoint ptr %to to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %to, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp.i = icmp eq i8 %14, 0
  br i1 %cmp.i, label %if.end34, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end34:                                         ; preds = %if.end32
  %15 = getelementptr inbounds %struct.iov_iter, ptr %to, i32 0, i32 6
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %17)
  %cmp35 = icmp ugt i32 %17, 1024
  br i1 %cmp35, label %if.end34.cleanup_crit_edge, label %lor.lhs.false36

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false36:                                  ; preds = %if.end34
  %channels = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 15
  %18 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %channels, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp37.not = icmp eq i32 %17, %19
  br i1 %cmp37.not, label %if.end39, label %lor.lhs.false36.cleanup_crit_edge

lor.lhs.false36.cleanup_crit_edge:                ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end39:                                         ; preds = %lor.lhs.false36
  %20 = getelementptr inbounds %struct.iov_iter, ptr %to, i32 0, i32 5
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %iov_len = getelementptr inbounds %struct.iovec, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %iov_len, align 4
  %byte_align.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 20
  %25 = ptrtoint ptr %byte_align.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %byte_align.i, align 4
  %rem.i = urem i32 %24, %26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %cmp.i89.not = icmp eq i32 %rem.i, 0
  br i1 %cmp.i89.not, label %if.end43, label %if.end39.cleanup_crit_edge

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end43:                                         ; preds = %if.end39
  %mul.i = shl i32 %24, 3
  %sample_bits.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 22
  %27 = ptrtoint ptr %sample_bits.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sample_bits.i, align 4
  %div.i = udiv i32 %mul.i, %28
  %29 = shl nuw nsw i32 %17, 2
  %call8.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %29, i32 noundef 3264) #20
  %cmp47 = icmp eq ptr %call8.i, null
  br i1 %cmp47, label %if.end43.cleanup_crit_edge, label %for.cond.preheader

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end43
  %30 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp5093.not = icmp eq i32 %31, 0
  br i1 %cmp5093.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.preheader

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %32 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %20, align 4
  %34 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %15, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.094 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr %struct.iovec, ptr %33, i32 %i.094
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx, align 4
  %arrayidx51 = getelementptr ptr, ptr %call8.i, i32 %i.094
  %38 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %arrayidx51, align 4
  %inc = add nuw i32 %i.094, 1
  %cmp50 = icmp ult i32 %inc, %35
  br i1 %cmp50, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %call.i = tail call i32 @__snd_pcm_lib_xfer(ptr noundef nonnull %5, ptr noundef nonnull %call8.i, i1 noundef zeroext false, i32 noundef %div.i, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp53 = icmp sgt i32 %call.i, 0
  br i1 %cmp53, label %if.then54, label %for.end.if.end56_crit_edge

for.end.if.end56_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end56

if.then54:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %frame_bits.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %7, i32 0, i32 21
  %39 = ptrtoint ptr %frame_bits.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %frame_bits.i, align 8
  %mul.i90 = mul i32 %40, %call.i
  %div1.i = lshr i32 %mul.i90, 3
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %for.end.if.end56_crit_edge
  %result.0 = phi i32 [ %div1.i, %if.then54 ], [ %call.i, %for.end.if.end56_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call8.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end56, %if.end43.cleanup_crit_edge, %if.end39.cleanup_crit_edge, %lor.lhs.false36.cleanup_crit_edge, %if.end34.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end26.cleanup_crit_edge98, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ %result.0, %if.end56 ], [ -77, %if.end26.cleanup_crit_edge ], [ -77, %if.end26.cleanup_crit_edge98 ], [ -22, %if.end32.cleanup_crit_edge ], [ -22, %lor.lhs.false36.cleanup_crit_edge ], [ -22, %if.end34.cleanup_crit_edge ], [ -22, %if.end39.cleanup_crit_edge ], [ -12, %if.end43.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_capture_open(ptr noundef %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nonseekable_open(ptr noundef %inode, ptr noundef %file) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %i_rdev.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 13
  %0 = ptrtoint ptr %i_rdev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %i_rdev.i, align 8
  %and.i = and i32 %1, 1048575
  %call2 = tail call ptr @snd_lookup_minor_data(i32 noundef %and.i, i32 noundef 6) #14
  %call3 = tail call fastcc i32 @snd_pcm_open(ptr noundef %file, ptr noundef %call2, i32 noundef 1)
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.then4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %call2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call2, align 8
  %card_dev.i = getelementptr inbounds %struct.snd_card, ptr %3, i32 0, i32 28
  tail call void @put_device(ptr noundef %card_dev.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call3, %if.then4 ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_hw_mask_param(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %card = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %card, align 4
  %device = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %device, align 4
  %direction = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %direction to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.22, ptr @.str.21
  %subdevice = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %subdevice to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %subdevice, align 4
  %index = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index, align 4
  %total = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %total, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %type, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %15, ptr noundef nonnull @trace_raw_output_hw_mask_param.symbols) #14
  %prev_bits = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 8
  %arrayidx = getelementptr %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 8, i32 3
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx, align 4
  %arrayidx3 = getelementptr %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 8, i32 2
  %18 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx3, align 4
  %arrayidx5 = getelementptr %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 8, i32 1
  %20 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx5, align 4
  %22 = ptrtoint ptr %prev_bits to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %prev_bits, align 4
  %curr_bits = getelementptr inbounds %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 9
  %arrayidx8 = getelementptr %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 9, i32 3
  %24 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx8, align 4
  %arrayidx10 = getelementptr %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 9, i32 2
  %26 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx10, align 4
  %arrayidx12 = getelementptr %struct.trace_event_raw_hw_mask_param, ptr %1, i32 0, i32 9, i32 1
  %28 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx12, align 4
  %30 = ptrtoint ptr %curr_bits to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %curr_bits, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.20, i32 noundef %3, i32 noundef %5, ptr noundef nonnull %cond, i32 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %call1, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25, i32 noundef %27, i32 noundef %29, i32 noundef %31) #14
  %call15 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_hw_interval_param(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %card = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %card, align 4
  %device = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %device, align 4
  %direction = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %direction to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.22, ptr @.str.21
  %subdevice = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %subdevice to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %subdevice, align 4
  %index = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index, align 4
  %total = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %total, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %type, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %15, ptr noundef nonnull @trace_raw_output_hw_interval_param.symbols) #14
  %prev_empty = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 13
  %16 = ptrtoint ptr %prev_empty to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %prev_empty, align 4
  %prev_integer = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 12
  %18 = ptrtoint ptr %prev_integer to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %prev_integer, align 4
  %prev_openmin = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %prev_openmin to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %prev_openmin, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool2.not = icmp eq i32 %21, 0
  %cond3 = select i1 %tobool2.not, ptr @.str.53, ptr @.str.52
  %prev_min = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 8
  %22 = ptrtoint ptr %prev_min to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %prev_min, align 4
  %prev_max = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 9
  %24 = ptrtoint ptr %prev_max to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %prev_max, align 4
  %prev_openmax = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 11
  %26 = ptrtoint ptr %prev_openmax to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %prev_openmax, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool4.not = icmp eq i32 %27, 0
  %cond5 = select i1 %tobool4.not, ptr @.str.55, ptr @.str.54
  %curr_empty = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 19
  %28 = ptrtoint ptr %curr_empty to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %curr_empty, align 4
  %curr_integer = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 18
  %30 = ptrtoint ptr %curr_integer to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %curr_integer, align 4
  %curr_openmin = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 16
  %32 = ptrtoint ptr %curr_openmin to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %curr_openmin, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool6.not = icmp eq i32 %33, 0
  %cond7 = select i1 %tobool6.not, ptr @.str.53, ptr @.str.52
  %curr_min = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 14
  %34 = ptrtoint ptr %curr_min to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %curr_min, align 4
  %curr_max = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 15
  %36 = ptrtoint ptr %curr_max to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %curr_max, align 4
  %curr_openmax = getelementptr inbounds %struct.trace_event_raw_hw_interval_param, ptr %1, i32 0, i32 17
  %38 = ptrtoint ptr %curr_openmax to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %curr_openmax, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool8.not = icmp eq i32 %39, 0
  %cond9 = select i1 %tobool8.not, ptr @.str.55, ptr @.str.54
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.51, i32 noundef %3, i32 noundef %5, ptr noundef nonnull %cond, i32 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %call1, i32 noundef %17, i32 noundef %19, ptr noundef nonnull %cond3, i32 noundef %23, i32 noundef %25, ptr noundef nonnull %cond5, i32 noundef %29, i32 noundef %31, ptr noundef nonnull %cond7, i32 noundef %35, i32 noundef %37, ptr noundef nonnull %cond9) #14
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #3

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_hw_mask_param(ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_hw_mask_param, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !200

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !195

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.61, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !204
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #14
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !205
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !205
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !195

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.61, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !206
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_hw_mask_param.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_hw_mask_param.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.59, i32 noundef 66, ptr noundef nonnull @.str.60) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !207
  %38 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_interval_refine(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_hw_interval_param(ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_hw_interval_param, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !200

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !195

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.61, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !208
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %substream, i32 noundef %type, i32 noundef %index, ptr noundef %prev, ptr noundef %curr) #14
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !209
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !209
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !195

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.61, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !206
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_hw_interval_param.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_hw_interval_param.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.59, i32 noundef 134, ptr noundef nonnull @.str.60) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !207
  %38 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @ktime_get_ts64(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ktime_get_raw_ts64(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ktime_get_real_ts64(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic1 = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic1, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  %group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %4 = ptrtoint ptr %group.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %group.i, align 4
  %cmp.i.not38 = icmp eq ptr %5, %self_group.i
  br i1 %cmp.i.not38, label %entry.cleanup_crit_edge, label %if.end.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.lr.ph:                                     ; preds = %entry
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  br label %if.end

if.end:                                           ; preds = %if.end15.if.end_crit_edge, %if.end.lr.ph
  %6 = phi ptr [ %5, %if.end.lr.ph ], [ %20, %if.end15.if.end_crit_edge ]
  %refs = getelementptr inbounds %struct.snd_pcm_group, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !210
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.end.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !196

if.end.if.end15.sink.split.i.i.i_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %if.end
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %8 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %.not.i.i.i = icmp sgt i32 %8, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !195

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %if.end.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.end.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef %.sink.i.i.i) #14
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %refcount_inc.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex = getelementptr inbounds %struct.snd_pcm_group, ptr %6, i32 0, i32 1
  %call5 = tail call i32 @mutex_trylock(ptr noundef %mutex) #14
  br label %cond.end

cond.false:                                       ; preds = %refcount_inc.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 @_raw_spin_trylock(ptr noundef %6) #14
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call5, %cond.true ], [ %call.i, %cond.false ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool7.not = icmp eq i32 %cond, 0
  br i1 %tobool7.not, label %if.end11, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end11:                                         ; preds = %cond.end
  %9 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %10, i32 0, i32 14
  %11 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.i = icmp eq i8 %12, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mutex_unlock(ptr noundef %mutex.i.i) #14
  br label %snd_pcm_stream_unlock.exit

if.else.i.i:                                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_unlock.exit

snd_pcm_stream_unlock.exit:                       ; preds = %if.else.i.i, %if.then.i.i
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %snd_pcm_stream_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_group, ptr %6, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #14
  br label %snd_pcm_group_lock.exit

if.else.i:                                        ; preds = %snd_pcm_stream_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_lock(ptr noundef %6) #14
  br label %snd_pcm_group_lock.exit

snd_pcm_group_lock.exit:                          ; preds = %if.else.i, %if.then.i
  %13 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %substream, align 4
  %nonatomic.i32 = getelementptr inbounds %struct.snd_pcm, ptr %14, i32 0, i32 14
  %15 = ptrtoint ptr %nonatomic.i32 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %nonatomic.i32, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i33 = icmp eq i8 %16, 0
  br i1 %tobool.not.i33, label %if.else.i.i37, label %if.then.i.i35

if.then.i.i35:                                    ; preds = %snd_pcm_group_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock.exit

if.else.i.i37:                                    ; preds = %snd_pcm_group_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_lock(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock.exit

snd_pcm_stream_lock.exit:                         ; preds = %if.else.i.i37, %if.then.i.i35
  %17 = ptrtoint ptr %group.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %group.i, align 4
  %cmp = icmp eq ptr %18, %6
  br i1 %cmp, label %snd_pcm_stream_lock.exit.cleanup_crit_edge, label %if.end15

snd_pcm_stream_lock.exit.cleanup_crit_edge:       ; preds = %snd_pcm_stream_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %snd_pcm_stream_lock.exit
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %6, ptr noundef %substream)
  %19 = ptrtoint ptr %group.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %group.i, align 4
  %cmp.i.not = icmp eq ptr %20, %self_group.i
  br i1 %cmp.i.not, label %if.end15.cleanup_crit_edge, label %if.end15.if.end_crit_edge

if.end15.if.end_crit_edge:                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end15.cleanup_crit_edge, %snd_pcm_stream_lock.exit.cleanup_crit_edge, %cond.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ %6, %cond.end.cleanup_crit_edge ], [ %6, %snd_pcm_stream_lock.exit.cleanup_crit_edge ], [ null, %if.end15.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_action_group(ptr nocapture noundef readonly %ops, ptr noundef readonly %substream, i32 noundef %state, i1 noundef zeroext %do_lock) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %0 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %group, align 4
  %substreams = getelementptr inbounds %struct.snd_pcm_group, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %substreams to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn187 = load ptr, ptr %substreams, align 4
  %cmp.not190 = icmp eq ptr %.pn187, %substreams
  br i1 %cmp.not190, label %entry.for.cond23.preheader_crit_edge, label %for.body.lr.ph

entry.for.cond23.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond23.preheader

for.body.lr.ph:                                   ; preds = %entry
  %do_lock.not = xor i1 %do_lock, true
  br label %for.body

for.cond:                                         ; preds = %if.end7
  %3 = ptrtoint ptr %.pn193 to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn = load ptr, ptr %.pn193, align 4
  %4 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %group, align 4
  %substreams2 = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 2
  %cmp.not = icmp eq ptr %.pn, %substreams2
  br i1 %cmp.not, label %for.cond.for.cond23.preheader_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.cond.for.cond23.preheader_crit_edge:          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %for.cond.for.cond23.preheader_crit_edge, %entry.for.cond23.preheader_crit_edge
  %res.0.lcssa = phi i32 [ 0, %entry.for.cond23.preheader_crit_edge ], [ %call8, %for.cond.for.cond23.preheader_crit_edge ]
  %substreams2.lcssa = phi ptr [ %substreams, %entry.for.cond23.preheader_crit_edge ], [ %.pn, %for.cond.for.cond23.preheader_crit_edge ]
  %6 = ptrtoint ptr %substreams2.lcssa to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn174196 = load ptr, ptr %substreams2.lcssa, align 4
  %7 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %group, align 4
  %substreams26197 = getelementptr inbounds %struct.snd_pcm_group, ptr %8, i32 0, i32 2
  %cmp27.not198 = icmp eq ptr %.pn174196, %substreams26197
  br i1 %cmp27.not198, label %for.cond23.preheader.for.cond74.preheader_crit_edge, label %for.body29.lr.ph

for.cond23.preheader.for.cond74.preheader_crit_edge: ; preds = %for.cond23.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond74.preheader

for.body29.lr.ph:                                 ; preds = %for.cond23.preheader
  %do_action = getelementptr inbounds %struct.action_ops, ptr %ops, i32 0, i32 1
  br label %for.body29

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %.pn193 = phi ptr [ %.pn187, %for.body.lr.ph ], [ %.pn, %for.cond.for.body_crit_edge ]
  %depth.0191 = phi i32 [ 1, %for.body.lr.ph ], [ %depth.1, %for.cond.for.body_crit_edge ]
  %s.0194 = getelementptr i8, ptr %.pn193, i32 -140
  %cmp3.not = icmp eq ptr %s.0194, %substream
  %or.cond = select i1 %do_lock.not, i1 true, i1 %cmp3.not
  br i1 %or.cond, label %for.body.if.end7_crit_edge, label %if.then

for.body.if.end7_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then:                                          ; preds = %for.body
  %9 = ptrtoint ptr %s.0194 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s.0194, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %10, i32 0, i32 14
  %11 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool4.not = icmp eq i8 %12, 0
  br i1 %tobool4.not, label %do.body, label %if.then5

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %mutex = getelementptr i8, ptr %.pn193, i32 52
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef %depth.0191) #14
  br label %if.end

do.body:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %self_group6 = getelementptr i8, ptr %.pn193, i32 8
  tail call void @_raw_spin_lock_nested(ptr noundef %self_group6, i32 noundef %depth.0191) #14
  br label %if.end

if.end:                                           ; preds = %do.body, %if.then5
  %inc = add i32 %depth.0191, 1
  br label %if.end7

if.end7:                                          ; preds = %if.end, %for.body.if.end7_crit_edge
  %depth.1 = phi i32 [ %inc, %if.end ], [ %depth.0191, %for.body.if.end7_crit_edge ]
  %13 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops, align 4
  %call8 = tail call i32 %14(ptr noundef %s.0194, i32 noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.end7._unlock_crit_edge, label %for.cond

if.end7._unlock_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %_unlock

for.cond23:                                       ; preds = %for.body29
  %15 = ptrtoint ptr %.pn174199 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn174 = load ptr, ptr %.pn174199, align 4
  %16 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %group, align 4
  %substreams26 = getelementptr inbounds %struct.snd_pcm_group, ptr %17, i32 0, i32 2
  %cmp27.not = icmp eq ptr %.pn174, %substreams26
  br i1 %cmp27.not, label %for.cond23.for.cond74.preheader_crit_edge, label %for.cond23.for.body29_crit_edge

for.cond23.for.body29_crit_edge:                  ; preds = %for.cond23
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body29

for.cond23.for.cond74.preheader_crit_edge:        ; preds = %for.cond23
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond74.preheader

for.cond74.preheader:                             ; preds = %for.cond23.for.cond74.preheader_crit_edge, %for.cond23.preheader.for.cond74.preheader_crit_edge
  %res.1.lcssa = phi i32 [ %res.0.lcssa, %for.cond23.preheader.for.cond74.preheader_crit_edge ], [ %call30, %for.cond23.for.cond74.preheader_crit_edge ]
  %substreams26.lcssa = phi ptr [ %.pn174196, %for.cond23.preheader.for.cond74.preheader_crit_edge ], [ %.pn174, %for.cond23.for.cond74.preheader_crit_edge ]
  %18 = ptrtoint ptr %substreams26.lcssa to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn175208 = load ptr, ptr %substreams26.lcssa, align 4
  %s.2209 = getelementptr i8, ptr %.pn175208, i32 -140
  %19 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %group, align 4
  %substreams77210 = getelementptr inbounds %struct.snd_pcm_group, ptr %20, i32 0, i32 2
  %cmp78.not211 = icmp eq ptr %.pn175208, %substreams77210
  br i1 %cmp78.not211, label %for.cond74.preheader._unlock_crit_edge, label %for.body80.lr.ph

for.cond74.preheader._unlock_crit_edge:           ; preds = %for.cond74.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %_unlock

for.body80.lr.ph:                                 ; preds = %for.cond74.preheader
  %post_action = getelementptr inbounds %struct.action_ops, ptr %ops, i32 0, i32 3
  br label %for.body80

for.body29:                                       ; preds = %for.cond23.for.body29_crit_edge, %for.body29.lr.ph
  %.pn174199 = phi ptr [ %.pn174196, %for.body29.lr.ph ], [ %.pn174, %for.cond23.for.body29_crit_edge ]
  %s.1 = getelementptr i8, ptr %.pn174199, i32 -140
  %21 = ptrtoint ptr %do_action to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %do_action, align 4
  %call30 = tail call i32 %22(ptr noundef %s.1, i32 noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %cmp31 = icmp slt i32 %call30, 0
  br i1 %cmp31, label %if.then32, label %for.cond23

if.then32:                                        ; preds = %for.body29
  %undo_action = getelementptr inbounds %struct.action_ops, ptr %ops, i32 0, i32 2
  %23 = ptrtoint ptr %undo_action to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %undo_action, align 4
  %tobool33.not = icmp eq ptr %24, null
  br i1 %tobool33.not, label %if.then32._unlock_crit_edge, label %if.then34

if.then32._unlock_crit_edge:                      ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #16
  br label %_unlock

if.then34:                                        ; preds = %if.then32
  %25 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %group, align 4
  %substreams37 = getelementptr inbounds %struct.snd_pcm_group, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %substreams37 to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn177202 = load ptr, ptr %substreams37, align 4
  %cmp45.not204 = icmp eq ptr %.pn177202, %substreams37
  %cmp48205 = icmp eq ptr %.pn177202, %.pn174199
  %or.cond178206 = select i1 %cmp45.not204, i1 true, i1 %cmp48205
  br i1 %or.cond178206, label %if.then34._unlock_crit_edge, label %if.then34.if.end50_crit_edge

if.then34.if.end50_crit_edge:                     ; preds = %if.then34
  br label %if.end50

if.then34._unlock_crit_edge:                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  br label %_unlock

if.end50:                                         ; preds = %if.end50.if.end50_crit_edge, %if.then34.if.end50_crit_edge
  %.pn177207 = phi ptr [ %.pn177, %if.end50.if.end50_crit_edge ], [ %.pn177202, %if.then34.if.end50_crit_edge ]
  %s1.0 = getelementptr i8, ptr %.pn177207, i32 -140
  %28 = ptrtoint ptr %undo_action to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %undo_action, align 4
  tail call void %29(ptr noundef %s1.0, i32 noundef %state) #14
  %30 = ptrtoint ptr %.pn177207 to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pn177 = load ptr, ptr %.pn177207, align 4
  %31 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %group, align 4
  %substreams44 = getelementptr inbounds %struct.snd_pcm_group, ptr %32, i32 0, i32 2
  %cmp45.not = icmp eq ptr %.pn177, %substreams44
  %cmp48 = icmp eq ptr %.pn177, %.pn174199
  %or.cond178 = select i1 %cmp45.not, i1 true, i1 %cmp48
  br i1 %or.cond178, label %if.end50._unlock_crit_edge, label %if.end50.if.end50_crit_edge

if.end50.if.end50_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.end50._unlock_crit_edge:                       ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %_unlock

for.body80:                                       ; preds = %for.body80.for.body80_crit_edge, %for.body80.lr.ph
  %s.2213 = phi ptr [ %s.2209, %for.body80.lr.ph ], [ %s.2, %for.body80.for.body80_crit_edge ]
  %.pn175212 = phi ptr [ %.pn175208, %for.body80.lr.ph ], [ %.pn175, %for.body80.for.body80_crit_edge ]
  %33 = ptrtoint ptr %post_action to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %post_action, align 4
  tail call void %34(ptr noundef %s.2213, i32 noundef %state) #14
  %35 = ptrtoint ptr %.pn175212 to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn175 = load ptr, ptr %.pn175212, align 4
  %s.2 = getelementptr i8, ptr %.pn175, i32 -140
  %36 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %group, align 4
  %substreams77 = getelementptr inbounds %struct.snd_pcm_group, ptr %37, i32 0, i32 2
  %cmp78.not = icmp eq ptr %.pn175, %substreams77
  br i1 %cmp78.not, label %for.body80._unlock_crit_edge, label %for.body80.for.body80_crit_edge

for.body80.for.body80_crit_edge:                  ; preds = %for.body80
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body80

for.body80._unlock_crit_edge:                     ; preds = %for.body80
  call void @__sanitizer_cov_trace_pc() #16
  br label %_unlock

_unlock:                                          ; preds = %for.body80._unlock_crit_edge, %if.end50._unlock_crit_edge, %if.then34._unlock_crit_edge, %if.then32._unlock_crit_edge, %for.cond74.preheader._unlock_crit_edge, %if.end7._unlock_crit_edge
  %res.2 = phi i32 [ %call30, %if.then32._unlock_crit_edge ], [ %res.1.lcssa, %for.cond74.preheader._unlock_crit_edge ], [ %call30, %if.then34._unlock_crit_edge ], [ %res.1.lcssa, %for.body80._unlock_crit_edge ], [ %call30, %if.end50._unlock_crit_edge ], [ %call8, %if.end7._unlock_crit_edge ]
  %s.3 = phi ptr [ null, %if.then32._unlock_crit_edge ], [ %s.2209, %for.cond74.preheader._unlock_crit_edge ], [ null, %if.then34._unlock_crit_edge ], [ %s.2, %for.body80._unlock_crit_edge ], [ null, %if.end50._unlock_crit_edge ], [ %s.0194, %if.end7._unlock_crit_edge ]
  br i1 %do_lock, label %if.then89, label %_unlock.if.end126_crit_edge

_unlock.if.end126_crit_edge:                      ; preds = %_unlock
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end126

if.then89:                                        ; preds = %_unlock
  %38 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %group, align 4
  %substreams92 = getelementptr inbounds %struct.snd_pcm_group, ptr %39, i32 0, i32 2
  br label %for.cond96

for.cond96:                                       ; preds = %if.end115.for.cond96_crit_edge, %if.then89
  %.pn176.in = phi ptr [ %substreams92, %if.then89 ], [ %.pn176, %if.end115.for.cond96_crit_edge ]
  %40 = ptrtoint ptr %.pn176.in to i32
  call void @__asan_load4_noabort(i32 %40)
  %.pn176 = load ptr, ptr %.pn176.in, align 4
  %s1.1 = getelementptr i8, ptr %.pn176, i32 -140
  %41 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %group, align 4
  %substreams99 = getelementptr inbounds %struct.snd_pcm_group, ptr %42, i32 0, i32 2
  %cmp100.not = icmp eq ptr %.pn176, %substreams99
  br i1 %cmp100.not, label %for.cond96.if.end126_crit_edge, label %for.body102

for.cond96.if.end126_crit_edge:                   ; preds = %for.cond96
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end126

for.body102:                                      ; preds = %for.cond96
  %cmp103.not = icmp eq ptr %s1.1, %substream
  br i1 %cmp103.not, label %for.body102.if.end115_crit_edge, label %if.then104

for.body102.if.end115_crit_edge:                  ; preds = %for.body102
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end115

if.then104:                                       ; preds = %for.body102
  %43 = ptrtoint ptr %s1.1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %s1.1, align 4
  %nonatomic106 = getelementptr inbounds %struct.snd_pcm, ptr %44, i32 0, i32 14
  %45 = ptrtoint ptr %nonatomic106 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %nonatomic106, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool107.not = icmp eq i8 %46, 0
  br i1 %tobool107.not, label %if.else111, label %if.then108

if.then108:                                       ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #16
  %mutex110 = getelementptr i8, ptr %.pn176, i32 52
  tail call void @mutex_unlock(ptr noundef %mutex110) #14
  br label %if.end115

if.else111:                                       ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #16
  %self_group112 = getelementptr i8, ptr %.pn176, i32 8
  tail call void @_raw_spin_unlock(ptr noundef %self_group112) #14
  br label %if.end115

if.end115:                                        ; preds = %if.else111, %if.then108, %for.body102.if.end115_crit_edge
  %cmp116 = icmp eq ptr %s1.1, %s.3
  br i1 %cmp116, label %if.end115.if.end126_crit_edge, label %if.end115.for.cond96_crit_edge

if.end115.for.cond96_crit_edge:                   ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond96

if.end115.if.end126_crit_edge:                    ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end126

if.end126:                                        ; preds = %if.end115.if.end126_crit_edge, %for.cond96.if.end126_crit_edge, %_unlock.if.end126_crit_edge
  ret i32 %res.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_pcm_group_unref(ptr noundef %group, ptr nocapture noundef readonly %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %group, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %refs = getelementptr inbounds %struct.snd_pcm_group, ptr %group, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !211
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !212
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %do.end.i.i.i, label %if.end5.i.i.i

do.end.i.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !213
  br label %refcount_dec_and_test.exit

if.end5.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.refcount_dec_and_test.exit_crit_edge, label %if.then10.i.i.i, !prof !195

if.end5.i.i.i.refcount_dec_and_test.exit_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_dec_and_test.exit

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef 3) #14
  br label %refcount_dec_and_test.exit

refcount_dec_and_test.exit:                       ; preds = %if.then10.i.i.i, %if.end5.i.i.i.refcount_dec_and_test.exit_crit_edge, %do.end.i.i.i
  %1 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %2, i32 0, i32 14
  %3 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not = icmp eq i8 %4, 0
  br i1 %tobool1.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %refcount_dec_and_test.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_group, ptr %group, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i) #14
  br label %snd_pcm_group_unlock.exit

if.else.i:                                        ; preds = %refcount_dec_and_test.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock(ptr noundef nonnull %group) #14
  br label %snd_pcm_group_unlock.exit

snd_pcm_group_unlock.exit:                        ; preds = %if.else.i, %if.then.i
  br i1 %cmp.i.i.i, label %if.then3, label %snd_pcm_group_unlock.exit.cleanup_crit_edge

snd_pcm_group_unlock.exit.cleanup_crit_edge:      ; preds = %snd_pcm_group_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3:                                         ; preds = %snd_pcm_group_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef nonnull %group) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %snd_pcm_group_unlock.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @refcount_inc(ptr noundef %r) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %r, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %r, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %r, ptr %r, i32 1, ptr elementtype(i32) %r) #14, !srcloc !210
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %tobool1.not.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool1.not.i.i, label %entry.if.end15.sink.split.i.i_crit_edge, label %if.else.i.i, !prof !196

entry.if.end15.sink.split.i.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i

if.else.i.i:                                      ; preds = %entry
  %add.i.i = add i32 %asmresult.i.i.i.i, 1
  %1 = or i32 %add.i.i, %asmresult.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i, label %if.else.i.i.__refcount_inc.exit_crit_edge, label %if.else.i.i.if.end15.sink.split.i.i_crit_edge, !prof !195

if.else.i.i.if.end15.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i

if.else.i.i.__refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__refcount_inc.exit

if.end15.sink.split.i.i:                          ; preds = %if.else.i.i.if.end15.sink.split.i.i_crit_edge, %entry.if.end15.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i_crit_edge ], [ 1, %if.else.i.i.if.end15.sink.split.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %r, i32 noundef %.sink.i.i) #14
  br label %__refcount_inc.exit

__refcount_inc.exit:                              ; preds = %if.end15.sink.split.i.i, %if.else.i.i.__refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_start(ptr noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.not = icmp eq i32 %5, 2
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %6 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp3 = icmp eq i32 %7, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %stop_threshold.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 30
  %8 = ptrtoint ptr %stop_threshold.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %stop_threshold.i, align 4
  %boundary.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 33
  %10 = ptrtoint ptr %boundary.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %boundary.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp.not.i = icmp ult i32 %9, %11
  br i1 %cmp.not.i, label %snd_pcm_playback_data.exit, label %land.lhs.true.if.end5_crit_edge

land.lhs.true.if.end5_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

snd_pcm_playback_data.exit:                       ; preds = %land.lhs.true
  %hw_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %3, i32 0, i32 3
  %12 = ptrtoint ptr %hw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %hw_ptr.i.i, align 4
  %buffer_size.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %14 = ptrtoint ptr %buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %buffer_size.i.i, align 4
  %add.i.i = add i32 %15, %13
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %16 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %control.i.i, align 8
  %appl_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %appl_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %appl_ptr.i.i, align 4
  %sub.i.i = sub i32 %add.i.i, %19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %11)
  %cmp3.not.i.i = icmp ult i32 %sub.i.i, %11
  %sub6.i.i = select i1 %cmp3.not.i.i, i32 0, i32 %11
  %20 = sub i32 0, %sub6.i.i
  %avail.0.p.i.i = select i1 %cmp.i.i, i32 %11, i32 %20
  %avail.0.i.i = add i32 %avail.0.p.i.i, %sub.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %avail.0.i.i, i32 %15)
  %cmp2.i.not = icmp ult i32 %avail.0.i.i, %15
  br i1 %cmp2.i.not, label %snd_pcm_playback_data.exit.if.end5_crit_edge, label %snd_pcm_playback_data.exit.cleanup_crit_edge

snd_pcm_playback_data.exit.cleanup_crit_edge:     ; preds = %snd_pcm_playback_data.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

snd_pcm_playback_data.exit.if.end5_crit_edge:     ; preds = %snd_pcm_playback_data.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.end5:                                          ; preds = %snd_pcm_playback_data.exit.if.end5_crit_edge, %land.lhs.true.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %trigger_tstamp_latched = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 2
  %21 = ptrtoint ptr %trigger_tstamp_latched to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %trigger_tstamp_latched, align 8
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %substream, ptr %1, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %snd_pcm_playback_data.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -77, %entry.cleanup_crit_edge ], [ -32, %snd_pcm_playback_data.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_start(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp.not = icmp eq ptr %3, %substream
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %trigger, align 4
  %call = tail call i32 %7(ptr noundef %substream, i32 noundef 1) #14
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_undo_start(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp = icmp eq ptr %3, %substream
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %trigger, align 4
  %call = tail call i32 %7(ptr noundef %substream, i32 noundef 0) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_start(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %hw_ptr_jiffies = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 7
  %3 = ptrtoint ptr %hw_ptr_jiffies to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %hw_ptr_jiffies, align 4
  %buffer_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %4 = ptrtoint ptr %buffer_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %buffer_size, align 4
  %mul = mul i32 %5, 100
  %rate = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 14
  %6 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rate, align 4
  %div = udiv i32 %mul, %7
  %hw_ptr_buffer_jiffies = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 8
  %8 = ptrtoint ptr %hw_ptr_buffer_jiffies to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %div, ptr %hw_ptr_buffer_jiffies, align 8
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %status, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %state, ptr %10, align 8
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %12 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp = icmp eq i32 %13, 0
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %silence_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 32
  %14 = ptrtoint ptr %silence_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %silence_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3.not = icmp eq i32 %15, 0
  br i1 %cmp3.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @snd_pcm_playback_silence(ptr noundef %substream, i32 noundef -1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %timer.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %16 = ptrtoint ptr %timer.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %timer.i, align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end.snd_pcm_timer_notify.exit_crit_edge, label %if.then.i

if.end.snd_pcm_timer_notify.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_timer_notify.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %19, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %17, i32 noundef 12, ptr noundef %trigger_tstamp.i) #14
  br label %snd_pcm_timer_notify.exit

snd_pcm_timer_notify.exit:                        ; preds = %if.then.i, %if.end.snd_pcm_timer_notify.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_pcm_trigger_tstamp(ptr noundef readonly %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp = icmp eq ptr %3, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq ptr %3, %substream
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %trigger_tstamp_latched = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %trigger_tstamp_latched to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %trigger_tstamp_latched, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.then5, label %if.then4.if.end12_crit_edge

if.then4.if.end12_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then5:                                         ; preds = %if.then4
  %trigger_tstamp = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 1
  %tstamp_type.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 49
  %6 = ptrtoint ptr %tstamp_type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tstamp_type.i, align 8
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.89)
  switch i32 %7, label %sw.default.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb1.i
  ]

sw.bb.i:                                          ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @ktime_get_ts64(ptr noundef %trigger_tstamp) #14
  br label %if.end12

sw.bb1.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @ktime_get_raw_ts64(ptr noundef %trigger_tstamp) #14
  br label %if.end12

sw.default.i:                                     ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @ktime_get_real_ts64(ptr noundef %trigger_tstamp) #14
  br label %if.end12

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef nonnull %3)
  %trigger_tstamp8 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 1
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 8
  %runtime10 = getelementptr inbounds %struct.snd_pcm_substream, ptr %10, i32 0, i32 11
  %11 = ptrtoint ptr %runtime10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %runtime10, align 4
  %trigger_tstamp11 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %12, i32 0, i32 1
  %13 = call ptr @memcpy(ptr %trigger_tstamp8, ptr %trigger_tstamp11, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %sw.default.i, %sw.bb1.i, %sw.bb.i, %if.then4.if.end12_crit_edge
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %1, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_pcm_playback_silence(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_timer_notify(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_stop(ptr noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %substream, ptr %1, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -77, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_stop(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp = icmp eq ptr %3, %substream
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.90)
  switch i32 %7, label %land.lhs.true.if.end_crit_edge [
    i32 3, label %land.lhs.true.if.then_crit_edge
    i32 5, label %snd_pcm_running.exit
  ]

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_running.exit:                             ; preds = %land.lhs.true
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %9 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp5.i.not = icmp eq i32 %10, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.if.then_crit_edge, label %snd_pcm_running.exit.if.end_crit_edge

snd_pcm_running.exit.if.end_crit_edge:            ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_running.exit.if.then_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %snd_pcm_running.exit.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %12, i32 0, i32 6
  %13 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %trigger, align 4
  %call1 = tail call i32 %14(ptr noundef %substream, i32 noundef 0) #14
  %15 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %runtime, align 4
  %stop_operating = getelementptr inbounds %struct.snd_pcm_runtime, ptr %16, i32 0, i32 43
  %17 = ptrtoint ptr %stop_operating to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 1, ptr %stop_operating, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %snd_pcm_running.exit.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_stop(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %state)
  %cmp.not = icmp eq i32 %5, %state
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream)
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %state, ptr %7, align 8
  %timer.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %9 = ptrtoint ptr %timer.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %timer.i, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %if.then.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %12, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %10, i32 noundef 13, ptr noundef %trigger_tstamp.i) #14
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %sleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_suspend(ptr noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %5)
  %6 = icmp ult i32 %5, 9
  br i1 %6, label %switch.hole_check, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %switch.hole_check.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %substream, ptr %1, align 8
  br label %cleanup

switch.hole_check:                                ; preds = %entry
  %switch.maskindex = trunc i32 %5 to i16
  %switch.shifted = lshr i16 387, %switch.maskindex
  %8 = and i16 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %switch.lobit.not = icmp eq i16 %8, 0
  br i1 %switch.lobit.not, label %switch.hole_check.sw.epilog_crit_edge, label %switch.hole_check.cleanup_crit_edge

switch.hole_check.cleanup_crit_edge:              ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

switch.hole_check.sw.epilog_crit_edge:            ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

cleanup:                                          ; preds = %switch.hole_check.cleanup_crit_edge, %sw.epilog
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -16, %switch.hole_check.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_suspend(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp.not = icmp eq ptr %3, %substream
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.91)
  switch i32 %7, label %if.end.cleanup_crit_edge [
    i32 3, label %if.end.if.end3_crit_edge
    i32 5, label %snd_pcm_running.exit
  ]

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

snd_pcm_running.exit:                             ; preds = %if.end
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %9 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp5.i.not = icmp eq i32 %10, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.if.end3_crit_edge, label %snd_pcm_running.exit.cleanup_crit_edge

snd_pcm_running.exit.cleanup_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

snd_pcm_running.exit.if.end3_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.end3:                                          ; preds = %snd_pcm_running.exit.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %12, i32 0, i32 6
  %13 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %trigger, align 4
  %call4 = tail call i32 %14(ptr noundef %substream, i32 noundef 5) #14
  %stop_operating = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 43
  %15 = ptrtoint ptr %stop_operating to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 1, ptr %stop_operating, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %snd_pcm_running.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_suspend(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream)
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  %suspended_state = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %3, i32 0, i32 6
  %6 = ptrtoint ptr %suspended_state to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %suspended_state, align 8
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 7, ptr %7, align 8
  %timer.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %9 = ptrtoint ptr %timer.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %timer.i, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %entry.snd_pcm_timer_notify.exit_crit_edge, label %if.then.i

entry.snd_pcm_timer_notify.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_timer_notify.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %12, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %10, i32 noundef 17, ptr noundef %trigger_tstamp.i) #14
  br label %snd_pcm_timer_notify.exit

snd_pcm_timer_notify.exit:                        ; preds = %if.then.i, %entry.snd_pcm_timer_notify.exit_crit_edge
  %sleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_pcm_pause(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_pause, ptr noundef %substream, i32 noundef 0, i1 noundef zeroext true) #14
  br label %snd_pcm_action.exit

if.else.i:                                        ; preds = %entry
  %runtime1.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1.i, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %info.i, align 8
  %and.i = and i32 %3, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i1 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i1, label %if.else.i.snd_pcm_action.exit_crit_edge, label %if.end.i2

if.else.i.snd_pcm_action.exit_crit_edge:          ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.end.i2:                                        ; preds = %if.else.i
  %status7.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status7.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status7.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %7)
  %cmp9.not.i = icmp eq i32 %7, 6
  br i1 %cmp9.not.i, label %if.end.i.i, label %if.end.i2.snd_pcm_action.exit_crit_edge

if.end.i2.snd_pcm_action.exit_crit_edge:          ; preds = %if.end.i2
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.end.i.i:                                       ; preds = %if.end.i2
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %substream, ptr %1, align 8
  %9 = ptrtoint ptr %runtime1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %runtime1.i, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  %cmp.not.i = icmp eq ptr %12, %substream
  br i1 %cmp.not.i, label %snd_pcm_do_pause.exit, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

snd_pcm_do_pause.exit:                            ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %13 = load volatile i32, ptr @jiffies, align 128
  %sub.i = add i32 %13, -100000
  %hw_ptr_jiffies.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %10, i32 0, i32 7
  %14 = ptrtoint ptr %hw_ptr_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %sub.i, ptr %hw_ptr_jiffies.i, align 4
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %15 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i, align 4
  %trigger.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %trigger.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %trigger.i, align 4
  %call5.i = tail call i32 %18(ptr noundef %substream, i32 noundef 4) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp2.i.i = icmp eq i32 %call5.i, 0
  %spec.select = select i1 %cmp2.i.i, ptr @snd_pcm_post_pause, ptr @snd_pcm_undo_pause
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %snd_pcm_do_pause.exit, %if.end.i.i.cleanup.sink.split.i.i_crit_edge
  %.sink.i.i = phi ptr [ @snd_pcm_post_pause, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ], [ %spec.select, %snd_pcm_do_pause.exit ]
  tail call void %.sink.i.i(ptr noundef %substream, i32 noundef 0) #14
  br label %snd_pcm_action.exit

snd_pcm_action.exit:                              ; preds = %cleanup.sink.split.i.i, %if.end.i2.snd_pcm_action.exit_crit_edge, %if.else.i.snd_pcm_action.exit_crit_edge, %if.then.i
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %call.i, ptr noundef %substream) #14
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_pause(ptr noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %info = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %info, align 8
  %and = and i32 %3, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %tobool2.not = icmp eq i32 %state, 0
  %status7 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status7 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status7, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %7)
  %cmp.not = icmp eq i32 %7, 3
  br i1 %cmp.not, label %if.then3.if.end12_crit_edge, label %if.then3.cleanup_crit_edge

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3.if.end12_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %7)
  %cmp9.not = icmp eq i32 %7, 6
  br i1 %cmp9.not, label %if.else.if.end12_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.end12:                                         ; preds = %if.else.if.end12_crit_edge, %if.then3.if.end12_crit_edge
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %substream, ptr %1, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.else.cleanup_crit_edge, %if.then3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ -38, %entry.cleanup_crit_edge ], [ -77, %if.then3.cleanup_crit_edge ], [ -77, %if.else.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_pause(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp.not = icmp eq ptr %3, %substream
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %tobool.not = icmp eq i32 %state, 0
  br i1 %tobool.not, label %if.end.if.end2_crit_edge, label %if.then1

if.end.if.end2_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end2

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @snd_pcm_update_hw_ptr(ptr noundef %substream) #14
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end.if.end2_crit_edge
  %cond = phi i32 [ 3, %if.then1 ], [ 4, %if.end.if.end2_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub = add i32 %4, -100000
  %5 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %runtime, align 4
  %hw_ptr_jiffies = getelementptr inbounds %struct.snd_pcm_runtime, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %hw_ptr_jiffies to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %sub, ptr %hw_ptr_jiffies, align 4
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %8 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %trigger, align 4
  %call5 = tail call i32 %11(ptr noundef %substream, i32 noundef %cond) #14
  br label %return

return:                                           ; preds = %if.end2, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end2 ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_undo_pause(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp = icmp eq ptr %3, %substream
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %trigger, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %tobool.not = icmp eq i32 %state, 0
  %cond = select i1 %tobool.not, i32 3, i32 4
  %call = tail call i32 %7(ptr noundef %substream, i32 noundef %cond) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_pause(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %tobool.not = icmp eq i32 %state, 0
  %status3 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status3, align 4
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 6, ptr %3, align 8
  %timer.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %5 = ptrtoint ptr %timer.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %timer.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.then.snd_pcm_timer_notify.exit_crit_edge, label %if.then.i

if.then.snd_pcm_timer_notify.exit_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_timer_notify.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %8, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %6, i32 noundef 15, ptr noundef %trigger_tstamp.i) #14
  br label %snd_pcm_timer_notify.exit

snd_pcm_timer_notify.exit:                        ; preds = %if.then.i, %if.then.snd_pcm_timer_notify.exit_crit_edge
  %sleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  br label %if.end

if.else:                                          ; preds = %entry
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 3, ptr %3, align 8
  %timer.i11 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %10 = ptrtoint ptr %timer.i11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %timer.i11, align 4
  %tobool.not.i12 = icmp eq ptr %11, null
  br i1 %tobool.not.i12, label %if.else.if.end_crit_edge, label %if.then.i15

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i15:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i14 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %13, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %11, i32 noundef 14, ptr noundef %trigger_tstamp.i14) #14
  br label %if.end

if.end:                                           ; preds = %if.then.i15, %if.else.if.end_crit_edge, %snd_pcm_timer_notify.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_lib_free_pages(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_rule_add(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_format(ptr nocapture noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %old.i = alloca %struct.snd_mask, align 4
  %m = alloca %struct.snd_mask, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %deps = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2
  %0 = ptrtoint ptr %deps to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %deps, align 4
  %sub.i = add i32 %1, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %m) #14
  %2 = getelementptr inbounds [8 x i32], ptr %m, i32 0, i32 1
  %arrayidx.i25 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1
  %max = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i, i32 1
  %3 = call ptr @memset(ptr %m, i32 255, i32 32)
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry
  %k.028 = phi i32 [ 0, %entry ], [ %add, %cleanup.for.body_crit_edge ]
  %shr.i.i = lshr i32 %k.028, 5
  %arrayidx.i.i = getelementptr [8 x i32], ptr %arrayidx.i25, i32 0, i32 %shr.i.i
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %k.028, 31
  %shl.i.i = shl nuw i32 1, %and.i.i
  %and1.i.i = and i32 %5, %shl.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %for.body
  %call3 = tail call i32 @snd_pcm_format_physical_width(i32 noundef %k.028) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call3)
  %cmp4 = icmp slt i32 %call3, 1
  br i1 %cmp4, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call3, i32 %7)
  %cmp7 = icmp ult i32 %call3, %7
  br i1 %cmp7, label %if.end6.if.then9_crit_edge, label %lor.lhs.false

if.end6.if.then9_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

lor.lhs.false:                                    ; preds = %if.end6
  %8 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call3, i32 %9)
  %cmp8 = icmp ugt i32 %call3, %9
  br i1 %cmp8, label %lor.lhs.false.if.then9_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.if.then9_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.then9:                                         ; preds = %lor.lhs.false.if.then9_crit_edge, %if.end6.if.then9_crit_edge
  %neg.i = xor i32 %shl.i.i, -1
  %arrayidx.i26 = getelementptr [8 x i32], ptr %m, i32 0, i32 %shr.i.i
  %10 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i26, align 4
  %and1.i = and i32 %11, %neg.i
  store i32 %and1.i, ptr %arrayidx.i26, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %add = add nuw nsw i32 %k.028, 1
  %exitcond.not = icmp eq i32 %add, 53
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %old.i) #14
  %12 = call ptr @memcpy(ptr %old.i, ptr %arrayidx.i25, i32 32)
  %13 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %m, align 8
  %15 = ptrtoint ptr %arrayidx.i25 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i25, align 4
  %and.i.i27 = and i32 %16, %14
  store i32 %and.i.i27, ptr %arrayidx.i25, align 4
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %2, align 4
  %arrayidx2.1.i.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1, i32 0, i32 1
  %19 = ptrtoint ptr %arrayidx2.1.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx2.1.i.i, align 4
  %and.1.i.i = and i32 %20, %18
  store i32 %and.1.i.i, ptr %arrayidx2.1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i27)
  %tobool.not.i.i = icmp eq i32 %and.i.i27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i.i)
  %tobool.not.1.i.not.i = icmp eq i32 %and.1.i.i, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 %tobool.not.1.i.not.i, i1 false
  br i1 %or.cond.i, label %for.end.snd_mask_refine.exit_crit_edge, label %if.end.i

for.end.snd_mask_refine.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_mask_refine.exit

if.end.i:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %bcmp.i.i = call i32 @bcmp(ptr noundef dereferenceable(8) %arrayidx.i25, ptr noundef nonnull dereferenceable(8) %old.i, i32 8) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i.i)
  %tobool.not.i7.i = icmp ne i32 %bcmp.i.i, 0
  %lnot.ext.i = zext i1 %tobool.not.i7.i to i32
  br label %snd_mask_refine.exit

snd_mask_refine.exit:                             ; preds = %if.end.i, %for.end.snd_mask_refine.exit_crit_edge
  %retval.0.i = phi i32 [ %lnot.ext.i, %if.end.i ], [ -22, %for.end.snd_mask_refine.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %old.i) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %m) #14
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_sample_bits(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %t = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %t) #14
  %0 = getelementptr inbounds i8, ptr %t, i32 8
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %openmin = getelementptr inbounds %struct.snd_interval, ptr %t, i32 0, i32 2
  %2 = ptrtoint ptr %openmin to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 63, ptr %openmin, align 4
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry
  %k.042 = phi i32 [ 0, %entry ], [ %add, %cleanup.for.body_crit_edge ]
  %call53741 = phi i32 [ -1, %entry ], [ %call536, %cleanup.for.body_crit_edge ]
  %call53940 = phi i32 [ 0, %entry ], [ %call538, %cleanup.for.body_crit_edge ]
  %shr.i.i = lshr i32 %k.042, 5
  %arrayidx.i.i = getelementptr [8 x i32], ptr %arrayidx.i, i32 0, i32 %shr.i.i
  %3 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %k.042, 31
  %shl.i.i = shl nuw i32 1, %and.i.i
  %and1.i.i = and i32 %4, %shl.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %for.body
  %call5 = tail call i32 @snd_pcm_format_physical_width(i32 noundef %k.042) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call5)
  %cmp6 = icmp slt i32 %call5, 1
  br i1 %cmp6, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %5 = call i32 @llvm.umin.i32(i32 %call53741, i32 %call5)
  %6 = call i32 @llvm.umax.i32(i32 %call53940, i32 %call5)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %call538 = phi i32 [ %call53940, %if.end.cleanup_crit_edge ], [ %call53940, %for.body.cleanup_crit_edge ], [ %6, %if.end8 ]
  %call536 = phi i32 [ %call53741, %if.end.cleanup_crit_edge ], [ %call53741, %for.body.cleanup_crit_edge ], [ %5, %if.end8 ]
  %add = add nuw nsw i32 %k.042, 1
  %exitcond.not = icmp eq i32 %add, 53
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  %max = getelementptr inbounds %struct.snd_interval, ptr %t, i32 0, i32 1
  %7 = ptrtoint ptr %t to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call536, ptr %t, align 4
  %8 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call538, ptr %max, align 4
  %9 = ptrtoint ptr %openmin to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load19 = load i8, ptr %openmin, align 4
  %bf.set21 = or i8 %bf.load19, 32
  store i8 %bf.set21, ptr %openmin, align 4
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %10 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %var, align 4
  %sub.i = add i32 %11, -8
  %arrayidx.i34 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %call23 = call i32 @snd_interval_refine(ptr noundef %arrayidx.i34, ptr noundef nonnull %t) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %t) #14
  ret i32 %call23
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_div(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %t = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %t) #14
  %0 = call ptr @memset(ptr %t, i32 255, i32 12)
  %deps = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2
  %1 = ptrtoint ptr %deps to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %deps, align 4
  %sub.i = add i32 %2, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %arrayidx2 = getelementptr %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2, i32 1
  %3 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx2, align 4
  %sub.i10 = add i32 %4, -8
  %arrayidx.i11 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i10
  call void @snd_interval_div(ptr noundef %arrayidx.i, ptr noundef %arrayidx.i11, ptr noundef nonnull %t) #14
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %5 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %var, align 4
  %sub.i12 = add i32 %6, -8
  %arrayidx.i13 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i12
  %call5 = call i32 @snd_interval_refine(ptr noundef %arrayidx.i13, ptr noundef nonnull %t) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %t) #14
  ret i32 %call5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_mul(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %t = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %t) #14
  %0 = call ptr @memset(ptr %t, i32 255, i32 12)
  %deps = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2
  %1 = ptrtoint ptr %deps to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %deps, align 4
  %sub.i = add i32 %2, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %arrayidx2 = getelementptr %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2, i32 1
  %3 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx2, align 4
  %sub.i10 = add i32 %4, -8
  %arrayidx.i11 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i10
  call void @snd_interval_mul(ptr noundef %arrayidx.i, ptr noundef %arrayidx.i11, ptr noundef nonnull %t) #14
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %5 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %var, align 4
  %sub.i12 = add i32 %6, -8
  %arrayidx.i13 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i12
  %call5 = call i32 @snd_interval_refine(ptr noundef %arrayidx.i13, ptr noundef nonnull %t) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %t) #14
  ret i32 %call5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_mulkdiv(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %t = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %t) #14
  %0 = call ptr @memset(ptr %t, i32 255, i32 12)
  %deps = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2
  %1 = ptrtoint ptr %deps to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %deps, align 4
  %sub.i = add i32 %2, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %private = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 4
  %3 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private, align 4
  %5 = ptrtoint ptr %4 to i32
  %arrayidx2 = getelementptr %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2, i32 1
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx2, align 4
  %sub.i11 = add i32 %7, -8
  %arrayidx.i12 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i11
  call void @snd_interval_mulkdiv(ptr noundef %arrayidx.i, i32 noundef %5, ptr noundef %arrayidx.i12, ptr noundef nonnull %t) #14
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %8 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %var, align 4
  %sub.i13 = add i32 %9, -8
  %arrayidx.i14 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i13
  %call5 = call i32 @snd_interval_refine(ptr noundef %arrayidx.i14, ptr noundef nonnull %t) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %t) #14
  ret i32 %call5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_muldivk(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %t = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %t) #14
  %0 = call ptr @memset(ptr %t, i32 255, i32 12)
  %deps = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2
  %1 = ptrtoint ptr %deps to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %deps, align 4
  %sub.i = add i32 %2, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %arrayidx2 = getelementptr %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 2, i32 1
  %3 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx2, align 4
  %sub.i11 = add i32 %4, -8
  %arrayidx.i12 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i11
  %private = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 4
  %5 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @snd_interval_muldivk(ptr noundef %arrayidx.i, ptr noundef %arrayidx.i12, i32 noundef %7, ptr noundef nonnull %t) #14
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %8 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %var, align 4
  %sub.i13 = add i32 %9, -8
  %arrayidx.i14 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i13
  %call5 = call i32 @snd_interval_refine(ptr noundef %arrayidx.i14, ptr noundef nonnull %t) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %t) #14
  ret i32 %call5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_format_physical_width(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_interval_div(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_interval_mul(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_interval_mulkdiv(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_interval_muldivk(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_constraint_mask(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_constraint_mask64(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_constraint_minmax(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_buffer_bytes_max(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  %t = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %t) #14
  %0 = getelementptr inbounds i8, ptr %t, i32 8
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %private = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 4
  %2 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private, align 4
  %4 = ptrtoint ptr %t to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %t, align 4
  %buffer_bytes_max = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 7
  %5 = ptrtoint ptr %buffer_bytes_max to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %buffer_bytes_max, align 4
  %max = getelementptr inbounds %struct.snd_interval, ptr %t, i32 0, i32 1
  %7 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %max, align 4
  %openmin = getelementptr inbounds %struct.snd_interval, ptr %t, i32 0, i32 2
  %8 = ptrtoint ptr %openmin to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 63, ptr %openmin, align 4
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %9 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %var, align 4
  %sub.i = add i32 %10, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %call7 = call i32 @snd_interval_refine(ptr noundef %arrayidx.i, ptr noundef nonnull %t) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %t) #14
  ret i32 %call7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_hw_rule_rate(ptr noundef %params, ptr nocapture noundef readonly %rule) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 4
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %var = getelementptr inbounds %struct.snd_pcm_hw_rule, ptr %rule, i32 0, i32 1
  %2 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %var, align 4
  %sub.i = add i32 %3, -8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %sub.i
  %rates = getelementptr inbounds %struct.snd_pcm_hardware, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rates to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rates, align 8
  %call1 = tail call i32 @snd_interval_list(ptr noundef %arrayidx.i, i32 noundef 15, ptr noundef nonnull @rates, i32 noundef %5) #14
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_constraint_integer(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @dma_can_mmap(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_interval_list(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcm_lib_apply_appl_ptr(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_dma_buffer_sync(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_params_choose(ptr noundef %pcm, ptr noundef %params) unnamed_addr #0 align 64 {
entry:
  %old_mask = alloca %struct.snd_mask, align 4
  %old_interval = alloca %struct.snd_interval, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %old_mask) #14
  %0 = call ptr @memset(ptr %old_mask, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %old_interval) #14
  %1 = call ptr @memset(ptr %old_interval, i32 255, i32 12)
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %v.069 = phi ptr [ @snd_pcm_hw_params_choose.vars, %entry ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_mask_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@snd_pcm_hw_params_choose, %if.then)) #14
          to label %if.end4 [label %if.then], !srcloc !200

if.then:                                          ; preds = %for.body
  %2 = ptrtoint ptr %v.069 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %v.069, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %4 = icmp ugt i32 %3, 2
  br i1 %4, label %if.then.if.end4_crit_edge, label %if.then2

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 %3
  %5 = call ptr @memcpy(ptr %old_mask, ptr %arrayidx.i, i32 32)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.then.if.end4_crit_edge, %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_hw_interval_param, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@snd_pcm_hw_params_choose, %if.then6)) #14
          to label %if.end12 [label %if.then6], !srcloc !200

if.then6:                                         ; preds = %if.end4
  %6 = ptrtoint ptr %v.069 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %v.069, align 4
  %8 = add i32 %7, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %8)
  %9 = icmp ugt i32 %8, 11
  br i1 %9, label %if.then6.if.end12_crit_edge, label %if.then9

if.then6.if.end12_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then9:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i63 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %8
  %10 = call ptr @memcpy(ptr %old_interval, ptr %arrayidx.i63, i32 12)
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.then6.if.end12_crit_edge, %if.end4
  %11 = ptrtoint ptr %v.069 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %v.069, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %12)
  %cmp13.not = icmp eq i32 %12, 17
  br i1 %cmp13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %call15 = call i32 @snd_pcm_hw_param_first(ptr noundef %pcm, ptr noundef %params, i32 noundef %12, ptr noundef null) #14
  br label %if.end17

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %call16 = call i32 @snd_pcm_hw_param_last(ptr noundef %pcm, ptr noundef %params, i32 noundef 17, ptr noundef null) #14
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then14
  %changed.0 = phi i32 [ %call15, %if.then14 ], [ %call16, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %changed.0)
  %cmp18 = icmp slt i32 %changed.0, 0
  br i1 %cmp18, label %if.end17.cleanup_crit_edge, label %if.end20

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %changed.0)
  %cmp21 = icmp eq i32 %changed.0, 0
  br i1 %cmp21, label %if.end20.for.inc_crit_edge, label %if.end23

if.end20.for.inc_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end23:                                         ; preds = %if.end20
  %13 = ptrtoint ptr %v.069 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %v.069, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %14)
  %15 = icmp ugt i32 %14, 2
  br i1 %15, label %if.end23.if.end28_crit_edge, label %if.then26

if.end23.if.end28_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then26:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i64 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 %14
  call fastcc void @trace_hw_mask_param(ptr noundef %pcm, i32 noundef %14, i32 noundef 0, ptr noundef nonnull %old_mask, ptr noundef %arrayidx.i64)
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end23.if.end28_crit_edge
  %16 = ptrtoint ptr %v.069 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %v.069, align 4
  %18 = add i32 %17, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %18)
  %19 = icmp ugt i32 %18, 11
  br i1 %19, label %if.end28.for.inc_crit_edge, label %if.then31

if.end28.for.inc_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then31:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i66 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 %18
  call fastcc void @trace_hw_interval_param(ptr noundef %pcm, i32 noundef %17, i32 noundef 0, ptr noundef nonnull %old_interval, ptr noundef %arrayidx.i66)
  br label %for.inc

for.inc:                                          ; preds = %if.then31, %if.end28.for.inc_crit_edge, %if.end20.for.inc_crit_edge
  %incdec.ptr = getelementptr i32, ptr %v.069, i32 1
  %20 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %incdec.ptr, align 4
  %cmp.not = icmp eq i32 %21, -1
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end17.cleanup_crit_edge
  %retval.0 = phi i32 [ %changed.0, %if.end17.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %old_interval) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %old_mask) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @fixup_unreferenced_params(ptr noundef %substream, ptr noundef %params) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %msbits = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 8
  %0 = ptrtoint ptr %msbits to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %msbits, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then:                                          ; preds = %entry
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 0
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i, align 4
  %max.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 0, i32 1
  %4 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %max.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %5)
  %cmp.i = icmp eq i32 %3, %5
  br i1 %cmp.i, label %if.then.if.then3_crit_edge, label %lor.rhs.i

if.then.if.then3_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3

lor.rhs.i:                                        ; preds = %if.then
  %add.i = add i32 %3, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %5)
  %cmp3.i = icmp eq i32 %add.i, %5
  br i1 %cmp3.i, label %land.rhs.i, label %lor.rhs.i.if.end6_crit_edge

lor.rhs.i.if.end6_crit_edge:                      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

land.rhs.i:                                       ; preds = %lor.rhs.i
  %openmin.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 0, i32 2
  %6 = ptrtoint ptr %openmin.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i = load i8, ptr %openmin.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %bf.load.i)
  %tobool2.not = icmp ult i8 %bf.load.i, 64
  br i1 %tobool2.not, label %land.rhs.i.if.end6_crit_edge, label %land.rhs.i.if.then3_crit_edge

land.rhs.i.if.then3_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then3

land.rhs.i.if.end6_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then3:                                         ; preds = %land.rhs.i.if.then3_crit_edge, %if.then.if.then3_crit_edge
  %openmin.i65 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 0, i32 2
  %7 = ptrtoint ptr %openmin.i65 to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i66 = load i8, ptr %openmin.i65, align 4
  %8 = and i8 %bf.load.i66, -64
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %8)
  %9 = icmp eq i8 %8, -128
  %retval.0.in.i = select i1 %9, ptr %max.i, ptr %arrayidx.i
  %10 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %retval.0.i = load i32, ptr %retval.0.in.i, align 4
  %11 = ptrtoint ptr %msbits to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %retval.0.i, ptr %msbits, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %land.rhs.i.if.end6_crit_edge, %lor.rhs.i.if.end6_crit_edge, %entry.if.end6_crit_edge
  %rate_den = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 10
  %12 = ptrtoint ptr %rate_den to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rate_den, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool7.not = icmp eq i32 %13, 0
  br i1 %tobool7.not, label %if.then8, label %if.end6.if.end16_crit_edge

if.end6.if.end16_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then8:                                         ; preds = %if.end6
  %arrayidx.i68 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 3
  %14 = ptrtoint ptr %arrayidx.i68 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i68, align 4
  %max.i69 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 3, i32 1
  %16 = ptrtoint ptr %max.i69 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %max.i69, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %17)
  %cmp.i70 = icmp eq i32 %15, %17
  br i1 %cmp.i70, label %if.then8.if.then12_crit_edge, label %lor.rhs.i73

if.then8.if.then12_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then12

lor.rhs.i73:                                      ; preds = %if.then8
  %add.i71 = add i32 %15, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i71, i32 %17)
  %cmp3.i72 = icmp eq i32 %add.i71, %17
  br i1 %cmp3.i72, label %land.rhs.i77, label %lor.rhs.i73.if.end16_crit_edge

lor.rhs.i73.if.end16_crit_edge:                   ; preds = %lor.rhs.i73
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

land.rhs.i77:                                     ; preds = %lor.rhs.i73
  %openmin.i74 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 3, i32 2
  %18 = ptrtoint ptr %openmin.i74 to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load.i75 = load i8, ptr %openmin.i74, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %bf.load.i75)
  %tobool11.not = icmp ult i8 %bf.load.i75, 64
  br i1 %tobool11.not, label %land.rhs.i77.if.end16_crit_edge, label %land.rhs.i77.if.then12_crit_edge

land.rhs.i77.if.then12_crit_edge:                 ; preds = %land.rhs.i77
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then12

land.rhs.i77.if.end16_crit_edge:                  ; preds = %land.rhs.i77
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then12:                                        ; preds = %land.rhs.i77.if.then12_crit_edge, %if.then8.if.then12_crit_edge
  %openmin.i82 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 3, i32 2
  %19 = ptrtoint ptr %openmin.i82 to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load.i83 = load i8, ptr %openmin.i82, align 4
  %20 = and i8 %bf.load.i83, -64
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %20)
  %21 = icmp eq i8 %20, -128
  %retval.0.in.i85 = select i1 %21, ptr %max.i69, ptr %arrayidx.i68
  %22 = ptrtoint ptr %retval.0.in.i85 to i32
  call void @__asan_load4_noabort(i32 %22)
  %retval.0.i86 = load i32, ptr %retval.0.in.i85, align 4
  %rate_num = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 9
  %23 = ptrtoint ptr %rate_num to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %retval.0.i86, ptr %rate_num, align 4
  %24 = ptrtoint ptr %rate_den to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 1, ptr %rate_den, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %land.rhs.i77.if.end16_crit_edge, %lor.rhs.i73.if.end16_crit_edge, %if.end6.if.end16_crit_edge
  %fifo_size = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 11
  %25 = ptrtoint ptr %fifo_size to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %fifo_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool17.not = icmp eq i32 %26, 0
  br i1 %tobool17.not, label %if.then18, label %if.end16.if.end30_crit_edge

if.end16.if.end30_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then18:                                        ; preds = %if.end16
  %arrayidx.i87 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1
  %arrayidx.i88 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 2
  %27 = ptrtoint ptr %arrayidx.i87 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i87, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i89 = icmp eq i32 %28, 0
  %29 = tail call i32 @llvm.ctpop.i32(i32 %28) #14, !range !201
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %29)
  %tobool5.not.i = icmp ult i32 %29, 2
  %or.cond.i = or i1 %tobool.not.i89, %tobool5.not.i
  br i1 %or.cond.i, label %for.inc.i, label %if.then18.if.end30_crit_edge

if.then18.if.end30_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

for.inc.i:                                        ; preds = %if.then18
  %arrayidx.1.i = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 1, i32 1, i32 0, i32 1
  %30 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.1.i = icmp eq i32 %31, 0
  br i1 %tobool.not.1.i, label %for.inc.i.land.lhs.true_crit_edge, label %if.end.1.i

for.inc.i.land.lhs.true_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.end.1.i:                                       ; preds = %for.inc.i
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #14, !range !201
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %32)
  %tobool5.not.1.i = icmp ult i32 %32, 2
  %or.cond.1.i = select i1 %tobool5.not.1.i, i1 %tobool.not.i89, i1 false
  br i1 %or.cond.1.i, label %if.end.1.i.land.lhs.true_crit_edge, label %if.end.1.i.if.end30_crit_edge

if.end.1.i.if.end30_crit_edge:                    ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.end.1.i.land.lhs.true_crit_edge:               ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.1.i.land.lhs.true_crit_edge, %for.inc.i.land.lhs.true_crit_edge
  %33 = ptrtoint ptr %arrayidx.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i88, align 4
  %max.i91 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 2, i32 1
  %35 = ptrtoint ptr %max.i91 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %max.i91, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %36)
  %cmp.i92 = icmp eq i32 %34, %36
  br i1 %cmp.i92, label %land.lhs.true.if.then25_crit_edge, label %lor.rhs.i95

land.lhs.true.if.then25_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then25

lor.rhs.i95:                                      ; preds = %land.lhs.true
  %add.i93 = add i32 %34, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i93, i32 %36)
  %cmp3.i94 = icmp eq i32 %add.i93, %36
  br i1 %cmp3.i94, label %land.rhs.i99, label %lor.rhs.i95.if.end30_crit_edge

lor.rhs.i95.if.end30_crit_edge:                   ; preds = %lor.rhs.i95
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.rhs.i99:                                     ; preds = %lor.rhs.i95
  %openmin.i96 = getelementptr %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 3, i32 2, i32 2
  %37 = ptrtoint ptr %openmin.i96 to i32
  call void @__asan_load1_noabort(i32 %37)
  %bf.load.i97 = load i8, ptr %openmin.i96, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %bf.load.i97)
  %tobool24.not = icmp ult i8 %bf.load.i97, 64
  br i1 %tobool24.not, label %land.rhs.i99.if.end30_crit_edge, label %land.rhs.i99.if.then25_crit_edge

land.rhs.i99.if.then25_crit_edge:                 ; preds = %land.rhs.i99
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then25

land.rhs.i99.if.end30_crit_edge:                  ; preds = %land.rhs.i99
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then25:                                        ; preds = %land.rhs.i99.if.then25_crit_edge, %land.lhs.true.if.then25_crit_edge
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %38 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ops.i, align 4
  %ioctl.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %ioctl.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ioctl.i, align 4
  %tobool.not.i104 = icmp eq ptr %41, null
  br i1 %tobool.not.i104, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %41(ptr noundef %substream, i32 noundef 4, ptr noundef %params) #14
  br label %snd_pcm_ops_ioctl.exit

if.else.i:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i = tail call i32 @snd_pcm_lib_ioctl(ptr noundef %substream, i32 noundef 4, ptr noundef %params) #14
  br label %snd_pcm_ops_ioctl.exit

snd_pcm_ops_ioctl.exit:                           ; preds = %if.else.i, %if.then.i
  %retval.0.i105 = phi i32 [ %call.i, %if.then.i ], [ %call3.i, %if.else.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i105)
  %cmp = icmp slt i32 %retval.0.i105, 0
  br i1 %cmp, label %snd_pcm_ops_ioctl.exit.cleanup_crit_edge, label %snd_pcm_ops_ioctl.exit.if.end30_crit_edge

snd_pcm_ops_ioctl.exit.if.end30_crit_edge:        ; preds = %snd_pcm_ops_ioctl.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

snd_pcm_ops_ioctl.exit.cleanup_crit_edge:         ; preds = %snd_pcm_ops_ioctl.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end30:                                         ; preds = %snd_pcm_ops_ioctl.exit.if.end30_crit_edge, %land.rhs.i99.if.end30_crit_edge, %lor.rhs.i95.if.end30_crit_edge, %if.end.1.i.if.end30_crit_edge, %if.then18.if.end30_crit_edge, %if.end16.if.end30_crit_edge
  %info = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %params, i32 0, i32 7
  %42 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %info, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool31.not = icmp eq i32 %43, 0
  br i1 %tobool31.not, label %if.then32, label %if.end30.cleanup_crit_edge

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then32:                                        ; preds = %if.end30
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %44 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %runtime, align 4
  %hw = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 46
  %46 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %hw, align 8
  %and = and i32 %47, 1073741823
  %48 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %and, ptr %info, align 4
  %49 = load ptr, ptr %runtime, align 4
  %hw.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %49, i32 0, i32 46
  %50 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %hw.i, align 8
  %and.i = and i32 %51, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i106 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i106, label %if.then32.if.then37_crit_edge, label %if.end.i

if.then32.if.then37_crit_edge:                    ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then37

if.end.i:                                         ; preds = %if.then32
  %ops.i107 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %52 = ptrtoint ptr %ops.i107 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %ops.i107, align 4
  %mmap.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %53, i32 0, i32 14
  %54 = ptrtoint ptr %mmap.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mmap.i, align 4
  %tobool1.not.i = icmp eq ptr %55, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.end.i
  %page.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %53, i32 0, i32 13
  %56 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %page.i, align 4
  %tobool3.not.i = icmp eq ptr %57, null
  br i1 %tobool3.not.i, label %if.end5.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5.i:                                        ; preds = %lor.lhs.false.i
  %dma_buffer_p.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %49, i32 0, i32 53
  %58 = ptrtoint ptr %dma_buffer_p.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dma_buffer_p.i, align 8
  %tobool7.not.i = icmp eq ptr %59, null
  %dma_buffer.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 8
  %spec.select.i = select i1 %tobool7.not.i, ptr %dma_buffer.i, ptr %59
  %60 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %spec.select.i, align 4
  %62 = zext i32 %61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %61, label %hw_support_mmap.exit [
    i32 0, label %if.end5.i.cleanup_crit_edge
    i32 1, label %if.end5.i.cleanup_crit_edge126
    i32 7, label %if.end5.i.cleanup_crit_edge127
  ]

if.end5.i.cleanup_crit_edge127:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5.i.cleanup_crit_edge126:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5.i.cleanup_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

hw_support_mmap.exit:                             ; preds = %if.end5.i
  %dev12.i = getelementptr inbounds %struct.snd_dma_device, ptr %spec.select.i, i32 0, i32 3
  %63 = ptrtoint ptr %dev12.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dev12.i, align 4
  %call.i108 = tail call zeroext i1 @dma_can_mmap(ptr noundef %64) #14
  br i1 %call.i108, label %hw_support_mmap.exit.cleanup_crit_edge, label %hw_support_mmap.exit.if.then37_crit_edge

hw_support_mmap.exit.if.then37_crit_edge:         ; preds = %hw_support_mmap.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then37

hw_support_mmap.exit.cleanup_crit_edge:           ; preds = %hw_support_mmap.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then37:                                        ; preds = %hw_support_mmap.exit.if.then37_crit_edge, %if.then32.if.then37_crit_edge
  %65 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %info, align 4
  %and39 = and i32 %66, -4
  store i32 %and39, ptr %info, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then37, %hw_support_mmap.exit.cleanup_crit_edge, %if.end5.i.cleanup_crit_edge, %if.end5.i.cleanup_crit_edge126, %if.end5.i.cleanup_crit_edge127, %lor.lhs.false.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %snd_pcm_ops_ioctl.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i105, %snd_pcm_ops_ioctl.exit.cleanup_crit_edge ], [ 0, %hw_support_mmap.exit.cleanup_crit_edge ], [ 0, %if.then37 ], [ 0, %if.end30.cleanup_crit_edge ], [ 0, %lor.lhs.false.i.cleanup_crit_edge ], [ 0, %if.end.i.cleanup_crit_edge ], [ 0, %if.end5.i.cleanup_crit_edge ], [ 0, %if.end5.i.cleanup_crit_edge126 ], [ 0, %if.end5.i.cleanup_crit_edge127 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_lib_malloc_pages(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_pcm_timer_resolution_change(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpu_latency_qos_add_request(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_param_first(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_param_last(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_lib_ioctl(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_update_state(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_prepare(ptr nocapture noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.93)
  switch i32 %5, label %entry.if.end7_crit_edge [
    i32 0, label %entry.cleanup_crit_edge
    i32 8, label %entry.cleanup_crit_edge16
    i32 3, label %cleanup.fold.split
    i32 5, label %snd_pcm_running.exit
  ]

entry.cleanup_crit_edge16:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

snd_pcm_running.exit:                             ; preds = %entry
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %7 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp5.i.not = icmp eq i32 %8, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.cleanup_crit_edge, label %snd_pcm_running.exit.if.end7_crit_edge

snd_pcm_running.exit.if.end7_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

snd_pcm_running.exit.cleanup_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %snd_pcm_running.exit.if.end7_crit_edge, %entry.if.end7_crit_edge
  %f_flags8 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 21
  %9 = ptrtoint ptr %f_flags8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %state, ptr %f_flags8, align 4
  br label %cleanup

cleanup.fold.split:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.fold.split, %if.end7, %snd_pcm_running.exit.cleanup_crit_edge, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge16
  %retval.0 = phi i32 [ 0, %if.end7 ], [ -77, %entry.cleanup_crit_edge ], [ -77, %entry.cleanup_crit_edge16 ], [ -16, %snd_pcm_running.exit.cleanup_crit_edge ], [ -16, %cleanup.fold.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_prepare(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.snd_pcm_sync_stop.exit_crit_edge, label %land.lhs.true.i

entry.snd_pcm_sync_stop.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

land.lhs.true.i:                                  ; preds = %entry
  %stop_operating.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 43
  %2 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %stop_operating.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not.i = icmp eq i8 %3, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge, label %if.then.i

land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %stop_operating.i, align 4
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %5 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops.i, align 4
  %tobool5.not.i = icmp eq ptr %6, null
  br i1 %tobool5.not.i, label %if.then.i.if.else.i_crit_edge, label %land.lhs.true6.i

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true6.i:                                 ; preds = %if.then.i
  %sync_stop.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %sync_stop.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sync_stop.i, align 4
  %tobool8.not.i = icmp eq ptr %8, null
  br i1 %tobool8.not.i, label %land.lhs.true6.i.if.else.i_crit_edge, label %if.then9.i

land.lhs.true6.i.if.else.i_crit_edge:             ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

if.then9.i:                                       ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %8(ptr noundef %substream) #14
  br label %snd_pcm_sync_stop.exit

if.else.i:                                        ; preds = %land.lhs.true6.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  %9 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %substream, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  %sync_irq14.i = getelementptr inbounds %struct.snd_card, ptr %12, i32 0, i32 33
  %13 = ptrtoint ptr %sync_irq14.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sync_irq14.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.i = icmp sgt i32 %14, 0
  br i1 %cmp.i, label %if.then15.i, label %if.else.i.snd_pcm_sync_stop.exit_crit_edge

if.else.i.snd_pcm_sync_stop.exit_crit_edge:       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit

if.then15.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @synchronize_irq(i32 noundef %14) #14
  br label %snd_pcm_sync_stop.exit

snd_pcm_sync_stop.exit:                           ; preds = %if.then15.i, %if.else.i.snd_pcm_sync_stop.exit_crit_edge, %if.then9.i, %land.lhs.true.i.snd_pcm_sync_stop.exit_crit_edge, %entry.snd_pcm_sync_stop.exit_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %15 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops, align 4
  %prepare = getelementptr inbounds %struct.snd_pcm_ops, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %prepare to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prepare, align 4
  %call = tail call i32 %18(ptr noundef %substream) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %snd_pcm_sync_stop.exit.cleanup_crit_edge, label %if.end

snd_pcm_sync_stop.exit.cleanup_crit_edge:         ; preds = %snd_pcm_sync_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %snd_pcm_sync_stop.exit
  %19 = ptrtoint ptr %runtime.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %runtime.i, align 4
  %21 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ops, align 4
  %ioctl.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %ioctl.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ioctl.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %24, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i = tail call i32 %24(ptr noundef %substream, i32 noundef 0, ptr noundef null) #14
  br label %snd_pcm_ops_ioctl.exit.i

if.else.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i.i = tail call i32 @snd_pcm_lib_ioctl(ptr noundef %substream, i32 noundef 0, ptr noundef null) #14
  br label %snd_pcm_ops_ioctl.exit.i

snd_pcm_ops_ioctl.exit.i:                         ; preds = %if.else.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %call.i.i, %if.then.i.i ], [ %call3.i.i, %if.else.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %cmp.i6 = icmp slt i32 %retval.0.i.i, 0
  br i1 %cmp.i6, label %snd_pcm_ops_ioctl.exit.i.cleanup_crit_edge, label %if.end.i

snd_pcm_ops_ioctl.exit.i.cleanup_crit_edge:       ; preds = %snd_pcm_ops_ioctl.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %snd_pcm_ops_ioctl.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %hw_ptr_base.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %20, i32 0, i32 5
  %25 = ptrtoint ptr %hw_ptr_base.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %hw_ptr_base.i, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %20, i32 0, i32 37
  %26 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %status.i, align 4
  %hw_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %hw_ptr.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %hw_ptr.i, align 4
  %period_size.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %20, i32 0, i32 16
  %30 = ptrtoint ptr %period_size.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %period_size.i, align 4
  %rem.i = urem i32 %29, %31
  %sub.i = sub i32 %29, %rem.i
  %hw_ptr_interrupt.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %20, i32 0, i32 6
  %32 = ptrtoint ptr %hw_ptr_interrupt.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %sub.i, ptr %hw_ptr_interrupt.i, align 8
  %33 = load i32, ptr %hw_ptr.i, align 4
  %silence_start.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %20, i32 0, i32 34
  %34 = ptrtoint ptr %silence_start.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %silence_start.i, align 4
  %silence_filled.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %20, i32 0, i32 35
  %35 = ptrtoint ptr %silence_filled.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %silence_filled.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %snd_pcm_ops_ioctl.exit.i.cleanup_crit_edge, %snd_pcm_sync_stop.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %snd_pcm_sync_stop.exit.cleanup_crit_edge ], [ 0, %if.end.i ], [ %retval.0.i.i, %snd_pcm_ops_ioctl.exit.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_prepare(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %hw_ptr = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %hw_ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %hw_ptr, align 4
  %control = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %6 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %control, align 8
  %appl_ptr = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %appl_ptr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %5, ptr %appl_ptr, align 4
  %9 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %substream, align 4
  %nonatomic.i.i = getelementptr inbounds %struct.snd_pcm, ptr %10, i32 0, i32 14
  %11 = ptrtoint ptr %nonatomic.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %nonatomic.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.i.i = icmp eq i8 %12, 0
  br i1 %tobool.not.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i

if.else.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_stream_lock_irq.exit.i

snd_pcm_stream_lock_irq.exit.i:                   ; preds = %if.else.i.i.i, %if.then.i.i.i
  %13 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %runtime1, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %14, i32 0, i32 37
  %15 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %status.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %18)
  %cmp.not.i = icmp eq i32 %18, 8
  br i1 %cmp.not.i, label %snd_pcm_stream_lock_irq.exit.i.if.end.i_crit_edge, label %if.then.i

snd_pcm_stream_lock_irq.exit.i.if.end.i_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %19 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %16, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %snd_pcm_stream_lock_irq.exit.i.if.end.i_crit_edge
  %20 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %substream, align 4
  %nonatomic.i8.i = getelementptr inbounds %struct.snd_pcm, ptr %21, i32 0, i32 14
  %22 = ptrtoint ptr %nonatomic.i8.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %nonatomic.i8.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.not.i9.i = icmp eq i8 %23, 0
  br i1 %tobool.not.i9.i, label %if.else.i.i13.i, label %if.then.i.i11.i

if.then.i.i11.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i10.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i10.i) #14
  br label %snd_pcm_set_state.exit

if.else.i.i13.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i12.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i12.i) #14
  br label %snd_pcm_set_state.exit

snd_pcm_set_state.exit:                           ; preds = %if.else.i.i13.i, %if.then.i.i11.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_reset(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %ioctl.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %ioctl.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ioctl.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %5(ptr noundef %substream, i32 noundef 0, ptr noundef null) #14
  br label %snd_pcm_ops_ioctl.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i = tail call i32 @snd_pcm_lib_ioctl(ptr noundef %substream, i32 noundef 0, ptr noundef null) #14
  br label %snd_pcm_ops_ioctl.exit

snd_pcm_ops_ioctl.exit:                           ; preds = %if.else.i, %if.then.i
  %retval.0.i = phi i32 [ %call.i, %if.then.i ], [ %call3.i, %if.else.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp = icmp slt i32 %retval.0.i, 0
  br i1 %cmp, label %snd_pcm_ops_ioctl.exit.cleanup_crit_edge, label %if.end

snd_pcm_ops_ioctl.exit.cleanup_crit_edge:         ; preds = %snd_pcm_ops_ioctl.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %snd_pcm_ops_ioctl.exit
  call void @__sanitizer_cov_trace_pc() #16
  %hw_ptr_base = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %hw_ptr_base to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %hw_ptr_base, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %status, align 4
  %hw_ptr = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %hw_ptr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hw_ptr, align 4
  %period_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 16
  %11 = ptrtoint ptr %period_size to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %period_size, align 4
  %rem = urem i32 %10, %12
  %sub = sub i32 %10, %rem
  %hw_ptr_interrupt = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %hw_ptr_interrupt to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub, ptr %hw_ptr_interrupt, align 8
  %14 = load i32, ptr %hw_ptr, align 4
  %silence_start = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 34
  %15 = ptrtoint ptr %silence_start to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %silence_start, align 4
  %silence_filled = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 35
  %16 = ptrtoint ptr %silence_filled to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %silence_filled, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %snd_pcm_ops_ioctl.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %retval.0.i, %snd_pcm_ops_ioctl.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_action_lock_irq(ptr nocapture noundef readonly %ops, ptr noundef %substream, i32 noundef %state) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %call.i = tail call fastcc ptr @snd_pcm_stream_group_ref(ptr noundef %substream) #14
  %tobool.not.i3 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i3, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef %ops, ptr noundef %substream, i32 noundef %state, i1 noundef zeroext true) #14
  br label %snd_pcm_action.exit

if.else.i:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %call.i.i = tail call i32 %5(ptr noundef %substream, i32 noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.else.i.snd_pcm_action.exit_crit_edge, label %if.end.i.i

if.else.i.snd_pcm_action.exit_crit_edge:          ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

if.end.i.i:                                       ; preds = %if.else.i
  %do_action.i.i = getelementptr inbounds %struct.action_ops, ptr %ops, i32 0, i32 1
  %6 = ptrtoint ptr %do_action.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %do_action.i.i, align 4
  %call1.i.i = tail call i32 %7(ptr noundef %substream, i32 noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %cmp2.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.else.i.i4

if.then3.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %post_action.i.i = getelementptr inbounds %struct.action_ops, ptr %ops, i32 0, i32 3
  %8 = ptrtoint ptr %post_action.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %post_action.i.i, align 4
  br label %cleanup.sink.split.i.i

if.else.i.i4:                                     ; preds = %if.end.i.i
  %undo_action.i.i = getelementptr inbounds %struct.action_ops, ptr %ops, i32 0, i32 2
  %10 = ptrtoint ptr %undo_action.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %undo_action.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %if.else.i.i4.snd_pcm_action.exit_crit_edge, label %if.else.i.i4.cleanup.sink.split.i.i_crit_edge

if.else.i.i4.cleanup.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

if.else.i.i4.snd_pcm_action.exit_crit_edge:       ; preds = %if.else.i.i4
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action.exit

cleanup.sink.split.i.i:                           ; preds = %if.else.i.i4.cleanup.sink.split.i.i_crit_edge, %if.then3.i.i
  %.sink.i.i = phi ptr [ %9, %if.then3.i.i ], [ %11, %if.else.i.i4.cleanup.sink.split.i.i_crit_edge ]
  tail call void %.sink.i.i(ptr noundef %substream, i32 noundef %state) #14
  br label %snd_pcm_action.exit

snd_pcm_action.exit:                              ; preds = %cleanup.sink.split.i.i, %if.else.i.i4.snd_pcm_action.exit_crit_edge, %if.else.i.snd_pcm_action.exit_crit_edge, %if.then.i
  %res.0.i = phi i32 [ %call1.i, %if.then.i ], [ %call.i.i, %if.else.i.snd_pcm_action.exit_crit_edge ], [ %call1.i.i, %if.else.i.i4.snd_pcm_action.exit_crit_edge ], [ %call1.i.i, %cleanup.sink.split.i.i ]
  tail call fastcc void @snd_pcm_group_unref(ptr noundef %call.i, ptr noundef %substream) #14
  %12 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %substream, align 4
  %nonatomic.i5 = getelementptr inbounds %struct.snd_pcm, ptr %13, i32 0, i32 14
  %14 = ptrtoint ptr %nonatomic.i5 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %nonatomic.i5, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i6 = icmp eq i8 %15, 0
  br i1 %tobool.not.i6, label %if.else.i.i10, label %if.then.i.i8

if.then.i.i8:                                     ; preds = %snd_pcm_action.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i7 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i7) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i10:                                    ; preds = %snd_pcm_action.exit
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i9 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i9) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i10, %if.then.i.i8
  ret i32 %res.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_drain_init(ptr noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.94)
  switch i32 %5, label %sw.epilog [
    i32 0, label %entry.cleanup_crit_edge
    i32 8, label %entry.cleanup_crit_edge5
    i32 7, label %entry.cleanup_crit_edge6
  ]

entry.cleanup_crit_edge6:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

entry.cleanup_crit_edge5:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.epilog:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %substream, ptr %1, align 8
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge5, %entry.cleanup_crit_edge6
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -77, %entry.cleanup_crit_edge ], [ -77, %entry.cleanup_crit_edge5 ], [ -77, %entry.cleanup_crit_edge6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_drain_init(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %2 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.95)
  switch i32 %7, label %if.then.if.end22_crit_edge [
    i32 2, label %sw.bb
    i32 3, label %sw.bb7
    i32 4, label %sw.bb10
  ]

if.then.if.end22_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

sw.bb:                                            ; preds = %if.then
  %hw_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %5, i32 0, i32 3
  %9 = ptrtoint ptr %hw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hw_ptr.i.i, align 4
  %buffer_size.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %11 = ptrtoint ptr %buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %buffer_size.i.i, align 4
  %add.i.i = add i32 %12, %10
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %13 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %control.i.i, align 8
  %appl_ptr.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %appl_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %appl_ptr.i.i, align 4
  %sub.i.i = sub i32 %add.i.i, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 33
  %17 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %boundary.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %18)
  %cmp3.not.i.i = icmp ult i32 %sub.i.i, %18
  %sub6.i.i = select i1 %cmp3.not.i.i, i32 0, i32 %18
  %19 = sub i32 0, %sub6.i.i
  %avail.0.p.i.i = select i1 %cmp.i.i, i32 %18, i32 %19
  %avail.0.i.i = add i32 %avail.0.p.i.i, %sub.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %avail.0.i.i, i32 %12)
  %cmp.i.not = icmp ult i32 %avail.0.i.i, %12
  br i1 %cmp.i.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %sw.bb
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %1, align 8
  %cmp.not.i = icmp eq ptr %21, %substream
  br i1 %cmp.not.i, label %if.end.i, label %if.then3.snd_pcm_do_start.exit_crit_edge

if.then3.snd_pcm_do_start.exit_crit_edge:         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_do_start.exit

if.end.i:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %22 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i, align 4
  %trigger.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %23, i32 0, i32 6
  %24 = ptrtoint ptr %trigger.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %trigger.i, align 4
  %call.i = tail call i32 %25(ptr noundef %substream, i32 noundef 1) #14
  br label %snd_pcm_do_start.exit

snd_pcm_do_start.exit:                            ; preds = %if.end.i, %if.then3.snd_pcm_do_start.exit_crit_edge
  %26 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %runtime1, align 4
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %28 = load volatile i32, ptr @jiffies, align 128
  %hw_ptr_jiffies.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %27, i32 0, i32 7
  %29 = ptrtoint ptr %hw_ptr_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %hw_ptr_jiffies.i, align 4
  %buffer_size.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %27, i32 0, i32 18
  %30 = ptrtoint ptr %buffer_size.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %buffer_size.i, align 4
  %mul.i = mul i32 %31, 100
  %rate.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %27, i32 0, i32 14
  %32 = ptrtoint ptr %rate.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rate.i, align 4
  %div.i = udiv i32 %mul.i, %33
  %hw_ptr_buffer_jiffies.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %27, i32 0, i32 8
  %34 = ptrtoint ptr %hw_ptr_buffer_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %div.i, ptr %hw_ptr_buffer_jiffies.i, align 8
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %27, i32 0, i32 37
  %35 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %status.i, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 5, ptr %36, align 8
  %38 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp.i51 = icmp eq i32 %39, 0
  br i1 %cmp.i51, label %land.lhs.true.i, label %snd_pcm_do_start.exit.if.end.i52_crit_edge

snd_pcm_do_start.exit.if.end.i52_crit_edge:       ; preds = %snd_pcm_do_start.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i52

land.lhs.true.i:                                  ; preds = %snd_pcm_do_start.exit
  %silence_size.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %27, i32 0, i32 32
  %40 = ptrtoint ptr %silence_size.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %silence_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %cmp3.not.i = icmp eq i32 %41, 0
  br i1 %cmp3.not.i, label %land.lhs.true.i.if.end.i52_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i52_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i52

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @snd_pcm_playback_silence(ptr noundef %substream, i32 noundef -1) #14
  br label %if.end.i52

if.end.i52:                                       ; preds = %if.then.i, %land.lhs.true.i.if.end.i52_crit_edge, %snd_pcm_do_start.exit.if.end.i52_crit_edge
  %timer.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %42 = ptrtoint ptr %timer.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %timer.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %43, null
  br i1 %tobool.not.i.i, label %if.end.i52.if.end22_crit_edge, label %if.then.i.i

if.end.i52.if.end22_crit_edge:                    ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then.i.i:                                      ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #16
  %44 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %45, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %43, i32 noundef 12, ptr noundef %trigger_tstamp.i.i) #14
  br label %if.end22

if.else:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %46 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 1, ptr %5, align 8
  br label %if.end22

sw.bb7:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %47 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 5, ptr %5, align 8
  br label %if.end22

sw.bb10:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %48 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 1, ptr %5, align 8
  br label %if.end22

if.else13:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %7)
  %cmp16 = icmp eq i32 %7, 3
  br i1 %cmp16, label %if.then17, label %if.else13.if.end22_crit_edge

if.else13.if.end22_crit_edge:                     ; preds = %if.else13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then17:                                        ; preds = %if.else13
  %hw_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %5, i32 0, i32 3
  %49 = ptrtoint ptr %hw_ptr.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %hw_ptr.i, align 4
  %control.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %51 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %control.i, align 8
  %appl_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %appl_ptr.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %appl_ptr.i, align 4
  %sub.i = sub i32 %50, %54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i54 = icmp slt i32 %sub.i, 0
  br i1 %cmp.i54, label %if.then.i55, label %if.then17.snd_pcm_capture_avail.exit_crit_edge

if.then17.snd_pcm_capture_avail.exit_crit_edge:   ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_capture_avail.exit

if.then.i55:                                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 33
  %55 = ptrtoint ptr %boundary.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %boundary.i, align 8
  %add.i = add i32 %56, %sub.i
  br label %snd_pcm_capture_avail.exit

snd_pcm_capture_avail.exit:                       ; preds = %if.then.i55, %if.then17.snd_pcm_capture_avail.exit_crit_edge
  %avail.0.i = phi i32 [ %add.i, %if.then.i55 ], [ %sub.i, %if.then17.snd_pcm_capture_avail.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %avail.0.i)
  %cmp19.not = icmp eq i32 %avail.0.i, 0
  %cond = select i1 %cmp19.not, i32 1, i32 5
  %57 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %1, align 8
  %cmp.i58 = icmp eq ptr %58, %substream
  br i1 %cmp.i58, label %if.then.i63, label %snd_pcm_capture_avail.exit.snd_pcm_do_stop.exit_crit_edge

snd_pcm_capture_avail.exit.snd_pcm_do_stop.exit_crit_edge: ; preds = %snd_pcm_capture_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_do_stop.exit

if.then.i63:                                      ; preds = %snd_pcm_capture_avail.exit
  call void @__sanitizer_cov_trace_pc() #16
  %ops.i61 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %59 = ptrtoint ptr %ops.i61 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %ops.i61, align 4
  %trigger.i62 = getelementptr inbounds %struct.snd_pcm_ops, ptr %60, i32 0, i32 6
  %61 = ptrtoint ptr %trigger.i62 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %trigger.i62, align 4
  %call1.i = tail call i32 %62(ptr noundef %substream, i32 noundef 0) #14
  %63 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %runtime1, align 4
  %stop_operating.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %64, i32 0, i32 43
  %65 = ptrtoint ptr %stop_operating.i to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 1, ptr %stop_operating.i, align 4
  br label %snd_pcm_do_stop.exit

snd_pcm_do_stop.exit:                             ; preds = %if.then.i63, %snd_pcm_capture_avail.exit.snd_pcm_do_stop.exit_crit_edge
  %66 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %runtime1, align 4
  %status.i66 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %67, i32 0, i32 37
  %68 = ptrtoint ptr %status.i66 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %status.i66, align 4
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %cond)
  %cmp.not.i67 = icmp eq i32 %71, %cond
  br i1 %cmp.not.i67, label %snd_pcm_do_stop.exit.snd_pcm_post_stop.exit_crit_edge, label %if.then.i70

snd_pcm_do_stop.exit.snd_pcm_post_stop.exit_crit_edge: ; preds = %snd_pcm_do_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_stop.exit

if.then.i70:                                      ; preds = %snd_pcm_do_stop.exit
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream) #14
  %72 = ptrtoint ptr %status.i66 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %status.i66, align 4
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %cond, ptr %73, align 8
  %timer.i.i68 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %75 = ptrtoint ptr %timer.i.i68 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %timer.i.i68, align 4
  %tobool.not.i.i69 = icmp eq ptr %76, null
  br i1 %tobool.not.i.i69, label %if.then.i70.snd_pcm_post_stop.exit_crit_edge, label %if.then.i.i72

if.then.i70.snd_pcm_post_stop.exit_crit_edge:     ; preds = %if.then.i70
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_post_stop.exit

if.then.i.i72:                                    ; preds = %if.then.i70
  call void @__sanitizer_cov_trace_pc() #16
  %77 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i.i71 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %78, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %76, i32 noundef 13, ptr noundef %trigger_tstamp.i.i71) #14
  br label %snd_pcm_post_stop.exit

snd_pcm_post_stop.exit:                           ; preds = %if.then.i.i72, %if.then.i70.snd_pcm_post_stop.exit_crit_edge, %snd_pcm_do_stop.exit.snd_pcm_post_stop.exit_crit_edge
  %sleep.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %67, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %sleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %tsleep.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %67, i32 0, i32 41
  tail call void @__wake_up(ptr noundef %tsleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  br label %if.end22

if.end22:                                         ; preds = %snd_pcm_post_stop.exit, %if.else13.if.end22_crit_edge, %sw.bb10, %sw.bb7, %if.else, %if.then.i.i, %if.end.i52.if.end22_crit_edge, %if.then.if.end22_crit_edge
  %status23 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %79 = ptrtoint ptr %status23 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %status23, align 4
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %80, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %82)
  %cmp25 = icmp eq i32 %82, 5
  br i1 %cmp25, label %land.lhs.true, label %if.end22.cleanup_crit_edge

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end22
  %83 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %1, align 8
  %cmp26 = icmp eq ptr %84, %substream
  br i1 %cmp26, label %land.lhs.true27, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true27:                                  ; preds = %land.lhs.true
  %hw = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46
  %85 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %hw, align 8
  %and = and i32 %86, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool28.not = icmp eq i32 %and, 0
  br i1 %tobool28.not, label %land.lhs.true27.cleanup_crit_edge, label %if.then29

land.lhs.true27.cleanup_crit_edge:                ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then29:                                        ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #16
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %87 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %88, i32 0, i32 6
  %89 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %trigger, align 4
  %call30 = tail call i32 %90(ptr noundef %substream, i32 noundef 7) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then29, %land.lhs.true27.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end22.cleanup_crit_edge
  %retval.0 = phi i32 [ %call30, %if.then29 ], [ 0, %land.lhs.true27.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @snd_pcm_post_drain_init(ptr nocapture noundef %substream, i32 noundef %state) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @default_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_mmap_data_open(ptr nocapture noundef readonly %area) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 15
  %0 = ptrtoint ptr %vm_private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_private_data, align 4
  %mmap_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %1, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %mmap_count, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %mmap_count, i32 1, i32 3, i32 1) #14
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %mmap_count, ptr %mmap_count, i32 1, ptr elementtype(i32) %mmap_count) #14, !srcloc !203
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_mmap_data_close(ptr nocapture noundef readonly %area) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, ptr %area, i32 0, i32 15
  %0 = ptrtoint ptr %vm_private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_private_data, align 4
  %mmap_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %1, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %mmap_count, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %mmap_count, i32 1, i32 3, i32 1) #14
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %mmap_count, ptr %mmap_count, i32 1, ptr elementtype(i32) %mmap_count) #14, !srcloc !214
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_mmap_data_fault(ptr nocapture noundef %vmf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %vm_private_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_private_data, align 4
  %cmp = icmp eq ptr %3, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %runtime1, align 4
  %pgoff = getelementptr inbounds %struct.anon.14, ptr %vmf, i32 0, i32 2
  %6 = ptrtoint ptr %pgoff to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pgoff, align 4
  %shl = shl i32 %7, 12
  %dma_bytes2 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 52
  %8 = ptrtoint ptr %dma_bytes2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dma_bytes2, align 4
  %10 = add i32 %9, -1
  %sub = and i32 %10, -4096
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %sub)
  %cmp3 = icmp ugt i32 %shl, %sub
  br i1 %cmp3, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %3, i32 0, i32 10
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %page6 = getelementptr inbounds %struct.snd_pcm_ops, ptr %12, i32 0, i32 13
  %13 = ptrtoint ptr %page6 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %page6, align 4
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call ptr %14(ptr noundef nonnull %3, i32 noundef %shl) #14
  br label %if.end22

if.else:                                          ; preds = %if.end5
  %dma_buffer_p = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 53
  %15 = ptrtoint ptr %dma_buffer_p to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dma_buffer_p, align 8
  %tobool11.not = icmp eq ptr %16, null
  br i1 %tobool11.not, label %if.then12, label %if.else17

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %17 = load ptr, ptr @mem_map, align 4
  %dma_area = getelementptr inbounds %struct.snd_pcm_runtime, ptr %5, i32 0, i32 50
  %18 = ptrtoint ptr %dma_area to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dma_area, align 4
  %add.ptr = getelementptr i8, ptr %19, i32 %shl
  %20 = ptrtoint ptr %add.ptr to i32
  %sub13 = add i32 %20, 1073741824
  %shr = lshr i32 %sub13, 12
  %add.ptr16 = getelementptr %struct.page, ptr %17, i32 %shr
  br label %if.end22

if.else17:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %call20 = tail call ptr @snd_sgbuf_get_page(ptr noundef nonnull %16, i32 noundef %shl) #14
  br label %if.end22

if.end22:                                         ; preds = %if.else17, %if.then12, %if.then7
  %page.0 = phi ptr [ %call, %if.then7 ], [ %call20, %if.else17 ], [ %add.ptr16, %if.then12 ]
  %tobool23.not = icmp eq ptr %page.0, null
  br i1 %tobool23.not, label %if.end22.cleanup_crit_edge, label %if.end25

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end25:                                         ; preds = %if.end22
  %21 = getelementptr inbounds %struct.page, ptr %page.0, i32 0, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  %and.i.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !195

if.then.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %23, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %page.0 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %24, %if.end.i.i ]
  %25 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %25, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #14
  %26 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %27, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !196

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.66) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #14, !srcloc !215
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #14
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #14, !srcloc !203
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@snd_pcm_mmap_data_fault, %if.then.i.i.i.i)) #14
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !200

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__page_ref_mod(ptr noundef %25, i32 noundef 1) #14
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %page26 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %29 = ptrtoint ptr %page26 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %page.0, ptr %page26, align 4
  br label %cleanup

cleanup:                                          ; preds = %get_page.exit, %if.end22.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %get_page.exit ], [ 2, %entry.cleanup_crit_edge ], [ 2, %if.end.cleanup_crit_edge ], [ 2, %if.end22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_sgbuf_get_page(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__snd_pcm_lib_xfer(ptr noundef, ptr noundef, i1 noundef zeroext, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_common_ioctl(ptr noundef %file, ptr noundef %substream, i32 noundef %cmd, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %delay = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %tobool.not = icmp eq ptr %substream, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %2 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %runtime, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %lor.rhs.do.end_crit_edge, label %if.end24, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3240, i32 noundef 9, ptr noundef null) #14
  br label %cleanup156

if.end24:                                         ; preds = %lor.rhs
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 37
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %7)
  %cmp = icmp eq i32 %7, 8
  br i1 %cmp, label %if.end24.cleanup156_crit_edge, label %if.end27

if.end24.cleanup156_crit_edge:                    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup156

if.end27:                                         ; preds = %if.end24
  %8 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %substream, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 8
  %call = tail call i32 @snd_power_wait(ptr noundef %11) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp28 = icmp slt i32 %call, 0
  br i1 %cmp28, label %if.end27.cleanup156_crit_edge, label %if.end30

if.end27.cleanup156_crit_edge:                    ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup156

if.end30:                                         ; preds = %if.end27
  %12 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.96)
  switch i32 %cmd, label %do.body140 [
    i32 -2147204864, label %sw.bb
    i32 -2128592639, label %sw.bb38
    i32 1074020610, label %if.end30.cleanup156_crit_edge
    i32 1074020611, label %sw.bb41
    i32 1074020612, label %sw.bb43
    i32 -1034141424, label %sw.bb57
    i32 -1034141423, label %sw.bb59
    i32 16658, label %sw.bb61
    i32 -1066909421, label %sw.bb63
    i32 -2140389088, label %sw.bb65
    i32 -1066647260, label %sw.bb67
    i32 -2139078368, label %sw.bb69
    i32 -1065336540, label %sw.bb71
    i32 -2146418382, label %sw.bb73
    i32 16704, label %sw.bb75
    i32 16705, label %sw.bb77
    i32 16706, label %sw.bb79
    i32 1074020704, label %sw.bb81
    i32 16737, label %sw.bb83
    i32 16711, label %sw.bb85
    i32 16712, label %sw.bb87
    i32 16674, label %sw.bb89
    i32 -2147204831, label %sw.bb91
    i32 -1065074397, label %sw.bb117
    i32 -1064812253, label %sw.bb119
    i32 -1057210096, label %sw.bb121
    i32 -1057210095, label %sw.bb123
    i32 16708, label %sw.bb125
    i32 16707, label %sw.bb127
    i32 1074020677, label %sw.bb129
    i32 1074544976, label %if.end30.sw.bb132_crit_edge
    i32 -2146680495, label %if.end30.sw.bb132_crit_edge234
    i32 1074544978, label %if.end30.sw.bb134_crit_edge
    i32 -2146680493, label %if.end30.sw.bb134_crit_edge235
    i32 1074020678, label %sw.bb136
    i32 1074020681, label %sw.bb138
  ]

if.end30.sw.bb134_crit_edge235:                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb134

if.end30.sw.bb134_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb134

if.end30.sw.bb132_crit_edge234:                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb132

if.end30.sw.bb132_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb132

if.end30.cleanup156_crit_edge:                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup156

sw.bb:                                            ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3252) #14
  %13 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 4
  %15 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %15, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %16 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arg, i32 131087, i32 -1226833921) #14, !srcloc !219
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %15) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool37.not = icmp eq i32 %16, 0
  %cond = select i1 %tobool37.not, i32 0, i32 -14
  br label %cleanup156

sw.bb38:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call39 = tail call i32 @snd_pcm_info_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb41:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call42 = tail call fastcc i32 @snd_pcm_tstamp(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb43:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3261) #14
  %17 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i222 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i222 to ptr
  %cpu_domain.i.i223 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 4
  %19 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i223) #3, !srcloc !216
  %and.i224 = and i32 %19, -13
  %or.i225 = or i32 %and.i224, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i225) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %20 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %arg, i32 -1226833921) #14, !srcloc !220
  %asmresult = extractvalue { i32, i32 } %20, 0
  %asmresult52 = extractvalue { i32, i32 } %20, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %19) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %user_pversion = getelementptr inbounds %struct.snd_pcm_file, ptr %1, i32 0, i32 2
  %21 = ptrtoint ptr %user_pversion to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %asmresult52, ptr %user_pversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool54.not = icmp eq i32 %asmresult, 0
  %. = select i1 %tobool54.not, i32 0, i32 -14
  br label %cleanup156

sw.bb57:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call58 = tail call fastcc i32 @snd_pcm_hw_refine_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb59:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call60 = tail call fastcc i32 @snd_pcm_hw_params_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb61:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call62 = tail call fastcc i32 @snd_pcm_hw_free(ptr noundef nonnull %substream)
  br label %cleanup156

sw.bb63:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call64 = tail call fastcc i32 @snd_pcm_sw_params_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb65:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call66 = tail call fastcc i32 @snd_pcm_status_user32(ptr noundef nonnull %substream, ptr noundef %arg, i1 noundef zeroext false)
  br label %cleanup156

sw.bb67:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call68 = tail call fastcc i32 @snd_pcm_status_user32(ptr noundef nonnull %substream, ptr noundef %arg, i1 noundef zeroext true)
  br label %cleanup156

sw.bb69:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call70 = tail call fastcc i32 @snd_pcm_status_user64(ptr noundef nonnull %substream, ptr noundef %arg, i1 noundef zeroext false)
  br label %cleanup156

sw.bb71:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call72 = tail call fastcc i32 @snd_pcm_status_user64(ptr noundef nonnull %substream, ptr noundef %arg, i1 noundef zeroext true)
  br label %cleanup156

sw.bb73:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call74 = tail call fastcc i32 @snd_pcm_channel_info_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb75:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call76 = tail call fastcc i32 @snd_pcm_prepare(ptr noundef nonnull %substream, ptr noundef %file)
  br label %cleanup156

sw.bb77:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call78 = tail call fastcc i32 @snd_pcm_reset(ptr noundef nonnull %substream)
  br label %cleanup156

sw.bb79:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call fastcc i32 @snd_pcm_action_lock_irq(ptr noundef nonnull @snd_pcm_action_start, ptr noundef nonnull %substream, i32 noundef 3) #14
  br label %cleanup156

sw.bb81:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %22 = ptrtoint ptr %arg to i32
  %call82 = tail call fastcc i32 @snd_pcm_link(ptr noundef nonnull %substream, i32 noundef %22)
  br label %cleanup156

sw.bb83:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call84 = tail call fastcc i32 @snd_pcm_unlink(ptr noundef nonnull %substream)
  br label %cleanup156

sw.bb85:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call.i230 = tail call fastcc i32 @snd_pcm_action_lock_irq(ptr noundef nonnull @snd_pcm_action_resume, ptr noundef nonnull %substream, i32 noundef 0) #14
  br label %cleanup156

sw.bb87:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call88 = tail call fastcc i32 @snd_pcm_xrun(ptr noundef nonnull %substream)
  br label %cleanup156

sw.bb89:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call.i231 = tail call fastcc i32 @snd_pcm_delay(ptr noundef nonnull %substream, ptr noundef null) #14
  br label %cleanup156

sw.bb91:                                          ; preds = %if.end30
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %delay) #14
  %23 = ptrtoint ptr %delay to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %delay, align 4
  %call93 = call fastcc i32 @snd_pcm_delay(ptr noundef nonnull %substream, ptr noundef nonnull %delay)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call93)
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %if.end96, label %sw.bb91.cleanup_crit_edge

sw.bb91.cleanup_crit_edge:                        ; preds = %sw.bb91
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end96:                                         ; preds = %sw.bb91
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %delay to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %delay, align 4
  call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3307) #14
  %26 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i226 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i226 to ptr
  %cpu_domain.i.i227 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 4
  %28 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i227) #3, !srcloc !216
  %and.i228 = and i32 %28, -13
  %or.i229 = or i32 %and.i228, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i229) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %29 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arg, i32 %25, i32 -1226833921) #14, !srcloc !221
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %28) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool112.not = icmp eq i32 %29, 0
  %.221 = select i1 %tobool112.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %if.end96, %sw.bb91.cleanup_crit_edge
  %retval.0 = phi i32 [ %call93, %sw.bb91.cleanup_crit_edge ], [ %.221, %if.end96 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %delay) #14
  br label %cleanup156

sw.bb117:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call118 = tail call fastcc i32 @snd_pcm_ioctl_sync_ptr_compat(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb119:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call120 = tail call fastcc i32 @snd_pcm_sync_ptr(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb121:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call122 = tail call fastcc i32 @snd_pcm_hw_refine_old_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb123:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call124 = tail call fastcc i32 @snd_pcm_hw_params_old_user(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb125:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call126 = tail call fastcc i32 @snd_pcm_drain(ptr noundef nonnull %substream, ptr noundef %file)
  br label %cleanup156

sw.bb127:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call128 = tail call fastcc i32 @snd_pcm_drop(ptr noundef nonnull %substream)
  br label %cleanup156

sw.bb129:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %tobool130 = icmp ne ptr %arg, null
  %conv.i = zext i1 %tobool130 to i32
  %call.i232 = tail call fastcc i32 @snd_pcm_action_lock_irq(ptr noundef nonnull @snd_pcm_action_pause, ptr noundef nonnull %substream, i32 noundef %conv.i) #14
  br label %cleanup156

sw.bb132:                                         ; preds = %if.end30.sw.bb132_crit_edge, %if.end30.sw.bb132_crit_edge234
  %call133 = tail call fastcc i32 @snd_pcm_xferi_frames_ioctl(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb134:                                         ; preds = %if.end30.sw.bb134_crit_edge, %if.end30.sw.bb134_crit_edge235
  %call135 = tail call fastcc i32 @snd_pcm_xfern_frames_ioctl(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb136:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call137 = tail call fastcc i32 @snd_pcm_rewind_ioctl(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

sw.bb138:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %call139 = tail call fastcc i32 @snd_pcm_forward_ioctl(ptr noundef nonnull %substream, ptr noundef %arg)
  br label %cleanup156

do.body140:                                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_pcm_common_ioctl.__UNIQUE_ID_ddebug280, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_pcm_common_ioctl, %if.then150)) #14
          to label %cleanup156 [label %if.then150], !srcloc !200

if.then150:                                       ; preds = %do.body140
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %substream, align 4
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 8
  %dev = getelementptr inbounds %struct.snd_card, ptr %33, i32 0, i32 27
  %34 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_pcm_common_ioctl.__UNIQUE_ID_ddebug280, ptr noundef %35, ptr noundef nonnull @.str.68, i32 noundef %cmd) #14
  br label %cleanup156

cleanup156:                                       ; preds = %if.then150, %do.body140, %sw.bb138, %sw.bb136, %sw.bb134, %sw.bb132, %sw.bb129, %sw.bb127, %sw.bb125, %sw.bb123, %sw.bb121, %sw.bb119, %sw.bb117, %cleanup, %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb71, %sw.bb69, %sw.bb67, %sw.bb65, %sw.bb63, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb43, %sw.bb41, %sw.bb38, %sw.bb, %if.end30.cleanup156_crit_edge, %if.end27.cleanup156_crit_edge, %if.end24.cleanup156_crit_edge, %do.end
  %retval.1 = phi i32 [ -6, %do.end ], [ %call139, %sw.bb138 ], [ %call137, %sw.bb136 ], [ %call135, %sw.bb134 ], [ %call133, %sw.bb132 ], [ %call.i232, %sw.bb129 ], [ %call128, %sw.bb127 ], [ %call126, %sw.bb125 ], [ %call124, %sw.bb123 ], [ %call122, %sw.bb121 ], [ %call120, %sw.bb119 ], [ %call118, %sw.bb117 ], [ %retval.0, %cleanup ], [ %call.i231, %sw.bb89 ], [ %call88, %sw.bb87 ], [ %call.i230, %sw.bb85 ], [ %call84, %sw.bb83 ], [ %call82, %sw.bb81 ], [ %call.i, %sw.bb79 ], [ %call78, %sw.bb77 ], [ %call76, %sw.bb75 ], [ %call74, %sw.bb73 ], [ %call72, %sw.bb71 ], [ %call70, %sw.bb69 ], [ %call68, %sw.bb67 ], [ %call66, %sw.bb65 ], [ %call64, %sw.bb63 ], [ %call62, %sw.bb61 ], [ %call60, %sw.bb59 ], [ %call58, %sw.bb57 ], [ %call42, %sw.bb41 ], [ %call39, %sw.bb38 ], [ %cond, %sw.bb ], [ -77, %if.end24.cleanup156_crit_edge ], [ %call, %if.end27.cleanup156_crit_edge ], [ 0, %if.end30.cleanup156_crit_edge ], [ %., %sw.bb43 ], [ -25, %if.then150 ], [ -25, %do.body140 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_power_wait(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_tstamp(ptr nocapture noundef readonly %substream, ptr noundef %_arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3141) #14
  %2 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %4, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %5 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %_arg, i32 -1226833921) #14, !srcloc !222
  %asmresult = extractvalue { i32, i32 } %5, 0
  %asmresult2 = extractvalue { i32, i32 } %5, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult2)
  %6 = icmp ugt i32 %asmresult2, 2
  br i1 %6, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %tstamp_type = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 49
  %7 = ptrtoint ptr %tstamp_type to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %asmresult2, ptr %tstamp_type, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -14, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_refine_user(ptr noundef %substream, ptr noundef %_params) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %_params, i32 noundef 604) #14
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @snd_pcm_hw_refine(ptr noundef %substream, ptr noundef %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.end.end_crit_edge, label %if.end5

if.end.end_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

if.end5:                                          ; preds = %if.end
  %call6 = tail call fastcc i32 @fixup_unreferenced_params(ptr noundef %substream, ptr noundef %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %if.end5.end_crit_edge, label %if.end59.i.i

if.end5.end_crit_edge:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

if.end59.i.i:                                     ; preds = %if.end5
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end59.i.i.end_crit_edge, label %if.end.i.i

if.end59.i.i.end_crit_edge:                       ; preds = %if.end59.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

if.end.i.i:                                       ; preds = %if.end59.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_params, i32 604, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.end_crit_edge

if.end.i.i.end_crit_edge:                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 604) #14
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %_params, ptr noundef %call, i32 noundef 604) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 %call6, i32 -14
  br label %end

end:                                              ; preds = %copy_to_user.exit, %if.end.i.i.end_crit_edge, %if.end59.i.i.end_crit_edge, %if.end5.end_crit_edge, %if.end.end_crit_edge
  %err.0 = phi i32 [ %call3, %if.end.end_crit_edge ], [ %call6, %if.end5.end_crit_edge ], [ -14, %if.end59.i.i.end_crit_edge ], [ -14, %if.end.i.i.end_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call) #14
  br label %cleanup

cleanup:                                          ; preds = %end, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %err.0, %end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_params_user(ptr noundef %substream, ptr noundef %_params) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %_params, i32 noundef 604) #14
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc i32 @snd_pcm_hw_params(ptr noundef %substream, ptr noundef %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.end.end_crit_edge, label %if.end59.i.i

if.end.end_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

if.end59.i.i:                                     ; preds = %if.end
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end59.i.i.end_crit_edge, label %if.end.i.i

if.end59.i.i.end_crit_edge:                       ; preds = %if.end59.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

if.end.i.i:                                       ; preds = %if.end59.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_params, i32 604, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.end_crit_edge

if.end.i.i.end_crit_edge:                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %end

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 604) #14
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %_params, ptr noundef %call, i32 noundef 604) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %end

end:                                              ; preds = %copy_to_user.exit, %if.end.i.i.end_crit_edge, %if.end59.i.i.end_crit_edge, %if.end.end_crit_edge
  %err.0 = phi i32 [ %call3, %if.end.end_crit_edge ], [ -14, %if.end59.i.i.end_crit_edge ], [ -14, %if.end.i.i.end_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call) #14
  br label %cleanup

cleanup:                                          ; preds = %end, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %err.0, %end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_free(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %substream, null
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %lor.rhs.do.end_crit_edge, label %if.end25, !prof !196

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 853, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end25:                                         ; preds = %lor.rhs
  %2 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %.off = add i32 %9, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  %10 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %substream, align 4
  %nonatomic.i48 = getelementptr inbounds %struct.snd_pcm, ptr %11, i32 0, i32 14
  %12 = ptrtoint ptr %nonatomic.i48 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %nonatomic.i48, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i49 = icmp eq i8 %13, 0
  br i1 %switch, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %snd_pcm_stream_lock_irq.exit
  br i1 %tobool.not.i49, label %if.else.i.i47, label %if.then.i.i45

if.then.i.i45:                                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i44 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i44) #14
  br label %cleanup

if.else.i.i47:                                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i46 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i46) #14
  br label %cleanup

sw.epilog:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  br i1 %tobool.not.i49, label %if.else.i.i53, label %if.then.i.i51

if.then.i.i51:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i50 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i50) #14
  br label %snd_pcm_stream_unlock_irq.exit54

if.else.i.i53:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i52 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i52) #14
  br label %snd_pcm_stream_unlock_irq.exit54

snd_pcm_stream_unlock_irq.exit54:                 ; preds = %if.else.i.i53, %if.then.i.i51
  %mmap_count = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %mmap_count, i32 noundef 4) #14
  %14 = ptrtoint ptr %mmap_count to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %mmap_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool27.not = icmp eq i32 %15, 0
  br i1 %tobool27.not, label %if.end29, label %snd_pcm_stream_unlock_irq.exit54.cleanup_crit_edge

snd_pcm_stream_unlock_irq.exit54.cleanup_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit54
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end29:                                         ; preds = %snd_pcm_stream_unlock_irq.exit54
  %16 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %runtime1, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %if.end29.snd_pcm_sync_stop.exit.i_crit_edge, label %land.lhs.true.i.i

if.end29.snd_pcm_sync_stop.exit.i_crit_edge:      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.i

land.lhs.true.i.i:                                ; preds = %if.end29
  %stop_operating.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %17, i32 0, i32 43
  %18 = ptrtoint ptr %stop_operating.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %stop_operating.i.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool2.not.i.i = icmp eq i8 %19, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.snd_pcm_sync_stop.exit.i_crit_edge, label %if.then.i.i55

land.lhs.true.i.i.snd_pcm_sync_stop.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.i

if.then.i.i55:                                    ; preds = %land.lhs.true.i.i
  %20 = ptrtoint ptr %stop_operating.i.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %stop_operating.i.i, align 4
  %ops.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %21 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ops.i.i, align 4
  %tobool5.not.i.i = icmp eq ptr %22, null
  br i1 %tobool5.not.i.i, label %if.then.i.i55.if.else.i.i57_crit_edge, label %land.lhs.true6.i.i

if.then.i.i55.if.else.i.i57_crit_edge:            ; preds = %if.then.i.i55
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i.i57

land.lhs.true6.i.i:                               ; preds = %if.then.i.i55
  %sync_stop.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %sync_stop.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sync_stop.i.i, align 4
  %tobool8.not.i.i = icmp eq ptr %24, null
  br i1 %tobool8.not.i.i, label %land.lhs.true6.i.i.if.else.i.i57_crit_edge, label %if.then9.i.i

land.lhs.true6.i.i.if.else.i.i57_crit_edge:       ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i.i57

if.then9.i.i:                                     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i56 = tail call i32 %24(ptr noundef nonnull %substream) #14
  br label %snd_pcm_sync_stop.exit.i

if.else.i.i57:                                    ; preds = %land.lhs.true6.i.i.if.else.i.i57_crit_edge, %if.then.i.i55.if.else.i.i57_crit_edge
  %25 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %substream, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 8
  %sync_irq14.i.i = getelementptr inbounds %struct.snd_card, ptr %28, i32 0, i32 33
  %29 = ptrtoint ptr %sync_irq14.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sync_irq14.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp.i.i = icmp sgt i32 %30, 0
  br i1 %cmp.i.i, label %if.then15.i.i, label %if.else.i.i57.snd_pcm_sync_stop.exit.i_crit_edge

if.else.i.i57.snd_pcm_sync_stop.exit.i_crit_edge: ; preds = %if.else.i.i57
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_sync_stop.exit.i

if.then15.i.i:                                    ; preds = %if.else.i.i57
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @synchronize_irq(i32 noundef %30) #14
  br label %snd_pcm_sync_stop.exit.i

snd_pcm_sync_stop.exit.i:                         ; preds = %if.then15.i.i, %if.else.i.i57.snd_pcm_sync_stop.exit.i_crit_edge, %if.then9.i.i, %land.lhs.true.i.i.snd_pcm_sync_stop.exit.i_crit_edge, %if.end29.snd_pcm_sync_stop.exit.i_crit_edge
  %ops.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %31 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ops.i, align 4
  %hw_free.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %32, i32 0, i32 4
  %33 = ptrtoint ptr %hw_free.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw_free.i, align 4
  %tobool.not.i58 = icmp eq ptr %34, null
  br i1 %tobool.not.i58, label %snd_pcm_sync_stop.exit.i.if.end.i_crit_edge, label %if.then.i

snd_pcm_sync_stop.exit.i.if.end.i_crit_edge:      ; preds = %snd_pcm_sync_stop.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %snd_pcm_sync_stop.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 %34(ptr noundef nonnull %substream) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %snd_pcm_sync_stop.exit.i.if.end.i_crit_edge
  %result.0.i = phi i32 [ %call.i, %if.then.i ], [ 0, %snd_pcm_sync_stop.exit.i.if.end.i_crit_edge ]
  %managed_buffer_alloc.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 26
  %35 = ptrtoint ptr %managed_buffer_alloc.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %bf.load.i = load i8, ptr %managed_buffer_alloc.i, align 4
  %36 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool3.not.i = icmp eq i8 %36, 0
  br i1 %tobool3.not.i, label %if.end.i.do_hw_free.exit_crit_edge, label %if.then4.i

if.end.i.do_hw_free.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_hw_free.exit

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i = tail call i32 @snd_pcm_lib_free_pages(ptr noundef nonnull %substream) #14
  br label %do_hw_free.exit

do_hw_free.exit:                                  ; preds = %if.then4.i, %if.end.i.do_hw_free.exit_crit_edge
  %37 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %substream, align 4
  %nonatomic.i.i = getelementptr inbounds %struct.snd_pcm, ptr %38, i32 0, i32 14
  %39 = ptrtoint ptr %nonatomic.i.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %nonatomic.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool.not.i.i59 = icmp eq i8 %40, 0
  br i1 %tobool.not.i.i59, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %do_hw_free.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i

if.else.i.i.i:                                    ; preds = %do_hw_free.exit
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_stream_lock_irq.exit.i

snd_pcm_stream_lock_irq.exit.i:                   ; preds = %if.else.i.i.i, %if.then.i.i.i
  %41 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %runtime1, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %42, i32 0, i32 37
  %43 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %status.i, align 4
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %46)
  %cmp.not.i = icmp eq i32 %46, 8
  br i1 %cmp.not.i, label %snd_pcm_stream_lock_irq.exit.i.if.end.i61_crit_edge, label %if.then.i60

snd_pcm_stream_lock_irq.exit.i.if.end.i61_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i61

if.then.i60:                                      ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %47 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %44, align 8
  br label %if.end.i61

if.end.i61:                                       ; preds = %if.then.i60, %snd_pcm_stream_lock_irq.exit.i.if.end.i61_crit_edge
  %48 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %substream, align 4
  %nonatomic.i8.i = getelementptr inbounds %struct.snd_pcm, ptr %49, i32 0, i32 14
  %50 = ptrtoint ptr %nonatomic.i8.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %nonatomic.i8.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool.not.i9.i = icmp eq i8 %51, 0
  br i1 %tobool.not.i9.i, label %if.else.i.i13.i, label %if.then.i.i11.i

if.then.i.i11.i:                                  ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i10.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i10.i) #14
  br label %snd_pcm_set_state.exit

if.else.i.i13.i:                                  ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i12.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i12.i) #14
  br label %snd_pcm_set_state.exit

snd_pcm_set_state.exit:                           ; preds = %if.else.i.i13.i, %if.then.i.i11.i
  %latency_pm_qos_req = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 6
  tail call void @cpu_latency_qos_remove_request(ptr noundef %latency_pm_qos_req) #14
  br label %cleanup

cleanup:                                          ; preds = %snd_pcm_set_state.exit, %snd_pcm_stream_unlock_irq.exit54.cleanup_crit_edge, %if.else.i.i47, %if.then.i.i45, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ %result.0.i, %snd_pcm_set_state.exit ], [ -77, %snd_pcm_stream_unlock_irq.exit54.cleanup_crit_edge ], [ -77, %if.then.i.i45 ], [ -77, %if.else.i.i47 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_sw_params_user(ptr noundef %substream, ptr noundef %_params) unnamed_addr #0 align 64 {
entry:
  %params = alloca %struct.snd_pcm_sw_params, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %params) #14
  %0 = call ptr @memset(ptr %params, i32 255, i32 104)
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 156) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_params, i32 104, i32 -1226833920) #18
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !195

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %params, i32 noundef 104) #14
  %2 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #3, !srcloc !216
  %and.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %params, ptr noundef %_params, i32 noundef 104) #14
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end59.i.i11, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !195

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.0.i.i20 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 104, %entry.if.then11.i.i_crit_edge ], [ 104, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 104, %res.0.i.i20
  %add.ptr.i.i = getelementptr i8, ptr %params, i32 %sub.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i20)
  br label %cleanup

if.end59.i.i11:                                   ; preds = %if.end.i.i
  %call1 = call fastcc i32 @snd_pcm_sw_params(ptr noundef %substream, ptr noundef nonnull %params)
  call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i12 = call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i12, label %if.end59.i.i11.cleanup_crit_edge, label %copy_to_user.exit

if.end59.i.i11.cleanup_crit_edge:                 ; preds = %if.end59.i.i11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end59.i.i11
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i16 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %params, i32 noundef 104) #14
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %_params, ptr noundef nonnull %params, i32 noundef 104) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool3.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool3.not, i32 %call1, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end59.i.i11.cleanup_crit_edge, %if.then11.i.i
  %retval.0 = phi i32 [ -14, %if.then11.i.i ], [ -14, %if.end59.i.i11.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %params) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_status_user32(ptr noundef %substream, ptr noundef %_status, i1 noundef zeroext %ext) unnamed_addr #0 align 64 {
entry:
  %status64 = alloca %struct.snd_pcm_status64, align 8
  %status32 = alloca %struct.snd_pcm_status32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %status64) #14
  call void @llvm.lifetime.start.p0(i64 108, ptr nonnull %status32) #14
  %0 = call ptr @memset(ptr %status64, i32 0, i32 128)
  %1 = call ptr @memset(ptr %status32, i32 0, i32 108)
  br i1 %ext, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 1070) #14
  %audio_tstamp_data = getelementptr inbounds %struct.snd_pcm_status32, ptr %_status, i32 0, i32 12
  %2 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %4, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %5 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %audio_tstamp_data, i32 -1226833921) #14, !srcloc !223
  %asmresult = extractvalue { i32, i32 } %5, 0
  %asmresult1 = extractvalue { i32, i32 } %5, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %audio_tstamp_data2 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 13
  %6 = ptrtoint ptr %audio_tstamp_data2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %asmresult1, ptr %audio_tstamp_data2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool4.not = icmp eq i32 %asmresult, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call5 = call i32 @snd_pcm_status64(ptr noundef %substream, ptr noundef nonnull %status64)
  %7 = ptrtoint ptr %status64 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %status64, align 8
  %trigger_tstamp_sec9 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 2
  %9 = ptrtoint ptr %trigger_tstamp_sec9 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %trigger_tstamp_sec9, align 8
  %conv = trunc i64 %10 to i32
  %trigger_tstamp_nsec10 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 3
  %11 = ptrtoint ptr %trigger_tstamp_nsec10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %trigger_tstamp_nsec10, align 8
  %conv11 = trunc i64 %12 to i32
  %tstamp_sec12 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 4
  %13 = ptrtoint ptr %tstamp_sec12 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %tstamp_sec12, align 8
  %conv13 = trunc i64 %14 to i32
  %tstamp_nsec14 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 5
  %15 = ptrtoint ptr %tstamp_nsec14 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %tstamp_nsec14, align 8
  %conv15 = trunc i64 %16 to i32
  %appl_ptr16 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 6
  %17 = ptrtoint ptr %appl_ptr16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %appl_ptr16, align 8
  %hw_ptr17 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 7
  %19 = ptrtoint ptr %hw_ptr17 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %hw_ptr17, align 4
  %delay18 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 8
  %21 = ptrtoint ptr %delay18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %delay18, align 8
  %avail19 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 9
  %23 = ptrtoint ptr %avail19 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %avail19, align 4
  %avail_max20 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 10
  %25 = ptrtoint ptr %avail_max20 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %avail_max20, align 8
  %overrange21 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 11
  %27 = ptrtoint ptr %overrange21 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %overrange21, align 4
  %suspended_state22 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 12
  %29 = ptrtoint ptr %suspended_state22 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %suspended_state22, align 8
  %audio_tstamp_data24 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 13
  %31 = ptrtoint ptr %audio_tstamp_data24 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %audio_tstamp_data24, align 4
  %audio_tstamp_sec25 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 14
  %33 = ptrtoint ptr %audio_tstamp_sec25 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %audio_tstamp_sec25, align 8
  %conv26 = trunc i64 %34 to i32
  %audio_tstamp_nsec27 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 15
  %35 = ptrtoint ptr %audio_tstamp_nsec27 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %audio_tstamp_nsec27, align 8
  %conv28 = trunc i64 %36 to i32
  %audio_tstamp_accuracy33 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status64, i32 0, i32 18
  %37 = ptrtoint ptr %audio_tstamp_accuracy33 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %audio_tstamp_accuracy33, align 8
  %.compoundliteral.sroa.19.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 72
  %39 = call ptr @memset(ptr %.compoundliteral.sroa.19.0.status32.sroa_idx, i32 0, i32 36)
  %40 = ptrtoint ptr %status32 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %8, ptr %status32, align 4
  %.compoundliteral.sroa.2.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 4
  %41 = ptrtoint ptr %.compoundliteral.sroa.2.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %conv, ptr %.compoundliteral.sroa.2.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.3.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 8
  %42 = ptrtoint ptr %.compoundliteral.sroa.3.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %conv11, ptr %.compoundliteral.sroa.3.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 12
  %43 = ptrtoint ptr %.compoundliteral.sroa.4.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %conv13, ptr %.compoundliteral.sroa.4.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.5.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 16
  %44 = ptrtoint ptr %.compoundliteral.sroa.5.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv15, ptr %.compoundliteral.sroa.5.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.6.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 20
  %45 = ptrtoint ptr %.compoundliteral.sroa.6.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %18, ptr %.compoundliteral.sroa.6.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.7.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 24
  %46 = ptrtoint ptr %.compoundliteral.sroa.7.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %20, ptr %.compoundliteral.sroa.7.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.8.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 28
  %47 = ptrtoint ptr %.compoundliteral.sroa.8.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %22, ptr %.compoundliteral.sroa.8.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.9.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 32
  %48 = ptrtoint ptr %.compoundliteral.sroa.9.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %24, ptr %.compoundliteral.sroa.9.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.10.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 36
  %49 = ptrtoint ptr %.compoundliteral.sroa.10.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %26, ptr %.compoundliteral.sroa.10.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.11.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 40
  %50 = ptrtoint ptr %.compoundliteral.sroa.11.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %28, ptr %.compoundliteral.sroa.11.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.12.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 44
  %51 = ptrtoint ptr %.compoundliteral.sroa.12.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %30, ptr %.compoundliteral.sroa.12.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.13.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 48
  %52 = ptrtoint ptr %.compoundliteral.sroa.13.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %32, ptr %.compoundliteral.sroa.13.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.14.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 52
  %53 = ptrtoint ptr %.compoundliteral.sroa.14.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %conv26, ptr %.compoundliteral.sroa.14.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.15.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 56
  %54 = ptrtoint ptr %.compoundliteral.sroa.15.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %conv28, ptr %.compoundliteral.sroa.15.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.16.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 60
  %55 = ptrtoint ptr %.compoundliteral.sroa.16.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %conv26, ptr %.compoundliteral.sroa.16.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.17.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 64
  %56 = ptrtoint ptr %.compoundliteral.sroa.17.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %conv28, ptr %.compoundliteral.sroa.17.0.status32.sroa_idx, align 4
  %.compoundliteral.sroa.18.0.status32.sroa_idx = getelementptr inbounds i8, ptr %status32, i32 68
  %57 = ptrtoint ptr %.compoundliteral.sroa.18.0.status32.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %38, ptr %.compoundliteral.sroa.18.0.status32.sroa_idx, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end.cleanup_crit_edge, label %if.end.i.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end
  %58 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_status, i32 108, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %58, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %status32, i32 noundef 108) #14
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %_status, ptr noundef nonnull %status32, i32 noundef 108) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool35.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool35.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %land.lhs.true.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 108, ptr nonnull %status32) #14
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %status64) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_status_user64(ptr noundef %substream, ptr noundef %_status, i1 noundef zeroext %ext) unnamed_addr #0 align 64 {
entry:
  %status = alloca %struct.snd_pcm_status64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %status) #14
  %0 = call ptr @memset(ptr %status, i32 0, i32 128)
  br i1 %ext, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 1044) #14
  %audio_tstamp_data = getelementptr inbounds %struct.snd_pcm_status64, ptr %_status, i32 0, i32 13
  %1 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 4
  %3 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %3, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %4 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %audio_tstamp_data, i32 -1226833921) #14, !srcloc !224
  %asmresult = extractvalue { i32, i32 } %4, 0
  %asmresult1 = extractvalue { i32, i32 } %4, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %3) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %audio_tstamp_data2 = getelementptr inbounds %struct.snd_pcm_status64, ptr %status, i32 0, i32 13
  %5 = ptrtoint ptr %audio_tstamp_data2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %asmresult1, ptr %audio_tstamp_data2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool4.not = icmp eq i32 %asmresult, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call5 = call i32 @snd_pcm_status64(ptr noundef %substream, ptr noundef nonnull %status)
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end.cleanup_crit_edge, label %if.end.i.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end
  %6 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_status, i32 128, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %status, i32 noundef 128) #14
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %_status, ptr noundef nonnull %status, i32 noundef 128) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool9.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool9.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %land.lhs.true.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %status) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_channel_info_user(ptr noundef %substream, ptr noundef %_info) unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.snd_pcm_channel_info, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %info) #14
  %0 = getelementptr inbounds %struct.snd_pcm_channel_info, ptr %info, i32 0, i32 1
  %1 = call ptr @memset(ptr %info, i32 255, i32 16)
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 156) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %2 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_info, i32 16, i32 -1226833920) #18
  %asmresult.i.i = extractvalue { i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !195

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %info, i32 noundef 16) #14
  %3 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 4
  %5 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #3, !srcloc !216
  %and.i.i.i.i = and i32 %5, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %info, ptr noundef %_info, i32 noundef 16) #14
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %5) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !195

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.0.i.i25 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 16, %entry.if.then11.i.i_crit_edge ], [ 16, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 16, %res.0.i.i25
  %add.ptr.i.i = getelementptr i8, ptr %info, i32 %sub.i.i
  %6 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i25)
  br label %cleanup

if.end:                                           ; preds = %if.end.i.i
  %7 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %info, align 4
  %runtime2.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %9 = ptrtoint ptr %runtime2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %runtime2.i, align 4
  %11 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %substream, align 4
  %nonatomic.i.i = getelementptr inbounds %struct.snd_pcm, ptr %12, i32 0, i32 14
  %13 = ptrtoint ptr %nonatomic.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %nonatomic.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_lock_nested(ptr noundef %mutex.i.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i

if.else.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_stream_lock_irq.exit.i

snd_pcm_stream_lock_irq.exit.i:                   ; preds = %if.else.i.i.i, %if.then.i.i.i
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %10, i32 0, i32 37
  %15 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %status.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i = icmp eq i32 %18, 0
  %19 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %substream, align 4
  %nonatomic.i17.i = getelementptr inbounds %struct.snd_pcm, ptr %20, i32 0, i32 14
  %21 = ptrtoint ptr %nonatomic.i17.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %nonatomic.i17.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i18.i = icmp eq i8 %22, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %snd_pcm_stream_lock_irq.exit.i
  br i1 %tobool.not.i18.i, label %if.else.i.i22.i, label %if.then.i.i20.i

if.then.i.i20.i:                                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i19.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_unlock(ptr noundef %mutex.i.i19.i) #14
  br label %cleanup

if.else.i.i22.i:                                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i21.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i21.i) #14
  br label %cleanup

if.end.i:                                         ; preds = %snd_pcm_stream_lock_irq.exit.i
  br i1 %tobool.not.i18.i, label %if.else.i.i28.i, label %if.then.i.i26.i

if.then.i.i26.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i25.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_unlock(ptr noundef %mutex.i.i25.i) #14
  br label %snd_pcm_stream_unlock_irq.exit29.i

if.else.i.i28.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i27.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i27.i) #14
  br label %snd_pcm_stream_unlock_irq.exit29.i

snd_pcm_stream_unlock_irq.exit29.i:               ; preds = %if.else.i.i28.i, %if.then.i.i26.i
  %channels.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %10, i32 0, i32 15
  %23 = ptrtoint ptr %channels.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %channels.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %24)
  %cmp3.not.i = icmp ult i32 %8, %24
  br i1 %cmp3.not.i, label %if.end5.i, label %snd_pcm_stream_unlock_irq.exit29.i.cleanup_crit_edge

snd_pcm_stream_unlock_irq.exit29.i.cleanup_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit29.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5.i:                                        ; preds = %snd_pcm_stream_unlock_irq.exit29.i
  %25 = call ptr @memset(ptr %0, i32 0, i32 12)
  %26 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %8, ptr %info, align 4
  %ops.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %27 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i.i, align 4
  %ioctl.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %ioctl.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ioctl.i.i, align 4
  %tobool.not.i30.i = icmp eq ptr %30, null
  br i1 %tobool.not.i30.i, label %if.else.i.i, label %if.then.i.i22

if.then.i.i22:                                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i21 = call i32 %30(ptr noundef %substream, i32 noundef 2, ptr noundef nonnull %info) #14
  br label %snd_pcm_channel_info.exit

if.else.i.i:                                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i.i = call i32 @snd_pcm_lib_ioctl(ptr noundef %substream, i32 noundef 2, ptr noundef nonnull %info) #14
  br label %snd_pcm_channel_info.exit

snd_pcm_channel_info.exit:                        ; preds = %if.else.i.i, %if.then.i.i22
  %retval.0.i = phi i32 [ %call.i.i21, %if.then.i.i22 ], [ %call3.i.i, %if.else.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp = icmp slt i32 %retval.0.i, 0
  br i1 %cmp, label %snd_pcm_channel_info.exit.cleanup_crit_edge, label %if.end59.i.i14

snd_pcm_channel_info.exit.cleanup_crit_edge:      ; preds = %snd_pcm_channel_info.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end59.i.i14:                                   ; preds = %snd_pcm_channel_info.exit
  call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i15 = call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i15, label %if.end59.i.i14.cleanup_crit_edge, label %copy_to_user.exit

if.end59.i.i14.cleanup_crit_edge:                 ; preds = %if.end59.i.i14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end59.i.i14
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i19 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %info, i32 noundef 16) #14
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %_info, ptr noundef nonnull %info, i32 noundef 16) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool5.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool5.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end59.i.i14.cleanup_crit_edge, %snd_pcm_channel_info.exit.cleanup_crit_edge, %snd_pcm_stream_unlock_irq.exit29.i.cleanup_crit_edge, %if.else.i.i22.i, %if.then.i.i20.i, %if.then11.i.i
  %retval.0 = phi i32 [ %retval.0.i, %snd_pcm_channel_info.exit.cleanup_crit_edge ], [ -14, %if.then11.i.i ], [ -77, %if.else.i.i22.i ], [ -77, %if.then.i.i20.i ], [ -22, %snd_pcm_stream_unlock_irq.exit29.i.cleanup_crit_edge ], [ -14, %if.end59.i.i14.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %info) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_reset(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_read(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  %group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %0 = ptrtoint ptr %group.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %group.i.i, align 4
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %cmp.i.not.i = icmp eq ptr %1, %self_group.i.i
  br i1 %cmp.i.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @snd_pcm_action_group(ptr noundef nonnull @snd_pcm_action_reset, ptr noundef %substream, i32 noundef 0, i1 noundef zeroext false) #14
  br label %snd_pcm_action_nonatomic.exit

if.else.i:                                        ; preds = %entry
  %runtime1.i8 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %2 = ptrtoint ptr %runtime1.i8 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %runtime1.i8, align 4
  %status.i9 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 37
  %4 = ptrtoint ptr %status.i9 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status.i9, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %8 = add i32 %7, -2
  %switch.and.i = and i32 %8, -6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %switch.and.i)
  %switch.selectcmp.i = icmp eq i32 %switch.and.i, 0
  br i1 %switch.selectcmp.i, label %if.end.i.i, label %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge

if.else.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.end.i.i:                                       ; preds = %if.else.i
  %ops.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %9 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ops.i.i, align 4
  %ioctl.i.i = getelementptr inbounds %struct.snd_pcm_ops, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %ioctl.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ioctl.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %if.else.i.i4, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i3 = tail call i32 %12(ptr noundef %substream, i32 noundef 0, ptr noundef null) #14
  br label %snd_pcm_ops_ioctl.exit.i

if.else.i.i4:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i.i = tail call i32 @snd_pcm_lib_ioctl(ptr noundef %substream, i32 noundef 0, ptr noundef null) #14
  br label %snd_pcm_ops_ioctl.exit.i

snd_pcm_ops_ioctl.exit.i:                         ; preds = %if.else.i.i4, %if.then.i.i
  %retval.0.i.i = phi i32 [ %call.i.i3, %if.then.i.i ], [ %call3.i.i, %if.else.i.i4 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %cmp.i5 = icmp slt i32 %retval.0.i.i, 0
  br i1 %cmp.i5, label %snd_pcm_ops_ioctl.exit.i.snd_pcm_action_nonatomic.exit_crit_edge, label %if.then3.i.i

snd_pcm_ops_ioctl.exit.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %snd_pcm_ops_ioctl.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.then3.i.i:                                     ; preds = %snd_pcm_ops_ioctl.exit.i
  %hw_ptr_base.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 5
  %13 = ptrtoint ptr %hw_ptr_base.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %hw_ptr_base.i, align 4
  %14 = ptrtoint ptr %status.i9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %status.i9, align 4
  %hw_ptr.i7 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %hw_ptr.i7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %hw_ptr.i7, align 4
  %period_size.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 16
  %18 = ptrtoint ptr %period_size.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %period_size.i, align 4
  %rem.i = urem i32 %17, %19
  %sub.i = sub i32 %17, %rem.i
  %hw_ptr_interrupt.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 6
  %20 = ptrtoint ptr %hw_ptr_interrupt.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %sub.i, ptr %hw_ptr_interrupt.i, align 8
  %21 = load i32, ptr %hw_ptr.i7, align 4
  %silence_start.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 34
  %22 = ptrtoint ptr %silence_start.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %silence_start.i, align 4
  %silence_filled.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 35
  %23 = ptrtoint ptr %silence_filled.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %silence_filled.i, align 8
  %24 = ptrtoint ptr %runtime1.i8 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %runtime1.i8, align 4
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %25, i32 0, i32 37
  %26 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %status.i, align 4
  %hw_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %hw_ptr.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %hw_ptr.i, align 4
  %control.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %25, i32 0, i32 38
  %30 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %control.i, align 8
  %appl_ptr.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %appl_ptr.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %29, ptr %appl_ptr.i, align 4
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %33 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.i = icmp eq i32 %34, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then3.i.i.snd_pcm_action_nonatomic.exit_crit_edge

if.then3.i.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

land.lhs.true.i:                                  ; preds = %if.then3.i.i
  %silence_size.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %25, i32 0, i32 32
  %35 = ptrtoint ptr %silence_size.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %silence_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp2.not.i = icmp eq i32 %36, 0
  br i1 %cmp2.not.i, label %land.lhs.true.i.snd_pcm_action_nonatomic.exit_crit_edge, label %if.then.i1

land.lhs.true.i.snd_pcm_action_nonatomic.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_action_nonatomic.exit

if.then.i1:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @snd_pcm_playback_silence(ptr noundef %substream, i32 noundef -1) #14
  br label %snd_pcm_action_nonatomic.exit

snd_pcm_action_nonatomic.exit:                    ; preds = %if.then.i1, %land.lhs.true.i.snd_pcm_action_nonatomic.exit_crit_edge, %if.then3.i.i.snd_pcm_action_nonatomic.exit_crit_edge, %snd_pcm_ops_ioctl.exit.i.snd_pcm_action_nonatomic.exit_crit_edge, %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge, %if.then.i
  %res.0.i = phi i32 [ %call1.i, %if.then.i ], [ -77, %if.else.i.snd_pcm_action_nonatomic.exit_crit_edge ], [ 0, %if.then3.i.i.snd_pcm_action_nonatomic.exit_crit_edge ], [ 0, %land.lhs.true.i.snd_pcm_action_nonatomic.exit_crit_edge ], [ 0, %if.then.i1 ], [ %retval.0.i.i, %snd_pcm_ops_ioctl.exit.i.snd_pcm_action_nonatomic.exit_crit_edge ]
  tail call void @up_read(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  ret i32 %res.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_link(ptr noundef %substream, i32 noundef %fd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic1 = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic1, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  %call.i = tail call i32 @__fdget(i32 noundef %fd) #14, !noalias !225
  %and.i.i = and i32 %call.i, -4
  %4 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool2.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool2.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_inode.i.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %f_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_inode.i.i, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %6, align 8
  %9 = and i16 %8, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %9)
  %cmp.i = icmp eq i16 %9, 8192
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.end._badf_crit_edge

if.end._badf_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %_badf

lor.lhs.false.i:                                  ; preds = %if.end
  %i_rdev.i.i = getelementptr inbounds %struct.inode, ptr %6, i32 0, i32 13
  %10 = ptrtoint ptr %i_rdev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_rdev.i.i, align 8
  %shr.i.i = lshr i32 %11, 20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @snd_major to i32))
  %12 = load i32, ptr @snd_major, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i.i, i32 %12)
  %cmp3.not.i = icmp eq i32 %shr.i.i, %12
  br i1 %cmp3.not.i, label %if.end.i, label %lor.lhs.false.i._badf_crit_edge

lor.lhs.false.i._badf_crit_edge:                  ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_badf

if.end.i:                                         ; preds = %lor.lhs.false.i
  %and.i.i75 = and i32 %11, 1048575
  %call6.i = tail call ptr @snd_lookup_minor_data(i32 noundef %and.i.i75, i32 noundef 5) #14
  %tobool.not.i = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i, label %if.end9.i, label %if.end.i.if.end5_crit_edge

if.end.i.if.end5_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.end9.i:                                        ; preds = %if.end.i
  %call8.i = tail call ptr @snd_lookup_minor_data(i32 noundef %and.i.i75, i32 noundef 6) #14
  %tobool10.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool10.not.i, label %if.end9.i._badf_crit_edge, label %if.end9.i.if.end5_crit_edge

if.end9.i.if.end5_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.end9.i._badf_crit_edge:                        ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_badf

if.end5:                                          ; preds = %if.end9.i.if.end5_crit_edge, %if.end.i.if.end5_crit_edge
  %pcm.023.i = phi ptr [ %call8.i, %if.end9.i.if.end5_crit_edge ], [ %call6.i, %if.end.i.if.end5_crit_edge ]
  %13 = ptrtoint ptr %pcm.023.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pcm.023.i, align 8
  %card_dev.i.i = getelementptr inbounds %struct.snd_card, ptr %14, i32 0, i32 28
  tail call void @put_device(ptr noundef %card_dev.i.i) #14
  %private_data = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 16
  %15 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %private_data, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %cmp = icmp eq ptr %18, %substream
  br i1 %cmp, label %if.end5._badf_crit_edge, label %if.end9

if.end5._badf_crit_edge:                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %_badf

if.end9:                                          ; preds = %if.end5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %19 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %19, i32 noundef 3520, i32 noundef 148) #17
  %tobool11.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool11.not, label %if.end9._nolock_crit_edge, label %if.end13

if.end9._nolock_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %_nolock

if.end13:                                         ; preds = %if.end9
  tail call void @__raw_spin_lock_init(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @.str, ptr noundef nonnull @snd_pcm_group_init.__key, i16 noundef signext 3) #14
  %mutex.i = getelementptr inbounds %struct.snd_pcm_group, ptr %call7.i.i, i32 0, i32 1
  tail call void @__mutex_init(ptr noundef %mutex.i, ptr noundef nonnull @.str.2, ptr noundef nonnull @snd_pcm_group_init.__key.1) #14
  %substreams.i = getelementptr inbounds %struct.snd_pcm_group, ptr %call7.i.i, i32 0, i32 2
  %20 = ptrtoint ptr %substreams.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %substreams.i, ptr %substreams.i, align 8
  %prev.i.i = getelementptr inbounds %struct.snd_pcm_group, ptr %call7.i.i, i32 0, i32 2, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %substreams.i, ptr %prev.i.i, align 4
  %refs.i = getelementptr inbounds %struct.snd_pcm_group, ptr %call7.i.i, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #14
  %22 = ptrtoint ptr %refs.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 1, ptr %refs.i, align 8
  tail call void @down_write(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %23 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %runtime, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 37
  %25 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %status, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp14 = icmp eq i32 %28, 0
  br i1 %cmp14, label %if.end13._end_crit_edge, label %lor.lhs.false

if.end13._end_crit_edge:                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

lor.lhs.false:                                    ; preds = %if.end13
  %runtime18 = getelementptr inbounds %struct.snd_pcm_substream, ptr %18, i32 0, i32 11
  %29 = ptrtoint ptr %runtime18 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %runtime18, align 4
  %status19 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %30, i32 0, i32 37
  %31 = ptrtoint ptr %status19 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %status19, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %32, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %34)
  %cmp21.not = icmp eq i32 %28, %34
  br i1 %cmp21.not, label %lor.lhs.false22, label %lor.lhs.false._end_crit_edge

lor.lhs.false._end_crit_edge:                     ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %35 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %substream, align 4
  %nonatomic24 = getelementptr inbounds %struct.snd_pcm, ptr %36, i32 0, i32 14
  %37 = ptrtoint ptr %nonatomic24 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %nonatomic24, align 1, !range !198
  %39 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %18, align 4
  %nonatomic27 = getelementptr inbounds %struct.snd_pcm, ptr %40, i32 0, i32 14
  %41 = ptrtoint ptr %nonatomic27 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %nonatomic27, align 1, !range !198
  call void @__sanitizer_cov_trace_cmp1(i8 %38, i8 %42)
  %cmp30.not = icmp eq i8 %38, %42
  br i1 %cmp30.not, label %if.end33, label %lor.lhs.false22._end_crit_edge

lor.lhs.false22._end_crit_edge:                   ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

if.end33:                                         ; preds = %lor.lhs.false22
  %group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %18, i32 0, i32 18
  %43 = ptrtoint ptr %group.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %group.i, align 4
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %18, i32 0, i32 17
  %cmp.i76.not = icmp eq ptr %44, %self_group.i
  br i1 %cmp.i76.not, label %if.end37, label %if.end33._end_crit_edge

if.end33._end_crit_edge:                          ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

if.end37:                                         ; preds = %if.end33
  tail call void @snd_pcm_stream_lock_irq(ptr noundef %substream)
  %group.i77 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %45 = ptrtoint ptr %group.i77 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %group.i77, align 4
  %self_group.i78 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %cmp.i79.not = icmp eq ptr %46, %self_group.i78
  br i1 %cmp.i79.not, label %if.then40, label %if.end37.if.end41_crit_edge

if.end37.if.end41_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @snd_pcm_group_assign(ptr noundef %substream, ptr noundef nonnull %call7.i.i)
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.end37.if.end41_crit_edge
  %group.0 = phi ptr [ %call7.i.i, %if.end37.if.end41_crit_edge ], [ null, %if.then40 ]
  %47 = ptrtoint ptr %group.i77 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %group.i77, align 4
  tail call void @snd_pcm_stream_unlock_irq(ptr noundef %substream)
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i81 = getelementptr inbounds %struct.snd_pcm_group, ptr %48, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i81, i32 noundef 0) #14
  tail call fastcc void @snd_pcm_stream_lock_nested(ptr noundef %18)
  tail call fastcc void @snd_pcm_group_assign(ptr noundef %18, ptr noundef %48)
  %refs.c = getelementptr inbounds %struct.snd_pcm_group, ptr %48, i32 0, i32 3
  tail call fastcc void @refcount_inc(ptr noundef %refs.c)
  tail call void @snd_pcm_stream_unlock(ptr noundef %18)
  tail call void @mutex_unlock(ptr noundef %mutex.i81) #14
  br label %_end

if.else.i:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_lock_irq(ptr noundef %48) #14
  tail call fastcc void @snd_pcm_stream_lock_nested(ptr noundef %18)
  tail call fastcc void @snd_pcm_group_assign(ptr noundef %18, ptr noundef %48)
  %refs.c92 = getelementptr inbounds %struct.snd_pcm_group, ptr %48, i32 0, i32 3
  tail call fastcc void @refcount_inc(ptr noundef %refs.c92)
  tail call void @snd_pcm_stream_unlock(ptr noundef %18)
  tail call void @_raw_spin_unlock_irq(ptr noundef %48) #14
  br label %_end

_end:                                             ; preds = %if.else.i, %if.then.i, %if.end33._end_crit_edge, %lor.lhs.false22._end_crit_edge, %lor.lhs.false._end_crit_edge, %if.end13._end_crit_edge
  %res.0 = phi i32 [ -77, %lor.lhs.false22._end_crit_edge ], [ -77, %lor.lhs.false._end_crit_edge ], [ -77, %if.end13._end_crit_edge ], [ -114, %if.end33._end_crit_edge ], [ 0, %if.then.i ], [ 0, %if.else.i ]
  %group.1 = phi ptr [ %call7.i.i, %lor.lhs.false22._end_crit_edge ], [ %call7.i.i, %lor.lhs.false._end_crit_edge ], [ %call7.i.i, %if.end13._end_crit_edge ], [ %call7.i.i, %if.end33._end_crit_edge ], [ %group.0, %if.then.i ], [ %group.0, %if.else.i ]
  tail call void @up_write(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  br label %_nolock

_nolock:                                          ; preds = %_end, %if.end9._nolock_crit_edge
  %res.1 = phi i32 [ %res.0, %_end ], [ -12, %if.end9._nolock_crit_edge ]
  %group.2 = phi ptr [ %group.1, %_end ], [ null, %if.end9._nolock_crit_edge ]
  tail call void @kfree(ptr noundef %group.2) #14
  br label %_badf

_badf:                                            ; preds = %_nolock, %if.end5._badf_crit_edge, %if.end9.i._badf_crit_edge, %lor.lhs.false.i._badf_crit_edge, %if.end._badf_crit_edge
  %res.2 = phi i32 [ %res.1, %_nolock ], [ -22, %if.end5._badf_crit_edge ], [ -77, %lor.lhs.false.i._badf_crit_edge ], [ -77, %if.end._badf_crit_edge ], [ -77, %if.end9.i._badf_crit_edge ]
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i87 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i87, label %_badf.cleanup_crit_edge, label %if.then.i88

_badf.cleanup_crit_edge:                          ; preds = %_badf
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i88:                                      ; preds = %_badf
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @fput(ptr noundef nonnull %4) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then.i88, %_badf.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -77, %entry.cleanup_crit_edge ], [ %res.2, %_badf.cleanup_crit_edge ], [ %res.2, %if.then.i88 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_unlink(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic1 = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic1, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  tail call void @down_write(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  %group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %4 = ptrtoint ptr %group.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %group.i, align 4
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %cmp.i.not = icmp eq ptr %5, %self_group.i
  br i1 %cmp.i.not, label %entry._end_crit_edge, label %if.end

entry._end_crit_edge:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

if.end:                                           ; preds = %entry
  br i1 %tobool.not, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #14
  br label %snd_pcm_group_lock_irq.exit

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #14
  br label %snd_pcm_group_lock_irq.exit

snd_pcm_group_lock_irq.exit:                      ; preds = %if.else.i, %if.then.i
  tail call fastcc void @relink_to_local(ptr noundef %substream)
  %refs = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !211
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !212
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp slt i32 %asmresult.i.i.i.i.i, 2
  br i1 %cmp.i.i, label %if.then3.i.i, label %snd_pcm_group_lock_irq.exit.refcount_dec.exit_crit_edge, !prof !196

snd_pcm_group_lock_irq.exit.refcount_dec.exit_crit_edge: ; preds = %snd_pcm_group_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_dec.exit

if.then3.i.i:                                     ; preds = %snd_pcm_group_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef 4) #14
  br label %refcount_dec.exit

refcount_dec.exit:                                ; preds = %if.then3.i.i, %snd_pcm_group_lock_irq.exit.refcount_dec.exit_crit_edge
  %substreams = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 2
  %7 = ptrtoint ptr %substreams to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %substreams, align 4
  %cmp.i.not.i = icmp eq ptr %8, %substreams
  br i1 %cmp.i.not.i, label %refcount_dec.exit._end.critedge_crit_edge, label %list_is_singular.exit

refcount_dec.exit._end.critedge_crit_edge:        ; preds = %refcount_dec.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end.critedge

list_is_singular.exit:                            ; preds = %refcount_dec.exit
  %prev.i = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 2, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i, align 4
  %cmp.i27.not = icmp eq ptr %8, %10
  br i1 %cmp.i27.not, label %if.then7, label %list_is_singular.exit._end.critedge_crit_edge

list_is_singular.exit._end.critedge_crit_edge:    ; preds = %list_is_singular.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end.critedge

if.then7:                                         ; preds = %list_is_singular.exit
  %add.ptr = getelementptr i8, ptr %8, i32 -140
  tail call fastcc void @relink_to_local(ptr noundef %add.ptr)
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !211
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !212
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %do.end.i.i.i, label %if.end5.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !213
  br label %refcount_dec_and_test.exit

if.end5.i.i.i:                                    ; preds = %if.then7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.refcount_dec_and_test.exit_crit_edge, label %if.then10.i.i.i, !prof !195

if.end5.i.i.i.refcount_dec_and_test.exit_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_dec_and_test.exit

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef 3) #14
  br label %refcount_dec_and_test.exit

refcount_dec_and_test.exit:                       ; preds = %if.then10.i.i.i, %if.end5.i.i.i.refcount_dec_and_test.exit_crit_edge, %do.end.i.i.i
  br i1 %tobool.not, label %if.else.i30, label %if.then.i29

if.then.i29:                                      ; preds = %refcount_dec_and_test.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i28 = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i28) #14
  br label %snd_pcm_group_unlock_irq.exit

if.else.i30:                                      ; preds = %refcount_dec_and_test.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #14
  br label %snd_pcm_group_unlock_irq.exit

snd_pcm_group_unlock_irq.exit:                    ; preds = %if.else.i30, %if.then.i29
  br i1 %cmp.i.i.i, label %if.then15, label %snd_pcm_group_unlock_irq.exit._end_crit_edge

snd_pcm_group_unlock_irq.exit._end_crit_edge:     ; preds = %snd_pcm_group_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %_end

if.then15:                                        ; preds = %snd_pcm_group_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef %5) #14
  br label %_end

_end.critedge:                                    ; preds = %list_is_singular.exit._end.critedge_crit_edge, %refcount_dec.exit._end.critedge_crit_edge
  br i1 %tobool.not, label %if.else.i33, label %if.then.i32

if.then.i32:                                      ; preds = %_end.critedge
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i31 = getelementptr inbounds %struct.snd_pcm_group, ptr %5, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i31) #14
  br label %_end

if.else.i33:                                      ; preds = %_end.critedge
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #14
  br label %_end

_end:                                             ; preds = %if.else.i33, %if.then.i32, %if.then15, %snd_pcm_group_unlock_irq.exit._end_crit_edge, %entry._end_crit_edge
  %res.0 = phi i32 [ 0, %if.then15 ], [ 0, %snd_pcm_group_unlock_irq.exit._end_crit_edge ], [ -114, %entry._end_crit_edge ], [ 0, %if.then.i32 ], [ 0, %if.else.i33 ]
  tail call void @up_write(ptr noundef nonnull @snd_pcm_link_rwsem) #14
  ret i32 %res.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_xrun(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %2 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %status, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.97)
  switch i32 %9, label %sw.default [
    i32 4, label %snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge
    i32 3, label %sw.bb2
  ]

snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb2:                                           ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__snd_pcm_xrun(ptr noundef %substream) #14
  br label %sw.epilog

sw.default:                                       ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge
  %result.0 = phi i32 [ -77, %sw.default ], [ 0, %sw.bb2 ], [ 0, %snd_pcm_stream_lock_irq.exit.sw.epilog_crit_edge ]
  %11 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %substream, align 4
  %nonatomic.i6 = getelementptr inbounds %struct.snd_pcm, ptr %12, i32 0, i32 14
  %13 = ptrtoint ptr %nonatomic.i6 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %nonatomic.i6, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i7 = icmp eq i8 %14, 0
  br i1 %tobool.not.i7, label %if.else.i.i11, label %if.then.i.i9

if.then.i.i9:                                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i8 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i8) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i11:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i10 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i10) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i11, %if.then.i.i9
  ret i32 %result.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_ioctl_sync_ptr_compat(ptr noundef %substream, ptr noundef %src) unnamed_addr #0 align 64 {
entry:
  %sstatus.sroa.7 = alloca i64, align 8
  %sstatus.sroa.9 = alloca i64, align 8
  %sstatus.sroa.12295 = alloca i64, align 8
  %sstatus.sroa.14 = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sstatus.sroa.7)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sstatus.sroa.9)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sstatus.sroa.12295)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sstatus.sroa.14)
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.end, label %if.end24, !prof !196

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 3081, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end24:                                         ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3084) #14
  %2 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %4, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %5 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %src, i32 -1226833921) #14, !srcloc !228
  %asmresult = extractvalue { i32, i32 } %5, 0
  %asmresult26 = extractvalue { i32, i32 } %5, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool28.not = icmp eq i32 %asmresult, 0
  br i1 %tobool28.not, label %lor.lhs.false, label %if.end24.cleanup_crit_edge

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end24
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3085) #14
  %c = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 2
  %6 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i327 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i327 to ptr
  %cpu_domain.i.i328 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 4
  %8 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i328) #3, !srcloc !216
  %and.i329 = and i32 %8, -13
  %or.i330 = or i32 %and.i329, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i330) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %9 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %c, i32 -1226833921) #14, !srcloc !229
  %asmresult38 = extractvalue { i32, i32 } %9, 0
  %asmresult39 = extractvalue { i32, i32 } %9, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %8) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult38)
  %tobool42.not = icmp eq i32 %asmresult38, 0
  br i1 %tobool42.not, label %lor.lhs.false43, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false43:                                  ; preds = %lor.lhs.false
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3086) #14
  %avail_min = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 2, i32 0, i32 1
  %10 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i331 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i331 to ptr
  %cpu_domain.i.i332 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 4
  %12 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i332) #3, !srcloc !216
  %and.i333 = and i32 %12, -13
  %or.i334 = or i32 %and.i333, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i334) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %13 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %avail_min, i32 -1226833921) #14, !srcloc !230
  %asmresult54 = extractvalue { i32, i32 } %13, 0
  %asmresult55 = extractvalue { i32, i32 } %13, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %12) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult54)
  %tobool58.not = icmp eq i32 %asmresult54, 0
  br i1 %tobool58.not, label %if.end60, label %lor.lhs.false43.cleanup_crit_edge

lor.lhs.false43.cleanup_crit_edge:                ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end60:                                         ; preds = %lor.lhs.false43
  %and = and i32 %asmresult26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool61.not = icmp eq i32 %and, 0
  br i1 %tobool61.not, label %if.end60.if.end66_crit_edge, label %if.then62

if.end60.if.end66_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end66

if.then62:                                        ; preds = %if.end60
  %call.i = tail call fastcc i32 @snd_pcm_delay(ptr noundef %substream, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %if.then62.cleanup_crit_edge, label %if.then62.if.end66_crit_edge

if.then62.if.end66_crit_edge:                     ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end66

if.then62.cleanup_crit_edge:                      ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end66:                                         ; preds = %if.then62.if.end66_crit_edge, %if.end60.if.end66_crit_edge
  %status67 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %14 = ptrtoint ptr %status67 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %status67, align 4
  %control68 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %16 = ptrtoint ptr %control68 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %control68, align 8
  %buffer_size.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 18
  %18 = ptrtoint ptr %buffer_size.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %buffer_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.end66.recalculate_boundary.exit.thread_crit_edge, label %while.cond.preheader.i

if.end66.recalculate_boundary.exit.thread_crit_edge: ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #16
  br label %recalculate_boundary.exit.thread

while.cond.preheader.i:                           ; preds = %if.end66
  %sub.i = sub i32 2147483647, %19
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.while.cond.i_crit_edge, %while.cond.preheader.i
  %boundary.0.i = phi i32 [ %mul.i, %while.cond.i.while.cond.i_crit_edge ], [ %19, %while.cond.preheader.i ]
  %mul.i = shl i32 %boundary.0.i, 1
  %cmp.not.i = icmp ugt i32 %mul.i, %sub.i
  br i1 %cmp.not.i, label %recalculate_boundary.exit, label %while.cond.i.while.cond.i_crit_edge

while.cond.i.while.cond.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i

recalculate_boundary.exit:                        ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %boundary.0.i)
  %tobool70.not = icmp eq i32 %boundary.0.i, 0
  br i1 %tobool70.not, label %recalculate_boundary.exit.recalculate_boundary.exit.thread_crit_edge, label %recalculate_boundary.exit._crit_edge

recalculate_boundary.exit._crit_edge:             ; preds = %recalculate_boundary.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %20

recalculate_boundary.exit.recalculate_boundary.exit.thread_crit_edge: ; preds = %recalculate_boundary.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %recalculate_boundary.exit.thread

recalculate_boundary.exit.thread:                 ; preds = %recalculate_boundary.exit.recalculate_boundary.exit.thread_crit_edge, %if.end66.recalculate_boundary.exit.thread_crit_edge
  br label %20

20:                                               ; preds = %recalculate_boundary.exit.thread, %recalculate_boundary.exit._crit_edge
  %21 = phi i32 [ 2147483647, %recalculate_boundary.exit.thread ], [ %boundary.0.i, %recalculate_boundary.exit._crit_edge ]
  %22 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %23, i32 0, i32 14
  %24 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.i371 = icmp eq i8 %25, 0
  br i1 %tobool.not.i371, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %20
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %20
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i
  %and73 = and i32 %asmresult26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %if.then75, label %if.else

if.then75:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  %call77 = tail call i32 @pcm_lib_apply_appl_ptr(ptr noundef %substream, i32 noundef %asmresult39) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %cmp78 = icmp slt i32 %call77, 0
  br i1 %cmp78, label %if.then79, label %if.then75.if.end83_crit_edge

if.then75.if.end83_crit_edge:                     ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end83

if.then79:                                        ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @snd_pcm_stream_unlock_irq(ptr noundef %substream)
  br label %cleanup

if.else:                                          ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %appl_ptr81 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %17, i32 0, i32 1
  %26 = ptrtoint ptr %appl_ptr81 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %appl_ptr81, align 4
  %rem = urem i32 %27, %21
  br label %if.end83

if.end83:                                         ; preds = %if.else, %if.then75.if.end83_crit_edge
  %scontrol.sroa.6.0 = phi i32 [ %rem, %if.else ], [ %asmresult39, %if.then75.if.end83_crit_edge ]
  %and84 = and i32 %asmresult26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  %avail_min88 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %17, i32 0, i32 4
  br i1 %tobool85.not, label %if.then86, label %if.else89

if.then86:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %avail_min88 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 %asmresult55, ptr %avail_min88, align 4
  br label %if.end92

if.else89:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #16
  %29 = ptrtoint ptr %avail_min88 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %avail_min88, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else89, %if.then86
  %scontrol.sroa.19.0 = phi i32 [ %30, %if.else89 ], [ %asmresult55, %if.then86 ]
  %31 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %15, align 8
  %hw_ptr = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 3
  %33 = ptrtoint ptr %hw_ptr to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %hw_ptr, align 4
  %rem94 = urem i32 %34, %21
  %tstamp96 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 5
  %35 = ptrtoint ptr %tstamp96 to i32
  call void @__asan_load8_noabort(i32 %35)
  %sstatus.sroa.7.16.copyload = load volatile i64, ptr %tstamp96, align 8
  %36 = ptrtoint ptr %sstatus.sroa.7 to i32
  call void @__asan_store8_noabort(i32 %36)
  store volatile i64 %sstatus.sroa.7.16.copyload, ptr %sstatus.sroa.7, align 8
  %sstatus.sroa.9.16.tstamp96.sroa_idx = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 5, i32 1
  %37 = ptrtoint ptr %sstatus.sroa.9.16.tstamp96.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %37)
  %sstatus.sroa.9.16.copyload = load volatile i64, ptr %sstatus.sroa.9.16.tstamp96.sroa_idx, align 8
  %38 = ptrtoint ptr %sstatus.sroa.9 to i32
  call void @__asan_store8_noabort(i32 %38)
  store volatile i64 %sstatus.sroa.9.16.copyload, ptr %sstatus.sroa.9, align 8
  %suspended_state = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 6
  %39 = ptrtoint ptr %suspended_state to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %suspended_state, align 8
  %audio_tstamp98 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 8
  %41 = ptrtoint ptr %audio_tstamp98 to i32
  call void @__asan_load8_noabort(i32 %41)
  %sstatus.sroa.12295.40.copyload = load volatile i64, ptr %audio_tstamp98, align 8
  %42 = ptrtoint ptr %sstatus.sroa.12295 to i32
  call void @__asan_store8_noabort(i32 %42)
  store volatile i64 %sstatus.sroa.12295.40.copyload, ptr %sstatus.sroa.12295, align 8
  %sstatus.sroa.14.40.audio_tstamp98.sroa_idx = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %15, i32 0, i32 8, i32 1
  %43 = ptrtoint ptr %sstatus.sroa.14.40.audio_tstamp98.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %43)
  %sstatus.sroa.14.40.copyload = load volatile i64, ptr %sstatus.sroa.14.40.audio_tstamp98.sroa_idx, align 8
  %44 = ptrtoint ptr %sstatus.sroa.14 to i32
  call void @__asan_store8_noabort(i32 %44)
  store volatile i64 %sstatus.sroa.14.40.copyload, ptr %sstatus.sroa.14, align 8
  %45 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %substream, align 4
  %nonatomic.i372 = getelementptr inbounds %struct.snd_pcm, ptr %46, i32 0, i32 14
  %47 = ptrtoint ptr %nonatomic.i372 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %nonatomic.i372, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool.not.i373 = icmp eq i8 %48, 0
  br i1 %tobool.not.i373, label %if.else.i.i377, label %if.then.i.i375

if.then.i.i375:                                   ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i374 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i374) #14
  br label %snd_pcm_stream_unlock_irq.exit

if.else.i.i377:                                   ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i376 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i376) #14
  br label %snd_pcm_stream_unlock_irq.exit

snd_pcm_stream_unlock_irq.exit:                   ; preds = %if.else.i.i377, %if.then.i.i375
  br i1 %tobool74.not, label %if.then101, label %snd_pcm_stream_unlock_irq.exit.if.end102_crit_edge

snd_pcm_stream_unlock_irq.exit.if.end102_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end102

if.then101:                                       ; preds = %snd_pcm_stream_unlock_irq.exit
  %49 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %runtime1, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %50, i32 0, i32 23
  %51 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %info.i, align 8
  %and.i378 = and i32 %52, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i378)
  %tobool.not.i379 = icmp eq i32 %and.i378, 0
  br i1 %tobool.not.i379, label %if.then101.if.end102_crit_edge, label %if.then.i

if.then101.if.end102_crit_edge:                   ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end102

if.then.i:                                        ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #16
  %dma_buffer_p.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %50, i32 0, i32 53
  %53 = ptrtoint ptr %dma_buffer_p.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %dma_buffer_p.i, align 8
  tail call void @snd_dma_buffer_sync(ptr noundef %54, i32 noundef 1) #14
  br label %if.end102

if.end102:                                        ; preds = %if.then.i, %if.then101.if.end102_crit_edge, %snd_pcm_stream_unlock_irq.exit.if.end102_crit_edge
  %s = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3121) #14
  %55 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i335 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i335 to ptr
  %cpu_domain.i.i336 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 4
  %57 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i336) #3, !srcloc !216
  %and.i337 = and i32 %57, -13
  %or.i338 = or i32 %and.i337, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i338) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %58 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %s, i32 %32, i32 -1226833921) #14, !srcloc !231
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %57) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool117.not = icmp eq i32 %58, 0
  br i1 %tobool117.not, label %lor.lhs.false118, label %if.end102.cleanup_crit_edge

if.end102.cleanup_crit_edge:                      ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false118:                                 ; preds = %if.end102
  %hw_ptr123 = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1, i32 0, i32 2
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3122) #14
  %59 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i339 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i339 to ptr
  %cpu_domain.i.i340 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 4
  %61 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i340) #3, !srcloc !216
  %and.i341 = and i32 %61, -13
  %or.i342 = or i32 %and.i341, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i342) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %62 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %hw_ptr123, i32 %rem94, i32 -1226833921) #14, !srcloc !232
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %61) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool137.not = icmp eq i32 %62, 0
  br i1 %tobool137.not, label %lor.lhs.false138, label %lor.lhs.false118.cleanup_crit_edge

lor.lhs.false118.cleanup_crit_edge:               ; preds = %lor.lhs.false118
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false138:                                 ; preds = %lor.lhs.false118
  %tstamp_sec = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1, i32 0, i32 3
  %63 = ptrtoint ptr %sstatus.sroa.7 to i32
  call void @__asan_load8_noabort(i32 %63)
  %sstatus.sroa.7.0.sstatus.sroa.7.0.sstatus.sroa.7.0.sstatus.sroa.7.16. = load i64, ptr %sstatus.sroa.7, align 8
  %conv = trunc i64 %sstatus.sroa.7.0.sstatus.sroa.7.0.sstatus.sroa.7.0.sstatus.sroa.7.16. to i32
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3123) #14
  %64 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i343 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i343 to ptr
  %cpu_domain.i.i344 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 4
  %66 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i344) #3, !srcloc !216
  %and.i345 = and i32 %66, -13
  %or.i346 = or i32 %and.i345, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i346) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %67 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %tstamp_sec, i32 %conv, i32 -1226833921) #14, !srcloc !233
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %66) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool156.not = icmp eq i32 %67, 0
  br i1 %tobool156.not, label %lor.lhs.false157, label %lor.lhs.false138.cleanup_crit_edge

lor.lhs.false138.cleanup_crit_edge:               ; preds = %lor.lhs.false138
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false157:                                 ; preds = %lor.lhs.false138
  %tstamp_nsec = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1, i32 0, i32 4
  %68 = ptrtoint ptr %sstatus.sroa.9 to i32
  call void @__asan_load8_noabort(i32 %68)
  %sstatus.sroa.9.0.sstatus.sroa.9.0.sstatus.sroa.9.0.sstatus.sroa.9.24. = load i64, ptr %sstatus.sroa.9, align 8
  %conv164 = trunc i64 %sstatus.sroa.9.0.sstatus.sroa.9.0.sstatus.sroa.9.0.sstatus.sroa.9.24. to i32
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3124) #14
  %69 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i347 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i347 to ptr
  %cpu_domain.i.i348 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 4
  %71 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i348) #3, !srcloc !216
  %and.i349 = and i32 %71, -13
  %or.i350 = or i32 %and.i349, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i350) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %72 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %tstamp_nsec, i32 %conv164, i32 -1226833921) #14, !srcloc !234
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %71) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool176.not = icmp eq i32 %72, 0
  br i1 %tobool176.not, label %lor.lhs.false177, label %lor.lhs.false157.cleanup_crit_edge

lor.lhs.false157.cleanup_crit_edge:               ; preds = %lor.lhs.false157
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false177:                                 ; preds = %lor.lhs.false157
  %suspended_state182 = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1, i32 0, i32 5
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3125) #14
  %73 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i351 = and i32 %73, -16384
  %74 = inttoptr i32 %and.i.i.i351 to ptr
  %cpu_domain.i.i352 = getelementptr inbounds %struct.thread_info, ptr %74, i32 0, i32 4
  %75 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i352) #3, !srcloc !216
  %and.i353 = and i32 %75, -13
  %or.i354 = or i32 %and.i353, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i354) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %76 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %suspended_state182, i32 %40, i32 -1226833921) #14, !srcloc !235
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %75) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %tobool196.not = icmp eq i32 %76, 0
  br i1 %tobool196.not, label %lor.lhs.false197, label %lor.lhs.false177.cleanup_crit_edge

lor.lhs.false177.cleanup_crit_edge:               ; preds = %lor.lhs.false177
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false197:                                 ; preds = %lor.lhs.false177
  %audio_tstamp_sec = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1, i32 0, i32 6
  %77 = ptrtoint ptr %sstatus.sroa.12295 to i32
  call void @__asan_load8_noabort(i32 %77)
  %sstatus.sroa.12295.0.sstatus.sroa.12295.0.sstatus.sroa.12295.0.sstatus.sroa.12295.40. = load i64, ptr %sstatus.sroa.12295, align 8
  %conv205 = trunc i64 %sstatus.sroa.12295.0.sstatus.sroa.12295.0.sstatus.sroa.12295.0.sstatus.sroa.12295.40. to i32
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3126) #14
  %78 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i355 = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i355 to ptr
  %cpu_domain.i.i356 = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 4
  %80 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i356) #3, !srcloc !216
  %and.i357 = and i32 %80, -13
  %or.i358 = or i32 %and.i357, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i358) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %81 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %audio_tstamp_sec, i32 %conv205, i32 -1226833921) #14, !srcloc !236
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %80) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool217.not = icmp eq i32 %81, 0
  br i1 %tobool217.not, label %lor.lhs.false218, label %lor.lhs.false197.cleanup_crit_edge

lor.lhs.false197.cleanup_crit_edge:               ; preds = %lor.lhs.false197
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false218:                                 ; preds = %lor.lhs.false197
  %audio_tstamp_nsec = getelementptr inbounds %struct.snd_pcm_sync_ptr32, ptr %src, i32 0, i32 1, i32 0, i32 7
  %82 = ptrtoint ptr %sstatus.sroa.14 to i32
  call void @__asan_load8_noabort(i32 %82)
  %sstatus.sroa.14.0.sstatus.sroa.14.0.sstatus.sroa.14.0.sstatus.sroa.14.48. = load i64, ptr %sstatus.sroa.14, align 8
  %conv226 = trunc i64 %sstatus.sroa.14.0.sstatus.sroa.14.0.sstatus.sroa.14.0.sstatus.sroa.14.48. to i32
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3127) #14
  %83 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i359 = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i.i359 to ptr
  %cpu_domain.i.i360 = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 4
  %85 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i360) #3, !srcloc !216
  %and.i361 = and i32 %85, -13
  %or.i362 = or i32 %and.i361, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i362) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %86 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %audio_tstamp_nsec, i32 %conv226, i32 -1226833921) #14, !srcloc !237
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %85) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool238.not = icmp eq i32 %86, 0
  br i1 %tobool238.not, label %lor.lhs.false239, label %lor.lhs.false218.cleanup_crit_edge

lor.lhs.false218.cleanup_crit_edge:               ; preds = %lor.lhs.false218
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false239:                                 ; preds = %lor.lhs.false218
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3128) #14
  %87 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i363 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i.i363 to ptr
  %cpu_domain.i.i364 = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 4
  %89 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i364) #3, !srcloc !216
  %and.i365 = and i32 %89, -13
  %or.i366 = or i32 %and.i365, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i366) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %90 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %c, i32 %scontrol.sroa.6.0, i32 -1226833921) #14, !srcloc !238
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %89) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool258.not = icmp eq i32 %90, 0
  br i1 %tobool258.not, label %lor.lhs.false259, label %lor.lhs.false239.cleanup_crit_edge

lor.lhs.false239.cleanup_crit_edge:               ; preds = %lor.lhs.false239
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false259:                                 ; preds = %lor.lhs.false239
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3129) #14
  %91 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i367 = and i32 %91, -16384
  %92 = inttoptr i32 %and.i.i.i367 to ptr
  %cpu_domain.i.i368 = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 4
  %93 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i368) #3, !srcloc !216
  %and.i369 = and i32 %93, -13
  %or.i370 = or i32 %and.i369, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i370) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %94 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %avail_min, i32 %scontrol.sroa.19.0, i32 -1226833921) #14, !srcloc !239
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %93) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %tobool278.not = icmp eq i32 %94, 0
  %spec.select = select i1 %tobool278.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false259, %lor.lhs.false239.cleanup_crit_edge, %lor.lhs.false218.cleanup_crit_edge, %lor.lhs.false197.cleanup_crit_edge, %lor.lhs.false177.cleanup_crit_edge, %lor.lhs.false157.cleanup_crit_edge, %lor.lhs.false138.cleanup_crit_edge, %lor.lhs.false118.cleanup_crit_edge, %if.end102.cleanup_crit_edge, %if.then79, %if.then62.cleanup_crit_edge, %lor.lhs.false43.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end24.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call77, %if.then79 ], [ -14, %lor.lhs.false43.cleanup_crit_edge ], [ -14, %lor.lhs.false.cleanup_crit_edge ], [ -14, %if.end24.cleanup_crit_edge ], [ %call.i, %if.then62.cleanup_crit_edge ], [ -14, %lor.lhs.false239.cleanup_crit_edge ], [ -14, %lor.lhs.false218.cleanup_crit_edge ], [ -14, %lor.lhs.false197.cleanup_crit_edge ], [ -14, %lor.lhs.false177.cleanup_crit_edge ], [ -14, %lor.lhs.false157.cleanup_crit_edge ], [ -14, %lor.lhs.false138.cleanup_crit_edge ], [ -14, %lor.lhs.false118.cleanup_crit_edge ], [ -14, %if.end102.cleanup_crit_edge ], [ %spec.select, %lor.lhs.false259 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sstatus.sroa.7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sstatus.sroa.9)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sstatus.sroa.12295)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sstatus.sroa.14)
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_sync_ptr(ptr noundef %substream, ptr noundef %_sync_ptr) unnamed_addr #0 align 64 {
entry:
  %sync_ptr = alloca %struct.snd_pcm_sync_ptr, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %sync_ptr) #14
  %2 = call ptr @memset(ptr %sync_ptr, i32 0, i32 136)
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 2989) #14
  %3 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 4
  %5 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %5, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %6 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %_sync_ptr, i32 -1226833921) #14, !srcloc !240
  %asmresult = extractvalue { i32, i32 } %6, 0
  %asmresult2 = extractvalue { i32, i32 } %6, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %5) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %7 = ptrtoint ptr %sync_ptr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %asmresult2, ptr %sync_ptr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %c = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 3
  %c5 = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %_sync_ptr, i32 0, i32 3
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 156) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end.if.then11.i.i_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end
  %8 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %c5, i32 20, i32 -1226833920) #18, !srcloc !241
  %asmresult.i.i = extractvalue { i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !195

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %c, i32 noundef 20) #14
  %9 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #3, !srcloc !216
  %and.i.i.i.i = and i32 %11, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef %c, ptr noundef %c5, i32 noundef 20) #14
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end9, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !195

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end.if.then11.i.i_crit_edge
  %res.0.i.i111 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 20, %if.end.if.then11.i.i_crit_edge ], [ 20, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 20, %res.0.i.i111
  %add.ptr.i.i = getelementptr i8, ptr %c, i32 %sub.i.i
  %12 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i111)
  br label %cleanup

if.end9:                                          ; preds = %if.end.i.i
  %status10 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %13 = ptrtoint ptr %status10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %status10, align 4
  %control11 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %15 = ptrtoint ptr %control11 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %control11, align 8
  %17 = ptrtoint ptr %sync_ptr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sync_ptr, align 8
  %and = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool13.not = icmp eq i32 %and, 0
  br i1 %tobool13.not, label %if.end9.if.end18_crit_edge, label %if.then14

if.end9.if.end18_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.then14:                                        ; preds = %if.end9
  %call.i = call fastcc i32 @snd_pcm_delay(ptr noundef %substream, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %if.then14.cleanup_crit_edge, label %if.then14.if.end18_crit_edge

if.then14.if.end18_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.then14.cleanup_crit_edge:                      ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.then14.if.end18_crit_edge, %if.end9.if.end18_crit_edge
  %19 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %20, i32 0, i32 14
  %21 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i = icmp eq i8 %22, 0
  br i1 %tobool.not.i, label %if.else.i.i, label %if.then.i.i93

if.then.i.i93:                                    ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit

if.else.i.i:                                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_lock_irq(ptr noundef %self_group.i) #14
  br label %snd_pcm_stream_lock_irq.exit

snd_pcm_stream_lock_irq.exit:                     ; preds = %if.else.i.i, %if.then.i.i93
  %23 = ptrtoint ptr %sync_ptr to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sync_ptr, align 8
  %and20 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.then22, label %if.else

if.then22:                                        ; preds = %snd_pcm_stream_lock_irq.exit
  %appl_ptr = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 3, i32 0, i32 1
  %25 = ptrtoint ptr %appl_ptr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %appl_ptr, align 4
  %call24 = call i32 @pcm_lib_apply_appl_ptr(ptr noundef %substream, i32 noundef %26) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.then22.if.end31_crit_edge

if.then22.if.end31_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end31

if.then26:                                        ; preds = %if.then22
  %27 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %substream, align 4
  %nonatomic.i94 = getelementptr inbounds %struct.snd_pcm, ptr %28, i32 0, i32 14
  %29 = ptrtoint ptr %nonatomic.i94 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %nonatomic.i94, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.i95 = icmp eq i8 %30, 0
  br i1 %tobool.not.i95, label %if.else.i.i99, label %if.then.i.i97

if.then.i.i97:                                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i96 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_unlock(ptr noundef %mutex.i.i96) #14
  br label %cleanup

if.else.i.i99:                                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i98 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i98) #14
  br label %cleanup

if.else:                                          ; preds = %snd_pcm_stream_lock_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  %appl_ptr28 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %16, i32 0, i32 1
  %31 = ptrtoint ptr %appl_ptr28 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %appl_ptr28, align 4
  %appl_ptr30 = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 3, i32 0, i32 1
  %33 = ptrtoint ptr %appl_ptr30 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %appl_ptr30, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then22.if.end31_crit_edge
  %34 = ptrtoint ptr %sync_ptr to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sync_ptr, align 8
  %and33 = and i32 %35, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool34.not = icmp eq i32 %and33, 0
  br i1 %tobool34.not, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  %avail_min = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 3, i32 0, i32 4
  %36 = ptrtoint ptr %avail_min to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %avail_min, align 8
  %avail_min37 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %16, i32 0, i32 4
  %38 = ptrtoint ptr %avail_min37 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile i32 %37, ptr %avail_min37, align 4
  br label %if.end42

if.else38:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  %avail_min39 = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %16, i32 0, i32 4
  %39 = ptrtoint ptr %avail_min39 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %avail_min39, align 4
  %avail_min41 = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 3, i32 0, i32 4
  %41 = ptrtoint ptr %avail_min41 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %avail_min41, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.else38, %if.then35
  %42 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %14, align 8
  %s = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 2
  %44 = ptrtoint ptr %s to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %s, align 8
  %hw_ptr = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %14, i32 0, i32 3
  %45 = ptrtoint ptr %hw_ptr to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %hw_ptr, align 4
  %hw_ptr45 = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 2, i32 0, i32 3
  %47 = ptrtoint ptr %hw_ptr45 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %hw_ptr45, align 4
  %tstamp = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 2, i32 0, i32 5
  %tstamp47 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %14, i32 0, i32 5
  %48 = call ptr @memcpy(ptr %tstamp, ptr %tstamp47, i32 16)
  %suspended_state = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %14, i32 0, i32 6
  %49 = ptrtoint ptr %suspended_state to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %suspended_state, align 8
  %suspended_state49 = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 2, i32 0, i32 6
  %51 = ptrtoint ptr %suspended_state49 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %suspended_state49, align 8
  %audio_tstamp = getelementptr inbounds %struct.snd_pcm_sync_ptr, ptr %sync_ptr, i32 0, i32 2, i32 0, i32 8
  %audio_tstamp51 = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %14, i32 0, i32 8
  %52 = call ptr @memcpy(ptr %audio_tstamp, ptr %audio_tstamp51, i32 16)
  %53 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %substream, align 4
  %nonatomic.i100 = getelementptr inbounds %struct.snd_pcm, ptr %54, i32 0, i32 14
  %55 = ptrtoint ptr %nonatomic.i100 to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %nonatomic.i100, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool.not.i101 = icmp eq i8 %56, 0
  br i1 %tobool.not.i101, label %if.else.i.i105, label %if.then.i.i103

if.then.i.i103:                                   ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i102 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  call void @mutex_unlock(ptr noundef %mutex.i.i102) #14
  br label %snd_pcm_stream_unlock_irq.exit106

if.else.i.i105:                                   ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i104 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  call void @_raw_spin_unlock_irq(ptr noundef %self_group.i104) #14
  br label %snd_pcm_stream_unlock_irq.exit106

snd_pcm_stream_unlock_irq.exit106:                ; preds = %if.else.i.i105, %if.then.i.i103
  %57 = ptrtoint ptr %sync_ptr to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sync_ptr, align 8
  %and53 = and i32 %58, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53)
  %tobool54.not = icmp eq i32 %and53, 0
  br i1 %tobool54.not, label %if.then55, label %snd_pcm_stream_unlock_irq.exit106.if.end59.i.i86_crit_edge

snd_pcm_stream_unlock_irq.exit106.if.end59.i.i86_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit106
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end59.i.i86

if.then55:                                        ; preds = %snd_pcm_stream_unlock_irq.exit106
  %59 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %runtime1, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %60, i32 0, i32 23
  %61 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %info.i, align 8
  %and.i107 = and i32 %62, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i107)
  %tobool.not.i108 = icmp eq i32 %and.i107, 0
  br i1 %tobool.not.i108, label %if.then55.if.end59.i.i86_crit_edge, label %if.then.i

if.then55.if.end59.i.i86_crit_edge:               ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end59.i.i86

if.then.i:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #16
  %dma_buffer_p.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %60, i32 0, i32 53
  %63 = ptrtoint ptr %dma_buffer_p.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dma_buffer_p.i, align 8
  call void @snd_dma_buffer_sync(ptr noundef %64, i32 noundef 1) #14
  br label %if.end59.i.i86

if.end59.i.i86:                                   ; preds = %if.then.i, %if.then55.if.end59.i.i86_crit_edge, %snd_pcm_stream_unlock_irq.exit106.if.end59.i.i86_crit_edge
  call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i87 = call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i87, label %if.end59.i.i86.cleanup_crit_edge, label %if.end.i.i90

if.end59.i.i86.cleanup_crit_edge:                 ; preds = %if.end59.i.i86
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i90:                                     ; preds = %if.end59.i.i86
  %65 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_sync_ptr, i32 136, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i88 = extractvalue { i32, i32 } %65, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i88)
  %cmp.i6.i89 = icmp eq i32 %asmresult.i.i88, 0
  br i1 %cmp.i6.i89, label %copy_to_user.exit, label %if.end.i.i90.cleanup_crit_edge

if.end.i.i90.cleanup_crit_edge:                   ; preds = %if.end.i.i90
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i90
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i91 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %sync_ptr, i32 noundef 136) #14
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %_sync_ptr, ptr noundef nonnull %sync_ptr, i32 noundef 136) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool58.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool58.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i90.cleanup_crit_edge, %if.end59.i.i86.cleanup_crit_edge, %if.else.i.i99, %if.then.i.i97, %if.then14.cleanup_crit_edge, %if.then11.i.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %entry.cleanup_crit_edge ], [ %call.i, %if.then14.cleanup_crit_edge ], [ %call24, %if.then.i.i97 ], [ %call24, %if.else.i.i99 ], [ -14, %if.then11.i.i ], [ -14, %if.end59.i.i86.cleanup_crit_edge ], [ -14, %if.end.i.i90.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %sync_ptr) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_refine_old_user(ptr noundef %substream, ptr noundef %_oparams) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 604) #17
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @memdup_user(ptr noundef %_oparams, i32 noundef 252) #14
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %1 = ptrtoint ptr %call1 to i32
  br label %out

if.end5:                                          ; preds = %if.end
  %2 = getelementptr inbounds i8, ptr %call7.i, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 596)
  %4 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %call1, align 4
  %6 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %call7.i, align 8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 1, i32 0
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %arrayidx3.i = getelementptr %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 1, i32 0
  %9 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %arrayidx3.i, align 4
  %arrayidx.1.i = getelementptr %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.1.i, align 4
  %arrayidx3.1.i = getelementptr %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %arrayidx3.1.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %arrayidx3.1.i, align 4
  %arrayidx.2.i = getelementptr %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 1, i32 2
  %13 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.2.i, align 4
  %arrayidx3.2.i = getelementptr %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 1, i32 2
  %15 = ptrtoint ptr %arrayidx3.2.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %arrayidx3.2.i, align 4
  %intervals.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 3
  %intervals5.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 2
  %16 = call ptr @memcpy(ptr %intervals.i, ptr %intervals5.i, i32 144)
  %rmask.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 3
  %17 = ptrtoint ptr %rmask.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rmask.i, align 4
  %and.i = and i32 %18, 7
  %and8.i = shl i32 %18, 5
  %shl.i = and i32 %and8.i, -256
  %or.i = or i32 %shl.i, %and.i
  %rmask9.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 5
  %19 = ptrtoint ptr %rmask9.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %or.i, ptr %rmask9.i, align 8
  %cmask.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 4
  %20 = ptrtoint ptr %cmask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cmask.i, align 4
  %and10.i = and i32 %21, 7
  %and12.i = shl i32 %21, 5
  %shl13.i = and i32 %and12.i, -256
  %or14.i = or i32 %shl13.i, %and10.i
  %cmask15.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 6
  %22 = ptrtoint ptr %cmask15.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %or14.i, ptr %cmask15.i, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 5
  %23 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %info.i, align 4
  %info16.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 7
  %25 = ptrtoint ptr %info16.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %info16.i, align 8
  %msbits.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 6
  %26 = ptrtoint ptr %msbits.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %msbits.i, align 4
  %msbits17.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 8
  %28 = ptrtoint ptr %msbits17.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %msbits17.i, align 4
  %rate_num.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 7
  %29 = ptrtoint ptr %rate_num.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rate_num.i, align 4
  %rate_num18.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 9
  %31 = ptrtoint ptr %rate_num18.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %rate_num18.i, align 8
  %rate_den.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 8
  %32 = ptrtoint ptr %rate_den.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rate_den.i, align 4
  %rate_den19.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 10
  %34 = ptrtoint ptr %rate_den19.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %rate_den19.i, align 4
  %fifo_size.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 9
  %35 = ptrtoint ptr %fifo_size.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %fifo_size.i, align 4
  %fifo_size20.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 11
  %37 = ptrtoint ptr %fifo_size20.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %fifo_size20.i, align 8
  %call6 = tail call i32 @snd_pcm_hw_refine(ptr noundef %substream, ptr noundef nonnull %call7.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %if.end5.out_old_crit_edge, label %if.end8

if.end5.out_old_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

if.end8:                                          ; preds = %if.end5
  %call9 = tail call fastcc i32 @fixup_unreferenced_params(ptr noundef %substream, ptr noundef nonnull %call7.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.end8.out_old_crit_edge, label %if.end12

if.end8.out_old_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

if.end12:                                         ; preds = %if.end8
  %38 = getelementptr inbounds i8, ptr %call1, i32 188
  %39 = call ptr @memset(ptr %38, i32 0, i32 64)
  %40 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %call7.i, align 8
  %42 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %call1, align 4
  %43 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx3.i, align 4
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %arrayidx.i, align 4
  %46 = ptrtoint ptr %arrayidx3.1.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx3.1.i, align 4
  %48 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %arrayidx.1.i, align 4
  %49 = ptrtoint ptr %arrayidx3.2.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx3.2.i, align 4
  %51 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %arrayidx.2.i, align 4
  %52 = call ptr @memcpy(ptr %intervals5.i, ptr %intervals.i, i32 144)
  %53 = ptrtoint ptr %rmask9.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rmask9.i, align 8
  %and.i39 = and i32 %54, 7
  %and8.i40 = lshr i32 %54, 5
  %shr.i = and i32 %and8.i40, 134217720
  %or.i41 = or i32 %shr.i, %and.i39
  %55 = ptrtoint ptr %rmask.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %or.i41, ptr %rmask.i, align 4
  %56 = ptrtoint ptr %cmask15.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %cmask15.i, align 4
  %and10.i44 = and i32 %57, 7
  %and12.i45 = lshr i32 %57, 5
  %shr13.i = and i32 %and12.i45, 134217720
  %or14.i46 = or i32 %shr13.i, %and10.i44
  %58 = ptrtoint ptr %cmask.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %or14.i46, ptr %cmask.i, align 4
  %59 = ptrtoint ptr %info16.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %info16.i, align 8
  %61 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %info.i, align 4
  %62 = ptrtoint ptr %msbits17.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %msbits17.i, align 4
  %64 = ptrtoint ptr %msbits.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %msbits.i, align 4
  %65 = ptrtoint ptr %rate_num18.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %rate_num18.i, align 8
  %67 = ptrtoint ptr %rate_num.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %rate_num.i, align 4
  %68 = ptrtoint ptr %rate_den19.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %rate_den19.i, align 4
  %70 = ptrtoint ptr %rate_den.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %rate_den.i, align 4
  %71 = ptrtoint ptr %fifo_size20.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %fifo_size20.i, align 8
  %73 = ptrtoint ptr %fifo_size.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %fifo_size.i, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end12.out_old_crit_edge, label %if.end.i.i

if.end12.out_old_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

if.end.i.i:                                       ; preds = %if.end12
  %74 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_oparams, i32 252, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %74, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.out_old_crit_edge

if.end.i.i.out_old_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call1, i32 noundef 252) #14
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %_oparams, ptr noundef %call1, i32 noundef 252) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool14.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool14.not, i32 0, i32 -14
  br label %out_old

out_old:                                          ; preds = %copy_to_user.exit, %if.end.i.i.out_old_crit_edge, %if.end12.out_old_crit_edge, %if.end8.out_old_crit_edge, %if.end5.out_old_crit_edge
  %err.0 = phi i32 [ %call6, %if.end5.out_old_crit_edge ], [ %call9, %if.end8.out_old_crit_edge ], [ -14, %if.end12.out_old_crit_edge ], [ -14, %if.end.i.i.out_old_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call1) #14
  br label %out

out:                                              ; preds = %out_old, %if.then3
  %err.1 = phi i32 [ %1, %if.then3 ], [ %err.0, %out_old ]
  tail call void @kfree(ptr noundef nonnull %call7.i) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %out ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_hw_params_old_user(ptr noundef %substream, ptr noundef %_oparams) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 604) #17
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @memdup_user(ptr noundef %_oparams, i32 noundef 252) #14
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %1 = ptrtoint ptr %call1 to i32
  br label %out

if.end5:                                          ; preds = %if.end
  %2 = getelementptr inbounds i8, ptr %call7.i, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 596)
  %4 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %call1, align 4
  %6 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %call7.i, align 8
  %arrayidx.i = getelementptr %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 1, i32 0
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %arrayidx3.i = getelementptr %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 1, i32 0
  %9 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %arrayidx3.i, align 4
  %arrayidx.1.i = getelementptr %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.1.i, align 4
  %arrayidx3.1.i = getelementptr %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %arrayidx3.1.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %arrayidx3.1.i, align 4
  %arrayidx.2.i = getelementptr %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 1, i32 2
  %13 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.2.i, align 4
  %arrayidx3.2.i = getelementptr %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 1, i32 2
  %15 = ptrtoint ptr %arrayidx3.2.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %arrayidx3.2.i, align 4
  %intervals.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 3
  %intervals5.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 2
  %16 = call ptr @memcpy(ptr %intervals.i, ptr %intervals5.i, i32 144)
  %rmask.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 3
  %17 = ptrtoint ptr %rmask.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rmask.i, align 4
  %and.i = and i32 %18, 7
  %and8.i = shl i32 %18, 5
  %shl.i = and i32 %and8.i, -256
  %or.i = or i32 %shl.i, %and.i
  %rmask9.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 5
  %19 = ptrtoint ptr %rmask9.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %or.i, ptr %rmask9.i, align 8
  %cmask.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 4
  %20 = ptrtoint ptr %cmask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cmask.i, align 4
  %and10.i = and i32 %21, 7
  %and12.i = shl i32 %21, 5
  %shl13.i = and i32 %and12.i, -256
  %or14.i = or i32 %shl13.i, %and10.i
  %cmask15.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 6
  %22 = ptrtoint ptr %cmask15.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %or14.i, ptr %cmask15.i, align 4
  %info.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 5
  %23 = ptrtoint ptr %info.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %info.i, align 4
  %info16.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 7
  %25 = ptrtoint ptr %info16.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %info16.i, align 8
  %msbits.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 6
  %26 = ptrtoint ptr %msbits.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %msbits.i, align 4
  %msbits17.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 8
  %28 = ptrtoint ptr %msbits17.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %msbits17.i, align 4
  %rate_num.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 7
  %29 = ptrtoint ptr %rate_num.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rate_num.i, align 4
  %rate_num18.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 9
  %31 = ptrtoint ptr %rate_num18.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %rate_num18.i, align 8
  %rate_den.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 8
  %32 = ptrtoint ptr %rate_den.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rate_den.i, align 4
  %rate_den19.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 10
  %34 = ptrtoint ptr %rate_den19.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %rate_den19.i, align 4
  %fifo_size.i = getelementptr inbounds %struct.snd_pcm_hw_params_old, ptr %call1, i32 0, i32 9
  %35 = ptrtoint ptr %fifo_size.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %fifo_size.i, align 4
  %fifo_size20.i = getelementptr inbounds %struct.snd_pcm_hw_params, ptr %call7.i, i32 0, i32 11
  %37 = ptrtoint ptr %fifo_size20.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %fifo_size20.i, align 8
  %call6 = tail call fastcc i32 @snd_pcm_hw_params(ptr noundef %substream, ptr noundef nonnull %call7.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %if.end5.out_old_crit_edge, label %if.end8

if.end5.out_old_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

if.end8:                                          ; preds = %if.end5
  %38 = getelementptr inbounds i8, ptr %call1, i32 188
  %39 = call ptr @memset(ptr %38, i32 0, i32 64)
  %40 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %call7.i, align 8
  %42 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %call1, align 4
  %43 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx3.i, align 4
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %arrayidx.i, align 4
  %46 = ptrtoint ptr %arrayidx3.1.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx3.1.i, align 4
  %48 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %arrayidx.1.i, align 4
  %49 = ptrtoint ptr %arrayidx3.2.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx3.2.i, align 4
  %51 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %arrayidx.2.i, align 4
  %52 = call ptr @memcpy(ptr %intervals5.i, ptr %intervals.i, i32 144)
  %53 = ptrtoint ptr %rmask9.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rmask9.i, align 8
  %and.i32 = and i32 %54, 7
  %and8.i33 = lshr i32 %54, 5
  %shr.i = and i32 %and8.i33, 134217720
  %or.i34 = or i32 %shr.i, %and.i32
  %55 = ptrtoint ptr %rmask.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %or.i34, ptr %rmask.i, align 4
  %56 = ptrtoint ptr %cmask15.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %cmask15.i, align 4
  %and10.i37 = and i32 %57, 7
  %and12.i38 = lshr i32 %57, 5
  %shr13.i = and i32 %and12.i38, 134217720
  %or14.i39 = or i32 %shr13.i, %and10.i37
  %58 = ptrtoint ptr %cmask.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %or14.i39, ptr %cmask.i, align 4
  %59 = ptrtoint ptr %info16.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %info16.i, align 8
  %61 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %info.i, align 4
  %62 = ptrtoint ptr %msbits17.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %msbits17.i, align 4
  %64 = ptrtoint ptr %msbits.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %msbits.i, align 4
  %65 = ptrtoint ptr %rate_num18.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %rate_num18.i, align 8
  %67 = ptrtoint ptr %rate_num.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %rate_num.i, align 4
  %68 = ptrtoint ptr %rate_den19.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %rate_den19.i, align 4
  %70 = ptrtoint ptr %rate_den.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %rate_den.i, align 4
  %71 = ptrtoint ptr %fifo_size20.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %fifo_size20.i, align 8
  %73 = ptrtoint ptr %fifo_size.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %fifo_size.i, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end8.out_old_crit_edge, label %if.end.i.i

if.end8.out_old_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

if.end.i.i:                                       ; preds = %if.end8
  %74 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_oparams, i32 252, i32 -1226833920) #18, !srcloc !199
  %asmresult.i.i = extractvalue { i32, i32 } %74, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.out_old_crit_edge

if.end.i.i.out_old_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_old

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call1, i32 noundef 252) #14
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %_oparams, ptr noundef %call1, i32 noundef 252) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool10.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool10.not, i32 0, i32 -14
  br label %out_old

out_old:                                          ; preds = %copy_to_user.exit, %if.end.i.i.out_old_crit_edge, %if.end8.out_old_crit_edge, %if.end5.out_old_crit_edge
  %err.0 = phi i32 [ %call6, %if.end5.out_old_crit_edge ], [ -14, %if.end8.out_old_crit_edge ], [ -14, %if.end.i.i.out_old_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call1) #14
  br label %out

out:                                              ; preds = %out_old, %if.then3
  %err.1 = phi i32 [ %1, %if.then3 ], [ %err.0, %out_old ]
  tail call void @kfree(ptr noundef nonnull %call7.i) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %out ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_xferi_frames_ioctl(ptr noundef %substream, ptr noundef %_xferi) unnamed_addr #0 align 64 {
entry:
  %xferi = alloca %struct.snd_xferi, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %xferi) #14
  %0 = ptrtoint ptr %xferi to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %xferi, align 4, !annotation !197
  %1 = getelementptr inbounds %struct.snd_xferi, ptr %xferi, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !197
  %3 = getelementptr inbounds %struct.snd_xferi, ptr %xferi, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !197
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %5 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %6, i32 0, i32 37
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %status, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3158) #14
  %11 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 4
  %13 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %13, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %14 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_xferi, i32 0, i32 -1226833921) #14, !srcloc !242
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %13) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  br i1 %tobool.not, label %if.end59.i.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end59.i.i:                                     ; preds = %if.end
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 156) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end59.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end59.i.i.if.then11.i.i_crit_edge:             ; preds = %if.end59.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end59.i.i
  %15 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_xferi, i32 12, i32 -1226833920) #18, !srcloc !241
  %asmresult.i.i = extractvalue { i32, i32 } %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !195

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %xferi, i32 noundef 12) #14
  %16 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 4
  %18 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #3, !srcloc !216
  %and.i.i.i.i = and i32 %18, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %xferi, ptr noundef %_xferi, i32 noundef 12) #14
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %18) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end9, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !195

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end59.i.i.if.then11.i.i_crit_edge
  %res.0.i.i53 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 12, %if.end59.i.i.if.then11.i.i_crit_edge ], [ 12, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 12, %res.0.i.i53
  %add.ptr.i.i = getelementptr i8, ptr %xferi, i32 %sub.i.i
  %19 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i53)
  br label %cleanup

if.end9:                                          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %1, align 4
  %22 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %3, align 4
  %call.i = call i32 @__snd_pcm_lib_xfer(ptr noundef %substream, ptr noundef %21, i1 noundef zeroext true, i32 noundef %23, i1 noundef zeroext false) #14
  call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3166) #14
  %24 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i46 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i46 to ptr
  %cpu_domain.i.i47 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 4
  %26 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i47) #3, !srcloc !216
  %and.i48 = and i32 %26, -13
  %or.i49 = or i32 %and.i48, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i49) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %27 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_xferi, i32 %call.i, i32 -1226833921) #14, !srcloc !243
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %26) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool33.not = icmp eq i32 %27, 0
  %28 = call i32 @llvm.smin.i32(i32 %call.i, i32 0)
  %spec.select = select i1 %tobool33.not, i32 %28, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.then11.i.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -77, %entry.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ -14, %if.then11.i.i ], [ %spec.select, %if.end9 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %xferi) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_xfern_frames_ioctl(ptr noundef %substream, ptr noundef %_xfern) unnamed_addr #0 align 64 {
entry:
  %xfern = alloca %struct.snd_xfern, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %xfern) #14
  %0 = ptrtoint ptr %xfern to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %xfern, align 4, !annotation !197
  %1 = getelementptr inbounds %struct.snd_xfern, ptr %xfern, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !197
  %3 = getelementptr inbounds %struct.snd_xfern, ptr %xfern, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !197
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %5 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %6, i32 0, i32 37
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %status, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %channels = getelementptr inbounds %struct.snd_pcm_runtime, ptr %6, i32 0, i32 15
  %11 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %channels, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %12)
  %cmp2 = icmp ugt i32 %12, 128
  br i1 %cmp2, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3183) #14
  %13 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 4
  %15 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %15, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %16 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_xfern, i32 0, i32 -1226833921) #14, !srcloc !244
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %15) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not = icmp eq i32 %16, 0
  br i1 %tobool.not, label %if.end59.i.i, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end59.i.i:                                     ; preds = %if.end4
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 156) #14
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i, label %if.end59.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end59.i.i.if.then11.i.i_crit_edge:             ; preds = %if.end59.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end59.i.i
  %17 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_xfern, i32 12, i32 -1226833920) #18, !srcloc !241
  %asmresult.i.i = extractvalue { i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !195

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %xfern, i32 noundef 12) #14
  %18 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 4
  %20 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #3, !srcloc !216
  %and.i.i.i.i = and i32 %20, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %xfern, ptr noundef %_xfern, i32 noundef 12) #14
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %20) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end12, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !195

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end59.i.i.if.then11.i.i_crit_edge
  %res.0.i.i69 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 12, %if.end59.i.i.if.then11.i.i_crit_edge ], [ 12, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 12, %res.0.i.i69
  %add.ptr.i.i = getelementptr i8, ptr %xfern, i32 %sub.i.i
  %21 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i69)
  br label %cleanup

if.end12:                                         ; preds = %if.end.i.i
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %1, align 4
  %24 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %channels, align 8
  %mul = shl i32 %25, 2
  %call15 = call ptr @memdup_user(ptr noundef %23, i32 noundef %mul) #14
  %cmp.i = icmp ugt ptr %call15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %call15 to i32
  br label %cleanup

if.end19:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %27 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %3, align 4
  %call.i = call i32 @__snd_pcm_lib_xfer(ptr noundef %substream, ptr noundef %call15, i1 noundef zeroext false, i32 noundef %28, i1 noundef zeroext false) #14
  call void @kfree(ptr noundef %call15) #14
  call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3196) #14
  %29 = call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i62 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i62 to ptr
  %cpu_domain.i.i63 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 4
  %31 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i63) #3, !srcloc !216
  %and.i64 = and i32 %31, -13
  %or.i65 = or i32 %and.i64, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i65) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %32 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_xfern, i32 %call.i, i32 -1226833921) #14, !srcloc !245
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %31) #14, !srcloc !217
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool42.not = icmp eq i32 %32, 0
  %33 = call i32 @llvm.smin.i32(i32 %call.i, i32 0)
  %spec.select = select i1 %tobool42.not, i32 %33, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then17, %if.then11.i.i, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %26, %if.then17 ], [ -77, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -14, %if.end4.cleanup_crit_edge ], [ -14, %if.then11.i.i ], [ %spec.select, %if.end19 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %xfern) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_rewind_ioctl(ptr noundef %substream, ptr noundef %_frames) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3207) #14
  %0 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 4
  %2 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %2, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %3 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %_frames, i32 -1226833921) #14, !srcloc !246
  %asmresult = extractvalue { i32, i32 } %3, 0
  %asmresult1 = extractvalue { i32, i32 } %3, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %2) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3209) #14
  %4 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i39 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i39 to ptr
  %cpu_domain.i.i40 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 4
  %6 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i40) #3, !srcloc !216
  %and.i41 = and i32 %6, -13
  %or.i42 = or i32 %and.i41, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i42) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %7 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_frames, i32 0, i32 -1226833921) #14, !srcloc !247
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %6) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool12.not = icmp eq i32 %7, 0
  br i1 %tobool12.not, label %if.end14, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end14:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult1)
  %cmp.i = icmp eq i32 %asmresult1, 0
  br i1 %cmp.i, label %if.end14.snd_pcm_rewind.exit_crit_edge, label %if.end.i

if.end14.snd_pcm_rewind.exit_crit_edge:           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_rewind.exit

if.end.i:                                         ; preds = %if.end14
  %8 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %substream, align 4
  %nonatomic.i.i = getelementptr inbounds %struct.snd_pcm, ptr %9, i32 0, i32 14
  %10 = ptrtoint ptr %nonatomic.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %nonatomic.i.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i, i32 noundef 0) #14
  br label %snd_pcm_stream_lock_irq.exit.i

if.else.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_irq(ptr noundef %self_group.i.i) #14
  br label %snd_pcm_stream_lock_irq.exit.i

snd_pcm_stream_lock_irq.exit.i:                   ; preds = %if.else.i.i.i, %if.then.i.i.i
  %runtime.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %12 = ptrtoint ptr %runtime.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %runtime.i.i, align 4
  %status.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %13, i32 0, i32 37
  %14 = ptrtoint ptr %status.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %status.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 8
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.98)
  switch i32 %17, label %sw.default.i.i [
    i32 5, label %sw.bb.i.i
    i32 3, label %snd_pcm_stream_lock_irq.exit.i.do_pcm_hwsync.exit.i_crit_edge
    i32 2, label %snd_pcm_stream_lock_irq.exit.i.if.then1.i_crit_edge
    i32 6, label %snd_pcm_stream_lock_irq.exit.i.if.then1.i_crit_edge47
    i32 7, label %snd_pcm_stream_lock_irq.exit.i.if.end4.i_crit_edge
    i32 4, label %sw.bb4.i.i
  ]

snd_pcm_stream_lock_irq.exit.i.if.end4.i_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

snd_pcm_stream_lock_irq.exit.i.if.then1.i_crit_edge47: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then1.i

snd_pcm_stream_lock_irq.exit.i.if.then1.i_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then1.i

snd_pcm_stream_lock_irq.exit.i.do_pcm_hwsync.exit.i_crit_edge: ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_pcm_hwsync.exit.i

sw.bb.i.i:                                        ; preds = %snd_pcm_stream_lock_irq.exit.i
  %stream.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %19 = ptrtoint ptr %stream.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %stream.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp.i.i = icmp eq i32 %20, 1
  br i1 %cmp.i.i, label %sw.bb.i.i.if.end4.i_crit_edge, label %sw.bb.i.i.do_pcm_hwsync.exit.i_crit_edge

sw.bb.i.i.do_pcm_hwsync.exit.i_crit_edge:         ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do_pcm_hwsync.exit.i

sw.bb.i.i.if.end4.i_crit_edge:                    ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

sw.bb4.i.i:                                       ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

sw.default.i.i:                                   ; preds = %snd_pcm_stream_lock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

do_pcm_hwsync.exit.i:                             ; preds = %sw.bb.i.i.do_pcm_hwsync.exit.i_crit_edge, %snd_pcm_stream_lock_irq.exit.i.do_pcm_hwsync.exit.i_crit_edge
  %call.i.i = tail call i32 @snd_pcm_update_hw_ptr(ptr noundef %substream) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %do_pcm_hwsync.exit.i.if.then1.i_crit_edge, label %do_pcm_hwsync.exit.i.if.end4.i_crit_edge

do_pcm_hwsync.exit.i.if.end4.i_crit_edge:         ; preds = %do_pcm_hwsync.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

do_pcm_hwsync.exit.i.if.then1.i_crit_edge:        ; preds = %do_pcm_hwsync.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then1.i

if.then1.i:                                       ; preds = %do_pcm_hwsync.exit.i.if.then1.i_crit_edge, %snd_pcm_stream_lock_irq.exit.i.if.then1.i_crit_edge, %snd_pcm_stream_lock_irq.exit.i.if.then1.i_crit_edge47
  %stream.i16.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %21 = ptrtoint ptr %stream.i16.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %stream.i16.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp.i17.i = icmp eq i32 %22, 0
  %23 = ptrtoint ptr %runtime.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %runtime.i.i, align 4
  %buffer_size.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 18
  %25 = ptrtoint ptr %buffer_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %buffer_size.i.i.i, align 4
  %status.i.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 37
  %27 = ptrtoint ptr %status.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %status.i.i.i.i, align 4
  %hw_ptr.i.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %hw_ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %hw_ptr.i.i.i.i, align 4
  br i1 %cmp.i17.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.i.i.i.i = add i32 %30, %26
  %control.i.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 38
  %31 = ptrtoint ptr %control.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %control.i.i.i.i, align 8
  %appl_ptr.i.i.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %appl_ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %appl_ptr.i.i.i.i, align 4
  %sub.i.i.i.i = sub i32 %add.i.i.i.i, %34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %sub.i.i.i.i, 0
  %boundary.i.i.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 33
  %35 = ptrtoint ptr %boundary.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %boundary.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i.i, i32 %36)
  %cmp3.not.i.i.i.i = icmp ult i32 %sub.i.i.i.i, %36
  %sub6.i.i.i.i = select i1 %cmp3.not.i.i.i.i, i32 0, i32 %36
  %37 = sub i32 0, %sub6.i.i.i.i
  %avail.0.p.i.i.i.i = select i1 %cmp.i.i.i.i, i32 %36, i32 %37
  %38 = add i32 %avail.0.p.i.i.i.i, %sub.i.i.i.i
  br label %snd_pcm_hw_avail.exit.i

if.else.i.i:                                      ; preds = %if.then1.i
  %control.i.i8.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 38
  %39 = ptrtoint ptr %control.i.i8.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %control.i.i8.i.i, align 8
  %appl_ptr.i.i9.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %appl_ptr.i.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %appl_ptr.i.i9.i.i, align 4
  %sub.i.i10.i.i = sub i32 %30, %42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i10.i.i)
  %cmp.i.i11.i.i = icmp slt i32 %sub.i.i10.i.i, 0
  br i1 %cmp.i.i11.i.i, label %if.then.i.i.i.i, label %if.else.i.i.snd_pcm_hw_avail.exit.i_crit_edge

if.else.i.i.snd_pcm_hw_avail.exit.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_hw_avail.exit.i

if.then.i.i.i.i:                                  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i.i12.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 33
  %43 = ptrtoint ptr %boundary.i.i12.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %boundary.i.i12.i.i, align 8
  %add.i.i13.i.i = add i32 %44, %sub.i.i10.i.i
  br label %snd_pcm_hw_avail.exit.i

snd_pcm_hw_avail.exit.i:                          ; preds = %if.then.i.i.i.i, %if.else.i.i.snd_pcm_hw_avail.exit.i_crit_edge, %if.then.i.i
  %avail.0.i.i.sink.i.i = phi i32 [ %38, %if.then.i.i ], [ %add.i.i13.i.i, %if.then.i.i.i.i ], [ %sub.i.i10.i.i, %if.else.i.i.snd_pcm_hw_avail.exit.i_crit_edge ]
  %sub.i14.i.i = sub i32 %26, %avail.0.i.i.sink.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i14.i.i)
  %cmp.i19.i = icmp slt i32 %sub.i14.i.i, 1
  br i1 %cmp.i19.i, label %snd_pcm_hw_avail.exit.i.if.end4.i_crit_edge, label %if.end.i.i

snd_pcm_hw_avail.exit.i.if.end4.i_crit_edge:      ; preds = %snd_pcm_hw_avail.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.end.i.i:                                       ; preds = %snd_pcm_hw_avail.exit.i
  %45 = tail call i32 @llvm.umin.i32(i32 %asmresult1, i32 %sub.i14.i.i) #14
  %control.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 38
  %46 = ptrtoint ptr %control.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %control.i.i, align 8
  %appl_ptr5.i.i = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %appl_ptr5.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %appl_ptr5.i.i, align 4
  %sub.i.i = sub i32 %49, %45
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp6.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp6.i.i, label %if.then7.i.i, label %if.end.i.i.if.end8.i.i_crit_edge

if.end.i.i.if.end8.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %boundary.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %24, i32 0, i32 33
  %50 = ptrtoint ptr %boundary.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %boundary.i.i, align 8
  %add.i.i = add i32 %51, %sub.i.i
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then7.i.i, %if.end.i.i.if.end8.i.i_crit_edge
  %appl_ptr.0.i.i = phi i32 [ %add.i.i, %if.then7.i.i ], [ %sub.i.i, %if.end.i.i.if.end8.i.i_crit_edge ]
  %call.i20.i = tail call i32 @pcm_lib_apply_appl_ptr(ptr noundef %substream, i32 noundef %appl_ptr.0.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i20.i)
  %cmp9.i.i = icmp slt i32 %call.i20.i, 0
  %spec.select20.i.i = select i1 %cmp9.i.i, i32 0, i32 %45
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.end8.i.i, %snd_pcm_hw_avail.exit.i.if.end4.i_crit_edge, %do_pcm_hwsync.exit.i.if.end4.i_crit_edge, %sw.default.i.i, %sw.bb4.i.i, %sw.bb.i.i.if.end4.i_crit_edge, %snd_pcm_stream_lock_irq.exit.i.if.end4.i_crit_edge
  %ret.0.i = phi i32 [ %call.i.i, %do_pcm_hwsync.exit.i.if.end4.i_crit_edge ], [ %spec.select20.i.i, %if.end8.i.i ], [ 0, %snd_pcm_hw_avail.exit.i.if.end4.i_crit_edge ], [ -77, %sw.bb.i.i.if.end4.i_crit_edge ], [ -32, %sw.bb4.i.i ], [ -77, %sw.default.i.i ], [ -86, %snd_pcm_stream_lock_irq.exit.i.if.end4.i_crit_edge ]
  %52 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %substream, align 4
  %nonatomic.i22.i = getelementptr inbounds %struct.snd_pcm, ptr %53, i32 0, i32 14
  %54 = ptrtoint ptr %nonatomic.i22.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %nonatomic.i22.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %55)
  %tobool.not.i23.i = icmp eq i8 %55, 0
  br i1 %tobool.not.i23.i, label %if.else.i.i27.i, label %if.then.i.i25.i

if.then.i.i25.i:                                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i24.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i24.i) #14
  br label %snd_pcm_stream_unlock_irq.exit.i

if.else.i.i27.i:                                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i26.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_unlock_irq(ptr noundef %self_group.i26.i) #14
  br label %snd_pcm_stream_unlock_irq.exit.i

snd_pcm_stream_unlock_irq.exit.i:                 ; preds = %if.else.i.i27.i, %if.then.i.i25.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %ret.0.i)
  %cmp5.i = icmp sgt i32 %ret.0.i, -1
  br i1 %cmp5.i, label %if.then6.i, label %snd_pcm_stream_unlock_irq.exit.i.snd_pcm_rewind.exit_crit_edge

snd_pcm_stream_unlock_irq.exit.i.snd_pcm_rewind.exit_crit_edge: ; preds = %snd_pcm_stream_unlock_irq.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_rewind.exit

if.then6.i:                                       ; preds = %snd_pcm_stream_unlock_irq.exit.i
  %56 = ptrtoint ptr %runtime.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %runtime.i.i, align 4
  %info.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %57, i32 0, i32 23
  %58 = ptrtoint ptr %info.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %info.i.i, align 8
  %and.i.i = and i32 %59, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i29.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i29.i, label %if.then6.i.snd_pcm_rewind.exit_crit_edge, label %if.then.i30.i

if.then6.i.snd_pcm_rewind.exit_crit_edge:         ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_rewind.exit

if.then.i30.i:                                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  %dma_buffer_p.i.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %57, i32 0, i32 53
  %60 = ptrtoint ptr %dma_buffer_p.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %dma_buffer_p.i.i, align 8
  tail call void @snd_dma_buffer_sync(ptr noundef %61, i32 noundef 1) #14
  br label %snd_pcm_rewind.exit

snd_pcm_rewind.exit:                              ; preds = %if.then.i30.i, %if.then6.i.snd_pcm_rewind.exit_crit_edge, %snd_pcm_stream_unlock_irq.exit.i.snd_pcm_rewind.exit_crit_edge, %if.end14.snd_pcm_rewind.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end14.snd_pcm_rewind.exit_crit_edge ], [ %ret.0.i, %snd_pcm_stream_unlock_irq.exit.i.snd_pcm_rewind.exit_crit_edge ], [ %ret.0.i, %if.then6.i.snd_pcm_rewind.exit_crit_edge ], [ %ret.0.i, %if.then.i30.i ]
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3212) #14
  %62 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i43 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i43 to ptr
  %cpu_domain.i.i44 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 4
  %64 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i44) #3, !srcloc !216
  %and.i45 = and i32 %64, -13
  %or.i46 = or i32 %and.i45, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i46) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %65 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_frames, i32 %retval.0.i, i32 -1226833921) #14, !srcloc !248
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %64) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool31.not = icmp eq i32 %65, 0
  %66 = tail call i32 @llvm.smin.i32(i32 %retval.0.i, i32 0)
  %spec.select = select i1 %tobool31.not, i32 %66, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %snd_pcm_rewind.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %entry.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ %spec.select, %snd_pcm_rewind.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_forward_ioctl(ptr noundef %substream, ptr noundef %_frames) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3223) #14
  %0 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 4
  %2 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #3, !srcloc !216
  %and.i = and i32 %2, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %3 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %_frames, i32 -1226833921) #14, !srcloc !249
  %asmresult = extractvalue { i32, i32 } %3, 0
  %asmresult1 = extractvalue { i32, i32 } %3, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %2) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3225) #14
  %4 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i39 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i39 to ptr
  %cpu_domain.i.i40 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 4
  %6 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i40) #3, !srcloc !216
  %and.i41 = and i32 %6, -13
  %or.i42 = or i32 %and.i41, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i42) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %7 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_frames, i32 0, i32 -1226833921) #14, !srcloc !250
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %6) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool12.not = icmp eq i32 %7, 0
  br i1 %tobool12.not, label %if.end14, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end14:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call15 = tail call fastcc i32 @snd_pcm_forward(ptr noundef %substream, i32 noundef %asmresult1)
  tail call void @__might_fault(ptr noundef nonnull @.str.5, i32 noundef 3228) #14
  %8 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i.i.i43 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i43 to ptr
  %cpu_domain.i.i44 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 4
  %10 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i44) #3, !srcloc !216
  %and.i45 = and i32 %10, -13
  %or.i46 = or i32 %and.i45, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i46) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  %11 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_frames, i32 %call15, i32 -1226833921) #14, !srcloc !251
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %10) #14, !srcloc !217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !218
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool31.not = icmp eq i32 %11, 0
  %12 = tail call i32 @llvm.smin.i32(i32 %call15, i32 0)
  %spec.select = select i1 %tobool31.not, i32 %12, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %entry.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ %spec.select, %if.end14 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memdup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_reset(ptr nocapture noundef readonly %substream, i32 noundef %state) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  %6 = add i32 %5, -2
  %switch.and = and i32 %6, -6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %switch.and)
  %switch.selectcmp = icmp eq i32 %switch.and, 0
  %7 = select i1 %switch.selectcmp, i32 0, i32 -77
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_reset(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %hw_ptr = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %hw_ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %hw_ptr, align 4
  %control = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 38
  %6 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %control, align 8
  %appl_ptr = getelementptr inbounds %struct.snd_pcm_mmap_control, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %appl_ptr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %5, ptr %appl_ptr, align 4
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %9 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %silence_size = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 32
  %11 = ptrtoint ptr %silence_size to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %silence_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp2.not = icmp eq i32 %12, 0
  br i1 %cmp2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @snd_pcm_playback_silence(ptr noundef %substream, i32 noundef -1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_pcm_group_assign(ptr noundef %substream, ptr noundef %new_group) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %0 = ptrtoint ptr %group to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %new_group, ptr %group, align 4
  %link_list = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 16
  %substreams = getelementptr inbounds %struct.snd_pcm_group, ptr %new_group, i32 0, i32 2
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %link_list) #14
  br i1 %call.i.i, label %if.end.i.i, label %entry.__list_del_entry.exit.i_crit_edge

entry.__list_del_entry.exit.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 16, i32 1
  %1 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %prev.i.i, align 4
  %3 = ptrtoint ptr %link_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %link_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %2, ptr %prev1.i.i.i, align 4
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %4, ptr %2, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %entry.__list_del_entry.exit.i_crit_edge
  %7 = ptrtoint ptr %substreams to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %substreams, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %link_list, ptr noundef %substreams, ptr noundef %8) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %link_list, ptr %prev1.i.i2.i, align 4
  %10 = ptrtoint ptr %link_list to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %8, ptr %link_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 16, i32 1
  %11 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %substreams, ptr %prev3.i.i.i, align 4
  %12 = ptrtoint ptr %substreams to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %link_list, ptr %substreams, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_pcm_stream_lock_nested(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 1) #14
  br label %if.end

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_nested(ptr noundef %self_group, i32 noundef 1) #14
  br label %if.end

if.end:                                           ; preds = %do.body, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_lookup_minor_data(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @relink_to_local(ptr noundef %substream) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %substream, align 4
  %nonatomic.i = getelementptr inbounds %struct.snd_pcm, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %nonatomic.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nonatomic.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %do.body.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 1) #14
  br label %snd_pcm_stream_lock_nested.exit

do.body.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  tail call void @_raw_spin_lock_nested(ptr noundef %self_group.i, i32 noundef 1) #14
  br label %snd_pcm_stream_lock_nested.exit

snd_pcm_stream_lock_nested.exit:                  ; preds = %do.body.i, %if.then.i
  %self_group = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %4 = ptrtoint ptr %group.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %self_group, ptr %group.i, align 4
  %link_list.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 16
  %substreams.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 2
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %link_list.i) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %snd_pcm_stream_lock_nested.exit.__list_del_entry.exit.i.i_crit_edge

snd_pcm_stream_lock_nested.exit.__list_del_entry.exit.i.i_crit_edge: ; preds = %snd_pcm_stream_lock_nested.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %snd_pcm_stream_lock_nested.exit
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 16, i32 1
  %5 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i.i, align 4
  %7 = ptrtoint ptr %link_list.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %link_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %snd_pcm_stream_lock_nested.exit.__list_del_entry.exit.i.i_crit_edge
  %11 = ptrtoint ptr %substreams.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %substreams.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %link_list.i, ptr noundef %substreams.i, ptr noundef %12) #14
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.snd_pcm_group_assign.exit_crit_edge

__list_del_entry.exit.i.i.snd_pcm_group_assign.exit_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_group_assign.exit

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i2.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %link_list.i, ptr %prev1.i.i2.i.i, align 4
  %14 = ptrtoint ptr %link_list.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %12, ptr %link_list.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 16, i32 1
  %15 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %substreams.i, ptr %prev3.i.i.i.i, align 4
  %16 = ptrtoint ptr %substreams.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %link_list.i, ptr %substreams.i, align 4
  br label %snd_pcm_group_assign.exit

snd_pcm_group_assign.exit:                        ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.snd_pcm_group_assign.exit_crit_edge
  %17 = ptrtoint ptr %substream to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %substream, align 4
  %nonatomic.i4 = getelementptr inbounds %struct.snd_pcm, ptr %18, i32 0, i32 14
  %19 = ptrtoint ptr %nonatomic.i4 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %nonatomic.i4, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i5 = icmp eq i8 %20, 0
  br i1 %tobool.not.i5, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %snd_pcm_group_assign.exit
  call void @__sanitizer_cov_trace_pc() #16
  %mutex.i.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17, i32 1
  tail call void @mutex_unlock(ptr noundef %mutex.i.i) #14
  br label %snd_pcm_stream_unlock.exit

if.else.i.i:                                      ; preds = %snd_pcm_group_assign.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock(ptr noundef %self_group) #14
  br label %snd_pcm_stream_unlock.exit

snd_pcm_stream_unlock.exit:                       ; preds = %if.else.i.i, %if.then.i.i
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_pcm_pre_resume(ptr noundef %substream, i32 noundef %state) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %info = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %info, align 8
  %and = and i32 %3, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %substream, ptr %1, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -38, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_pcm_do_resume(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp.not = icmp eq ptr %3, %substream
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status, align 4
  %suspended_state = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %suspended_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %suspended_state, align 8
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.99)
  switch i32 %7, label %if.end.cleanup_crit_edge [
    i32 3, label %if.end.if.end8_crit_edge
    i32 5, label %lor.lhs.false
  ]

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %stream = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %9 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp6.not = icmp eq i32 %10, 0
  br i1 %cmp6.not, label %lor.lhs.false.if.end8_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.if.end8_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.end8:                                          ; preds = %lor.lhs.false.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %12, i32 0, i32 6
  %13 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %trigger, align 4
  %call = tail call i32 %14(ptr noundef %substream, i32 noundef 6) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end8 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %lor.lhs.false.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_undo_resume(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %cmp = icmp eq ptr %3, %substream
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %status.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %4 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %status.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.100)
  switch i32 %7, label %land.lhs.true.if.end_crit_edge [
    i32 3, label %land.lhs.true.if.then_crit_edge
    i32 5, label %snd_pcm_running.exit
  ]

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_running.exit:                             ; preds = %land.lhs.true
  %stream.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 5
  %9 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %stream.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp5.i.not = icmp eq i32 %10, 0
  br i1 %cmp5.i.not, label %snd_pcm_running.exit.if.then_crit_edge, label %snd_pcm_running.exit.if.end_crit_edge

snd_pcm_running.exit.if.end_crit_edge:            ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

snd_pcm_running.exit.if.then_crit_edge:           ; preds = %snd_pcm_running.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %snd_pcm_running.exit.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %ops = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 10
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %trigger = getelementptr inbounds %struct.snd_pcm_ops, ptr %12, i32 0, i32 6
  %13 = ptrtoint ptr %trigger to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %trigger, align 4
  %call1 = tail call i32 %14(ptr noundef %substream, i32 noundef 5) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %snd_pcm_running.exit.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_pcm_post_resume(ptr noundef %substream, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  tail call fastcc void @snd_pcm_trigger_tstamp(ptr noundef %substream)
  %status = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 37
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %status, align 4
  %suspended_state = getelementptr inbounds %struct.snd_pcm_mmap_status, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %suspended_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %suspended_state, align 8
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %3, align 8
  %timer.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 12
  %7 = ptrtoint ptr %timer.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %timer.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %entry.snd_pcm_timer_notify.exit_crit_edge, label %if.then.i

entry.snd_pcm_timer_notify.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %snd_pcm_timer_notify.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %runtime1, align 4
  %trigger_tstamp.i = getelementptr inbounds %struct.snd_pcm_runtime, ptr %10, i32 0, i32 1
  tail call void @snd_timer_notify(ptr noundef nonnull %8, i32 noundef 18, ptr noundef %trigger_tstamp.i) #14
  br label %snd_pcm_timer_notify.exit

snd_pcm_timer_notify.exit:                        ; preds = %if.then.i, %entry.snd_pcm_timer_notify.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nonseekable_open(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_pcm_open(ptr noundef %file, ptr noundef %pcm, i32 noundef %stream) #0 align 64 {
entry:
  %substream.i = alloca ptr, align 4
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #14
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %cmp = icmp eq ptr %pcm, null
  %2 = call ptr @memset(ptr %wait, i32 255, i32 20)
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pcm, align 8
  %call = tail call i32 @snd_card_file_add(ptr noundef %4, ptr noundef %file) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp1 = icmp slt i32 %call, 0
  br i1 %cmp1, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %5 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pcm, align 8
  %module = getelementptr inbounds %struct.snd_card, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %module to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %module, align 4
  %call5 = tail call zeroext i1 @try_module_get(ptr noundef %8) #14
  br i1 %call5, label %if.end7, label %if.end3.__error2_crit_edge

if.end3.__error2_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %__error2

if.end7:                                          ; preds = %if.end3
  %9 = tail call i32 @llvm.read_register.i32(metadata !185) #14
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %13 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %wait, align 4
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %12, ptr %0, align 4
  %15 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @default_wake_function, ptr %1, align 4
  %open_wait = getelementptr inbounds %struct.snd_pcm, ptr %pcm, i32 0, i32 10
  call void @add_wait_queue(ptr noundef %open_wait, ptr noundef nonnull %wait) #14
  %open_mutex = getelementptr inbounds %struct.snd_pcm, ptr %pcm, i32 0, i32 9
  call void @mutex_lock_nested(ptr noundef %open_mutex, i32 noundef 0) #14
  %f_flags = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  br label %while.cond

while.cond:                                       ; preds = %signal_pending.exit.while.cond_crit_edge, %if.end7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %substream.i) #14
  %16 = ptrtoint ptr %substream.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 -1 to ptr), ptr %substream.i, align 4, !annotation !197
  %call.i = call i32 @snd_pcm_open_substream(ptr noundef nonnull %pcm, i32 noundef %stream, ptr noundef %file, ptr noundef nonnull %substream.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %snd_pcm_open_file.exit, label %if.end.i

if.end.i:                                         ; preds = %while.cond
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %17 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %17, i32 noundef 3520, i32 noundef 12) #17
  %cmp2.i = icmp eq ptr %call7.i.i.i, null
  %18 = ptrtoint ptr %substream.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %substream.i, align 4
  br i1 %cmp2.i, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @snd_pcm_release_substream(ptr noundef %19) #14
  br label %snd_pcm_open_file.exit.thread

if.end4.i:                                        ; preds = %if.end.i
  %20 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %call7.i.i.i, align 8
  %ref_count.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %19, i32 0, i32 19
  %21 = ptrtoint ptr %ref_count.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ref_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp6.i = icmp eq i32 %22, 1
  br i1 %cmp6.i, label %if.then7.i, label %if.end4.i.if.end8.i_crit_edge

if.end4.i.if.end8.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

if.then7.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %pcm_release.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %19, i32 0, i32 22
  %23 = ptrtoint ptr %pcm_release.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @pcm_release_private, ptr %pcm_release.i, align 4
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then7.i, %if.end4.i.if.end8.i_crit_edge
  %private_data.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %24 = ptrtoint ptr %private_data.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call7.i.i.i, ptr %private_data.i, align 4
  br label %snd_pcm_open_file.exit.thread

snd_pcm_open_file.exit.thread:                    ; preds = %if.end8.i, %if.then3.i
  %retval.0.i.ph = phi i32 [ 0, %if.end8.i ], [ -12, %if.then3.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %substream.i) #14
  br label %while.end

snd_pcm_open_file.exit:                           ; preds = %while.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %substream.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call.i)
  %cmp13 = icmp eq i32 %call.i, -11
  br i1 %cmp13, label %if.then14, label %snd_pcm_open_file.exit.while.end_crit_edge

snd_pcm_open_file.exit.while.end_crit_edge:       ; preds = %snd_pcm_open_file.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.then14:                                        ; preds = %snd_pcm_open_file.exit
  %25 = ptrtoint ptr %f_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %f_flags, align 4
  %and = and i32 %26, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %__here, label %if.then14.while.end_crit_edge

if.then14.while.end_crit_edge:                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

__here:                                           ; preds = %if.then14
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 212
  %29 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 ptrtoint (ptr blockaddress(@snd_pcm_open, %__here) to i32), ptr %task_state_change, align 4
  %30 = load ptr, ptr %task, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 1, ptr %30, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !252
  call void @mutex_unlock(ptr noundef %open_mutex) #14
  call void @schedule() #14
  call void @mutex_lock_nested(ptr noundef %open_mutex, i32 noundef 0) #14
  %32 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pcm, align 8
  %shutdown = getelementptr inbounds %struct.snd_card, ptr %33, i32 0, i32 25
  %34 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %shutdown, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool85.not = icmp eq i32 %35, 0
  br i1 %tobool85.not, label %if.end87, label %__here.while.end_crit_edge

__here.while.end_crit_edge:                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end87:                                         ; preds = %__here
  %36 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %stack.i.i, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  %42 = and i32 %41, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.not.i = icmp eq i32 %42, 0
  br i1 %tobool.not.i, label %signal_pending.exit, label %if.end87.while.end_crit_edge, !prof !195

if.end87.while.end_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

signal_pending.exit:                              ; preds = %if.end87
  %43 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %39, align 4
  %and1.i.i.i.i.i = and i32 %44, 1
  %tobool91.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool91.not, label %signal_pending.exit.while.cond_crit_edge, label %signal_pending.exit.while.end_crit_edge

signal_pending.exit.while.end_crit_edge:          ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

signal_pending.exit.while.cond_crit_edge:         ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

while.end:                                        ; preds = %signal_pending.exit.while.end_crit_edge, %if.end87.while.end_crit_edge, %__here.while.end_crit_edge, %if.then14.while.end_crit_edge, %snd_pcm_open_file.exit.while.end_crit_edge, %snd_pcm_open_file.exit.thread
  %err.0 = phi i32 [ %retval.0.i.ph, %snd_pcm_open_file.exit.thread ], [ -512, %if.end87.while.end_crit_edge ], [ -512, %signal_pending.exit.while.end_crit_edge ], [ -19, %__here.while.end_crit_edge ], [ -16, %if.then14.while.end_crit_edge ], [ %call.i, %snd_pcm_open_file.exit.while.end_crit_edge ]
  call void @remove_wait_queue(ptr noundef %open_wait, ptr noundef nonnull %wait) #14
  call void @mutex_unlock(ptr noundef %open_mutex) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %cmp96 = icmp slt i32 %err.0, 0
  br i1 %cmp96, label %__error, label %while.end.cleanup_crit_edge

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

__error:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pcm, align 8
  %module100 = getelementptr inbounds %struct.snd_card, ptr %46, i32 0, i32 8
  %47 = ptrtoint ptr %module100 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %module100, align 4
  call void @module_put(ptr noundef %48) #14
  br label %__error2

__error2:                                         ; preds = %__error, %if.end3.__error2_crit_edge
  %err.1 = phi i32 [ %err.0, %__error ], [ -14, %if.end3.__error2_crit_edge ]
  %49 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pcm, align 8
  %call102 = call i32 @snd_card_file_remove(ptr noundef %50, ptr noundef %file) #14
  br label %cleanup

cleanup:                                          ; preds = %__error2, %while.end.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %while.end.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ %err.1, %__error2 ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_card_file_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_card_file_remove(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pcm_release_private(ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 18
  %0 = ptrtoint ptr %group.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %group.i, align 4
  %self_group.i = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 17
  %cmp.i.not = icmp eq ptr %1, %self_group.i
  br i1 %cmp.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1 = tail call fastcc i32 @snd_pcm_unlink(ptr noundef %substream)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fasync_helper(i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.fshl.i8(i8, i8, i8) #8

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #8

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 94)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 94)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nounwind readonly }
attributes #4 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #5 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly nofree nounwind readonly willreturn }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { nounwind allocsize(2) }
attributes #18 = { nounwind readnone }
attributes #19 = { nobuiltin nounwind }
attributes #20 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !18, !19, !21, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !51, !52, !53, !54, !56, !57, !59, !61, !63, !65, !67, !68, !69, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !129, !130, !132, !134, !135, !136, !137, !138, !140, !141, !142, !143, !145, !147, !149, !151, !153, !155, !157, !158, !159, !161, !163, !165, !166, !167, !169, !171, !173, !175, !177, !178, !179, !181, !183}
!llvm.named.register.sp = !{!185}
!llvm.module.flags = !{!186, !187, !188, !189, !190, !191, !192, !193}
!llvm.ident = !{!194}

!0 = !{ptr @__tracepoint_hw_mask_param, !1, !"__tracepoint_hw_mask_param", i1 false, i1 false}
!1 = !{!"../sound/core/./pcm_param_trace.h", i32 28, i32 1}
!2 = !{ptr @__tracepoint_ptr_hw_mask_param, !1, !"__tracepoint_ptr_hw_mask_param", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_hw_mask_param, !1, !"__SCK__tp_func_hw_mask_param", i1 false, i1 false}
!4 = !{ptr @__tracepoint_hw_interval_param, !5, !"__tracepoint_hw_interval_param", i1 false, i1 false}
!5 = !{!"../sound/core/./pcm_param_trace.h", i32 68, i32 1}
!6 = !{ptr @__tracepoint_ptr_hw_interval_param, !5, !"__tracepoint_ptr_hw_interval_param", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_hw_interval_param, !5, !"__SCK__tp_func_hw_interval_param", i1 false, i1 false}
!8 = !{ptr @event_class_hw_mask_param, !1, !"event_class_hw_mask_param", i1 false, i1 false}
!9 = !{ptr @event_hw_mask_param, !1, !"event_hw_mask_param", i1 false, i1 false}
!10 = !{ptr @__event_hw_mask_param, !1, !"__event_hw_mask_param", i1 false, i1 false}
!11 = !{ptr @event_class_hw_interval_param, !5, !"event_class_hw_interval_param", i1 false, i1 false}
!12 = !{ptr @event_hw_interval_param, !5, !"event_hw_interval_param", i1 false, i1 false}
!13 = !{ptr @__event_hw_interval_param, !5, !"__event_hw_interval_param", i1 false, i1 false}
!14 = !{ptr @__bpf_trace_tp_map_hw_mask_param, !1, !"__bpf_trace_tp_map_hw_mask_param", i1 false, i1 false}
!15 = !{ptr @__bpf_trace_tp_map_hw_interval_param, !5, !"__bpf_trace_tp_map_hw_interval_param", i1 false, i1 false}
!16 = !{ptr @snd_pcm_group_init.__key, !17, !"__key", i1 false, i1 false}
!17 = !{!"../sound/core/pcm_native.c", i32 79, i32 2}
!18 = !{ptr @.str, !17, !"<string literal>", i1 false, i1 false}
!19 = !{ptr @snd_pcm_group_init.__key.1, !20, !"__key", i1 false, i1 false}
!20 = !{!"../sound/core/pcm_native.c", i32 80, i32 2}
!21 = !{ptr @.str.2, !20, !"<string literal>", i1 false, i1 false}
!22 = !{ptr @__ksymtab_snd_pcm_stream_lock, !23, !"__ksymtab_snd_pcm_stream_lock", i1 false, i1 false}
!23 = !{!"../sound/core/pcm_native.c", i32 112, i32 1}
!24 = !{ptr @__ksymtab_snd_pcm_stream_unlock, !25, !"__ksymtab_snd_pcm_stream_unlock", i1 false, i1 false}
!25 = !{!"../sound/core/pcm_native.c", i32 124, i32 1}
!26 = !{ptr @__ksymtab_snd_pcm_stream_lock_irq, !27, !"__ksymtab_snd_pcm_stream_lock_irq", i1 false, i1 false}
!27 = !{!"../sound/core/pcm_native.c", i32 139, i32 1}
!28 = !{ptr @__ksymtab_snd_pcm_stream_unlock_irq, !29, !"__ksymtab_snd_pcm_stream_unlock_irq", i1 false, i1 false}
!29 = !{!"../sound/core/pcm_native.c", i32 162, i32 1}
!30 = !{ptr @__ksymtab__snd_pcm_stream_lock_irqsave, !31, !"__ksymtab__snd_pcm_stream_lock_irqsave", i1 false, i1 false}
!31 = !{!"../sound/core/pcm_native.c", i32 173, i32 1}
!32 = !{ptr @__ksymtab__snd_pcm_stream_lock_irqsave_nested, !33, !"__ksymtab__snd_pcm_stream_lock_irqsave_nested", i1 false, i1 false}
!33 = !{!"../sound/core/pcm_native.c", i32 186, i32 1}
!34 = !{ptr @__ksymtab_snd_pcm_stream_unlock_irqrestore, !35, !"__ksymtab_snd_pcm_stream_unlock_irqrestore", i1 false, i1 false}
!35 = !{!"../sound/core/pcm_native.c", i32 203, i32 1}
!36 = !{ptr @__ksymtab_snd_pcm_hw_refine, !37, !"__ksymtab_snd_pcm_hw_refine", i1 false, i1 false}
!37 = !{!"../sound/core/pcm_native.c", i32 552, i32 1}
!38 = !{ptr @__ksymtab_snd_pcm_stop, !39, !"__ksymtab_snd_pcm_stop", i1 false, i1 false}
!39 = !{!"../sound/core/pcm_native.c", i32 1491, i32 1}
!40 = !{ptr @__ksymtab_snd_pcm_stop_xrun, !41, !"__ksymtab_snd_pcm_stop_xrun", i1 false, i1 false}
!41 = !{!"../sound/core/pcm_native.c", i32 1527, i32 1}
!42 = !{ptr @__ksymtab_snd_pcm_suspend_all, !43, !"__ksymtab_snd_pcm_suspend_all", i1 false, i1 false}
!43 = !{!"../sound/core/pcm_native.c", i32 1727, i32 1}
!44 = !{ptr @snd_pcm_known_rates, !45, !"snd_pcm_known_rates", i1 false, i1 false}
!45 = !{!"../sound/core/pcm_native.c", i32 2404, i32 41}
!46 = !{ptr @__ksymtab_snd_pcm_release_substream, !47, !"__ksymtab_snd_pcm_release_substream", i1 false, i1 false}
!47 = !{!"../sound/core/pcm_native.c", i32 2666, i32 1}
!48 = !{ptr @.str.3, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../sound/core/pcm_native.c", i32 2685, i32 3}
!50 = !{ptr @.str.4, !49, !"<string literal>", i1 false, i1 false}
!51 = !{ptr @.str.5, !49, !"<string literal>", i1 false, i1 false}
!52 = !{ptr @.str.6, !49, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @snd_pcm_open_substream.__UNIQUE_ID_ddebug277, !49, !"__UNIQUE_ID_ddebug277", i1 false, i1 false}
!54 = !{ptr @.str.7, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../sound/core/pcm_native.c", i32 2697, i32 3}
!56 = !{ptr @snd_pcm_open_substream.__UNIQUE_ID_ddebug278, !55, !"__UNIQUE_ID_ddebug278", i1 false, i1 false}
!57 = !{ptr @__ksymtab_snd_pcm_open_substream, !58, !"__ksymtab_snd_pcm_open_substream", i1 false, i1 false}
!58 = !{!"../sound/core/pcm_native.c", i32 2715, i32 1}
!59 = !{ptr @__ksymtab_snd_pcm_kernel_ioctl, !60, !"__ksymtab_snd_pcm_kernel_ioctl", i1 false, i1 false}
!60 = !{!"../sound/core/pcm_native.c", i32 3402, i32 1}
!61 = !{ptr @__ksymtab_snd_pcm_lib_default_mmap, !62, !"__ksymtab_snd_pcm_lib_default_mmap", i1 false, i1 false}
!62 = !{!"../sound/core/pcm_native.c", i32 3775, i32 1}
!63 = !{ptr @__ksymtab_snd_pcm_mmap_data, !64, !"__ksymtab_snd_pcm_mmap_data", i1 false, i1 false}
!64 = !{!"../sound/core/pcm_native.c", i32 3846, i32 1}
!65 = !{ptr @snd_pcm_f_ops, !66, !"snd_pcm_f_ops", i1 false, i1 false}
!66 = !{!"../sound/core/pcm_native.c", i32 4053, i32 30}
!67 = !{ptr @__tpstrtab_hw_mask_param, !1, !"__tpstrtab_hw_mask_param", i1 false, i1 false}
!68 = !{ptr @__tpstrtab_hw_interval_param, !5, !"__tpstrtab_hw_interval_param", i1 false, i1 false}
!69 = !{ptr @str__snd_pcm__trace_system_name, !70, !"str__snd_pcm__trace_system_name", i1 false, i1 false}
!70 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!71 = !{ptr @.str.8, !1, !"<string literal>", i1 false, i1 false}
!72 = !{ptr @.str.9, !1, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @.str.10, !1, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @.str.11, !1, !"<string literal>", i1 false, i1 false}
!75 = !{ptr @.str.12, !1, !"<string literal>", i1 false, i1 false}
!76 = !{ptr @.str.13, !1, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @.str.14, !1, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @.str.15, !1, !"<string literal>", i1 false, i1 false}
!79 = !{ptr @.str.16, !1, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @.str.17, !1, !"<string literal>", i1 false, i1 false}
!81 = !{ptr @.str.18, !1, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @.str.19, !1, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @trace_event_fields_hw_mask_param, !1, !"trace_event_fields_hw_mask_param", i1 false, i1 false}
!84 = !{ptr @trace_event_type_funcs_hw_mask_param, !1, !"trace_event_type_funcs_hw_mask_param", i1 false, i1 false}
!85 = !{ptr @.str.20, !1, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @.str.21, !1, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @.str.22, !1, !"<string literal>", i1 false, i1 false}
!88 = !{ptr @.str.23, !1, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @.str.24, !1, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @.str.25, !1, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @.str.26, !1, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @.str.27, !1, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @.str.28, !1, !"<string literal>", i1 false, i1 false}
!94 = !{ptr @.str.29, !1, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @.str.30, !1, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @.str.31, !1, !"<string literal>", i1 false, i1 false}
!97 = !{ptr @.str.32, !1, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @.str.33, !1, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @.str.34, !1, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @.str.35, !1, !"<string literal>", i1 false, i1 false}
!101 = !{ptr @.str.36, !1, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @.str.37, !1, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @trace_raw_output_hw_mask_param.symbols, !1, !"symbols", i1 false, i1 false}
!104 = !{ptr @print_fmt_hw_mask_param, !1, !"print_fmt_hw_mask_param", i1 false, i1 false}
!105 = !{ptr @.str.38, !5, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @.str.39, !5, !"<string literal>", i1 false, i1 false}
!107 = !{ptr @.str.40, !5, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @.str.41, !5, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @.str.42, !5, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @.str.43, !5, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @.str.44, !5, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @.str.45, !5, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @.str.46, !5, !"<string literal>", i1 false, i1 false}
!114 = !{ptr @.str.47, !5, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @.str.48, !5, !"<string literal>", i1 false, i1 false}
!116 = !{ptr @.str.49, !5, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @.str.50, !5, !"<string literal>", i1 false, i1 false}
!118 = !{ptr @trace_event_fields_hw_interval_param, !5, !"trace_event_fields_hw_interval_param", i1 false, i1 false}
!119 = !{ptr @trace_event_type_funcs_hw_interval_param, !5, !"trace_event_type_funcs_hw_interval_param", i1 false, i1 false}
!120 = !{ptr @.str.51, !5, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @trace_raw_output_hw_interval_param.symbols, !5, !"symbols", i1 false, i1 false}
!122 = !{ptr @.str.52, !5, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @.str.53, !5, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @.str.54, !5, !"<string literal>", i1 false, i1 false}
!125 = !{ptr @.str.55, !5, !"<string literal>", i1 false, i1 false}
!126 = !{ptr @print_fmt_hw_interval_param, !5, !"print_fmt_hw_interval_param", i1 false, i1 false}
!127 = distinct !{null, !128, !"__already_done", i1 false, i1 false}
!128 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!129 = distinct !{null, !128, !"<string literal>", i1 false, i1 false}
!130 = distinct !{null, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!132 = !{ptr @.str.58, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!134 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!135 = !{ptr @.str.59, !1, !"<string literal>", i1 false, i1 false}
!136 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!137 = !{ptr @.str.60, !1, !"<string literal>", i1 false, i1 false}
!138 = distinct !{null, !139, !"__already_done", i1 false, i1 false}
!139 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!140 = !{ptr @.str.61, !139, !"<string literal>", i1 false, i1 false}
!141 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!142 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!143 = !{ptr @snd_pcm_action_start, !144, !"snd_pcm_action_start", i1 false, i1 false}
!144 = !{!"../sound/core/pcm_native.c", i32 1408, i32 32}
!145 = !{ptr @snd_pcm_action_stop, !146, !"snd_pcm_action_stop", i1 false, i1 false}
!146 = !{!"../sound/core/pcm_native.c", i32 1472, i32 32}
!147 = !{ptr @snd_pcm_action_suspend, !148, !"snd_pcm_action_suspend", i1 false, i1 false}
!148 = !{!"../sound/core/pcm_native.c", i32 1663, i32 32}
!149 = !{ptr @rates, !150, !"rates", i1 false, i1 false}
!150 = !{!"../sound/core/pcm_native.c", i32 2399, i32 27}
!151 = !{ptr @snd_pcm_action_pause, !152, !"snd_pcm_action_pause", i1 false, i1 false}
!152 = !{!"../sound/core/pcm_native.c", i32 1595, i32 32}
!153 = !{ptr @snd_pcm_hw_params_choose.vars, !154, !"vars", i1 false, i1 false}
!154 = !{!"../sound/core/pcm_native.c", i32 639, i32 19}
!155 = !{ptr @.str.62, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../sound/core/pcm_native.c", i32 75, i32 8}
!157 = !{ptr @.str.63, !156, !"<string literal>", i1 false, i1 false}
!158 = !{ptr @snd_pcm_link_rwsem, !156, !"snd_pcm_link_rwsem", i1 false, i1 false}
!159 = !{ptr @snd_pcm_action_prepare, !160, !"snd_pcm_action_prepare", i1 false, i1 false}
!160 = !{!"../sound/core/pcm_native.c", i32 1914, i32 32}
!161 = distinct !{null, !162, !"__already_done", i1 false, i1 false}
!162 = !{!"../sound/core/pcm_native.c", i32 2097, i32 3}
!163 = !{ptr @.str.64, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../sound/core/pcm_native.c", i32 2130, i32 5}
!165 = !{ptr @.str.65, !164, !"<string literal>", i1 false, i1 false}
!166 = !{ptr @snd_pcm_drain.__UNIQUE_ID_ddebug276, !164, !"__UNIQUE_ID_ddebug276", i1 false, i1 false}
!167 = !{ptr @snd_pcm_action_drain_init, !168, !"snd_pcm_action_drain_init", i1 false, i1 false}
!168 = !{!"../sound/core/pcm_native.c", i32 2022, i32 32}
!169 = !{ptr @snd_pcm_vm_ops_data_fault, !170, !"snd_pcm_vm_ops_data_fault", i1 false, i1 false}
!170 = !{!"../sound/core/pcm_native.c", i32 3746, i32 42}
!171 = !{ptr @.str.66, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!173 = !{ptr @snd_pcm_vm_ops_data, !174, !"snd_pcm_vm_ops_data", i1 false, i1 false}
!174 = !{!"../sound/core/pcm_native.c", i32 3741, i32 42}
!175 = !{ptr @.str.67, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../sound/core/pcm_native.c", i32 3338, i32 2}
!177 = !{ptr @.str.68, !176, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @snd_pcm_common_ioctl.__UNIQUE_ID_ddebug280, !176, !"__UNIQUE_ID_ddebug280", i1 false, i1 false}
!179 = !{ptr @snd_pcm_action_reset, !180, !"snd_pcm_action_reset", i1 false, i1 false}
!180 = !{!"../sound/core/pcm_native.c", i32 1864, i32 32}
!181 = !{ptr @snd_pcm_action_resume, !182, !"snd_pcm_action_resume", i1 false, i1 false}
!182 = !{!"../sound/core/pcm_native.c", i32 1772, i32 32}
!183 = distinct !{null, !184, !"__already_done", i1 false, i1 false}
!184 = !{!"../sound/core/pcm_native.c", i32 2800, i32 3}
!185 = !{!"sp"}
!186 = !{i32 1, !"wchar_size", i32 2}
!187 = !{i32 1, !"min_enum_size", i32 4}
!188 = !{i32 8, !"branch-target-enforcement", i32 0}
!189 = !{i32 8, !"sign-return-address", i32 0}
!190 = !{i32 8, !"sign-return-address-all", i32 0}
!191 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!192 = !{i32 7, !"uwtable", i32 1}
!193 = !{i32 7, !"frame-pointer", i32 2}
!194 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!195 = !{!"branch_weights", i32 2000, i32 1}
!196 = !{!"branch_weights", i32 1, i32 2000}
!197 = !{!"auto-init"}
!198 = !{i8 0, i8 2}
!199 = !{i64 2152377136, i64 2152377161}
!200 = !{i64 2149045186, i64 2149045191, i64 2149045204, i64 2149045248, i64 2149045282, i64 2149045303}
!201 = !{i32 0, i32 33}
!202 = !{i64 2155983981}
!203 = !{i64 2148345256, i64 2148345282, i64 2148345311, i64 2148345345, i64 2148345376, i64 2148345399}
!204 = !{i64 2154653968}
!205 = !{i64 2154654225}
!206 = !{i64 2149524983}
!207 = !{i64 2149526019}
!208 = !{i64 2154676381}
!209 = !{i64 2154676646}
!210 = !{i64 2148346786, i64 2148346818, i64 2148346847, i64 2148346881, i64 2148346912, i64 2148346935}
!211 = !{i64 2148434787}
!212 = !{i64 2148349251, i64 2148349283, i64 2148349312, i64 2148349346, i64 2148349377, i64 2148349400}
!213 = !{i64 2149552839}
!214 = !{i64 2148347721, i64 2148347747, i64 2148347776, i64 2148347810, i64 2148347841, i64 2148347864}
!215 = !{i64 2153354216, i64 2153354700, i64 2153354253, i64 2153354309, i64 2153354343, i64 2153354367, i64 2153354408, i64 2153354429, i64 2153354457, i64 2153354491}
!216 = !{i64 4872010}
!217 = !{i64 4872207}
!218 = !{i64 2152357440}
!219 = !{i64 2156263706, i64 2156263986, i64 2156264320, i64 2156264654}
!220 = !{i64 2156278400, i64 2156278680, i64 2156279014, i64 2156279348}
!221 = !{i64 2156299975, i64 2156300255, i64 2156300589, i64 2156300923}
!222 = !{i64 2156153594, i64 2156153874, i64 2156154208, i64 2156154542}
!223 = !{i64 2155945349, i64 2155945629, i64 2155945963, i64 2155946297}
!224 = !{i64 2155928783, i64 2155929063, i64 2155929397, i64 2155929731}
!225 = !{!226}
!226 = distinct !{!226, !227, !"fdget: %agg.result"}
!227 = distinct !{!227, !"fdget"}
!228 = !{i64 2156036392, i64 2156036672, i64 2156037006, i64 2156037340}
!229 = !{i64 2156048743, i64 2156049023, i64 2156049357, i64 2156049691}
!230 = !{i64 2156061106, i64 2156061386, i64 2156061720, i64 2156062054}
!231 = !{i64 2156070697, i64 2156070977, i64 2156071311, i64 2156071645}
!232 = !{i64 2156079581, i64 2156079861, i64 2156080195, i64 2156080529}
!233 = !{i64 2156088499, i64 2156088779, i64 2156089113, i64 2156089447}
!234 = !{i64 2156097424, i64 2156097704, i64 2156098038, i64 2156098372}
!235 = !{i64 2156106371, i64 2156106651, i64 2156106985, i64 2156107319}
!236 = !{i64 2156115331, i64 2156115611, i64 2156115945, i64 2156116279}
!237 = !{i64 2156124298, i64 2156124578, i64 2156124912, i64 2156125246}
!238 = !{i64 2156133203, i64 2156133483, i64 2156133817, i64 2156134151}
!239 = !{i64 2156142115, i64 2156142395, i64 2156142729, i64 2156143063}
!240 = !{i64 2156023616, i64 2156023896, i64 2156024230, i64 2156024564}
!241 = !{i64 2152376455, i64 2152376480}
!242 = !{i64 2156163144, i64 2156163424, i64 2156163758, i64 2156164092}
!243 = !{i64 2156171988, i64 2156172268, i64 2156172602, i64 2156172936}
!244 = !{i64 2156180855, i64 2156181135, i64 2156181469, i64 2156181803}
!245 = !{i64 2156193760, i64 2156194040, i64 2156194374, i64 2156194708}
!246 = !{i64 2156205275, i64 2156205555, i64 2156205889, i64 2156206223}
!247 = !{i64 2156214749, i64 2156215029, i64 2156215363, i64 2156215697}
!248 = !{i64 2156223550, i64 2156223830, i64 2156224164, i64 2156224498}
!249 = !{i64 2156235065, i64 2156235345, i64 2156235679, i64 2156236013}
!250 = !{i64 2156244539, i64 2156244819, i64 2156245153, i64 2156245487}
!251 = !{i64 2156253340, i64 2156253620, i64 2156253954, i64 2156254288}
!252 = !{i64 2156013620}
