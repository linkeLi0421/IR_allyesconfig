; ModuleID = '/llk/IR_all_yes/sound/pci/hda/hda_codec.c_pt.bc'
source_filename = "../sound/pci/hda/hda_codec.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+snd_hda_sequence_write\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_sequence_write\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_sequence_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_sequence_write:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_sequence_write\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_sequence_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_get_conn_list\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_get_conn_list\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_get_conn_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_get_conn_list:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_get_conn_list\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_get_conn_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_get_connections\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_get_connections\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_get_connections\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_get_connections:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_get_connections\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_get_connections:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_override_conn_list\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_override_conn_list\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_override_conn_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_override_conn_list:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_override_conn_list\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_override_conn_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_get_conn_index\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_get_conn_index\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_get_conn_index\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_get_conn_index:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_get_conn_index\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_get_conn_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_get_num_devices\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_get_num_devices\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_get_num_devices\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_get_num_devices:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_get_num_devices\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_get_num_devices:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_get_dev_select\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_get_dev_select\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_get_dev_select\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_get_dev_select:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_get_dev_select\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_get_dev_select:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_set_dev_select\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_set_dev_select\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_set_dev_select\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_set_dev_select:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_set_dev_select\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_set_dev_select:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_set_pincfg\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_set_pincfg\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_set_pincfg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_set_pincfg:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_set_pincfg\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_set_pincfg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_get_pincfg\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_get_pincfg\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_get_pincfg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_get_pincfg:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_get_pincfg\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_get_pincfg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_set_pin_target\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_set_pin_target\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_set_pin_target\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_set_pin_target:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_set_pin_target\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_set_pin_target:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_get_pin_target\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_get_pin_target\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_get_pin_target\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_get_pin_target:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_get_pin_target\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_get_pin_target:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_shutup_pins\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_shutup_pins\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_shutup_pins\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_shutup_pins:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_shutup_pins\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_shutup_pins:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_pcm_put\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_pcm_put\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_pcm_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_pcm_put:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_pcm_put\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_pcm_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_pcm_new\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_pcm_new\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_pcm_new\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_pcm_new:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_pcm_new\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_pcm_new:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_cleanup_for_unbind\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_cleanup_for_unbind\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_cleanup_for_unbind\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_cleanup_for_unbind:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_cleanup_for_unbind\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_cleanup_for_unbind:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_new\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_new\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_new\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_new:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_new\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_new:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_device_new\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_device_new\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_device_new\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_device_new:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_device_new\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_device_new:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_update_widgets\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_update_widgets\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_update_widgets\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_update_widgets:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_update_widgets\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_update_widgets:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_setup_stream\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_setup_stream\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_setup_stream\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_setup_stream:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_setup_stream\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_setup_stream:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__snd_hda_codec_cleanup_stream\22, \22a\22\09"
module asm "\09.weak\09__crc___snd_hda_codec_cleanup_stream\09\09\09\09"
module asm "\09.long\09__crc___snd_hda_codec_cleanup_stream\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___snd_hda_codec_cleanup_stream:\09\09\09\09\09"
module asm "\09.asciz \09\22__snd_hda_codec_cleanup_stream\22\09\09\09\09\09"
module asm "__kstrtabns___snd_hda_codec_cleanup_stream:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+query_amp_caps\22, \22a\22\09"
module asm "\09.weak\09__crc_query_amp_caps\09\09\09\09"
module asm "\09.long\09__crc_query_amp_caps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_query_amp_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22query_amp_caps\22\09\09\09\09\09"
module asm "__kstrtabns_query_amp_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_check_amp_caps\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_check_amp_caps\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_check_amp_caps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_check_amp_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_check_amp_caps\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_check_amp_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_override_amp_caps\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_override_amp_caps\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_override_amp_caps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_override_amp_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_override_amp_caps\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_override_amp_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_amp_update\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_amp_update\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_amp_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_amp_update:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_amp_update\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_amp_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_amp_stereo\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_amp_stereo\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_amp_stereo\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_amp_stereo:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_amp_stereo\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_amp_stereo:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_amp_init\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_amp_init\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_amp_init\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_amp_init:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_amp_init\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_amp_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_amp_init_stereo\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_amp_init_stereo\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_amp_init_stereo\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_amp_init_stereo:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_amp_init_stereo\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_amp_init_stereo:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_volume_info\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_volume_info\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_volume_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_volume_info:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_volume_info\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_volume_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_volume_get\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_volume_get\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_volume_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_volume_get:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_volume_get\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_volume_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_volume_put\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_volume_put\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_volume_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_volume_put:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_volume_put\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_volume_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_tlv\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_tlv\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_tlv\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_tlv:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_tlv\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_tlv:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_set_vmaster_tlv\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_set_vmaster_tlv\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_set_vmaster_tlv\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_set_vmaster_tlv:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_set_vmaster_tlv\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_set_vmaster_tlv:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_find_mixer_ctl\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_find_mixer_ctl\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_find_mixer_ctl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_find_mixer_ctl:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_find_mixer_ctl\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_find_mixer_ctl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_ctl_add\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_ctl_add\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_ctl_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_ctl_add:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_ctl_add\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_ctl_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_add_nid\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_add_nid\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_add_nid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_add_nid:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_add_nid\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_add_nid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_lock_devices\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_lock_devices\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_lock_devices\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_lock_devices:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_lock_devices\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_lock_devices:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_unlock_devices\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_unlock_devices\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_unlock_devices\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_unlock_devices:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_unlock_devices\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_unlock_devices:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__snd_hda_add_vmaster\22, \22a\22\09"
module asm "\09.weak\09__crc___snd_hda_add_vmaster\09\09\09\09"
module asm "\09.long\09__crc___snd_hda_add_vmaster\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___snd_hda_add_vmaster:\09\09\09\09\09"
module asm "\09.asciz \09\22__snd_hda_add_vmaster\22\09\09\09\09\09"
module asm "__kstrtabns___snd_hda_add_vmaster:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_add_vmaster_hook\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_add_vmaster_hook\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_add_vmaster_hook\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_add_vmaster_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_add_vmaster_hook\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_add_vmaster_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_sync_vmaster_hook\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_sync_vmaster_hook\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_sync_vmaster_hook\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_sync_vmaster_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_sync_vmaster_hook\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_sync_vmaster_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_switch_info\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_switch_info\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_switch_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_switch_info:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_switch_info\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_switch_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_switch_get\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_switch_get\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_switch_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_switch_get:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_switch_get\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_switch_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_mixer_amp_switch_put\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_mixer_amp_switch_put\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_mixer_amp_switch_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_mixer_amp_switch_put:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_mixer_amp_switch_put\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_mixer_amp_switch_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_create_dig_out_ctls\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_create_dig_out_ctls\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_create_dig_out_ctls\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_create_dig_out_ctls:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_create_dig_out_ctls\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_create_dig_out_ctls:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_spdif_out_of_nid\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_spdif_out_of_nid\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_spdif_out_of_nid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_spdif_out_of_nid:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_spdif_out_of_nid\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_spdif_out_of_nid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_spdif_ctls_unassign\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_spdif_ctls_unassign\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_spdif_ctls_unassign\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_spdif_ctls_unassign:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_spdif_ctls_unassign\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_spdif_ctls_unassign:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_spdif_ctls_assign\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_spdif_ctls_assign\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_spdif_ctls_assign\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_spdif_ctls_assign:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_spdif_ctls_assign\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_spdif_ctls_assign:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_create_spdif_share_sw\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_create_spdif_share_sw\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_create_spdif_share_sw\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_create_spdif_share_sw:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_create_spdif_share_sw\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_create_spdif_share_sw:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_create_spdif_in_ctls\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_create_spdif_in_ctls\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_create_spdif_in_ctls\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_create_spdif_in_ctls:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_create_spdif_in_ctls\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_create_spdif_in_ctls:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_set_power_to_all\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_set_power_to_all\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_set_power_to_all\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_set_power_to_all:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_set_power_to_all\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_set_power_to_all:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_eapd_power_filter\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_eapd_power_filter\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_eapd_power_filter\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_eapd_power_filter:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_eapd_power_filter\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_eapd_power_filter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_pcm_2_1_chmaps\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_pcm_2_1_chmaps\09\09\09\09"
module asm "\09.long\09__crc_snd_pcm_2_1_chmaps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_pcm_2_1_chmaps:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_pcm_2_1_chmaps\22\09\09\09\09\09"
module asm "__kstrtabns_snd_pcm_2_1_chmaps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_build_controls\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_build_controls\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_build_controls\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_build_controls:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_build_controls\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_build_controls:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_prepare\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_cleanup\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_codec_parse_pcms\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_codec_parse_pcms\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_codec_parse_pcms\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_codec_parse_pcms:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_codec_parse_pcms\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_codec_parse_pcms:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_add_new_ctls\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_add_new_ctls\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_add_new_ctls\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_add_new_ctls:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_add_new_ctls\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_add_new_ctls:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_set_power_save\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_set_power_save\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_set_power_save\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_set_power_save:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_set_power_save\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_set_power_save:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_check_amp_list_power\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_check_amp_list_power\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_check_amp_list_power\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_check_amp_list_power:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_check_amp_list_power\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_check_amp_list_power:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_input_mux_info\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_input_mux_info\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_input_mux_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_input_mux_info:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_input_mux_info\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_input_mux_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_input_mux_put\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_input_mux_put\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_input_mux_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_input_mux_put:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_input_mux_put\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_input_mux_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_enum_helper_info\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_enum_helper_info\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_enum_helper_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_enum_helper_info:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_enum_helper_info\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_enum_helper_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_dig_open\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_dig_open\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_dig_open\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_dig_open:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_dig_open\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_dig_open:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_dig_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_dig_prepare\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_dig_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_dig_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_dig_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_dig_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_dig_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_dig_cleanup\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_dig_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_dig_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_dig_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_dig_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_dig_close\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_dig_close\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_dig_close\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_dig_close:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_dig_close\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_dig_close:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_analog_open\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_analog_open\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_analog_open\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_analog_open:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_analog_open\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_analog_open:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_analog_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_analog_prepare\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_analog_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_analog_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_analog_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_analog_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_multi_out_analog_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_multi_out_analog_cleanup\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_multi_out_analog_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_multi_out_analog_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_multi_out_analog_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_multi_out_analog_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_get_default_vref\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_get_default_vref\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_get_default_vref\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_get_default_vref:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_get_default_vref\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_get_default_vref:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_correct_pin_ctl\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_correct_pin_ctl\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_correct_pin_ctl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_correct_pin_ctl:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_correct_pin_ctl\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_correct_pin_ctl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+_snd_hda_set_pin_ctl\22, \22a\22\09"
module asm "\09.weak\09__crc__snd_hda_set_pin_ctl\09\09\09\09"
module asm "\09.long\09__crc__snd_hda_set_pin_ctl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__snd_hda_set_pin_ctl:\09\09\09\09\09"
module asm "\09.asciz \09\22_snd_hda_set_pin_ctl\22\09\09\09\09\09"
module asm "__kstrtabns__snd_hda_set_pin_ctl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_hda_add_imux_item\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_hda_add_imux_item\09\09\09\09"
module asm "\09.long\09__crc_snd_hda_add_imux_item\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_hda_add_imux_item:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_hda_add_imux_item\22\09\09\09\09\09"
module asm "__kstrtabns_snd_hda_add_imux_item:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+snd_print_pcm_bits\22, \22a\22\09"
module asm "\09.weak\09__crc_snd_print_pcm_bits\09\09\09\09"
module asm "\09.long\09__crc_snd_print_pcm_bits\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_snd_print_pcm_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22snd_print_pcm_bits\22\09\09\09\09\09"
module asm "__kstrtabns_snd_print_pcm_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.snd_device_ops = type { ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.snd_kcontrol_new = type { i32, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, %union.anon.85, i32 }
%union.anon.85 = type { ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.snd_pcm_chmap_elem = type { i8, [15 x i8] }
%struct.hda_verb = type { i16, i32, i32 }
%struct.hda_codec = type { %struct.hdac_device, ptr, ptr, i32, i32, ptr, ptr, %struct.hda_codec_ops, %struct.list_head, %struct.refcount_struct, %struct.wait_queue_head, ptr, ptr, i32, ptr, %struct.snd_array, %struct.snd_array, %struct.list_head, %struct.mutex, %struct.mutex, %struct.snd_array, i32, ptr, %struct.snd_array, %struct.snd_array, %struct.snd_array, %struct.mutex, %struct.snd_array, %struct.snd_array, %struct.snd_array, ptr, i24, i32, i32, i32, ptr, ptr, %struct.snd_array, i32, %struct.delayed_work, i32, i32, ptr, ptr, %struct.snd_array }
%struct.hdac_device = type { %struct.device, i32, ptr, i32, %struct.list_head, i16, i16, i32, i32, i32, i32, i32, i8, i32, ptr, ptr, ptr, i32, i16, i16, %struct.atomic_t, %struct.mutex, ptr, ptr, %struct.mutex, %struct.snd_array, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.hda_codec_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.snd_array = type { i32, i32, i32, i32, ptr }
%struct.hda_conn_list = type { %struct.list_head, i32, i16, [0 x i16] }
%struct.hda_pincfg = type { i16, i8, i8, i32 }
%struct.hda_bus = type { %struct.hdac_bus, ptr, ptr, ptr, %struct.mutex, [8 x i32], i8, i32, i32 }
%struct.hdac_bus = type { ptr, ptr, ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, [16 x ptr], [128 x i32], i32, i32, %struct.work_struct, i32, i32, %struct.hdac_rb, %struct.hdac_rb, [8 x i32], %struct.wait_queue_head, %struct.snd_dma_buffer, %struct.snd_dma_buffer, i32, %struct.list_head, i16, i32, i32, i32, %struct.spinlock, %struct.mutex, %struct.mutex, ptr, i32, i32, i32, i32, %struct.list_head, i8, i32 }
%struct.hdac_rb = type { ptr, i32, i16, i16, [8 x i32], [8 x i32] }
%struct.snd_dma_buffer = type { %struct.snd_dma_device, ptr, i32, i32, ptr }
%struct.snd_dma_device = type { i32, i32, i8, ptr }
%struct.hda_pcm = type { ptr, [2 x %struct.hda_pcm_stream], i32, i32, ptr, i8, ptr, %struct.list_head, i8 }
%struct.hda_pcm_stream = type { i32, i32, i32, i16, i32, i64, i32, ptr, %struct.hda_pcm_ops }
%struct.hda_pcm_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.__va_list = type { ptr }
%struct.snd_card = type { i32, [16 x i8], [16 x i8], [32 x i8], [80 x i8], [32 x i8], [80 x i8], [128 x i8], ptr, ptr, ptr, %struct.list_head, %struct.device, i32, %struct.rw_semaphore, %struct.rwlock_t, i32, i32, %struct.list_head, %struct.list_head, ptr, ptr, %struct.list_head, ptr, %struct.spinlock, i32, ptr, ptr, %struct.device, [4 x ptr], i8, i8, i8, i32, %struct.wait_queue_head, i32, %struct.mutex, ptr, i32, %struct.atomic_t, %struct.wait_queue_head, %struct.wait_queue_head, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.hda_nid_item = type { ptr, i32, i16, i16 }
%struct.snd_device = type { %struct.list_head, ptr, i32, i32, ptr, ptr }
%struct.hda_cvt_setup = type { i16, i8, i8, i16, i8, i8 }
%struct.snd_kcontrol = type { %struct.list_head, %struct.snd_ctl_elem_id, i32, ptr, ptr, ptr, %union.anon.84, i32, ptr, ptr, [0 x %struct.snd_kcontrol_volatile] }
%struct.snd_ctl_elem_id = type { i32, i32, i32, i32, [44 x i8], i32 }
%union.anon.84 = type { ptr }
%struct.snd_kcontrol_volatile = type { ptr, i32 }
%struct.snd_ctl_elem_info = type { %struct.snd_ctl_elem_id, i32, i32, i32, i32, %union.anon.75, [64 x i8] }
%union.anon.75 = type { %struct.anon.78, [40 x i8] }
%struct.anon.78 = type { i32, i32, [64 x i8], i64, i32 }
%struct.snd_ctl_elem_value = type { %struct.snd_ctl_elem_id, i8, %union.anon.79, [128 x i8] }
%union.anon.79 = type { %union.anon.81 }
%union.anon.81 = type { [64 x i64] }
%struct.snd_pcm = type { ptr, %struct.list_head, i32, i32, i16, i16, [64 x i8], [80 x i8], [2 x %struct.snd_pcm_str], %struct.mutex, %struct.wait_queue_head, ptr, ptr, i8, i8, i8, %struct.snd_pcm_oss }
%struct.snd_pcm_str = type { i32, ptr, i32, i32, ptr, %struct.snd_pcm_oss_stream, ptr, i32, ptr, %struct.device }
%struct.snd_pcm_oss_stream = type { ptr, %struct.mutex, ptr }
%struct.snd_pcm_oss = type { i32, i32 }
%struct.follower_init_arg = type { ptr, i32 }
%struct.hda_vmaster_mute_hook = type { ptr, ptr, ptr }
%struct.hda_spdif_out = type { i16, i32, i16 }
%struct.hda_multi_out = type { i32, ptr, i16, [5 x i16], [5 x i16], i16, ptr, i32, i32, i32, i32, i32, i32, i64, i32, i32, i64 }
%struct.snd_pcm_chmap = type { ptr, i32, ptr, ptr, i32, i32, ptr }
%struct.hda_amp_list = type { i16, i8, i8 }
%struct.hda_loopback_check = type { ptr, i32 }
%struct.hda_input_mux = type { i32, [36 x %struct.hda_input_mux_item] }
%struct.hda_input_mux_item = type { [32 x i8], i32 }
%struct.snd_pcm_substream = type { ptr, ptr, ptr, i32, [32 x i8], i32, %struct.pm_qos_request, i32, %struct.snd_dma_buffer, i32, ptr, ptr, ptr, i8, i32, ptr, %struct.list_head, %struct.snd_pcm_group, ptr, i32, %struct.atomic_t, i32, ptr, ptr, %struct.snd_pcm_oss_substream, ptr, i8 }
%struct.pm_qos_request = type { %struct.plist_node, ptr }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.snd_pcm_group = type { %struct.spinlock, %struct.mutex, %struct.list_head, %struct.refcount_struct }
%struct.snd_pcm_oss_substream = type { i8, %struct.snd_pcm_oss_setup }
%struct.snd_pcm_oss_setup = type { ptr, i8, i32, i32, ptr }
%struct.snd_pcm_runtime = type { ptr, %struct.timespec64, i8, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %union.snd_pcm_sync_id, ptr, ptr, i32, %struct.wait_queue_head, %struct.wait_queue_head, ptr, i8, ptr, ptr, %struct.snd_pcm_hardware, %struct.snd_pcm_hw_constraints, i32, i32, ptr, i32, i32, ptr, i8, [3 x i8], %struct.snd_pcm_audio_tstamp_config, %struct.snd_pcm_audio_tstamp_report, %struct.timespec64, %struct.snd_pcm_oss_runtime }
%union.snd_pcm_sync_id = type { [4 x i32] }
%struct.snd_pcm_hardware = type { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.snd_pcm_hw_constraints = type { [3 x %struct.snd_mask], [12 x %struct.snd_interval], i32, i32, ptr }
%struct.snd_mask = type { [8 x i32] }
%struct.snd_interval = type { i32, i32, i8 }
%struct.snd_pcm_audio_tstamp_config = type { i8, [3 x i8] }
%struct.snd_pcm_audio_tstamp_report = type { i8, i32 }
%struct.timespec64 = type { i64, i32 }
%struct.snd_pcm_oss_runtime = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.atomic_t, ptr, ptr, i32 }

@__kstrtab_snd_hda_sequence_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_sequence_write = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_sequence_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_sequence_write to i32), ptr @__kstrtab_snd_hda_sequence_write, ptr @__kstrtabns_snd_hda_sequence_write }, section "___ksymtab_gpl+snd_hda_sequence_write", align 4
@.str = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"sound/pci/hda/hda_codec.c\00", [38 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_get_conn_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_get_conn_list = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_get_conn_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_get_conn_list to i32), ptr @__kstrtab_snd_hda_get_conn_list, ptr @__kstrtabns_snd_hda_get_conn_list }, section "___ksymtab_gpl+snd_hda_get_conn_list", align 4
@snd_hda_get_connections._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str, i32 216, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Too many connections %d for NID 0x%x\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"snd_hda_get_connections\00", [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@snd_hda_get_connections._entry_ptr = internal global ptr @snd_hda_get_connections._entry, section ".printk_index", align 4
@__kstrtab_snd_hda_get_connections = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_get_connections = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_get_connections = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_get_connections to i32), ptr @__kstrtab_snd_hda_get_connections, ptr @__kstrtabns_snd_hda_get_connections }, section "___ksymtab_gpl+snd_hda_get_connections", align 4
@__kstrtab_snd_hda_override_conn_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_override_conn_list = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_override_conn_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_override_conn_list to i32), ptr @__kstrtab_snd_hda_override_conn_list, ptr @__kstrtabns_snd_hda_override_conn_list }, section "___ksymtab_gpl+snd_hda_override_conn_list", align 4
@snd_hda_get_conn_index.__UNIQUE_ID_ddebug240 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.6, ptr @.str, ptr @.str.7, i8 0, i8 69, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"snd_hda_codec\00", [18 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"snd_hda_get_conn_index\00", [41 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"too deep connection for 0x%x\0A\00", [34 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_get_conn_index = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_get_conn_index = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_get_conn_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_get_conn_index to i32), ptr @__kstrtab_snd_hda_get_conn_index, ptr @__kstrtabns_snd_hda_get_conn_index }, section "___ksymtab_gpl+snd_hda_get_conn_index", align 4
@__kstrtab_snd_hda_get_num_devices = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_get_num_devices = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_get_num_devices = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_get_num_devices to i32), ptr @__kstrtab_snd_hda_get_num_devices, ptr @__kstrtabns_snd_hda_get_num_devices }, section "___ksymtab_gpl+snd_hda_get_num_devices", align 4
@__kstrtab_snd_hda_get_dev_select = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_get_dev_select = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_get_dev_select = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_get_dev_select to i32), ptr @__kstrtab_snd_hda_get_dev_select, ptr @__kstrtabns_snd_hda_get_dev_select }, section "___ksymtab_gpl+snd_hda_get_dev_select", align 4
@__kstrtab_snd_hda_set_dev_select = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_set_dev_select = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_set_dev_select = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_set_dev_select to i32), ptr @__kstrtab_snd_hda_set_dev_select, ptr @__kstrtabns_snd_hda_set_dev_select }, section "___ksymtab_gpl+snd_hda_set_dev_select", align 4
@__kstrtab_snd_hda_codec_set_pincfg = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_set_pincfg = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_set_pincfg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_set_pincfg to i32), ptr @__kstrtab_snd_hda_codec_set_pincfg, ptr @__kstrtabns_snd_hda_codec_set_pincfg }, section "___ksymtab_gpl+snd_hda_codec_set_pincfg", align 4
@__kstrtab_snd_hda_codec_get_pincfg = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_get_pincfg = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_get_pincfg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_get_pincfg to i32), ptr @__kstrtab_snd_hda_codec_get_pincfg, ptr @__kstrtabns_snd_hda_codec_get_pincfg }, section "___ksymtab_gpl+snd_hda_codec_get_pincfg", align 4
@__kstrtab_snd_hda_codec_set_pin_target = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_set_pin_target = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_set_pin_target = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_set_pin_target to i32), ptr @__kstrtab_snd_hda_codec_set_pin_target, ptr @__kstrtabns_snd_hda_codec_set_pin_target }, section "___ksymtab_gpl+snd_hda_codec_set_pin_target", align 4
@__kstrtab_snd_hda_codec_get_pin_target = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_get_pin_target = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_get_pin_target = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_get_pin_target to i32), ptr @__kstrtab_snd_hda_codec_get_pin_target, ptr @__kstrtabns_snd_hda_codec_get_pin_target }, section "___ksymtab_gpl+snd_hda_codec_get_pin_target", align 4
@__kstrtab_snd_hda_shutup_pins = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_shutup_pins = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_shutup_pins = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_shutup_pins to i32), ptr @__kstrtab_snd_hda_shutup_pins, ptr @__kstrtabns_snd_hda_shutup_pins }, section "___ksymtab_gpl+snd_hda_shutup_pins", align 4
@__kstrtab_snd_hda_codec_pcm_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_pcm_put = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_pcm_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_pcm_put to i32), ptr @__kstrtab_snd_hda_codec_pcm_put, ptr @__kstrtabns_snd_hda_codec_pcm_put }, section "___ksymtab_gpl+snd_hda_codec_pcm_put", align 4
@__kstrtab_snd_hda_codec_pcm_new = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_pcm_new = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_pcm_new = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_pcm_new to i32), ptr @__kstrtab_snd_hda_codec_pcm_new, ptr @__kstrtabns_snd_hda_codec_pcm_new }, section "___ksymtab_gpl+snd_hda_codec_pcm_new", align 4
@__kstrtab_snd_hda_codec_cleanup_for_unbind = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_cleanup_for_unbind = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_cleanup_for_unbind = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_cleanup_for_unbind to i32), ptr @__kstrtab_snd_hda_codec_cleanup_for_unbind, ptr @__kstrtabns_snd_hda_codec_cleanup_for_unbind }, section "___ksymtab_gpl+snd_hda_codec_cleanup_for_unbind", align 4
@__kstrtab_snd_hda_codec_new = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_new = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_new = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_new to i32), ptr @__kstrtab_snd_hda_codec_new, ptr @__kstrtabns_snd_hda_codec_new }, section "___ksymtab_gpl+snd_hda_codec_new", align 4
@snd_hda_codec_device_new.dev_ops = internal constant { %struct.snd_device_ops, [20 x i8] } { %struct.snd_device_ops { ptr @snd_hda_codec_dev_free, ptr @snd_hda_codec_dev_register, ptr null }, [20 x i8] zeroinitializer }, align 32
@snd_hda_codec_device_new.__UNIQUE_ID_ddebug242 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.8, ptr @.str, ptr @.str.9, i8 0, i8 -20, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.8 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"snd_hda_codec_device_new\00", [39 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s: entry\0A\00", [21 x i8] zeroinitializer }, align 32
@snd_hda_codec_device_new.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.10 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&codec->spdif_mutex\00", [44 x i8] zeroinitializer }, align 32
@snd_hda_codec_device_new.__key.11 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.12 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&codec->control_mutex\00", [42 x i8] zeroinitializer }, align 32
@snd_hda_codec_device_new.__key.13 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.14 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&codec->remove_sleep\00", [43 x i8] zeroinitializer }, align 32
@snd_hda_codec_device_new.__key.15 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.16 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"(work_completion)(&(&codec->jackpoll_work)->work)\00", [46 x i8] zeroinitializer }, align 32
@snd_hda_codec_device_new.__key.17 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.18 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"&(&codec->jackpoll_work)->timer\00", [32 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@.str.19 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"HDA:%08x,%08x,%08x\00", [45 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_codec_device_new = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_device_new = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_device_new = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_device_new to i32), ptr @__kstrtab_snd_hda_codec_device_new, ptr @__kstrtabns_snd_hda_codec_device_new }, section "___ksymtab_gpl+snd_hda_codec_device_new", align 4
@__kstrtab_snd_hda_codec_update_widgets = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_update_widgets = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_update_widgets = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_update_widgets to i32), ptr @__kstrtab_snd_hda_codec_update_widgets, ptr @__kstrtabns_snd_hda_codec_update_widgets }, section "___ksymtab_gpl+snd_hda_codec_update_widgets", align 4
@snd_hda_codec_setup_stream.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.20, ptr @.str, ptr @.str.21, i8 1, i8 23, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.20 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"snd_hda_codec_setup_stream\00", [37 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"hda_codec_setup_stream: NID=0x%x, stream=0x%x, channel=%d, format=0x%x\0A\00", [56 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_codec_setup_stream = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_setup_stream = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_setup_stream = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_setup_stream to i32), ptr @__kstrtab_snd_hda_codec_setup_stream, ptr @__kstrtabns_snd_hda_codec_setup_stream }, section "___ksymtab_gpl+snd_hda_codec_setup_stream", align 4
@__snd_hda_codec_cleanup_stream.__UNIQUE_ID_ddebug244 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.22, ptr @.str, ptr @.str.23, i8 1, i8 35, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.22 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"__snd_hda_codec_cleanup_stream\00", [33 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"hda_codec_cleanup_stream: NID=0x%x\0A\00", [60 x i8] zeroinitializer }, align 32
@__kstrtab___snd_hda_codec_cleanup_stream = external dso_local constant [0 x i8], align 1
@__kstrtabns___snd_hda_codec_cleanup_stream = external dso_local constant [0 x i8], align 1
@__ksymtab___snd_hda_codec_cleanup_stream = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__snd_hda_codec_cleanup_stream to i32), ptr @__kstrtab___snd_hda_codec_cleanup_stream, ptr @__kstrtabns___snd_hda_codec_cleanup_stream }, section "___ksymtab_gpl+__snd_hda_codec_cleanup_stream", align 4
@__kstrtab_query_amp_caps = external dso_local constant [0 x i8], align 1
@__kstrtabns_query_amp_caps = external dso_local constant [0 x i8], align 1
@__ksymtab_query_amp_caps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @query_amp_caps to i32), ptr @__kstrtab_query_amp_caps, ptr @__kstrtabns_query_amp_caps }, section "___ksymtab_gpl+query_amp_caps", align 4
@__kstrtab_snd_hda_check_amp_caps = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_check_amp_caps = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_check_amp_caps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_check_amp_caps to i32), ptr @__kstrtab_snd_hda_check_amp_caps, ptr @__kstrtabns_snd_hda_check_amp_caps }, section "___ksymtab_gpl+snd_hda_check_amp_caps", align 4
@__kstrtab_snd_hda_override_amp_caps = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_override_amp_caps = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_override_amp_caps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_override_amp_caps to i32), ptr @__kstrtab_snd_hda_override_amp_caps, ptr @__kstrtabns_snd_hda_override_amp_caps }, section "___ksymtab_gpl+snd_hda_override_amp_caps", align 4
@__kstrtab_snd_hda_codec_amp_update = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_amp_update = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_amp_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_amp_update to i32), ptr @__kstrtab_snd_hda_codec_amp_update, ptr @__kstrtabns_snd_hda_codec_amp_update }, section "___ksymtab_gpl+snd_hda_codec_amp_update", align 4
@__kstrtab_snd_hda_codec_amp_stereo = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_amp_stereo = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_amp_stereo = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_amp_stereo to i32), ptr @__kstrtab_snd_hda_codec_amp_stereo, ptr @__kstrtabns_snd_hda_codec_amp_stereo }, section "___ksymtab_gpl+snd_hda_codec_amp_stereo", align 4
@__kstrtab_snd_hda_codec_amp_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_amp_init = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_amp_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_amp_init to i32), ptr @__kstrtab_snd_hda_codec_amp_init, ptr @__kstrtabns_snd_hda_codec_amp_init }, section "___ksymtab_gpl+snd_hda_codec_amp_init", align 4
@__kstrtab_snd_hda_codec_amp_init_stereo = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_amp_init_stereo = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_amp_init_stereo = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_amp_init_stereo to i32), ptr @__kstrtab_snd_hda_codec_amp_init_stereo, ptr @__kstrtabns_snd_hda_codec_amp_init_stereo }, section "___ksymtab_gpl+snd_hda_codec_amp_init_stereo", align 4
@snd_hda_mixer_amp_volume_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str, i32 1440, ptr @.str.26, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"num_steps = 0 for NID=0x%x (ctl = %s)\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"snd_hda_mixer_amp_volume_info\00", [34 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@snd_hda_mixer_amp_volume_info._entry_ptr = internal global ptr @snd_hda_mixer_amp_volume_info._entry, section ".printk_index", align 4
@__kstrtab_snd_hda_mixer_amp_volume_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_volume_info = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_volume_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_volume_info to i32), ptr @__kstrtab_snd_hda_mixer_amp_volume_info, ptr @__kstrtabns_snd_hda_mixer_amp_volume_info }, section "___ksymtab_gpl+snd_hda_mixer_amp_volume_info", align 4
@__kstrtab_snd_hda_mixer_amp_volume_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_volume_get = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_volume_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_volume_get to i32), ptr @__kstrtab_snd_hda_mixer_amp_volume_get, ptr @__kstrtabns_snd_hda_mixer_amp_volume_get }, section "___ksymtab_gpl+snd_hda_mixer_amp_volume_get", align 4
@__kstrtab_snd_hda_mixer_amp_volume_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_volume_put = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_volume_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_volume_put to i32), ptr @__kstrtab_snd_hda_mixer_amp_volume_put, ptr @__kstrtabns_snd_hda_mixer_amp_volume_put }, section "___ksymtab_gpl+snd_hda_mixer_amp_volume_put", align 4
@__kstrtab_snd_hda_mixer_amp_tlv = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_tlv = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_tlv = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_tlv to i32), ptr @__kstrtab_snd_hda_mixer_amp_tlv, ptr @__kstrtabns_snd_hda_mixer_amp_tlv }, section "___ksymtab_gpl+snd_hda_mixer_amp_tlv", align 4
@__kstrtab_snd_hda_set_vmaster_tlv = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_set_vmaster_tlv = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_set_vmaster_tlv = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_set_vmaster_tlv to i32), ptr @__kstrtab_snd_hda_set_vmaster_tlv, ptr @__kstrtabns_snd_hda_set_vmaster_tlv }, section "___ksymtab_gpl+snd_hda_set_vmaster_tlv", align 4
@__kstrtab_snd_hda_find_mixer_ctl = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_find_mixer_ctl = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_find_mixer_ctl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_find_mixer_ctl to i32), ptr @__kstrtab_snd_hda_find_mixer_ctl, ptr @__kstrtabns_snd_hda_find_mixer_ctl }, section "___ksymtab_gpl+snd_hda_find_mixer_ctl", align 4
@__kstrtab_snd_hda_ctl_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_ctl_add = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_ctl_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_ctl_add to i32), ptr @__kstrtab_snd_hda_ctl_add, ptr @__kstrtabns_snd_hda_ctl_add }, section "___ksymtab_gpl+snd_hda_ctl_add", align 4
@snd_hda_add_nid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str, i32 1727, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"no NID for mapping control %s:%d:%d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"snd_hda_add_nid\00", [16 x i8] zeroinitializer }, align 32
@snd_hda_add_nid._entry_ptr = internal global ptr @snd_hda_add_nid._entry, section ".printk_index", align 4
@__kstrtab_snd_hda_add_nid = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_add_nid = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_add_nid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_add_nid to i32), ptr @__kstrtab_snd_hda_add_nid, ptr @__kstrtabns_snd_hda_add_nid }, section "___ksymtab_gpl+snd_hda_add_nid", align 4
@__kstrtab_snd_hda_lock_devices = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_lock_devices = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_lock_devices = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_lock_devices to i32), ptr @__kstrtab_snd_hda_lock_devices, ptr @__kstrtabns_snd_hda_lock_devices }, section "___ksymtab_gpl+snd_hda_lock_devices", align 4
@__kstrtab_snd_hda_unlock_devices = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_unlock_devices = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_unlock_devices = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_unlock_devices to i32), ptr @__kstrtab_snd_hda_unlock_devices, ptr @__kstrtabns_snd_hda_unlock_devices }, section "___ksymtab_gpl+snd_hda_unlock_devices", align 4
@__snd_hda_add_vmaster.__UNIQUE_ID_ddebug245 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.29, ptr @.str, ptr @.str.30, i8 1, i8 -17, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.29 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"__snd_hda_add_vmaster\00", [42 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"No follower found for %s\0A\00", [38 x i8] zeroinitializer }, align 32
@__kstrtab___snd_hda_add_vmaster = external dso_local constant [0 x i8], align 1
@__kstrtabns___snd_hda_add_vmaster = external dso_local constant [0 x i8], align 1
@__ksymtab___snd_hda_add_vmaster = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__snd_hda_add_vmaster to i32), ptr @__kstrtab___snd_hda_add_vmaster, ptr @__kstrtabns___snd_hda_add_vmaster }, section "___ksymtab_gpl+__snd_hda_add_vmaster", align 4
@__kstrtab_snd_hda_add_vmaster_hook = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_add_vmaster_hook = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_add_vmaster_hook = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_add_vmaster_hook to i32), ptr @__kstrtab_snd_hda_add_vmaster_hook, ptr @__kstrtabns_snd_hda_add_vmaster_hook }, section "___ksymtab_gpl+snd_hda_add_vmaster_hook", align 4
@__kstrtab_snd_hda_sync_vmaster_hook = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_sync_vmaster_hook = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_sync_vmaster_hook = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_sync_vmaster_hook to i32), ptr @__kstrtab_snd_hda_sync_vmaster_hook, ptr @__kstrtabns_snd_hda_sync_vmaster_hook }, section "___ksymtab_gpl+snd_hda_sync_vmaster_hook", align 4
@__kstrtab_snd_hda_mixer_amp_switch_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_switch_info = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_switch_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_switch_info to i32), ptr @__kstrtab_snd_hda_mixer_amp_switch_info, ptr @__kstrtabns_snd_hda_mixer_amp_switch_info }, section "___ksymtab_gpl+snd_hda_mixer_amp_switch_info", align 4
@__kstrtab_snd_hda_mixer_amp_switch_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_switch_get = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_switch_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_switch_get to i32), ptr @__kstrtab_snd_hda_mixer_amp_switch_get, ptr @__kstrtabns_snd_hda_mixer_amp_switch_get }, section "___ksymtab_gpl+snd_hda_mixer_amp_switch_get", align 4
@__kstrtab_snd_hda_mixer_amp_switch_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_mixer_amp_switch_put = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_mixer_amp_switch_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_mixer_amp_switch_put to i32), ptr @__kstrtab_snd_hda_mixer_amp_switch_put, ptr @__kstrtabns_snd_hda_mixer_amp_switch_put }, section "___ksymtab_gpl+snd_hda_mixer_amp_switch_put", align 4
@dig_mixes = internal constant { [5 x %struct.snd_kcontrol_new], [48 x i8] } { [5 x %struct.snd_kcontrol_new] [%struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.67, i32 0, i32 1, i32 0, ptr @snd_hda_spdif_mask_info, ptr @snd_hda_spdif_cmask_get, ptr null, %union.anon.85 zeroinitializer, i32 0 }, %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.68, i32 0, i32 1, i32 0, ptr @snd_hda_spdif_mask_info, ptr @snd_hda_spdif_pmask_get, ptr null, %union.anon.85 zeroinitializer, i32 0 }, %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.69, i32 0, i32 0, i32 0, ptr @snd_hda_spdif_mask_info, ptr @snd_hda_spdif_default_get, ptr @snd_hda_spdif_default_put, %union.anon.85 zeroinitializer, i32 0 }, %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.31, i32 0, i32 0, i32 0, ptr @snd_ctl_boolean_mono_info, ptr @snd_hda_spdif_out_switch_get, ptr @snd_hda_spdif_out_switch_put, %union.anon.85 zeroinitializer, i32 0 }, %struct.snd_kcontrol_new zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IEC958 Playback Switch\00", [41 x i8] zeroinitializer }, align 32
@snd_hda_create_dig_out_ctls._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str, i32 2442, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"too many IEC958 outputs\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"snd_hda_create_dig_out_ctls\00", [36 x i8] zeroinitializer }, align 32
@snd_hda_create_dig_out_ctls._entry_ptr = internal global ptr @snd_hda_create_dig_out_ctls._entry, section ".printk_index", align 4
@__kstrtab_snd_hda_create_dig_out_ctls = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_create_dig_out_ctls = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_create_dig_out_ctls = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_create_dig_out_ctls to i32), ptr @__kstrtab_snd_hda_create_dig_out_ctls, ptr @__kstrtabns_snd_hda_create_dig_out_ctls }, section "___ksymtab_gpl+snd_hda_create_dig_out_ctls", align 4
@__kstrtab_snd_hda_spdif_out_of_nid = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_spdif_out_of_nid = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_spdif_out_of_nid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_spdif_out_of_nid to i32), ptr @__kstrtab_snd_hda_spdif_out_of_nid, ptr @__kstrtabns_snd_hda_spdif_out_of_nid }, section "___ksymtab_gpl+snd_hda_spdif_out_of_nid", align 4
@__kstrtab_snd_hda_spdif_ctls_unassign = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_spdif_ctls_unassign = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_spdif_ctls_unassign = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_spdif_ctls_unassign to i32), ptr @__kstrtab_snd_hda_spdif_ctls_unassign, ptr @__kstrtabns_snd_hda_spdif_ctls_unassign }, section "___ksymtab_gpl+snd_hda_spdif_ctls_unassign", align 4
@__kstrtab_snd_hda_spdif_ctls_assign = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_spdif_ctls_assign = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_spdif_ctls_assign = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_spdif_ctls_assign to i32), ptr @__kstrtab_snd_hda_spdif_ctls_assign, ptr @__kstrtabns_snd_hda_spdif_ctls_assign }, section "___ksymtab_gpl+snd_hda_spdif_ctls_assign", align 4
@spdif_share_sw = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.70, i32 0, i32 0, i32 0, ptr @snd_ctl_boolean_mono_info, ptr @spdif_share_sw_get, ptr @spdif_share_sw_put, %union.anon.85 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_create_spdif_share_sw = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_create_spdif_share_sw = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_create_spdif_share_sw = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_create_spdif_share_sw to i32), ptr @__kstrtab_snd_hda_create_spdif_share_sw, ptr @__kstrtabns_snd_hda_create_spdif_share_sw }, section "___ksymtab_gpl+snd_hda_create_spdif_share_sw", align 4
@.str.34 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IEC958 Capture Switch\00", [42 x i8] zeroinitializer }, align 32
@snd_hda_create_spdif_in_ctls._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.35, ptr @.str.36, ptr @.str, i32 2671, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"too many IEC958 inputs\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"snd_hda_create_spdif_in_ctls\00", [35 x i8] zeroinitializer }, align 32
@snd_hda_create_spdif_in_ctls._entry_ptr = internal global ptr @snd_hda_create_spdif_in_ctls._entry, section ".printk_index", align 4
@dig_in_ctls = internal constant { [3 x %struct.snd_kcontrol_new], [48 x i8] } { [3 x %struct.snd_kcontrol_new] [%struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.34, i32 0, i32 0, i32 0, ptr @snd_ctl_boolean_mono_info, ptr @snd_hda_spdif_in_switch_get, ptr @snd_hda_spdif_in_switch_put, %union.anon.85 zeroinitializer, i32 0 }, %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.71, i32 0, i32 1, i32 0, ptr @snd_hda_spdif_mask_info, ptr @snd_hda_spdif_in_status_get, ptr null, %union.anon.85 zeroinitializer, i32 0 }, %struct.snd_kcontrol_new zeroinitializer], [48 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_create_spdif_in_ctls = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_create_spdif_in_ctls = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_create_spdif_in_ctls = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_create_spdif_in_ctls to i32), ptr @__kstrtab_snd_hda_create_spdif_in_ctls, ptr @__kstrtabns_snd_hda_create_spdif_in_ctls }, section "___ksymtab_gpl+snd_hda_create_spdif_in_ctls", align 4
@__kstrtab_snd_hda_codec_set_power_to_all = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_set_power_to_all = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_set_power_to_all = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_set_power_to_all to i32), ptr @__kstrtab_snd_hda_codec_set_power_to_all, ptr @__kstrtabns_snd_hda_codec_set_power_to_all }, section "___ksymtab_gpl+snd_hda_codec_set_power_to_all", align 4
@__kstrtab_snd_hda_codec_eapd_power_filter = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_eapd_power_filter = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_eapd_power_filter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_eapd_power_filter to i32), ptr @__kstrtab_snd_hda_codec_eapd_power_filter, ptr @__kstrtabns_snd_hda_codec_eapd_power_filter }, section "___ksymtab_gpl+snd_hda_codec_eapd_power_filter", align 4
@hda_codec_driver_pm = dso_local constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr @hda_codec_pm_prepare, ptr @hda_codec_pm_complete, ptr @hda_codec_pm_suspend, ptr @hda_codec_pm_resume, ptr @hda_codec_pm_freeze, ptr @hda_codec_pm_thaw, ptr @hda_codec_pm_suspend, ptr @hda_codec_pm_restore, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @hda_codec_runtime_suspend, ptr @hda_codec_runtime_resume, ptr null }, [36 x i8] zeroinitializer }, align 32
@snd_pcm_2_1_chmaps = dso_local constant { <{ { i8, <{ i8, i8, [13 x i8] }> }, { i8, <{ i8, i8, i8, i8, [11 x i8] }> }, %struct.snd_pcm_chmap_elem }>, [48 x i8] } { <{ { i8, <{ i8, i8, [13 x i8] }> }, { i8, <{ i8, i8, i8, i8, [11 x i8] }> }, %struct.snd_pcm_chmap_elem }> <{ { i8, <{ i8, i8, [13 x i8] }> } { i8 2, <{ i8, i8, [13 x i8] }> <{ i8 3, i8 4, [13 x i8] zeroinitializer }> }, { i8, <{ i8, i8, i8, i8, [11 x i8] }> } { i8 4, <{ i8, i8, i8, i8, [11 x i8] }> <{ i8 3, i8 4, i8 8, i8 8, [11 x i8] zeroinitializer }> }, %struct.snd_pcm_chmap_elem zeroinitializer }>, [48 x i8] zeroinitializer }, align 32
@__kstrtab_snd_pcm_2_1_chmaps = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_pcm_2_1_chmaps = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_pcm_2_1_chmaps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_pcm_2_1_chmaps to i32), ptr @__kstrtab_snd_pcm_2_1_chmaps, ptr @__kstrtabns_snd_pcm_2_1_chmaps }, section "___ksymtab_gpl+snd_pcm_2_1_chmaps", align 4
@__kstrtab_snd_hda_codec_build_controls = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_build_controls = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_build_controls = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_build_controls to i32), ptr @__kstrtab_snd_hda_codec_build_controls, ptr @__kstrtabns_snd_hda_codec_build_controls }, section "___ksymtab_gpl+snd_hda_codec_build_controls", align 4
@__kstrtab_snd_hda_codec_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_prepare to i32), ptr @__kstrtab_snd_hda_codec_prepare, ptr @__kstrtabns_snd_hda_codec_prepare }, section "___ksymtab_gpl+snd_hda_codec_prepare", align 4
@__kstrtab_snd_hda_codec_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_cleanup to i32), ptr @__kstrtab_snd_hda_codec_cleanup, ptr @__kstrtabns_snd_hda_codec_cleanup }, section "___ksymtab_gpl+snd_hda_codec_cleanup", align 4
@.str.37 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Audio\00", [26 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"SPDIF\00", [26 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"HDMI\00", [27 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Modem\00", [26 x i8] zeroinitializer }, align 32
@snd_hda_pcm_type_name = dso_local global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40], [16 x i8] zeroinitializer }, align 32
@snd_hda_codec_parse_pcms._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str, i32 3261, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"cannot build PCMs for #%d (error %d)\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"snd_hda_codec_parse_pcms\00", [39 x i8] zeroinitializer }, align 32
@snd_hda_codec_parse_pcms._entry_ptr = internal global ptr @snd_hda_codec_parse_pcms._entry, section ".printk_index", align 4
@snd_hda_codec_parse_pcms._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.42, ptr @.str, i32 3277, ptr @.str.26, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"fail to setup default for PCM %s\0A\00", [62 x i8] zeroinitializer }, align 32
@snd_hda_codec_parse_pcms._entry_ptr.45 = internal global ptr @snd_hda_codec_parse_pcms._entry.43, section ".printk_index", align 4
@__kstrtab_snd_hda_codec_parse_pcms = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_codec_parse_pcms = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_codec_parse_pcms = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_codec_parse_pcms to i32), ptr @__kstrtab_snd_hda_codec_parse_pcms, ptr @__kstrtabns_snd_hda_codec_parse_pcms }, section "___ksymtab_gpl+snd_hda_codec_parse_pcms", align 4
@snd_hda_codec_build_pcms._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.46, ptr @.str.47, ptr @.str, i32 3315, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"cannot attach PCM stream %d for codec #%d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"snd_hda_codec_build_pcms\00", [39 x i8] zeroinitializer }, align 32
@snd_hda_codec_build_pcms._entry_ptr = internal global ptr @snd_hda_codec_build_pcms._entry, section ".printk_index", align 4
@__kstrtab_snd_hda_add_new_ctls = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_add_new_ctls = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_add_new_ctls = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_add_new_ctls to i32), ptr @__kstrtab_snd_hda_add_new_ctls, ptr @__kstrtabns_snd_hda_add_new_ctls }, section "___ksymtab_gpl+snd_hda_add_new_ctls", align 4
@__kstrtab_snd_hda_set_power_save = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_set_power_save = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_set_power_save = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_set_power_save to i32), ptr @__kstrtab_snd_hda_set_power_save, ptr @__kstrtabns_snd_hda_set_power_save }, section "___ksymtab_gpl+snd_hda_set_power_save", align 4
@__kstrtab_snd_hda_check_amp_list_power = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_check_amp_list_power = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_check_amp_list_power = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_check_amp_list_power to i32), ptr @__kstrtab_snd_hda_check_amp_list_power, ptr @__kstrtabns_snd_hda_check_amp_list_power }, section "___ksymtab_gpl+snd_hda_check_amp_list_power", align 4
@__kstrtab_snd_hda_input_mux_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_input_mux_info = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_input_mux_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_input_mux_info to i32), ptr @__kstrtab_snd_hda_input_mux_info, ptr @__kstrtabns_snd_hda_input_mux_info }, section "___ksymtab_gpl+snd_hda_input_mux_info", align 4
@__kstrtab_snd_hda_input_mux_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_input_mux_put = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_input_mux_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_input_mux_put to i32), ptr @__kstrtab_snd_hda_input_mux_put, ptr @__kstrtabns_snd_hda_input_mux_put }, section "___ksymtab_gpl+snd_hda_input_mux_put", align 4
@snd_hda_enum_helper_info.texts_default = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.48, ptr @.str.49], [24 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Disabled\00", [23 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Enabled\00", [24 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_enum_helper_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_enum_helper_info = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_enum_helper_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_enum_helper_info to i32), ptr @__kstrtab_snd_hda_enum_helper_info, ptr @__kstrtabns_snd_hda_enum_helper_info }, section "___ksymtab_gpl+snd_hda_enum_helper_info", align 4
@__kstrtab_snd_hda_multi_out_dig_open = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_dig_open = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_dig_open = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_dig_open to i32), ptr @__kstrtab_snd_hda_multi_out_dig_open, ptr @__kstrtabns_snd_hda_multi_out_dig_open }, section "___ksymtab_gpl+snd_hda_multi_out_dig_open", align 4
@__kstrtab_snd_hda_multi_out_dig_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_dig_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_dig_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_dig_prepare to i32), ptr @__kstrtab_snd_hda_multi_out_dig_prepare, ptr @__kstrtabns_snd_hda_multi_out_dig_prepare }, section "___ksymtab_gpl+snd_hda_multi_out_dig_prepare", align 4
@__kstrtab_snd_hda_multi_out_dig_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_dig_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_dig_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_dig_cleanup to i32), ptr @__kstrtab_snd_hda_multi_out_dig_cleanup, ptr @__kstrtabns_snd_hda_multi_out_dig_cleanup }, section "___ksymtab_gpl+snd_hda_multi_out_dig_cleanup", align 4
@__kstrtab_snd_hda_multi_out_dig_close = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_dig_close = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_dig_close = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_dig_close to i32), ptr @__kstrtab_snd_hda_multi_out_dig_close, ptr @__kstrtabns_snd_hda_multi_out_dig_close }, section "___ksymtab_gpl+snd_hda_multi_out_dig_close", align 4
@__kstrtab_snd_hda_multi_out_analog_open = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_analog_open = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_analog_open = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_analog_open to i32), ptr @__kstrtab_snd_hda_multi_out_analog_open, ptr @__kstrtabns_snd_hda_multi_out_analog_open }, section "___ksymtab_gpl+snd_hda_multi_out_analog_open", align 4
@__kstrtab_snd_hda_multi_out_analog_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_analog_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_analog_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_analog_prepare to i32), ptr @__kstrtab_snd_hda_multi_out_analog_prepare, ptr @__kstrtabns_snd_hda_multi_out_analog_prepare }, section "___ksymtab_gpl+snd_hda_multi_out_analog_prepare", align 4
@__kstrtab_snd_hda_multi_out_analog_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_multi_out_analog_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_multi_out_analog_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_multi_out_analog_cleanup to i32), ptr @__kstrtab_snd_hda_multi_out_analog_cleanup, ptr @__kstrtabns_snd_hda_multi_out_analog_cleanup }, section "___ksymtab_gpl+snd_hda_multi_out_analog_cleanup", align 4
@__kstrtab_snd_hda_get_default_vref = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_get_default_vref = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_get_default_vref = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_get_default_vref to i32), ptr @__kstrtab_snd_hda_get_default_vref, ptr @__kstrtabns_snd_hda_get_default_vref }, section "___ksymtab_gpl+snd_hda_get_default_vref", align 4
@__kstrtab_snd_hda_correct_pin_ctl = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_correct_pin_ctl = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_correct_pin_ctl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_correct_pin_ctl to i32), ptr @__kstrtab_snd_hda_correct_pin_ctl, ptr @__kstrtabns_snd_hda_correct_pin_ctl }, section "___ksymtab_gpl+snd_hda_correct_pin_ctl", align 4
@__kstrtab__snd_hda_set_pin_ctl = external dso_local constant [0 x i8], align 1
@__kstrtabns__snd_hda_set_pin_ctl = external dso_local constant [0 x i8], align 1
@__ksymtab__snd_hda_set_pin_ctl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_snd_hda_set_pin_ctl to i32), ptr @__kstrtab__snd_hda_set_pin_ctl, ptr @__kstrtabns__snd_hda_set_pin_ctl }, section "___ksymtab_gpl+_snd_hda_set_pin_ctl", align 4
@snd_hda_add_imux_item._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.51, ptr @.str, i32 3967, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hda_codec: Too many imux items!\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"snd_hda_add_imux_item\00", [42 x i8] zeroinitializer }, align 32
@snd_hda_add_imux_item._entry_ptr = internal global ptr @snd_hda_add_imux_item._entry, section ".printk_index", align 4
@.str.52 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s %d\00", [26 x i8] zeroinitializer }, align 32
@__kstrtab_snd_hda_add_imux_item = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_hda_add_imux_item = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_hda_add_imux_item = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_hda_add_imux_item to i32), ptr @__kstrtab_snd_hda_add_imux_item, ptr @__kstrtabns_snd_hda_add_imux_item }, section "___ksymtab_gpl+snd_hda_add_imux_item", align 4
@.str.53 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" %d\00", [28 x i8] zeroinitializer }, align 32
@__kstrtab_snd_print_pcm_bits = external dso_local constant [0 x i8], align 1
@__kstrtabns_snd_print_pcm_bits = external dso_local constant [0 x i8], align 1
@__ksymtab_snd_print_pcm_bits = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @snd_print_pcm_bits to i32), ptr @__kstrtab_snd_print_pcm_bits, ptr @__kstrtabns_snd_print_pcm_bits }, section "___ksymtab_gpl+snd_print_pcm_bits", align 4
@__UNIQUE_ID_description246 = internal constant [41 x i8] c"snd_hda_codec.description=HDA codec core\00", section ".modinfo", align 1
@__UNIQUE_ID_file247 = internal constant [47 x i8] c"snd_hda_codec.file=sound/pci/hda/snd-hda-codec\00", section ".modinfo", align 1
@__UNIQUE_ID_license248 = internal constant [26 x i8] c"snd_hda_codec.license=GPL\00", section ".modinfo", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@snd_hda_codec_device_init.__UNIQUE_ID_ddebug241 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.54, ptr @.str, ptr @.str.9, i8 0, i8 -35, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.54 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"snd_hda_codec_device_init\00", [38 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hdaudioC%dD%d\00", [18 x i8] zeroinitializer }, align 32
@codec_exec_verb.__UNIQUE_ID_ddebug239 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.56, ptr @.str, ptr @.str.57, i8 0, i8 15, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.56 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"codec_exec_verb\00", [16 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"resetting BUS due to fatal communication error\0A\00", [48 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.60 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s %s\00", [26 x i8] zeroinitializer }, align 32
@init_follower_0dB._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.63, ptr @.str, i32 1901, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Unexpected TLV callback for follower %s:%d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"init_follower_0dB\00", [46 x i8] zeroinitializer }, align 32
@init_follower_0dB._entry_ptr = internal global ptr @init_follower_0dB._entry, section ".printk_index", align 4
@init_follower_0dB._entry.64 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.63, ptr @.str, i32 1919, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"Mismatching dB step for vmaster follower (%d!=%d)\0A\00", [45 x i8] zeroinitializer }, align 32
@init_follower_0dB._entry_ptr.66 = internal global ptr @init_follower_0dB._entry.64, section ".printk_index", align 4
@.str.67 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IEC958 Playback Con Mask\00", [39 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IEC958 Playback Pro Mask\00", [39 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IEC958 Playback Default\00", [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"IEC958 Default PCM Playback Switch\00", [61 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IEC958 Capture Default\00", [41 x i8] zeroinitializer }, align 32
@snd_pcm_std_chmaps = external dso_local constant [0 x %struct.snd_pcm_chmap_elem], align 1
@get_empty_pcm_device.audio_idx = internal constant { [4 x [5 x i32]], [48 x i8] } { [4 x [5 x i32]] [[5 x i32] [i32 0, i32 2, i32 4, i32 5, i32 -1], [5 x i32] [i32 1, i32 -1, i32 0, i32 0, i32 0], [5 x i32] [i32 3, i32 7, i32 8, i32 9, i32 -1], [5 x i32] [i32 6, i32 -1, i32 0, i32 0, i32 0]], [48 x i8] zeroinitializer }, align 32
@get_empty_pcm_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.73, ptr @.str, i32 3216, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Invalid PCM type %d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"get_empty_pcm_device\00", [43 x i8] zeroinitializer }, align 32
@get_empty_pcm_device._entry_ptr = internal global ptr @get_empty_pcm_device._entry, section ".printk_index", align 4
@get_empty_pcm_device._entry.74 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.73, ptr @.str, i32 3238, ptr @.str.26, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Too many %s devices\0A\00", [43 x i8] zeroinitializer }, align 32
@get_empty_pcm_device._entry_ptr.76 = internal global ptr @get_empty_pcm_device._entry.74, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4]
@__sancov_gen_cov_switch_values.77 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 4, i64 5]
@___asan_gen_.80 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 184, i32 7 }
@___asan_gen_.95 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 215, i32 4 }
@___asan_gen_.104 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 277, i32 3 }
@___asan_gen_.105 = private unnamed_addr constant [8 x i8] c"dev_ops\00", align 1
@___asan_gen_.107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 939, i32 37 }
@___asan_gen_.113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 944, i32 2 }
@___asan_gen_.119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 957, i32 2 }
@___asan_gen_.125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 958, i32 2 }
@___asan_gen_.131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 970, i32 2 }
@___asan_gen_.138 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 972, i32 2 }
@___asan_gen_.146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1006, i32 21 }
@___asan_gen_.152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1115, i32 2 }
@___asan_gen_.158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1165, i32 2 }
@___asan_gen_.170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1438, i32 3 }
@___asan_gen_.179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1726, i32 2 }
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1980, i32 3 }
@___asan_gen_.186 = private unnamed_addr constant [10 x i8] c"dig_mixes\00", align 1
@___asan_gen_.188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2366, i32 38 }
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2440, i32 40 }
@___asan_gen_.200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2442, i32 3 }
@___asan_gen_.201 = private unnamed_addr constant [15 x i8] c"spdif_share_sw\00", align 1
@___asan_gen_.203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2553, i32 38 }
@___asan_gen_.206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2669, i32 40 }
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2671, i32 3 }
@___asan_gen_.216 = private unnamed_addr constant [12 x i8] c"dig_in_ctls\00", align 1
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2634, i32 38 }
@___asan_gen_.219 = private unnamed_addr constant [20 x i8] c"hda_codec_driver_pm\00", align 1
@___asan_gen_.221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2983, i32 25 }
@___asan_gen_.222 = private unnamed_addr constant [19 x i8] c"snd_pcm_2_1_chmaps\00", align 1
@___asan_gen_.224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3045, i32 33 }
@___asan_gen_.227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3195, i32 2 }
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3195, i32 11 }
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3195, i32 20 }
@___asan_gen_.236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3195, i32 28 }
@___asan_gen_.237 = private unnamed_addr constant [22 x i8] c"snd_hda_pcm_type_name\00", align 1
@___asan_gen_.239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3194, i32 13 }
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3260, i32 3 }
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3275, i32 5 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3313, i32 4 }
@___asan_gen_.264 = private unnamed_addr constant [14 x i8] c"texts_default\00", align 1
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3532, i32 28 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3533, i32 3 }
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3533, i32 15 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3967, i32 3 }
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3979, i32 5 }
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 4025, i32 41 }
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 887, i32 2 }
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 898, i32 16 }
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 59, i32 4 }
@___asan_gen_.301 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.301, i32 174, i32 2 }
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1846, i32 40 }
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1899, i32 4 }
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 1917, i32 3 }
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2370, i32 11 }
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2377, i32 11 }
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2383, i32 11 }
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2555, i32 10 }
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 2645, i32 11 }
@___asan_gen_.336 = private unnamed_addr constant [10 x i8] c"audio_idx\00", align 1
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3207, i32 19 }
@___asan_gen_.347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3216, i32 3 }
@___asan_gen_.348 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.352 = private constant [29 x i8] c"../sound/pci/hda/hda_codec.c\00", align 1
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.352, i32 3237, i32 2 }
@llvm.compiler.used = appending global [183 x ptr] [ptr @__UNIQUE_ID_description246, ptr @__UNIQUE_ID_file247, ptr @__UNIQUE_ID_license248, ptr @__ksymtab___snd_hda_add_vmaster, ptr @__ksymtab___snd_hda_codec_cleanup_stream, ptr @__ksymtab__snd_hda_set_pin_ctl, ptr @__ksymtab_query_amp_caps, ptr @__ksymtab_snd_hda_add_imux_item, ptr @__ksymtab_snd_hda_add_new_ctls, ptr @__ksymtab_snd_hda_add_nid, ptr @__ksymtab_snd_hda_add_vmaster_hook, ptr @__ksymtab_snd_hda_check_amp_caps, ptr @__ksymtab_snd_hda_check_amp_list_power, ptr @__ksymtab_snd_hda_codec_amp_init, ptr @__ksymtab_snd_hda_codec_amp_init_stereo, ptr @__ksymtab_snd_hda_codec_amp_stereo, ptr @__ksymtab_snd_hda_codec_amp_update, ptr @__ksymtab_snd_hda_codec_build_controls, ptr @__ksymtab_snd_hda_codec_cleanup, ptr @__ksymtab_snd_hda_codec_cleanup_for_unbind, ptr @__ksymtab_snd_hda_codec_device_new, ptr @__ksymtab_snd_hda_codec_eapd_power_filter, ptr @__ksymtab_snd_hda_codec_get_pin_target, ptr @__ksymtab_snd_hda_codec_get_pincfg, ptr @__ksymtab_snd_hda_codec_new, ptr @__ksymtab_snd_hda_codec_parse_pcms, ptr @__ksymtab_snd_hda_codec_pcm_new, ptr @__ksymtab_snd_hda_codec_pcm_put, ptr @__ksymtab_snd_hda_codec_prepare, ptr @__ksymtab_snd_hda_codec_set_pin_target, ptr @__ksymtab_snd_hda_codec_set_pincfg, ptr @__ksymtab_snd_hda_codec_set_power_to_all, ptr @__ksymtab_snd_hda_codec_setup_stream, ptr @__ksymtab_snd_hda_codec_update_widgets, ptr @__ksymtab_snd_hda_correct_pin_ctl, ptr @__ksymtab_snd_hda_create_dig_out_ctls, ptr @__ksymtab_snd_hda_create_spdif_in_ctls, ptr @__ksymtab_snd_hda_create_spdif_share_sw, ptr @__ksymtab_snd_hda_ctl_add, ptr @__ksymtab_snd_hda_enum_helper_info, ptr @__ksymtab_snd_hda_find_mixer_ctl, ptr @__ksymtab_snd_hda_get_conn_index, ptr @__ksymtab_snd_hda_get_conn_list, ptr @__ksymtab_snd_hda_get_connections, ptr @__ksymtab_snd_hda_get_default_vref, ptr @__ksymtab_snd_hda_get_dev_select, ptr @__ksymtab_snd_hda_get_num_devices, ptr @__ksymtab_snd_hda_input_mux_info, ptr @__ksymtab_snd_hda_input_mux_put, ptr @__ksymtab_snd_hda_lock_devices, ptr @__ksymtab_snd_hda_mixer_amp_switch_get, ptr @__ksymtab_snd_hda_mixer_amp_switch_info, ptr @__ksymtab_snd_hda_mixer_amp_switch_put, ptr @__ksymtab_snd_hda_mixer_amp_tlv, ptr @__ksymtab_snd_hda_mixer_amp_volume_get, ptr @__ksymtab_snd_hda_mixer_amp_volume_info, ptr @__ksymtab_snd_hda_mixer_amp_volume_put, ptr @__ksymtab_snd_hda_multi_out_analog_cleanup, ptr @__ksymtab_snd_hda_multi_out_analog_open, ptr @__ksymtab_snd_hda_multi_out_analog_prepare, ptr @__ksymtab_snd_hda_multi_out_dig_cleanup, ptr @__ksymtab_snd_hda_multi_out_dig_close, ptr @__ksymtab_snd_hda_multi_out_dig_open, ptr @__ksymtab_snd_hda_multi_out_dig_prepare, ptr @__ksymtab_snd_hda_override_amp_caps, ptr @__ksymtab_snd_hda_override_conn_list, ptr @__ksymtab_snd_hda_sequence_write, ptr @__ksymtab_snd_hda_set_dev_select, ptr @__ksymtab_snd_hda_set_power_save, ptr @__ksymtab_snd_hda_set_vmaster_tlv, ptr @__ksymtab_snd_hda_shutup_pins, ptr @__ksymtab_snd_hda_spdif_ctls_assign, ptr @__ksymtab_snd_hda_spdif_ctls_unassign, ptr @__ksymtab_snd_hda_spdif_out_of_nid, ptr @__ksymtab_snd_hda_sync_vmaster_hook, ptr @__ksymtab_snd_hda_unlock_devices, ptr @__ksymtab_snd_pcm_2_1_chmaps, ptr @__ksymtab_snd_print_pcm_bits, ptr @get_empty_pcm_device._entry, ptr @get_empty_pcm_device._entry.74, ptr @get_empty_pcm_device._entry_ptr, ptr @get_empty_pcm_device._entry_ptr.76, ptr @init_follower_0dB._entry, ptr @init_follower_0dB._entry.64, ptr @init_follower_0dB._entry_ptr, ptr @init_follower_0dB._entry_ptr.66, ptr @snd_hda_add_imux_item._entry, ptr @snd_hda_add_imux_item._entry_ptr, ptr @snd_hda_add_nid._entry, ptr @snd_hda_add_nid._entry_ptr, ptr @snd_hda_codec_build_pcms._entry, ptr @snd_hda_codec_build_pcms._entry_ptr, ptr @snd_hda_codec_parse_pcms._entry, ptr @snd_hda_codec_parse_pcms._entry.43, ptr @snd_hda_codec_parse_pcms._entry_ptr, ptr @snd_hda_codec_parse_pcms._entry_ptr.45, ptr @snd_hda_create_dig_out_ctls._entry, ptr @snd_hda_create_dig_out_ctls._entry_ptr, ptr @snd_hda_create_spdif_in_ctls._entry, ptr @snd_hda_create_spdif_in_ctls._entry_ptr, ptr @snd_hda_get_connections._entry, ptr @snd_hda_get_connections._entry_ptr, ptr @snd_hda_mixer_amp_volume_info._entry, ptr @snd_hda_mixer_amp_volume_info._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @snd_hda_codec_device_new.dev_ops, ptr @.str.8, ptr @.str.9, ptr @snd_hda_codec_device_new.__key, ptr @.str.10, ptr @snd_hda_codec_device_new.__key.11, ptr @.str.12, ptr @snd_hda_codec_device_new.__key.13, ptr @.str.14, ptr @snd_hda_codec_device_new.__key.15, ptr @.str.16, ptr @snd_hda_codec_device_new.__key.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @dig_mixes, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @spdif_share_sw, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @dig_in_ctls, ptr @hda_codec_driver_pm, ptr @snd_pcm_2_1_chmaps, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @snd_hda_pcm_type_name, ptr @.str.41, ptr @.str.42, ptr @.str.44, ptr @.str.46, ptr @.str.47, ptr @snd_hda_enum_helper_info.texts_default, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.65, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @get_empty_pcm_device.audio_idx, ptr @.str.72, ptr @.str.73, ptr @.str.75], section "llvm.metadata"
@0 = internal global [92 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.80 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_get_connections._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_device_new.dev_ops to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.105 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_device_new.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_device_new.__key.11 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_device_new.__key.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_device_new.__key.15 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_device_new.__key.17 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_mixer_amp_volume_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_add_nid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dig_mixes to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_create_dig_out_ctls._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spdif_share_sw to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_create_spdif_in_ctls._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dig_in_ctls to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hda_codec_driver_pm to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_pcm_2_1_chmaps to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_pcm_type_name to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_parse_pcms._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_parse_pcms._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_codec_build_pcms._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_enum_helper_info.texts_default to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_add_imux_item._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_follower_0dB._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_follower_0dB._entry.64 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_empty_pcm_device.audio_idx to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_empty_pcm_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_empty_pcm_device._entry.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_sequence_write(ptr noundef %codec, ptr nocapture noundef readonly %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %seq to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %seq, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not6 = icmp eq i16 %1, 0
  br i1 %tobool.not6, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %2 = phi i16 [ %8, %for.body.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %seq.addr.07 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %seq, %entry.for.body_crit_edge ]
  %verb = getelementptr inbounds %struct.hda_verb, ptr %seq.addr.07, i32 0, i32 1
  %3 = ptrtoint ptr %verb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %verb, align 4
  %param = getelementptr inbounds %struct.hda_verb, ptr %seq.addr.07, i32 0, i32 2
  %5 = ptrtoint ptr %param to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %param, align 4
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %2, i32 noundef 0, i32 noundef %4, i32 noundef %6) #21
  %incdec.ptr = getelementptr %struct.hda_verb, ptr %seq.addr.07, i32 1
  %7 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %incdec.ptr, align 4
  %tobool.not = icmp eq i16 %8, 0
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_conn_list(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef writeonly %listp) #0 align 64 {
entry:
  %list.i = alloca [32 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conn_list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 17
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %p.0.in.i = phi ptr [ %conn_list.i, %entry ], [ %p.0.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %p.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %p.0.i = load ptr, ptr %p.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %p.0.i, %conn_list.i
  br i1 %cmp.not.i, label %for.cond.i.if.end28_crit_edge, label %for.body.i

for.cond.i.if.end28_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

for.body.i:                                       ; preds = %for.cond.i
  %nid2.i = getelementptr inbounds %struct.hda_conn_list, ptr %p.0.i, i32 0, i32 2
  %1 = ptrtoint ptr %nid2.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %nid2.i, align 4
  %cmp4.i = icmp eq i16 %2, %nid
  br i1 %cmp4.i, label %lookup_conn_list.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

lookup_conn_list.exit:                            ; preds = %for.body.i
  %tobool.not = icmp eq ptr %p.0.i, null
  br i1 %tobool.not, label %lookup_conn_list.exit.if.end28_crit_edge, label %lookup_conn_list.exit.if.then_crit_edge

lookup_conn_list.exit.if.then_crit_edge:          ; preds = %lookup_conn_list.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

lookup_conn_list.exit.if.end28_crit_edge:         ; preds = %lookup_conn_list.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.then:                                          ; preds = %lookup_conn_list.exit.1.if.then_crit_edge, %lookup_conn_list.exit.if.then_crit_edge
  %p.0.i.lcssa66.lcssa = phi ptr [ %p.0.i, %lookup_conn_list.exit.if.then_crit_edge ], [ %p.0.i.1, %lookup_conn_list.exit.1.if.then_crit_edge ]
  %tobool1.not = icmp eq ptr %listp, null
  br i1 %tobool1.not, label %if.then.if.end_crit_edge, label %if.then2

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %conns = getelementptr inbounds %struct.hda_conn_list, ptr %p.0.i.lcssa66.lcssa, i32 0, i32 3
  %3 = ptrtoint ptr %listp to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %conns, ptr %listp, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  %len = getelementptr inbounds %struct.hda_conn_list, ptr %p.0.i.lcssa66.lcssa, i32 0, i32 1
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  br label %cleanup33

if.end28:                                         ; preds = %lookup_conn_list.exit.if.end28_crit_edge, %for.cond.i.if.end28_crit_edge
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %list.i) #21
  %6 = call ptr @memset(ptr %list.i, i32 255, i32 64)
  %call.i = call i32 @snd_hdac_get_connections(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef nonnull %list.i, i32 noundef 32) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %call.i)
  %cmp.i = icmp eq i32 %call.i, -28
  br i1 %cmp.i, label %if.then.i, label %if.end28.if.end8.i_crit_edge

if.end28.if.end8.i_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i

if.then.i:                                        ; preds = %if.end28
  %call3.i = call i32 @snd_hdac_get_connections(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef null, i32 noundef 0) #21
  %7 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %call3.i, i32 2) #21
  %8 = extractvalue { i32, i1 } %7, 1
  br i1 %8, label %if.then.i.cleanup.thread53_crit_edge, label %if.end7.i.i, !prof !338

if.then.i.cleanup.thread53_crit_edge:             ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.thread53

if.end7.i.i:                                      ; preds = %if.then.i
  %9 = extractvalue { i32, i1 } %7, 0
  %call8.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %9, i32 noundef 3264) #24
  %tobool.not.i = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not.i, label %if.end7.i.i.cleanup.thread53_crit_edge, label %if.end.i

if.end7.i.i.cleanup.thread53_crit_edge:           ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.thread53

if.end.i:                                         ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %call7.i = call i32 @snd_hdac_get_connections(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef nonnull %call8.i.i, i32 noundef %call3.i) #21
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.end.i, %if.end28.if.end8.i_crit_edge
  %result.0.i = phi ptr [ %call8.i.i, %if.end.i ], [ %list.i, %if.end28.if.end8.i_crit_edge ]
  %len.0.i = phi i32 [ %call7.i, %if.end.i ], [ %call.i, %if.end28.if.end8.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %len.0.i)
  %cmp9.i = icmp sgt i32 %len.0.i, -1
  br i1 %cmp9.i, label %if.then10.i, label %if.end8.i.if.end12.i_crit_edge

if.end8.i.if.end12.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12.i

if.then10.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  %call11.i = call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %len.0.i, ptr noundef nonnull %result.0.i) #21
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then10.i, %if.end8.i.if.end12.i_crit_edge
  %len.1.i = phi i32 [ %call11.i, %if.then10.i ], [ %len.0.i, %if.end8.i.if.end12.i_crit_edge ]
  %cmp14.not.i = icmp eq ptr %result.0.i, %list.i
  br i1 %cmp14.not.i, label %if.end12.i.cleanup_crit_edge, label %if.then15.i

if.end12.i.cleanup_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then15.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @kfree(ptr noundef nonnull %result.0.i) #21
  br label %cleanup

cleanup.thread53:                                 ; preds = %if.end7.i.i.cleanup.thread53_crit_edge, %if.then.i.cleanup.thread53_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %list.i) #21
  br label %cleanup33

cleanup:                                          ; preds = %if.then15.i, %if.end12.i.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %list.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.1.i)
  %cmp = icmp slt i32 %len.1.i, 0
  br i1 %cmp, label %cleanup.cleanup33_crit_edge, label %cleanup.for.cond.i.1_crit_edge

cleanup.for.cond.i.1_crit_edge:                   ; preds = %cleanup
  br label %for.cond.i.1

cleanup.cleanup33_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup33

for.cond.i.1:                                     ; preds = %for.body.i.1.for.cond.i.1_crit_edge, %cleanup.for.cond.i.1_crit_edge
  %p.0.in.i.1 = phi ptr [ %p.0.i.1, %for.body.i.1.for.cond.i.1_crit_edge ], [ %conn_list.i, %cleanup.for.cond.i.1_crit_edge ]
  %10 = ptrtoint ptr %p.0.in.i.1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %p.0.i.1 = load ptr, ptr %p.0.in.i.1, align 4
  %cmp.not.i.1 = icmp eq ptr %p.0.i.1, %conn_list.i
  br i1 %cmp.not.i.1, label %for.cond.i.1.if.end3.1_crit_edge, label %for.body.i.1

for.cond.i.1.if.end3.1_crit_edge:                 ; preds = %for.cond.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3.1

for.body.i.1:                                     ; preds = %for.cond.i.1
  %nid2.i.1 = getelementptr inbounds %struct.hda_conn_list, ptr %p.0.i.1, i32 0, i32 2
  %11 = ptrtoint ptr %nid2.i.1 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %nid2.i.1, align 4
  %cmp4.i.1 = icmp eq i16 %12, %nid
  br i1 %cmp4.i.1, label %lookup_conn_list.exit.1, label %for.body.i.1.for.cond.i.1_crit_edge

for.body.i.1.for.cond.i.1_crit_edge:              ; preds = %for.body.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i.1

lookup_conn_list.exit.1:                          ; preds = %for.body.i.1
  %tobool.not.1 = icmp eq ptr %p.0.i.1, null
  br i1 %tobool.not.1, label %lookup_conn_list.exit.1.if.end3.1_crit_edge, label %lookup_conn_list.exit.1.if.then_crit_edge

lookup_conn_list.exit.1.if.then_crit_edge:        ; preds = %lookup_conn_list.exit.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

lookup_conn_list.exit.1.if.end3.1_crit_edge:      ; preds = %lookup_conn_list.exit.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3.1

if.end3.1:                                        ; preds = %lookup_conn_list.exit.1.if.end3.1_crit_edge, %for.cond.i.1.if.end3.1_crit_edge
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 184, i32 noundef 9, ptr noundef null) #21
  br label %cleanup33

cleanup33:                                        ; preds = %if.end3.1, %cleanup.cleanup33_crit_edge, %cleanup.thread53, %if.end
  %retval.151 = phi i32 [ -12, %cleanup.thread53 ], [ -22, %if.end3.1 ], [ %5, %if.end ], [ %len.1.i, %cleanup.cleanup33_crit_edge ]
  ret i32 %retval.151
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_connections(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef writeonly %conn_list, i32 noundef %max_conns) #0 align 64 {
entry:
  %list = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %list) #21
  %0 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %list, align 4, !annotation !339
  %call = call i32 @snd_hda_get_conn_list(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef nonnull %list)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp = icmp slt i32 %call, 1
  %tobool.not = icmp eq ptr %conn_list, null
  %or.cond = or i1 %tobool.not, %cmp
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %call, i32 %max_conns)
  %cmp1 = icmp sgt i32 %call, %max_conns
  br i1 %cmp1, label %do.end, label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %conv = zext i16 %nid to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.1, i32 noundef %call, i32 noundef %conv) #25
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %1 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %list, align 4
  %mul = shl nuw i32 %call, 1
  %3 = call ptr @memcpy(ptr %conn_list, ptr %2, i32 %mul)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ %call, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %list) #21
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %len, ptr nocapture noundef readonly %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conn_list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 17
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %p.0.in.i = phi ptr [ %conn_list.i, %entry ], [ %p.0.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %p.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %p.0.i = load ptr, ptr %p.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %p.0.i, %conn_list.i
  br i1 %cmp.not.i, label %for.cond.i.if.end8.i.i_crit_edge, label %for.body.i

for.cond.i.if.end8.i.i_crit_edge:                 ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i.i

for.body.i:                                       ; preds = %for.cond.i
  %nid2.i = getelementptr inbounds %struct.hda_conn_list, ptr %p.0.i, i32 0, i32 2
  %1 = ptrtoint ptr %nid2.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %nid2.i, align 4
  %cmp4.i = icmp eq i16 %2, %nid
  br i1 %cmp4.i, label %lookup_conn_list.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

lookup_conn_list.exit:                            ; preds = %for.body.i
  %tobool.not = icmp eq ptr %p.0.i, null
  br i1 %tobool.not, label %lookup_conn_list.exit.if.end8.i.i_crit_edge, label %if.then

lookup_conn_list.exit.if.end8.i.i_crit_edge:      ; preds = %lookup_conn_list.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i.i

if.then:                                          ; preds = %lookup_conn_list.exit
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %p.0.i) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %p.0.i, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %p.0.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %p.0.i, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %9 = ptrtoint ptr %p.0.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %p.0.i, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %p.0.i, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef nonnull %p.0.i) #21
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %list_del.exit, %lookup_conn_list.exit.if.end8.i.i_crit_edge, %for.cond.i.if.end8.i.i_crit_edge
  %11 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %len, i32 2) #21
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %spec.select.i.i = tail call i32 @llvm.uadd.sat.i32(i32 %13, i32 16) #21
  %retval.0.i.i = select i1 %12, i32 -1, i32 %spec.select.i.i
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %retval.0.i.i, i32 noundef 3264) #24
  %tobool.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i, label %if.end8.i.i.add_conn_list.exit_crit_edge, label %if.end.i

if.end8.i.i.add_conn_list.exit_crit_edge:         ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %add_conn_list.exit

if.end.i:                                         ; preds = %if.end8.i.i
  %len2.i = getelementptr inbounds %struct.hda_conn_list, ptr %call9.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %len2.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %len, ptr %len2.i, align 8
  %nid3.i = getelementptr inbounds %struct.hda_conn_list, ptr %call9.i.i, i32 0, i32 2
  %15 = ptrtoint ptr %nid3.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %nid, ptr %nid3.i, align 4
  %conns.i = getelementptr inbounds %struct.hda_conn_list, ptr %call9.i.i, i32 0, i32 3
  %mul.i = shl i32 %len, 1
  %16 = call ptr @memcpy(ptr %conns.i, ptr %list, i32 %mul.i)
  %17 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %conn_list.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call9.i.i, ptr noundef %conn_list.i, ptr noundef %18) #21
  br i1 %call.i.i.i, label %if.end.i.i11.i, label %if.end.i.add_conn_list.exit_crit_edge

if.end.i.add_conn_list.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %add_conn_list.exit

if.end.i.i11.i:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i.i8 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i8 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call9.i.i, ptr %prev1.i.i.i8, align 4
  %20 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %18, ptr %call9.i.i, align 128
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %call9.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %conn_list.i, ptr %prev3.i.i.i, align 4
  %22 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %call9.i.i, ptr %conn_list.i, align 4
  br label %add_conn_list.exit

add_conn_list.exit:                               ; preds = %if.end.i.i11.i, %if.end.i.add_conn_list.exit_crit_edge, %if.end8.i.i.add_conn_list.exit_crit_edge
  %retval.0.i9 = phi i32 [ -12, %if.end8.i.i.add_conn_list.exit_crit_edge ], [ 0, %if.end.i.add_conn_list.exit_crit_edge ], [ 0, %if.end.i.i11.i ]
  ret i32 %retval.0.i9
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_conn_index(ptr noundef %codec, i16 noundef zeroext %mux, i16 noundef zeroext %nid, i32 noundef %recursive) #0 align 64 {
entry:
  %conn = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %conn) #21
  %0 = ptrtoint ptr %conn to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %conn, align 4, !annotation !339
  %call = call i32 @snd_hda_get_conn_list(ptr noundef %codec, i16 noundef zeroext %mux, ptr noundef nonnull %conn)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp73 = icmp sgt i32 %call, 0
  br i1 %cmp73, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %1 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %conn, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.074 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr i16, ptr %2, i32 %i.074
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %arrayidx, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %4, i16 %nid)
  %cmp2 = icmp eq i16 %4, %nid
  br i1 %cmp2, label %for.body.cleanup40_crit_edge, label %for.inc

for.body.cleanup40_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup40

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.074, 1
  %exitcond.not = icmp eq i32 %inc, %call
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %recursive)
  %tobool.not = icmp eq i32 %recursive, 0
  br i1 %tobool.not, label %for.end.cleanup40_crit_edge, label %if.end5

for.end.cleanup40_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup40

if.end5:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %recursive)
  %cmp6 = icmp sgt i32 %recursive, 10
  br i1 %cmp6, label %do.body, label %if.end16

do.body:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_hda_get_conn_index.__UNIQUE_ID_ddebug240, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_hda_get_conn_index, %if.then13)) #21
          to label %cleanup40 [label %if.then13], !srcloc !340

if.then13:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %conv14 = zext i16 %nid to i32
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_hda_get_conn_index.__UNIQUE_ID_ddebug240, ptr noundef %codec, ptr noundef nonnull @.str.7, i32 noundef %conv14) #21
  br label %cleanup40

if.end16:                                         ; preds = %if.end5
  %inc17 = add nsw i32 %recursive, 1
  br i1 %cmp73, label %for.body21.lr.ph, label %if.end16.cleanup40_crit_edge

if.end16.cleanup40_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup40

for.body21.lr.ph:                                 ; preds = %if.end16
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body21

for.body21:                                       ; preds = %for.inc37.for.body21_crit_edge, %for.body21.lr.ph
  %i.176 = phi i32 [ 0, %for.body21.lr.ph ], [ %inc38, %for.inc37.for.body21_crit_edge ]
  %5 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %conn, align 4
  %arrayidx22 = getelementptr i16, ptr %6, i32 %i.176
  %7 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx22, align 2
  %conv.i = zext i16 %8 to i32
  %9 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %10 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %10, i16 %8)
  %cmp.i = icmp ugt i16 %10, %8
  br i1 %cmp.i, label %for.body21.if.end30_crit_edge, label %lor.lhs.false.i

for.body21.if.end30_crit_edge:                    ; preds = %for.body21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

lor.lhs.false.i:                                  ; preds = %for.body21
  %11 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %12, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp8.not.i, label %get_wcaps.exit, label %lor.lhs.false.i.if.end30_crit_edge

lor.lhs.false.i.if.end30_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

get_wcaps.exit:                                   ; preds = %lor.lhs.false.i
  %13 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %14, i32 %sub.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i, label %get_wcaps.exit.if.end30_crit_edge, label %17

get_wcaps.exit.if.end30_crit_edge:                ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

17:                                               ; preds = %get_wcaps.exit
  %and.i = lshr i32 %16, 20
  %shr.i = and i32 %and.i, 15
  %18 = zext i32 %shr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values)
  switch i32 %shr.i, label %.if.end30_crit_edge [
    i32 4, label %.for.inc37_crit_edge
    i32 0, label %.for.inc37_crit_edge89
  ]

.for.inc37_crit_edge89:                           ; preds = %17
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc37

.for.inc37_crit_edge:                             ; preds = %17
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc37

.if.end30_crit_edge:                              ; preds = %17
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

if.end30:                                         ; preds = %.if.end30_crit_edge, %get_wcaps.exit.if.end30_crit_edge, %lor.lhs.false.i.if.end30_crit_edge, %for.body21.if.end30_crit_edge
  %call32 = call i32 @snd_hda_get_conn_index(ptr noundef %codec, i16 noundef zeroext %8, i16 noundef zeroext %nid, i32 noundef %inc17)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call32)
  %cmp33 = icmp sgt i32 %call32, -1
  br i1 %cmp33, label %if.end30.cleanup40_crit_edge, label %if.end30.for.inc37_crit_edge

if.end30.for.inc37_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc37

if.end30.cleanup40_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup40

for.inc37:                                        ; preds = %if.end30.for.inc37_crit_edge, %.for.inc37_crit_edge, %.for.inc37_crit_edge89
  %inc38 = add nuw nsw i32 %i.176, 1
  %exitcond81.not = icmp eq i32 %inc38, %call
  br i1 %exitcond81.not, label %for.inc37.cleanup40_crit_edge, label %for.inc37.for.body21_crit_edge

for.inc37.for.body21_crit_edge:                   ; preds = %for.inc37
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body21

for.inc37.cleanup40_crit_edge:                    ; preds = %for.inc37
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup40

cleanup40:                                        ; preds = %for.inc37.cleanup40_crit_edge, %if.end30.cleanup40_crit_edge, %if.end16.cleanup40_crit_edge, %if.then13, %do.body, %for.end.cleanup40_crit_edge, %for.body.cleanup40_crit_edge
  %retval.2 = phi i32 [ -1, %for.end.cleanup40_crit_edge ], [ -1, %if.then13 ], [ -1, %do.body ], [ -1, %if.end16.cleanup40_crit_edge ], [ -1, %for.inc37.cleanup40_crit_edge ], [ %i.176, %if.end30.cleanup40_crit_edge ], [ %i.074, %for.body.cleanup40_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %conn) #21
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_num_devices(ptr noundef %codec, i16 noundef zeroext %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv.i = zext i16 %nid to i32
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i, label %entry.get_wcaps.exit_crit_edge, label %lor.lhs.false.i

entry.get_wcaps.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit

lor.lhs.false.i:                                  ; preds = %entry
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %3, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp8.not.i, label %if.end.i, label %lor.lhs.false.i.get_wcaps.exit_crit_edge

lor.lhs.false.i.get_wcaps.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %5, i32 %sub.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  br label %get_wcaps.exit

get_wcaps.exit:                                   ; preds = %if.end.i, %lor.lhs.false.i.get_wcaps.exit_crit_edge, %entry.get_wcaps.exit_crit_edge
  %retval.0.i = phi i32 [ %7, %if.end.i ], [ 0, %lor.lhs.false.i.get_wcaps.exit_crit_edge ], [ 0, %entry.get_wcaps.exit_crit_edge ]
  %dp_mst = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %8 = ptrtoint ptr %dp_mst to i32
  call void @__asan_load4_noabort(i32 %8)
  %bf.load = load i32, ptr %dp_mst, align 4
  %9 = and i32 %bf.load, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp ne i32 %9, 0
  %and = and i32 %retval.0.i, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp ne i32 %and, 0
  %or.cond = select i1 %tobool.not, i1 %tobool1.not, i1 false
  %10 = and i32 %retval.0.i, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %10)
  %cmp.not = icmp eq i32 %10, 4194304
  %or.cond16 = select i1 %or.cond, i1 %cmp.not, i1 false
  br i1 %or.cond16, label %if.end, label %get_wcaps.exit.cleanup_crit_edge

get_wcaps.exit.cleanup_crit_edge:                 ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call4 = tail call i32 @snd_hdac_read_parm_uncached(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 21) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call4)
  %cmp5 = icmp eq i32 %call4, -1
  %call4.op = and i32 %call4, 63
  %and8 = select i1 %cmp5, i32 0, i32 %call4.op
  br label %cleanup

cleanup:                                          ; preds = %if.end, %get_wcaps.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %and8, %if.end ], [ 0, %get_wcaps.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_read_parm_uncached(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_devices(ptr noundef %codec, i16 noundef zeroext %nid, ptr nocapture noundef writeonly %dev_list, i32 noundef %max_devices) local_unnamed_addr #0 align 64 {
entry:
  %parm = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %parm) #21
  %conv.i.i = zext i16 %nid to i32
  %start_nid.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i, align 4
  %conv1.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i, label %entry.get_wcaps.exit.i_crit_edge, label %lor.lhs.false.i.i

entry.get_wcaps.exit.i_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit.i

lor.lhs.false.i.i:                                ; preds = %entry
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %3, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %conv.i.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %conv.i.i
  br i1 %cmp8.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.get_wcaps.exit.i_crit_edge

lor.lhs.false.i.i.get_wcaps.exit.i_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %conv.i.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %5, i32 %sub.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 4
  br label %get_wcaps.exit.i

get_wcaps.exit.i:                                 ; preds = %if.end.i.i, %lor.lhs.false.i.i.get_wcaps.exit.i_crit_edge, %entry.get_wcaps.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %7, %if.end.i.i ], [ 0, %lor.lhs.false.i.i.get_wcaps.exit.i_crit_edge ], [ 0, %entry.get_wcaps.exit.i_crit_edge ]
  %dp_mst.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %8 = ptrtoint ptr %dp_mst.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %bf.load.i = load i32, ptr %dp_mst.i, align 4
  %9 = and i32 %bf.load.i, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp ne i32 %9, 0
  %and.i = and i32 %retval.0.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp ne i32 %and.i, 0
  %or.cond.i = select i1 %tobool.not.i, i1 %tobool1.not.i, i1 false
  %10 = and i32 %retval.0.i.i, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %10)
  %cmp.not.i = icmp eq i32 %10, 4194304
  %or.cond16.i = select i1 %or.cond.i, i1 %cmp.not.i, i1 false
  br i1 %or.cond16.i, label %if.end.i, label %get_wcaps.exit.i.cleanup_crit_edge

get_wcaps.exit.i.cleanup_crit_edge:               ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %get_wcaps.exit.i
  %call4.i = tail call i32 @snd_hdac_read_parm_uncached(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 21) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call4.i)
  %cmp5.i = icmp eq i32 %call4.i, -1
  %call4.op.i = and i32 %call4.i, 63
  br i1 %cmp5.i, label %if.end.i.cleanup_crit_edge, label %snd_hda_get_num_devices.exit

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

snd_hda_get_num_devices.exit:                     ; preds = %if.end.i
  %11 = ptrtoint ptr %parm to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call4.op.i, ptr %parm, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.op.i)
  %tobool.not = icmp eq i32 %call4.op.i, 0
  br i1 %tobool.not, label %snd_hda_get_num_devices.exit.cleanup_crit_edge, label %if.end

snd_hda_get_num_devices.exit.cleanup_crit_edge:   ; preds = %snd_hda_get_num_devices.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %snd_hda_get_num_devices.exit
  %add = add nuw nsw i32 %call4.op.i, 1
  %12 = tail call i32 @llvm.smin.i32(i32 %add, i32 %max_devices)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_devices)
  %cmp134 = icmp sgt i32 %max_devices, 0
  br i1 %cmp134, label %if.end.while.body_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

while.body:                                       ; preds = %for.end.while.body_crit_edge, %if.end.while.body_crit_edge
  %devices.035 = phi i32 [ %inc.lcssa, %for.end.while.body_crit_edge ], [ 0, %if.end.while.body_crit_edge ]
  %call2 = call i32 @snd_hdac_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 3894, i32 noundef %devices.035, ptr noundef nonnull %parm) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %for.body, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body:                                         ; preds = %while.body
  %13 = ptrtoint ptr %parm to i32
  call void @__asan_load4_noabort(i32 %13)
  %parm.promoted = load i32, ptr %parm, align 4
  %conv = trunc i32 %parm.promoted to i8
  %arrayidx = getelementptr i8, ptr %dev_list, i32 %devices.035
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv, ptr %arrayidx, align 1
  %shr = lshr i32 %parm.promoted, 4
  %inc = add nsw i32 %devices.035, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %12)
  %cmp7.not = icmp slt i32 %inc, %12
  br i1 %cmp7.not, label %for.body.1, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.1:                                       ; preds = %for.body
  %conv.1 = trunc i32 %shr to i8
  %arrayidx.1 = getelementptr i8, ptr %dev_list, i32 %inc
  %15 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv.1, ptr %arrayidx.1, align 1
  %shr.1 = lshr i32 %parm.promoted, 8
  %inc.1 = add nsw i32 %devices.035, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.1, i32 %12)
  %cmp7.not.1 = icmp slt i32 %inc.1, %12
  br i1 %cmp7.not.1, label %for.body.2, label %for.body.1.for.end_crit_edge

for.body.1.for.end_crit_edge:                     ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.2:                                       ; preds = %for.body.1
  %conv.2 = trunc i32 %shr.1 to i8
  %arrayidx.2 = getelementptr i8, ptr %dev_list, i32 %inc.1
  %16 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv.2, ptr %arrayidx.2, align 1
  %shr.2 = lshr i32 %parm.promoted, 12
  %inc.2 = add nsw i32 %devices.035, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.2, i32 %12)
  %cmp7.not.2 = icmp slt i32 %inc.2, %12
  br i1 %cmp7.not.2, label %for.body.3, label %for.body.2.for.end_crit_edge

for.body.2.for.end_crit_edge:                     ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.3:                                       ; preds = %for.body.2
  %conv.3 = trunc i32 %shr.2 to i8
  %arrayidx.3 = getelementptr i8, ptr %dev_list, i32 %inc.2
  %17 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv.3, ptr %arrayidx.3, align 1
  %shr.3 = lshr i32 %parm.promoted, 16
  %inc.3 = add nsw i32 %devices.035, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.3, i32 %12)
  %cmp7.not.3 = icmp slt i32 %inc.3, %12
  br i1 %cmp7.not.3, label %for.body.4, label %for.body.3.for.end_crit_edge

for.body.3.for.end_crit_edge:                     ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.4:                                       ; preds = %for.body.3
  %conv.4 = trunc i32 %shr.3 to i8
  %arrayidx.4 = getelementptr i8, ptr %dev_list, i32 %inc.3
  %18 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv.4, ptr %arrayidx.4, align 1
  %shr.4 = lshr i32 %parm.promoted, 20
  %inc.4 = add nsw i32 %devices.035, 5
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.4, i32 %12)
  %cmp7.not.4 = icmp slt i32 %inc.4, %12
  br i1 %cmp7.not.4, label %for.body.5, label %for.body.4.for.end_crit_edge

for.body.4.for.end_crit_edge:                     ; preds = %for.body.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.5:                                       ; preds = %for.body.4
  %conv.5 = trunc i32 %shr.4 to i8
  %arrayidx.5 = getelementptr i8, ptr %dev_list, i32 %inc.4
  %19 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv.5, ptr %arrayidx.5, align 1
  %shr.5 = lshr i32 %parm.promoted, 24
  %inc.5 = add nsw i32 %devices.035, 6
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.5, i32 %12)
  %cmp7.not.5 = icmp slt i32 %inc.5, %12
  br i1 %cmp7.not.5, label %for.body.6, label %for.body.5.for.end_crit_edge

for.body.5.for.end_crit_edge:                     ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.6:                                       ; preds = %for.body.5
  %conv.6 = trunc i32 %shr.5 to i8
  %arrayidx.6 = getelementptr i8, ptr %dev_list, i32 %inc.5
  %20 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %conv.6, ptr %arrayidx.6, align 1
  %shr.6 = lshr i32 %parm.promoted, 28
  %inc.6 = add nsw i32 %devices.035, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.6, i32 %12)
  %cmp7.not.6 = icmp slt i32 %inc.6, %12
  br i1 %cmp7.not.6, label %for.body.7, label %for.body.6.for.end_crit_edge

for.body.6.for.end_crit_edge:                     ; preds = %for.body.6
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.7:                                       ; preds = %for.body.6
  call void @__sanitizer_cov_trace_pc() #23
  %conv.7 = trunc i32 %shr.6 to i8
  %arrayidx.7 = getelementptr i8, ptr %dev_list, i32 %inc.6
  %21 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv.7, ptr %arrayidx.7, align 1
  %inc.7 = add nsw i32 %devices.035, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.7, i32 %12)
  %cmp7.not.7 = icmp slt i32 %inc.7, %12
  br label %for.end

for.end:                                          ; preds = %for.body.7, %for.body.6.for.end_crit_edge, %for.body.5.for.end_crit_edge, %for.body.4.for.end_crit_edge, %for.body.3.for.end_crit_edge, %for.body.2.for.end_crit_edge, %for.body.1.for.end_crit_edge, %for.body.for.end_crit_edge
  %shr.lcssa = phi i32 [ %shr, %for.body.for.end_crit_edge ], [ %shr.1, %for.body.1.for.end_crit_edge ], [ %shr.2, %for.body.2.for.end_crit_edge ], [ %shr.3, %for.body.3.for.end_crit_edge ], [ %shr.4, %for.body.4.for.end_crit_edge ], [ %shr.5, %for.body.5.for.end_crit_edge ], [ %shr.6, %for.body.6.for.end_crit_edge ], [ 0, %for.body.7 ]
  %inc.lcssa = phi i32 [ %inc, %for.body.for.end_crit_edge ], [ %inc.1, %for.body.1.for.end_crit_edge ], [ %inc.2, %for.body.2.for.end_crit_edge ], [ %inc.3, %for.body.3.for.end_crit_edge ], [ %inc.4, %for.body.4.for.end_crit_edge ], [ %inc.5, %for.body.5.for.end_crit_edge ], [ %inc.6, %for.body.6.for.end_crit_edge ], [ %inc.7, %for.body.7 ]
  %cmp7.not.lcssa = phi i1 [ %cmp7.not, %for.body.for.end_crit_edge ], [ %cmp7.not.1, %for.body.1.for.end_crit_edge ], [ %cmp7.not.2, %for.body.2.for.end_crit_edge ], [ %cmp7.not.3, %for.body.3.for.end_crit_edge ], [ %cmp7.not.4, %for.body.4.for.end_crit_edge ], [ %cmp7.not.5, %for.body.5.for.end_crit_edge ], [ %cmp7.not.6, %for.body.6.for.end_crit_edge ], [ %cmp7.not.7, %for.body.7 ]
  %22 = ptrtoint ptr %parm to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %shr.lcssa, ptr %parm, align 4
  br i1 %cmp7.not.lcssa, label %for.end.while.body_crit_edge, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.end.while.body_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

cleanup:                                          ; preds = %for.end.cleanup_crit_edge, %while.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %snd_hda_get_num_devices.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %get_wcaps.exit.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %snd_hda_get_num_devices.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %get_wcaps.exit.i.cleanup_crit_edge ], [ 0, %if.end.i.cleanup_crit_edge ], [ %devices.035, %while.body.cleanup_crit_edge ], [ %inc.lcssa, %for.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %parm) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_read(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_dev_select(ptr noundef %codec, i16 noundef zeroext %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dp_mst = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %dp_mst to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %dp_mst, align 4
  %1 = and i32 %bf.load, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 3893, i32 noundef 0) #21
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_set_dev_select(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %dev_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dp_mst = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %dp_mst to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %dp_mst, align 4
  %1 = and i32 %bf.load, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv.i.i = zext i16 %nid to i32
  %start_nid.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %2 = ptrtoint ptr %start_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %start_nid.i.i, align 4
  %conv1.i.i = zext i16 %3 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %nid)
  %cmp.i.i = icmp ugt i16 %3, %nid
  br i1 %cmp.i.i, label %if.end.cleanup_crit_edge, label %lor.lhs.false.i.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.end
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %4 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %5, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %conv.i.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %conv.i.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.cleanup_crit_edge

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %6 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %conv.i.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %7, i32 %sub.i.i
  %8 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i.i, align 4
  %10 = and i32 %9, 15729152
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194816, i32 %10)
  %11 = icmp eq i32 %10, 4194816
  br i1 %11, label %if.end.i, label %get_wcaps.exit.i.cleanup_crit_edge

get_wcaps.exit.i.cleanup_crit_edge:               ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %get_wcaps.exit.i
  %call4.i = tail call i32 @snd_hdac_read_parm_uncached(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 21) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call4.i)
  %cmp5.i = icmp eq i32 %call4.i, -1
  %call4.op.i = and i32 %call4.i, 63
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.op.i)
  %cmp = icmp eq i32 %call4.op.i, 0
  %or.cond = or i1 %cmp5.i, %cmp
  br i1 %or.cond, label %if.end.i.cleanup_crit_edge, label %if.end2

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end2:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_cmp4(i32 %call4.op.i, i32 %dev_id)
  %cmp3.not.not = icmp slt i32 %call4.op.i, %dev_id
  br i1 %cmp3.not.not, label %if.end2.cleanup_crit_edge, label %if.end5

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 1845, i32 noundef %dev_id) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end2.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %get_wcaps.exit.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.end5 ], [ 0, %entry.cleanup_crit_edge ], [ -22, %if.end2.cleanup_crit_edge ], [ 0, %get_wcaps.exit.i.cleanup_crit_edge ], [ 0, %lor.lhs.false.i.i.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_add_pincfg(ptr nocapture readnone %codec, ptr noundef %list, i16 noundef zeroext %nid, i32 noundef %cfg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %list.i = getelementptr inbounds %struct.snd_array, ptr %list, i32 0, i32 4
  %0 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i, align 4
  %2 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %list, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.not.i = icmp eq i32 %3, 0
  br i1 %cmp1.not.i, label %entry.if.then_crit_edge, label %for.body.lr.ph.i

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

for.body.lr.ph.i:                                 ; preds = %entry
  %elem_size.i.i = getelementptr inbounds %struct.snd_array, ptr %list, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %pin.02.i = phi ptr [ %1, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %pin.02.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pin.02.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp3.i = icmp eq i16 %5, %nid
  br i1 %cmp3.i, label %look_up_pincfg.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.03.i, 1
  %6 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %7, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %3
  br i1 %exitcond.not.i, label %for.inc.i.if.then_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.if.then_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

look_up_pincfg.exit:                              ; preds = %for.body.i
  %tobool.not = icmp eq ptr %pin.02.i, null
  br i1 %tobool.not, label %look_up_pincfg.exit.if.then_crit_edge, label %look_up_pincfg.exit.if.end5_crit_edge

look_up_pincfg.exit.if.end5_crit_edge:            ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

look_up_pincfg.exit.if.then_crit_edge:            ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.then:                                          ; preds = %look_up_pincfg.exit.if.then_crit_edge, %for.inc.i.if.then_crit_edge, %entry.if.then_crit_edge
  %call1 = tail call ptr @snd_array_new(ptr noundef %list) #21
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %call1 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %nid, ptr %call1, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.end, %look_up_pincfg.exit.if.end5_crit_edge
  %pin.0 = phi ptr [ %pin.02.i, %look_up_pincfg.exit.if.end5_crit_edge ], [ %call1, %if.end ]
  %cfg6 = getelementptr inbounds %struct.hda_pincfg, ptr %pin.0, i32 0, i32 3
  %9 = ptrtoint ptr %cfg6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %cfg, ptr %cfg6, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -12, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_array_new(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_set_pincfg(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %cfg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24
  %list.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24, i32 4
  %0 = ptrtoint ptr %list.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i.i, align 4
  %2 = ptrtoint ptr %driver_pins to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %driver_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp1.not.i.i, label %entry.if.then.i_crit_edge, label %for.body.lr.ph.i.i

entry.if.then.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

for.body.lr.ph.i.i:                               ; preds = %entry
  %elem_size.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24, i32 2
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.03.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %pin.02.i.i = phi ptr [ %1, %for.body.lr.ph.i.i ], [ %add.ptr.i.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %4 = ptrtoint ptr %pin.02.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pin.02.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp3.i.i = icmp eq i16 %5, %nid
  br i1 %cmp3.i.i, label %look_up_pincfg.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw i32 %i.03.i.i, 1
  %6 = ptrtoint ptr %elem_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i.i, align 4
  %mul.i.i.i = mul i32 %7, %inc.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %1, i32 %mul.i.i.i
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %3
  br i1 %exitcond.not.i.i, label %for.inc.i.i.if.then.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.inc.i.i.if.then.i_crit_edge:                  ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

look_up_pincfg.exit.i:                            ; preds = %for.body.i.i
  %tobool.not.i = icmp eq ptr %pin.02.i.i, null
  br i1 %tobool.not.i, label %look_up_pincfg.exit.i.if.then.i_crit_edge, label %look_up_pincfg.exit.i.if.end5.i_crit_edge

look_up_pincfg.exit.i.if.end5.i_crit_edge:        ; preds = %look_up_pincfg.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

look_up_pincfg.exit.i.if.then.i_crit_edge:        ; preds = %look_up_pincfg.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.then.i:                                        ; preds = %look_up_pincfg.exit.i.if.then.i_crit_edge, %for.inc.i.i.if.then.i_crit_edge, %entry.if.then.i_crit_edge
  %call1.i = tail call ptr @snd_array_new(ptr noundef %driver_pins) #21
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %if.then.i.snd_hda_add_pincfg.exit_crit_edge, label %if.end.i

if.then.i.snd_hda_add_pincfg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_add_pincfg.exit

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %call1.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %nid, ptr %call1.i, align 4
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i, %look_up_pincfg.exit.i.if.end5.i_crit_edge
  %pin.0.i = phi ptr [ %pin.02.i.i, %look_up_pincfg.exit.i.if.end5.i_crit_edge ], [ %call1.i, %if.end.i ]
  %cfg6.i = getelementptr inbounds %struct.hda_pincfg, ptr %pin.0.i, i32 0, i32 3
  %9 = ptrtoint ptr %cfg6.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %cfg, ptr %cfg6.i, align 4
  br label %snd_hda_add_pincfg.exit

snd_hda_add_pincfg.exit:                          ; preds = %if.end5.i, %if.then.i.snd_hda_add_pincfg.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end5.i ], [ -12, %if.then.i.snd_hda_add_pincfg.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %user_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %user_mutex, i32 noundef 0) #21
  %user_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 29
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 29, i32 4
  %0 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i, align 4
  %2 = ptrtoint ptr %user_pins to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %user_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.not.i = icmp eq i32 %3, 0
  br i1 %cmp1.not.i, label %entry.if.end.thread_crit_edge, label %for.body.lr.ph.i

entry.if.end.thread_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.thread

for.body.lr.ph.i:                                 ; preds = %entry
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 29, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %pin.02.i = phi ptr [ %1, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %pin.02.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pin.02.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp3.i = icmp eq i16 %5, %nid
  br i1 %cmp3.i, label %look_up_pincfg.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.03.i, 1
  %6 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %7, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %3
  br i1 %exitcond.not.i, label %for.inc.i.if.end.thread_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.if.end.thread_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.thread

look_up_pincfg.exit:                              ; preds = %for.body.i
  %tobool.not = icmp eq ptr %pin.02.i, null
  br i1 %tobool.not, label %look_up_pincfg.exit.if.end.thread_crit_edge, label %if.end

look_up_pincfg.exit.if.end.thread_crit_edge:      ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.thread

if.end.thread:                                    ; preds = %look_up_pincfg.exit.if.end.thread_crit_edge, %for.inc.i.if.end.thread_crit_edge, %entry.if.end.thread_crit_edge
  tail call void @mutex_unlock(ptr noundef %user_mutex) #21
  br label %cleanup.cont

if.end:                                           ; preds = %look_up_pincfg.exit
  %cfg1 = getelementptr inbounds %struct.hda_pincfg, ptr %pin.02.i, i32 0, i32 3
  %8 = ptrtoint ptr %cfg1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cfg1, align 4
  tail call void @mutex_unlock(ptr noundef %user_mutex) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool3.not = icmp eq i32 %9, 0
  br i1 %tobool3.not, label %if.end.cleanup.cont_crit_edge, label %if.end.cleanup16_crit_edge

if.end.cleanup16_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

if.end.cleanup.cont_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end.cleanup.cont_crit_edge, %if.end.thread
  %driver_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24
  %list.i32 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24, i32 4
  %10 = ptrtoint ptr %list.i32 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %list.i32, align 4
  %12 = ptrtoint ptr %driver_pins to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %driver_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp1.not.i33 = icmp eq i32 %13, 0
  br i1 %cmp1.not.i33, label %cleanup.cont.if.end10_crit_edge, label %for.body.lr.ph.i35

cleanup.cont.if.end10_crit_edge:                  ; preds = %cleanup.cont
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

for.body.lr.ph.i35:                               ; preds = %cleanup.cont
  %elem_size.i.i34 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24, i32 2
  br label %for.body.i39

for.body.i39:                                     ; preds = %for.inc.i44.for.body.i39_crit_edge, %for.body.lr.ph.i35
  %i.03.i36 = phi i32 [ 0, %for.body.lr.ph.i35 ], [ %inc.i40, %for.inc.i44.for.body.i39_crit_edge ]
  %pin.02.i37 = phi ptr [ %11, %for.body.lr.ph.i35 ], [ %add.ptr.i.i42, %for.inc.i44.for.body.i39_crit_edge ]
  %14 = ptrtoint ptr %pin.02.i37 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %pin.02.i37, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %nid)
  %cmp3.i38 = icmp eq i16 %15, %nid
  br i1 %cmp3.i38, label %look_up_pincfg.exit46, label %for.inc.i44

for.inc.i44:                                      ; preds = %for.body.i39
  %inc.i40 = add nuw i32 %i.03.i36, 1
  %16 = ptrtoint ptr %elem_size.i.i34 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %elem_size.i.i34, align 4
  %mul.i.i41 = mul i32 %17, %inc.i40
  %add.ptr.i.i42 = getelementptr i8, ptr %11, i32 %mul.i.i41
  %exitcond.not.i43 = icmp eq i32 %inc.i40, %13
  br i1 %exitcond.not.i43, label %for.inc.i44.if.end10_crit_edge, label %for.inc.i44.for.body.i39_crit_edge

for.inc.i44.for.body.i39_crit_edge:               ; preds = %for.inc.i44
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i39

for.inc.i44.if.end10_crit_edge:                   ; preds = %for.inc.i44
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

look_up_pincfg.exit46:                            ; preds = %for.body.i39
  %tobool7.not = icmp eq ptr %pin.02.i37, null
  br i1 %tobool7.not, label %look_up_pincfg.exit46.if.end10_crit_edge, label %look_up_pincfg.exit46.cleanup16.sink.split_crit_edge

look_up_pincfg.exit46.cleanup16.sink.split_crit_edge: ; preds = %look_up_pincfg.exit46
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16.sink.split

look_up_pincfg.exit46.if.end10_crit_edge:         ; preds = %look_up_pincfg.exit46
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.end10:                                         ; preds = %look_up_pincfg.exit46.if.end10_crit_edge, %for.inc.i44.if.end10_crit_edge, %cleanup.cont.if.end10_crit_edge
  %init_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %list.i47 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %18 = ptrtoint ptr %list.i47 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %list.i47, align 4
  %20 = ptrtoint ptr %init_pins to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %init_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp1.not.i48 = icmp eq i32 %21, 0
  br i1 %cmp1.not.i48, label %if.end10.cleanup16_crit_edge, label %for.body.lr.ph.i50

if.end10.cleanup16_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

for.body.lr.ph.i50:                               ; preds = %if.end10
  %elem_size.i.i49 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body.i54

for.body.i54:                                     ; preds = %for.inc.i59.for.body.i54_crit_edge, %for.body.lr.ph.i50
  %i.03.i51 = phi i32 [ 0, %for.body.lr.ph.i50 ], [ %inc.i55, %for.inc.i59.for.body.i54_crit_edge ]
  %pin.02.i52 = phi ptr [ %19, %for.body.lr.ph.i50 ], [ %add.ptr.i.i57, %for.inc.i59.for.body.i54_crit_edge ]
  %22 = ptrtoint ptr %pin.02.i52 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %pin.02.i52, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %nid)
  %cmp3.i53 = icmp eq i16 %23, %nid
  br i1 %cmp3.i53, label %look_up_pincfg.exit61, label %for.inc.i59

for.inc.i59:                                      ; preds = %for.body.i54
  %inc.i55 = add nuw i32 %i.03.i51, 1
  %24 = ptrtoint ptr %elem_size.i.i49 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %elem_size.i.i49, align 4
  %mul.i.i56 = mul i32 %25, %inc.i55
  %add.ptr.i.i57 = getelementptr i8, ptr %19, i32 %mul.i.i56
  %exitcond.not.i58 = icmp eq i32 %inc.i55, %21
  br i1 %exitcond.not.i58, label %for.inc.i59.cleanup16_crit_edge, label %for.inc.i59.for.body.i54_crit_edge

for.inc.i59.for.body.i54_crit_edge:               ; preds = %for.inc.i59
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i54

for.inc.i59.cleanup16_crit_edge:                  ; preds = %for.inc.i59
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

look_up_pincfg.exit61:                            ; preds = %for.body.i54
  %tobool12.not = icmp eq ptr %pin.02.i52, null
  br i1 %tobool12.not, label %look_up_pincfg.exit61.cleanup16_crit_edge, label %look_up_pincfg.exit61.cleanup16.sink.split_crit_edge

look_up_pincfg.exit61.cleanup16.sink.split_crit_edge: ; preds = %look_up_pincfg.exit61
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16.sink.split

look_up_pincfg.exit61.cleanup16_crit_edge:        ; preds = %look_up_pincfg.exit61
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

cleanup16.sink.split:                             ; preds = %look_up_pincfg.exit61.cleanup16.sink.split_crit_edge, %look_up_pincfg.exit46.cleanup16.sink.split_crit_edge
  %pin.02.i52.lcssa.sink = phi ptr [ %pin.02.i37, %look_up_pincfg.exit46.cleanup16.sink.split_crit_edge ], [ %pin.02.i52, %look_up_pincfg.exit61.cleanup16.sink.split_crit_edge ]
  %cfg14 = getelementptr inbounds %struct.hda_pincfg, ptr %pin.02.i52.lcssa.sink, i32 0, i32 3
  %26 = ptrtoint ptr %cfg14 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cfg14, align 4
  br label %cleanup16

cleanup16:                                        ; preds = %cleanup16.sink.split, %look_up_pincfg.exit61.cleanup16_crit_edge, %for.inc.i59.cleanup16_crit_edge, %if.end10.cleanup16_crit_edge, %if.end.cleanup16_crit_edge
  %retval.1 = phi i32 [ %9, %if.end.cleanup16_crit_edge ], [ 0, %look_up_pincfg.exit61.cleanup16_crit_edge ], [ 0, %if.end10.cleanup16_crit_edge ], [ %27, %cleanup16.sink.split ], [ 0, %for.inc.i59.cleanup16_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_set_pin_target(ptr nocapture noundef readonly %codec, i16 noundef zeroext %nid, i32 noundef %val) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %init_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %0 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i, align 4
  %2 = ptrtoint ptr %init_pins to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %init_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.not.i = icmp eq i32 %3, 0
  br i1 %cmp1.not.i, label %entry.cleanup_crit_edge, label %for.body.lr.ph.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %entry
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %pin.02.i = phi ptr [ %1, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %pin.02.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pin.02.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp3.i = icmp eq i16 %5, %nid
  br i1 %cmp3.i, label %look_up_pincfg.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.03.i, 1
  %6 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %7, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %3
  br i1 %exitcond.not.i, label %for.inc.i.cleanup_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

look_up_pincfg.exit:                              ; preds = %for.body.i
  %tobool.not = icmp eq ptr %pin.02.i, null
  br i1 %tobool.not, label %look_up_pincfg.exit.cleanup_crit_edge, label %if.end

look_up_pincfg.exit.cleanup_crit_edge:            ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  %conv = trunc i32 %val to i8
  %target = getelementptr inbounds %struct.hda_pincfg, ptr %pin.02.i, i32 0, i32 2
  %8 = ptrtoint ptr %target to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv, ptr %target, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %look_up_pincfg.exit.cleanup_crit_edge, %for.inc.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %look_up_pincfg.exit.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -22, %for.inc.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_get_pin_target(ptr nocapture noundef readonly %codec, i16 noundef zeroext %nid) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %init_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %0 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i, align 4
  %2 = ptrtoint ptr %init_pins to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %init_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.not.i = icmp eq i32 %3, 0
  br i1 %cmp1.not.i, label %entry.cleanup_crit_edge, label %for.body.lr.ph.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %entry
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %pin.02.i = phi ptr [ %1, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %pin.02.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pin.02.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp3.i = icmp eq i16 %5, %nid
  br i1 %cmp3.i, label %look_up_pincfg.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.03.i, 1
  %6 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %7, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %3
  br i1 %exitcond.not.i, label %for.inc.i.cleanup_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

look_up_pincfg.exit:                              ; preds = %for.body.i
  %tobool.not = icmp eq ptr %pin.02.i, null
  br i1 %tobool.not, label %look_up_pincfg.exit.cleanup_crit_edge, label %if.end

look_up_pincfg.exit.cleanup_crit_edge:            ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %look_up_pincfg.exit
  call void @__sanitizer_cov_trace_pc() #23
  %target = getelementptr inbounds %struct.hda_pincfg, ptr %pin.02.i, i32 0, i32 2
  %8 = ptrtoint ptr %target to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %target, align 1
  %conv = zext i8 %9 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %look_up_pincfg.exit.cleanup_crit_edge, %for.inc.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %look_up_pincfg.exit.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_shutup_pins(ptr noundef %codec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %shutdown = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %shutdown to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %shutdown, align 4
  %3 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %init_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %4 = ptrtoint ptr %init_pins to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %init_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp13.not = icmp eq i32 %5, 0
  br i1 %cmp13.not, label %if.end.for.end_crit_edge, label %for.body.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %list = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %6 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.015 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %pin.014 = phi ptr [ %7, %for.body.lr.ph ], [ %add.ptr.i, %for.body.for.body_crit_edge ]
  %8 = ptrtoint ptr %pin.014 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %pin.014, align 4
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %9, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #21
  %inc = add nuw i32 %i.015, 1
  %10 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %list, align 4
  %12 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %13, %inc
  %add.ptr.i = getelementptr i8, ptr %11, i32 %mul.i
  %14 = ptrtoint ptr %init_pins to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %init_pins, align 4
  %cmp = icmp ult i32 %inc, %15
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %pins_shutup = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %16 = ptrtoint ptr %pins_shutup to i32
  call void @__asan_load4_noabort(i32 %16)
  %bf.load4 = load i32, ptr %pins_shutup, align 4
  %bf.set = or i32 %bf.load4, 8388608
  store i32 %bf.set, ptr %pins_shutup, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_pcm_put(ptr nocapture noundef readonly %pcm) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %codec = getelementptr inbounds %struct.hda_pcm, ptr %pcm, i32 0, i32 6
  %0 = ptrtoint ptr %codec to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %codec, align 8
  %pcm_ref = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 9
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pcm_ref, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !341
  tail call void @llvm.prefetch.p0(ptr %pcm_ref, i32 1, i32 3, i32 1) #21
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pcm_ref, ptr %pcm_ref, i32 1, ptr elementtype(i32) %pcm_ref) #21, !srcloc !342
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !343

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @refcount_warn_saturate(ptr noundef %pcm_ref, i32 noundef 3) #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !344
  %3 = ptrtoint ptr %codec to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %codec, align 8
  %remove_sleep = getelementptr inbounds %struct.hda_codec, ptr %4, i32 0, i32 10
  tail call void @__wake_up(ptr noundef %remove_sleep, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @snd_hda_codec_pcm_new(ptr noundef %codec, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #21
  %0 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !339
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 168) #26
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %codec1 = getelementptr inbounds %struct.hda_pcm, ptr %call7.i.i, i32 0, i32 6
  %2 = ptrtoint ptr %codec1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %codec, ptr %codec1, align 8
  call void @llvm.va_start(ptr nonnull %args)
  %3 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %3)
  %.fca.0.load = load i32, ptr %args, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call2 = call noalias ptr @kvasprintf(i32 noundef 3264, ptr noundef %fmt, [1 x i32] %.fca.0.insert) #21
  %4 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call2, ptr %call7.i.i, align 8
  call void @llvm.va_end(ptr nonnull %args)
  %tobool4.not = icmp eq ptr %call2, null
  br i1 %tobool4.not, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  call void @kfree(ptr noundef nonnull %call7.i.i) #21
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %list = getelementptr inbounds %struct.hda_pcm, ptr %call7.i.i, i32 0, i32 7
  %pcm_list_head = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %prev.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %6, ptr noundef %pcm_list_head) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end6.list_add_tail.exit_crit_edge

if.end6.list_add_tail.exit_crit_edge:             ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %list, ptr %prev.i, align 4
  %8 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %pcm_list_head, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.hda_pcm, ptr %call7.i.i, i32 0, i32 7, i32 1
  %9 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev3.i.i, align 8
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %list, ptr %6, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end6.list_add_tail.exit_crit_edge
  %pcm_ref = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 9
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %pcm_ref, i32 noundef 4) #21
  call void @llvm.prefetch.p0(ptr %pcm_ref, i32 1, i32 3, i32 1) #21
  %11 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pcm_ref, ptr %pcm_ref, i32 1, ptr elementtype(i32) %pcm_ref) #21, !srcloc !345
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %list_add_tail.exit.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !338

list_add_tail.exit.if.end15.sink.split.i.i.i_crit_edge: ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %list_add_tail.exit
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %12 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %.not.i.i.i = icmp sgt i32 %12, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.cleanup_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !343

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.cleanup_crit_edge:                  ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %list_add_tail.exit.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %list_add_tail.exit.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %pcm_ref, i32 noundef %.sink.i.i.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.cleanup_crit_edge, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then5 ], [ null, %entry.cleanup_crit_edge ], [ %call7.i.i, %if.else.i.i.i.cleanup_crit_edge ], [ %call7.i.i, %if.end15.sink.split.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #21
  ret ptr %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #6

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kvasprintf(i32 noundef, ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_disconnect_pcms(ptr noundef readonly %codec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pcm_list_head = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %0 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn22 = load ptr, ptr %pcm_list_head, align 4
  %cmp.not23 = icmp eq ptr %.pn22, %pcm_list_head
  br i1 %cmp.not23, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %card = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn24 = phi ptr [ %.pn22, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %disconnected = getelementptr i8, ptr %.pn24, i32 8
  %1 = ptrtoint ptr %disconnected to i32
  call void @__asan_load1_noabort(i32 %1)
  %bf.load = load i8, ptr %disconnected, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end:                                           ; preds = %for.body
  %pcm2 = getelementptr i8, ptr %.pn24, i32 -12
  %2 = ptrtoint ptr %pcm2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pcm2, align 8
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %if.end.if.end6_crit_edge, label %if.then4

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %card, align 4
  tail call void @snd_device_disconnect(ptr noundef %5, ptr noundef nonnull %3) #21
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  %codec.i = getelementptr i8, ptr %.pn24, i32 -4
  %6 = ptrtoint ptr %codec.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %codec.i, align 8
  %pcm_ref.i = getelementptr inbounds %struct.hda_codec, ptr %7, i32 0, i32 9
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pcm_ref.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !341
  tail call void @llvm.prefetch.p0(ptr %pcm_ref.i, i32 1, i32 3, i32 1) #21
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pcm_ref.i, ptr %pcm_ref.i, i32 1, ptr elementtype(i32) %pcm_ref.i) #21, !srcloc !342
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.snd_hda_codec_pcm_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !343

if.end5.i.i.i.i.snd_hda_codec_pcm_put.exit_crit_edge: ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_pcm_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @refcount_warn_saturate(ptr noundef %pcm_ref.i, i32 noundef 3) #21
  br label %snd_hda_codec_pcm_put.exit

if.then.i:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !344
  %9 = ptrtoint ptr %codec.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %codec.i, align 8
  %remove_sleep.i = getelementptr inbounds %struct.hda_codec, ptr %10, i32 0, i32 10
  tail call void @__wake_up(ptr noundef %remove_sleep.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %snd_hda_codec_pcm_put.exit

snd_hda_codec_pcm_put.exit:                       ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.snd_hda_codec_pcm_put.exit_crit_edge
  %11 = ptrtoint ptr %disconnected to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load8 = load i8, ptr %disconnected, align 4
  %bf.set = or i8 %bf.load8, -128
  store i8 %bf.set, ptr %disconnected, align 4
  br label %for.inc

for.inc:                                          ; preds = %snd_hda_codec_pcm_put.exit, %for.body.for.inc_crit_edge
  %12 = ptrtoint ptr %.pn24 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn = load ptr, ptr %.pn24, align 4
  %cmp.not = icmp eq ptr %.pn, %pcm_list_head
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_device_disconnect(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_cleanup_for_unbind(ptr noundef %codec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %registered = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %registered, align 4
  %1 = and i32 %bf.load, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %usage_count.i = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12, i32 13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #21
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 1, ptr elementtype(i32) %usage_count.i) #21, !srcloc !346
  tail call void @__pm_runtime_disable(ptr noundef %codec, i1 noundef zeroext true) #21
  %3 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %3)
  %bf.load4 = load i32, ptr %registered, align 4
  %bf.clear5 = and i32 %bf.load4, -536870913
  store i32 %bf.clear5, ptr %registered, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @snd_hda_codec_disconnect_pcms(ptr noundef %codec)
  %jackpoll_work = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39
  %call = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %jackpoll_work) #21
  %4 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %4)
  %bf.load6 = load i32, ptr %registered, align 4
  %5 = and i32 %bf.load6, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool9.not = icmp eq i32 %5, 0
  br i1 %tobool9.not, label %if.then10, label %if.end.if.end11_crit_edge

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then10:                                        ; preds = %if.end
  %mixers.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15, i32 4
  %6 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list.i, align 8
  %card.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %8 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %card.i, align 4
  %controls_rwsem.i = getelementptr inbounds %struct.snd_card, ptr %9, i32 0, i32 14
  tail call void @down_write(ptr noundef %controls_rwsem.i) #21
  %10 = ptrtoint ptr %mixers.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mixers.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp14.not.i = icmp eq i32 %11, 0
  br i1 %cmp14.not.i, label %if.then10.snd_hda_ctls_clear.exit_crit_edge, label %if.then10.for.body.i_crit_edge

if.then10.for.body.i_crit_edge:                   ; preds = %if.then10
  br label %for.body.i

if.then10.snd_hda_ctls_clear.exit_crit_edge:      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_ctls_clear.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then10.for.body.i_crit_edge
  %i.015.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.then10.for.body.i_crit_edge ]
  %12 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %card.i, align 4
  %arrayidx.i = getelementptr %struct.hda_nid_item, ptr %7, i32 %i.015.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i, align 4
  %call.i = tail call i32 @snd_ctl_remove(ptr noundef %13, ptr noundef %15) #21
  %inc.i = add nuw i32 %i.015.i, 1
  %16 = ptrtoint ptr %mixers.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mixers.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %17
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.snd_hda_ctls_clear.exit_crit_edge

for.body.i.snd_hda_ctls_clear.exit_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_ctls_clear.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

snd_hda_ctls_clear.exit:                          ; preds = %for.body.i.snd_hda_ctls_clear.exit_crit_edge, %if.then10.snd_hda_ctls_clear.exit_crit_edge
  %18 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %card.i, align 4
  %controls_rwsem4.i = getelementptr inbounds %struct.snd_card, ptr %19, i32 0, i32 14
  tail call void @up_write(ptr noundef %controls_rwsem4.i) #21
  tail call void @snd_array_free(ptr noundef %mixers.i) #21
  %nids.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 16
  tail call void @snd_array_free(ptr noundef %nids.i) #21
  br label %if.end11

if.end11:                                         ; preds = %snd_hda_ctls_clear.exit, %if.end.if.end11_crit_edge
  %pcm_list_head.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %20 = ptrtoint ptr %pcm_list_head.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pcm_list_head.i, align 8
  %cmp.not31.i = icmp eq ptr %21, %pcm_list_head.i
  br i1 %cmp.not31.i, label %if.end11.codec_release_pcms.exit_crit_edge, label %if.end11.for.body.i46_crit_edge

if.end11.for.body.i46_crit_edge:                  ; preds = %if.end11
  br label %for.body.i46

if.end11.codec_release_pcms.exit_crit_edge:       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %codec_release_pcms.exit

for.body.i46:                                     ; preds = %if.end.i.for.body.i46_crit_edge, %if.end11.for.body.i46_crit_edge
  %.pn.in32.i = phi ptr [ %.pn35.i, %if.end.i.for.body.i46_crit_edge ], [ %21, %if.end11.for.body.i46_crit_edge ]
  %pcm.034.i = getelementptr i8, ptr %.pn.in32.i, i32 -156
  %22 = ptrtoint ptr %.pn.in32.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pn35.i = load ptr, ptr %.pn.in32.i, align 4
  %call.i.i.i45 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in32.i) #21
  br i1 %call.i.i.i45, label %if.end.i.i.i, label %for.body.i46.list_del.exit.i_crit_edge

for.body.i46.list_del.exit.i_crit_edge:           ; preds = %for.body.i46
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i46
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in32.i, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i.i, align 4
  %25 = ptrtoint ptr %.pn.in32.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %.pn.in32.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev1.i.i.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %26, ptr %24, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i46.list_del.exit.i_crit_edge
  %29 = ptrtoint ptr %.pn.in32.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in32.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in32.i, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %pcm8.i = getelementptr i8, ptr %.pn.in32.i, i32 -12
  %31 = ptrtoint ptr %pcm8.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pcm8.i, align 8
  %tobool.not.i = icmp eq ptr %32, null
  br i1 %tobool.not.i, label %list_del.exit.i.if.end.i_crit_edge, label %if.then.i

list_del.exit.i.if.end.i_crit_edge:               ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i:                                        ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %codec9.i = getelementptr i8, ptr %.pn.in32.i, i32 -4
  %33 = ptrtoint ptr %codec9.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %codec9.i, align 8
  %card.i47 = getelementptr inbounds %struct.hda_codec, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %card.i47 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %card.i47, align 4
  tail call void @snd_device_free(ptr noundef %36, ptr noundef nonnull %32) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %list_del.exit.i.if.end.i_crit_edge
  %device.i = getelementptr i8, ptr %.pn.in32.i, i32 -16
  %37 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %device.i, align 4
  %codec11.i = getelementptr i8, ptr %.pn.in32.i, i32 -4
  %39 = ptrtoint ptr %codec11.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %codec11.i, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bus.i, align 8
  %pcm_dev_bits.i = getelementptr inbounds %struct.hda_bus, ptr %42, i32 0, i32 5
  tail call void @_clear_bit(i32 noundef %38, ptr noundef %pcm_dev_bits.i) #21
  %43 = ptrtoint ptr %pcm.034.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pcm.034.i, align 8
  tail call void @kfree(ptr noundef %44) #21
  tail call void @kfree(ptr noundef %pcm.034.i) #21
  %cmp.not.i = icmp eq ptr %.pn35.i, %pcm_list_head.i
  br i1 %cmp.not.i, label %if.end.i.codec_release_pcms.exit_crit_edge, label %if.end.i.for.body.i46_crit_edge

if.end.i.for.body.i46_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i46

if.end.i.codec_release_pcms.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %codec_release_pcms.exit

codec_release_pcms.exit:                          ; preds = %if.end.i.codec_release_pcms.exit_crit_edge, %if.end11.codec_release_pcms.exit_crit_edge
  tail call void @snd_hda_detach_beep_device(ptr noundef %codec) #21
  %patch_ops = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7
  %45 = call ptr @memset(ptr %patch_ops, i32 0, i32 40)
  tail call void @snd_hda_jack_tbl_clear(ptr noundef %codec) #21
  %proc_widget_hook = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 36
  %46 = ptrtoint ptr %proc_widget_hook to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %proc_widget_hook, align 8
  %spec = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %47 = ptrtoint ptr %spec to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %spec, align 8
  %driver_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24
  tail call void @snd_array_free(ptr noundef %driver_pins) #21
  %cvt_setups = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25
  tail call void @snd_array_free(ptr noundef %cvt_setups) #21
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  tail call void @snd_array_free(ptr noundef %spdif_out) #21
  %verbs = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 44
  tail call void @snd_array_free(ptr noundef %verbs) #21
  %preset = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 5
  %48 = ptrtoint ptr %preset to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %preset, align 8
  %follower_dig_outs = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %49 = ptrtoint ptr %follower_dig_outs to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %follower_dig_outs, align 8
  %50 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %50)
  %bf.load12 = load i32, ptr %registered, align 4
  %bf.clear13 = and i32 %bf.load12, -134217729
  store i32 %bf.clear13, ptr %registered, align 4
  %mixers = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  tail call void @snd_array_free(ptr noundef %mixers) #21
  %nids = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 16
  tail call void @snd_array_free(ptr noundef %nids) #21
  %conn_list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 17
  %51 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %conn_list.i, align 4
  %cmp.i.not4.i = icmp eq ptr %52, %conn_list.i
  br i1 %cmp.i.not4.i, label %codec_release_pcms.exit.remove_conn_list.exit_crit_edge, label %codec_release_pcms.exit.while.body.i_crit_edge

codec_release_pcms.exit.while.body.i_crit_edge:   ; preds = %codec_release_pcms.exit
  br label %while.body.i

codec_release_pcms.exit.remove_conn_list.exit_crit_edge: ; preds = %codec_release_pcms.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %remove_conn_list.exit

while.body.i:                                     ; preds = %list_del.exit.i53.while.body.i_crit_edge, %codec_release_pcms.exit.while.body.i_crit_edge
  %53 = phi ptr [ %63, %list_del.exit.i53.while.body.i_crit_edge ], [ %52, %codec_release_pcms.exit.while.body.i_crit_edge ]
  %call.i.i.i48 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %53) #21
  br i1 %call.i.i.i48, label %if.end.i.i.i51, label %while.body.i.list_del.exit.i53_crit_edge

while.body.i.list_del.exit.i53_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit.i53

if.end.i.i.i51:                                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i.i49 = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev.i.i.i49 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %prev.i.i.i49, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %53, align 4
  %prev1.i.i.i.i50 = getelementptr inbounds %struct.list_head, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %prev1.i.i.i.i50 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %55, ptr %prev1.i.i.i.i50, align 4
  %59 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %57, ptr %55, align 4
  br label %list_del.exit.i53

list_del.exit.i53:                                ; preds = %if.end.i.i.i51, %while.body.i.list_del.exit.i53_crit_edge
  %60 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr inttoptr (i32 256 to ptr), ptr %53, align 4
  %prev.i.i52 = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %61 = ptrtoint ptr %prev.i.i52 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i52, align 4
  tail call void @kfree(ptr noundef %53) #21
  %62 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile ptr, ptr %conn_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %63, %conn_list.i
  br i1 %cmp.i.not.i, label %list_del.exit.i53.remove_conn_list.exit_crit_edge, label %list_del.exit.i53.while.body.i_crit_edge

list_del.exit.i53.while.body.i_crit_edge:         ; preds = %list_del.exit.i53
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

list_del.exit.i53.remove_conn_list.exit_crit_edge: ; preds = %list_del.exit.i53
  call void @__sanitizer_cov_trace_pc() #23
  br label %remove_conn_list.exit

remove_conn_list.exit:                            ; preds = %list_del.exit.i53.remove_conn_list.exit_crit_edge, %codec_release_pcms.exit.remove_conn_list.exit_crit_edge
  tail call void @snd_hdac_regmap_exit(ptr noundef %codec) #21
  %64 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %64)
  %bf.load16 = load i32, ptr %registered, align 4
  %bf.clear17 = and i32 %bf.load16, 2147483647
  store i32 %bf.clear17, ptr %registered, align 4
  %pcm_ref = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 9
  %call.i.i.i54 = tail call zeroext i1 @__kasan_check_write(ptr noundef %pcm_ref, i32 noundef 4) #21
  %65 = ptrtoint ptr %pcm_ref to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile i32 1, ptr %pcm_ref, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_ctls_clear(ptr noundef %codec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mixers = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %list = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15, i32 4
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 8
  %card = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %2 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %card, align 4
  %controls_rwsem = getelementptr inbounds %struct.snd_card, ptr %3, i32 0, i32 14
  tail call void @down_write(ptr noundef %controls_rwsem) #21
  %4 = ptrtoint ptr %mixers to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mixers, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp14.not = icmp eq i32 %5, 0
  br i1 %cmp14.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.015 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %6 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %card, align 4
  %arrayidx = getelementptr %struct.hda_nid_item, ptr %1, i32 %i.015
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %call = tail call i32 @snd_ctl_remove(ptr noundef %7, ptr noundef %9) #21
  %inc = add nuw i32 %i.015, 1
  %10 = ptrtoint ptr %mixers to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mixers, align 8
  %cmp = icmp ult i32 %inc, %11
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %12 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %card, align 4
  %controls_rwsem4 = getelementptr inbounds %struct.snd_card, ptr %13, i32 0, i32 14
  tail call void @up_write(ptr noundef %controls_rwsem4) #21
  tail call void @snd_array_free(ptr noundef %mixers) #21
  %nids = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 16
  tail call void @snd_array_free(ptr noundef %nids) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_detach_beep_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_jack_tbl_clear(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_array_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_regmap_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_display_power(ptr nocapture noundef readonly %codec, i1 noundef zeroext %enable) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %display_power_control = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %display_power_control to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %display_power_control, align 4
  %1 = and i32 %bf.load, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %2 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus, align 8
  %addr = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 3
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %addr, align 8
  tail call void @snd_hdac_display_power(ptr noundef %3, i32 noundef %5, i1 noundef zeroext %enable) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_display_power(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_register(ptr noundef %codec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %registered = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %registered, align 4
  %1 = and i32 %bf.load, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.if.end10_crit_edge

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.end:                                           ; preds = %entry
  %state_in_sysfs.i = getelementptr inbounds %struct.kobject, ptr %codec, i32 0, i32 8
  %2 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load.i = load i8, ptr %state_in_sysfs.i, align 4
  %3 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %if.end.if.end10_crit_edge, label %if.then2

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.then2:                                         ; preds = %if.end
  %4 = and i32 %bf.load, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then2.snd_hda_codec_display_power.exit_crit_edge, label %if.then.i

if.then2.snd_hda_codec_display_power.exit_crit_edge: ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_display_power.exit

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %5 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bus.i, align 8
  %addr.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 3
  %7 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %addr.i, align 8
  tail call void @snd_hdac_display_power(ptr noundef %6, i32 noundef %8, i1 noundef zeroext true) #21
  br label %snd_hda_codec_display_power.exit

snd_hda_codec_display_power.exit:                 ; preds = %if.then.i, %if.then2.snd_hda_codec_display_power.exit_crit_edge
  tail call void @pm_runtime_enable(ptr noundef %codec) #21
  %call6 = tail call i32 @snd_hdac_power_down(ptr noundef %codec) #21
  %9 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load8 = load i32, ptr %registered, align 4
  %bf.set = or i32 %bf.load8, 536870912
  store i32 %bf.set, ptr %registered, align 4
  br label %if.end10

if.end10:                                         ; preds = %snd_hda_codec_display_power.exit, %if.end.if.end10_crit_edge, %entry.if.end10_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_power_down(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_new(ptr noundef %bus, ptr noundef %card, i32 noundef %codec_addr, ptr nocapture noundef %codecp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @snd_hda_codec_device_init(ptr noundef %bus, ptr noundef %card, i32 noundef %codec_addr, ptr noundef %codecp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %codecp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %codecp, align 4
  %call1 = tail call i32 @snd_hda_codec_device_new(ptr noundef %bus, ptr noundef %card, i32 noundef %codec_addr, ptr noundef %1)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_hda_codec_device_init(ptr noundef %bus, ptr nocapture noundef readonly %card, i32 noundef %codec_addr, ptr nocapture noundef writeonly %codecp) unnamed_addr #0 align 64 {
entry:
  %name = alloca [31 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 31, ptr nonnull %name) #21
  %0 = call ptr @memset(ptr %name, i32 255, i32 31)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_hda_codec_device_init.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_hda_codec_device_init, %if.then)) #21
          to label %do.end [label %if.then], !srcloc !340

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %dev = getelementptr inbounds %struct.snd_card, ptr %card, i32 0, i32 27
  %1 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dev, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_hda_codec_device_init.__UNIQUE_ID_ddebug241, ptr noundef %2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.54) #21
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %tobool3.not = icmp eq ptr %bus, null
  br i1 %tobool3.not, label %do.end21, label %if.end37, !prof !338

do.end21:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 889, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end37:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %codec_addr)
  %cmp = icmp ugt i32 %codec_addr, 15
  br i1 %cmp, label %do.end54, label %if.end70, !prof !338

do.end54:                                         ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 891, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end70:                                         ; preds = %if.end37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 2032) #26
  %tobool72.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool72.not, label %if.end70.cleanup_crit_edge, label %if.end74

if.end70.cleanup_crit_edge:                       ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end74:                                         ; preds = %if.end70
  %4 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %card, align 8
  %call75 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %name, ptr noundef nonnull @.str.55, i32 noundef %5, i32 noundef %codec_addr)
  %call78 = call i32 @snd_hdac_device_init(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %bus, ptr noundef nonnull %name, i32 noundef %codec_addr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %cmp79 = icmp slt i32 %call78, 0
  br i1 %cmp79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #23
  call void @kfree(ptr noundef nonnull %call7.i.i) #21
  br label %cleanup

if.end81:                                         ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #23
  %type = getelementptr inbounds %struct.hdac_device, ptr %call7.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %type, align 8
  %7 = ptrtoint ptr %codecp to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call7.i.i, ptr %codecp, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end81, %if.then80, %if.end70.cleanup_crit_edge, %do.end54, %do.end21
  %retval.0 = phi i32 [ -22, %do.end21 ], [ -22, %do.end54 ], [ %call78, %if.then80 ], [ %call78, %if.end81 ], [ -12, %if.end70.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 31, ptr nonnull %name) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_device_new(ptr noundef %bus, ptr noundef %card, i32 noundef %codec_addr, ptr noundef %codec) #0 align 64 {
entry:
  %component = alloca [31 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 31, ptr nonnull %component) #21
  %0 = call ptr @memset(ptr %component, i32 255, i32 31)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_hda_codec_device_new.__UNIQUE_ID_ddebug242, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_hda_codec_device_new, %if.then)) #21
          to label %do.end [label %if.then], !srcloc !340

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %dev = getelementptr inbounds %struct.snd_card, ptr %card, i32 0, i32 27
  %1 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dev, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_hda_codec_device_new.__UNIQUE_ID_ddebug242, ptr noundef %2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.8) #21
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %tobool3.not = icmp eq ptr %bus, null
  br i1 %tobool3.not, label %do.end21, label %if.end37, !prof !338

do.end21:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 946, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end37:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %codec_addr)
  %cmp = icmp ugt i32 %codec_addr, 15
  br i1 %cmp, label %do.end54, label %if.end70, !prof !338

do.end54:                                         ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 948, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end70:                                         ; preds = %if.end37
  %release = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 35
  %3 = ptrtoint ptr %release to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @snd_hda_codec_dev_release, ptr %release, align 4
  %exec_verb = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 16
  %4 = ptrtoint ptr %exec_verb to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @codec_exec_verb, ptr %exec_verb, align 4
  %bus73 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %5 = ptrtoint ptr %bus73 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %bus, ptr %bus73, align 8
  %card74 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %6 = ptrtoint ptr %card74 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %card, ptr %card74, align 4
  %addr = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 3
  %7 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %codec_addr, ptr %addr, align 8
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @__mutex_init(ptr noundef %spdif_mutex, ptr noundef nonnull @.str.10, ptr noundef nonnull @snd_hda_codec_device_new.__key) #21
  %control_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 19
  tail call void @__mutex_init(ptr noundef %control_mutex, ptr noundef nonnull @.str.12, ptr noundef nonnull @snd_hda_codec_device_new.__key.11) #21
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15, i32 2
  %8 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 12, ptr %elem_size.i, align 4
  %alloc_align.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15, i32 3
  %9 = ptrtoint ptr %alloc_align.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 32, ptr %alloc_align.i, align 4
  %elem_size.i213 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 16, i32 2
  %10 = ptrtoint ptr %elem_size.i213 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 12, ptr %elem_size.i213, align 4
  %alloc_align.i214 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 16, i32 3
  %11 = ptrtoint ptr %alloc_align.i214 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 32, ptr %alloc_align.i214, align 4
  %elem_size.i215 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  %12 = ptrtoint ptr %elem_size.i215 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 8, ptr %elem_size.i215, align 4
  %alloc_align.i216 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 3
  %13 = ptrtoint ptr %alloc_align.i216 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 16, ptr %alloc_align.i216, align 4
  %elem_size.i217 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24, i32 2
  %14 = ptrtoint ptr %elem_size.i217 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 8, ptr %elem_size.i217, align 4
  %alloc_align.i218 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 24, i32 3
  %15 = ptrtoint ptr %alloc_align.i218 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 16, ptr %alloc_align.i218, align 4
  %elem_size.i219 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 2
  %16 = ptrtoint ptr %elem_size.i219 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 8, ptr %elem_size.i219, align 4
  %alloc_align.i220 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 3
  %17 = ptrtoint ptr %alloc_align.i220 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 8, ptr %alloc_align.i220, align 4
  %elem_size.i221 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 2
  %18 = ptrtoint ptr %elem_size.i221 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 12, ptr %elem_size.i221, align 4
  %alloc_align.i222 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 3
  %19 = ptrtoint ptr %alloc_align.i222 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 16, ptr %alloc_align.i222, align 4
  %elem_size.i223 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 37, i32 2
  %20 = ptrtoint ptr %elem_size.i223 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 40, ptr %elem_size.i223, align 4
  %alloc_align.i224 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 37, i32 3
  %21 = ptrtoint ptr %alloc_align.i224 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 16, ptr %alloc_align.i224, align 4
  %elem_size.i225 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 44, i32 2
  %22 = ptrtoint ptr %elem_size.i225 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 4, ptr %elem_size.i225, align 4
  %alloc_align.i226 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 44, i32 3
  %23 = ptrtoint ptr %alloc_align.i226 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 8, ptr %alloc_align.i226, align 4
  %conn_list = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 17
  %24 = ptrtoint ptr %conn_list to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %conn_list, ptr %conn_list, align 4
  %prev.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 17, i32 1
  %25 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %conn_list, ptr %prev.i, align 4
  %pcm_list_head = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %26 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %pcm_list_head, ptr %pcm_list_head, align 4
  %prev.i227 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8, i32 1
  %27 = ptrtoint ptr %prev.i227 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %pcm_list_head, ptr %prev.i227, align 4
  %pcm_ref = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pcm_ref, i32 noundef 4) #21
  %28 = ptrtoint ptr %pcm_ref to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 1, ptr %pcm_ref, align 4
  %remove_sleep = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 10
  tail call void @__init_waitqueue_head(ptr noundef %remove_sleep, ptr noundef nonnull @.str.14, ptr noundef nonnull @snd_hda_codec_device_new.__key.13) #21
  %jackpoll_work = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39
  tail call void @__init_work(ptr noundef %jackpoll_work, i32 noundef 0) #21
  %29 = ptrtoint ptr %jackpoll_work to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 -64, ptr %jackpoll_work, align 4
  %lockdep_map = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.16, ptr noundef nonnull @snd_hda_codec_device_new.__key.15, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry92 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39, i32 0, i32 1
  %30 = ptrtoint ptr %entry92 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %entry92, ptr %entry92, align 4
  %prev.i228 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39, i32 0, i32 1, i32 1
  %31 = ptrtoint ptr %prev.i228 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %entry92, ptr %prev.i228, align 4
  %func = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39, i32 0, i32 2
  %32 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @hda_jackpoll_work, ptr %func, align 4
  %timer = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.18, ptr noundef nonnull @snd_hda_codec_device_new.__key.17) #21
  %depop_delay = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 40
  %33 = ptrtoint ptr %depop_delay to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 -1, ptr %depop_delay, align 8
  %fixup_id = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 41
  %34 = ptrtoint ptr %fixup_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %fixup_id, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %35 = load volatile i32, ptr @jiffies, align 128
  %power_jiffies = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 34
  %36 = ptrtoint ptr %power_jiffies to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %power_jiffies, align 8
  tail call void @snd_hda_sysfs_init(ptr noundef %codec) #21
  %37 = ptrtoint ptr %bus73 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %bus73, align 8
  %modelname = getelementptr inbounds %struct.hda_bus, ptr %38, i32 0, i32 3
  %39 = ptrtoint ptr %modelname to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %modelname, align 4
  %tobool104.not = icmp eq ptr %40, null
  br i1 %tobool104.not, label %if.end70.cond.end_crit_edge, label %if.then105

if.end70.cond.end_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

if.then105:                                       ; preds = %if.end70
  %call108 = tail call noalias ptr @kstrdup(ptr noundef nonnull %40, i32 noundef 3264) #21
  %modelname109 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 6
  %41 = ptrtoint ptr %modelname109 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %call108, ptr %modelname109, align 4
  %tobool111.not = icmp eq ptr %call108, null
  br i1 %tobool111.not, label %if.then105.error_crit_edge, label %if.then105.cond.end_crit_edge

if.then105.cond.end_crit_edge:                    ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

if.then105.error_crit_edge:                       ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #23
  br label %error

cond.end:                                         ; preds = %if.then105.cond.end_crit_edge, %if.end70.cond.end_crit_edge
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %42 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %num_nodes.i, align 8
  %44 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %43, i32 4) #21
  %45 = extractvalue { i32, i1 } %44, 1
  br i1 %45, label %kmalloc_array.exit.thread.i, label %if.end7.i.i, !prof !338

kmalloc_array.exit.thread.i:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  %wcaps2.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %46 = ptrtoint ptr %wcaps2.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %wcaps2.i, align 4
  br label %error

if.end7.i.i:                                      ; preds = %cond.end
  %47 = extractvalue { i32, i1 } %44, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %47, i32 noundef 3264) #24
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %48 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call8.i.i, ptr %wcaps.i, align 4
  %tobool.not.i = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not.i, label %if.end7.i.i.error_crit_edge, label %if.end.i

if.end7.i.i.error_crit_edge:                      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %error

if.end.i:                                         ; preds = %if.end7.i.i
  %49 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %num_nodes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %cmp9.not.i = icmp eq i32 %50, 0
  br i1 %cmp9.not.i, label %if.end.i.if.end127_crit_edge, label %for.body.preheader.i

if.end.i.if.end127_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end127

for.body.preheader.i:                             ; preds = %if.end.i
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %51 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %start_nid.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %nid.011.i = phi i16 [ %inc8.i, %for.body.i.for.body.i_crit_edge ], [ %52, %for.body.preheader.i ]
  %i.010.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %call6.i = tail call i32 @snd_hdac_read_parm_uncached(ptr noundef %codec, i16 noundef zeroext %nid.011.i, i32 noundef 9) #21
  %53 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %wcaps.i, align 4
  %arrayidx.i = getelementptr i32, ptr %54, i32 %i.010.i
  %55 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %call6.i, ptr %arrayidx.i, align 4
  %inc.i = add nuw i32 %i.010.i, 1
  %inc8.i = add i16 %nid.011.i, 1
  %56 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %num_nodes.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %57
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end127_crit_edge

for.body.i.if.end127_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end127

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end127:                                        ; preds = %for.body.i.if.end127_crit_edge, %if.end.i.if.end127_crit_edge
  %call128 = tail call fastcc i32 @read_pin_defaults(ptr noundef %codec)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call128)
  %cmp129 = icmp slt i32 %call128, 0
  br i1 %cmp129, label %if.end127.error_crit_edge, label %if.end132

if.end127.error_crit_edge:                        ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #23
  br label %error

if.end132:                                        ; preds = %if.end127
  %call133 = tail call fastcc i32 @hda_set_power_state(ptr noundef %codec, i32 noundef 0)
  %power = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12
  %58 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 0, ptr %power, align 8
  %call137 = tail call i32 @snd_hda_codec_proc_new(ptr noundef %codec) #21
  %call138 = tail call i32 @snd_hda_create_hwdep(ptr noundef %codec) #21
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %59 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %vendor_id, align 8
  %subsystem_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 8
  %61 = ptrtoint ptr %subsystem_id to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %subsystem_id, align 4
  %revision_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 9
  %63 = ptrtoint ptr %revision_id to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %revision_id, align 8
  %call142 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %component, ptr noundef nonnull @.str.19, i32 noundef %60, i32 noundef %62, i32 noundef %64)
  %call144 = call i32 @snd_component_add(ptr noundef %card, ptr noundef nonnull %component) #21
  %call145 = call i32 @snd_device_new(ptr noundef %card, i32 noundef 3, ptr noundef %codec, ptr noundef nonnull @snd_hda_codec_device_new.dev_ops) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call145)
  %cmp146 = icmp slt i32 %call145, 0
  br i1 %cmp146, label %if.end132.error_crit_edge, label %if.end149

if.end132.error_crit_edge:                        ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #23
  br label %error

if.end149:                                        ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #23
  call void @pm_runtime_forbid(ptr noundef %codec) #21
  br label %cleanup

error:                                            ; preds = %if.end132.error_crit_edge, %if.end127.error_crit_edge, %if.end7.i.i.error_crit_edge, %kmalloc_array.exit.thread.i, %if.then105.error_crit_edge
  %err.0 = phi i32 [ %call128, %if.end127.error_crit_edge ], [ %call145, %if.end132.error_crit_edge ], [ -12, %if.then105.error_crit_edge ], [ -12, %if.end7.i.i.error_crit_edge ], [ -12, %kmalloc_array.exit.thread.i ]
  call void @put_device(ptr noundef %codec) #21
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end149, %do.end54, %do.end21
  %retval.0 = phi i32 [ -22, %do.end21 ], [ -22, %do.end54 ], [ %err.0, %error ], [ 0, %if.end149 ]
  call void @llvm.lifetime.end.p0(i64 31, ptr nonnull %component) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_codec_dev_free(ptr nocapture noundef readonly %device) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %device_data = getelementptr inbounds %struct.snd_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %device_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device_data, align 4
  %in_freeing = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 31
  %2 = ptrtoint ptr %in_freeing to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load = load i32, ptr %in_freeing, align 4
  %bf.set = or i32 %bf.load, 1073741824
  store i32 %bf.set, ptr %in_freeing, align 4
  %type = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hdac_device_unregister(ptr noundef %1) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %5 = ptrtoint ptr %in_freeing to i32
  call void @__asan_load4_noabort(i32 %5)
  %bf.load.i = load i32, ptr %in_freeing, align 4
  %6 = and i32 %bf.load.i, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.end.snd_hda_codec_display_power.exit_crit_edge, label %if.then.i

if.end.snd_hda_codec_display_power.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_display_power.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bus.i, align 8
  %addr.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 3
  %9 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %addr.i, align 8
  tail call void @snd_hdac_display_power(ptr noundef %8, i32 noundef %10, i1 noundef zeroext false) #21
  br label %snd_hda_codec_display_power.exit

snd_hda_codec_display_power.exit:                 ; preds = %if.then.i, %if.end.snd_hda_codec_display_power.exit_crit_edge
  %11 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp4 = icmp eq i32 %12, 1
  br i1 %cmp4, label %if.then5, label %snd_hda_codec_display_power.exit.if.end7_crit_edge

snd_hda_codec_display_power.exit.if.end7_crit_edge: ; preds = %snd_hda_codec_display_power.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then5:                                         ; preds = %snd_hda_codec_display_power.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef %1) #21
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %snd_hda_codec_display_power.exit.if.end7_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_codec_dev_register(ptr nocapture noundef readonly %device) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %device_data = getelementptr inbounds %struct.snd_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %device_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device_data, align 4
  %registered.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 31
  %2 = ptrtoint ptr %registered.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load.i = load i32, ptr %registered.i, align 4
  %3 = and i32 %bf.load.i, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.snd_hda_codec_register.exit_crit_edge

entry.snd_hda_codec_register.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_register.exit

if.end.i:                                         ; preds = %entry
  %state_in_sysfs.i.i = getelementptr inbounds %struct.kobject, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %state_in_sysfs.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i.i = load i8, ptr %state_in_sysfs.i.i, align 4
  %5 = and i8 %bf.load.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i = icmp eq i8 %5, 0
  br i1 %tobool1.not.i, label %if.end.i.snd_hda_codec_register.exit_crit_edge, label %if.then2.i

if.end.i.snd_hda_codec_register.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_register.exit

if.then2.i:                                       ; preds = %if.end.i
  %6 = and i32 %bf.load.i, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i, label %if.then2.i.snd_hda_codec_display_power.exit.i_crit_edge, label %if.then.i.i

if.then2.i.snd_hda_codec_display_power.exit.i_crit_edge: ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_display_power.exit.i

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #23
  %bus.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bus.i.i, align 8
  %addr.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 3
  %9 = ptrtoint ptr %addr.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %addr.i.i, align 8
  tail call void @snd_hdac_display_power(ptr noundef %8, i32 noundef %10, i1 noundef zeroext true) #21
  br label %snd_hda_codec_display_power.exit.i

snd_hda_codec_display_power.exit.i:               ; preds = %if.then.i.i, %if.then2.i.snd_hda_codec_display_power.exit.i_crit_edge
  tail call void @pm_runtime_enable(ptr noundef %1) #21
  %call6.i = tail call i32 @snd_hdac_power_down(ptr noundef %1) #21
  %11 = ptrtoint ptr %registered.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %bf.load8.i = load i32, ptr %registered.i, align 4
  %bf.set.i = or i32 %bf.load8.i, 536870912
  store i32 %bf.set.i, ptr %registered.i, align 4
  br label %snd_hda_codec_register.exit

snd_hda_codec_register.exit:                      ; preds = %snd_hda_codec_display_power.exit.i, %if.end.i.snd_hda_codec_register.exit_crit_edge, %entry.snd_hda_codec_register.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_hda_codec_dev_release(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_pins.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 24
  tail call void @snd_array_free(ptr noundef %driver_pins.i) #21
  %user_pins.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 29
  tail call void @snd_array_free(ptr noundef %user_pins.i) #21
  %init_pins.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 23
  tail call void @snd_array_free(ptr noundef %init_pins.i) #21
  tail call void @snd_hdac_device_exit(ptr noundef %dev) #21
  tail call void @snd_hda_sysfs_clear(ptr noundef %dev) #21
  %modelname = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %modelname to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %modelname, align 4
  tail call void @kfree(ptr noundef %1) #21
  %wcaps = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 14
  %2 = ptrtoint ptr %wcaps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wcaps, align 4
  tail call void @kfree(ptr noundef %3) #21
  %type = getelementptr inbounds %struct.hdac_device, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @kfree(ptr noundef %dev) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @codec_exec_verb(ptr noundef %dev, i32 noundef %cmd, i32 noundef %flags, ptr noundef %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1 = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %cmd)
  %cmp = icmp eq i32 %cmd, -1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %again.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

again.preheader:                                  ; preds = %entry
  %cmd_mutex = getelementptr inbounds %struct.hdac_bus, ptr %1, i32 0, i32 33
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %no_response_fallback = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 6
  %addr = getelementptr inbounds %struct.hdac_device, ptr %dev, i32 0, i32 3
  %in_pm.i = getelementptr inbounds %struct.hdac_device, ptr %dev, i32 0, i32 20
  %tobool18.not = icmp ne ptr %res, null
  br label %again

again:                                            ; preds = %again.backedge, %again.preheader
  %call = tail call i32 @snd_hdac_power_up_pm(ptr noundef %dev) #21
  tail call void @mutex_lock_nested(ptr noundef %cmd_mutex, i32 noundef 0) #21
  br i1 %tobool.not, label %again.if.end4_crit_edge, label %if.then3

again.if.end4_crit_edge:                          ; preds = %again
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.then3:                                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %no_response_fallback to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %no_response_fallback, align 4
  %bf.set = or i8 %bf.load, 8
  store i8 %bf.set, ptr %no_response_fallback, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %again.if.end4_crit_edge
  %3 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %addr, align 8
  %call7 = tail call i32 @snd_hdac_bus_exec_verb_unlocked(ptr noundef %1, i32 noundef %4, i32 noundef %cmd, ptr noundef %res) #21
  %5 = ptrtoint ptr %no_response_fallback to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load9 = load i8, ptr %no_response_fallback, align 4
  %bf.clear10 = and i8 %bf.load9, -9
  store i8 %bf.clear10, ptr %no_response_fallback, align 4
  tail call void @mutex_unlock(ptr noundef %cmd_mutex) #21
  %call15 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %dev) #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_pm.i, i32 noundef 4) #21
  %6 = ptrtoint ptr %in_pm.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %in_pm.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i = icmp eq i32 %7, 0
  %or.cond.not = and i1 %tobool18.not, %tobool.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call7)
  %cmp20 = icmp eq i32 %call7, -11
  %or.cond65 = select i1 %or.cond.not, i1 %cmp20, i1 false
  br i1 %or.cond65, label %if.then21, label %if.end36

if.then21:                                        ; preds = %if.end4
  %8 = ptrtoint ptr %no_response_fallback to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load22 = load i8, ptr %no_response_fallback, align 4
  %9 = and i8 %bf.load22, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool24.not = icmp eq i8 %9, 0
  br i1 %tobool24.not, label %if.then21.again.backedge_crit_edge, label %do.body

if.then21.again.backedge_crit_edge:               ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #23
  br label %again.backedge

do.body:                                          ; preds = %if.then21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @codec_exec_verb.__UNIQUE_ID_ddebug239, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@codec_exec_verb, %if.then31)) #21
          to label %do.end [label %if.then31], !srcloc !340

if.then31:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @codec_exec_verb.__UNIQUE_ID_ddebug239, ptr noundef %dev, ptr noundef nonnull @.str.57) #21
  br label %do.end

do.end:                                           ; preds = %if.then31, %do.body
  tail call void @snd_hda_bus_reset(ptr noundef %1) #21
  br label %again.backedge

again.backedge:                                   ; preds = %do.end, %if.then21.again.backedge_crit_edge
  br label %again

if.end36:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool37.not = icmp eq i32 %call7, 0
  br i1 %tobool37.not, label %if.end36.if.then40_crit_edge, label %lor.lhs.false

if.end36.if.then40_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then40

lor.lhs.false:                                    ; preds = %if.end36
  %call.i.i.i67 = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_pm.i, i32 noundef 4) #21
  %10 = ptrtoint ptr %in_pm.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %in_pm.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.i68.not = icmp eq i32 %11, 0
  br i1 %tobool.i68.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false.if.then40_crit_edge

lor.lhs.false.if.then40_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then40

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then40:                                        ; preds = %lor.lhs.false.if.then40_crit_edge, %if.end36.if.then40_crit_edge
  %12 = ptrtoint ptr %no_response_fallback to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load42 = load i8, ptr %no_response_fallback, align 4
  %bf.clear43 = and i8 %bf.load42, -33
  store i8 %bf.clear43, ptr %no_response_fallback, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then40, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ %call7, %if.then40 ], [ %call7, %lor.lhs.false.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hda_jackpoll_work(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1892
  %jackpoll_interval = getelementptr i8, ptr %work, i32 -4
  %0 = ptrtoint ptr %jackpoll_interval to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %jackpoll_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %runtime_status.i.i = getelementptr i8, ptr %work, i32 -1204
  %2 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp.i.i = icmp eq i32 %3, 2
  br i1 %cmp.i.i, label %snd_hdac_is_power_on.exit, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

snd_hdac_is_power_on.exit:                        ; preds = %land.lhs.true
  %disable_depth.i.i = getelementptr i8, ptr %work, i32 -1216
  %4 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i)
  %tobool.not.i.i = icmp ugt i16 %bf.load.i.i, 8191
  br i1 %tobool.not.i.i, label %snd_hdac_is_power_on.exit.cleanup_crit_edge, label %snd_hdac_is_power_on.exit.if.end_crit_edge

snd_hdac_is_power_on.exit.if.end_crit_edge:       ; preds = %snd_hdac_is_power_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

snd_hdac_is_power_on.exit.cleanup_crit_edge:      ; preds = %snd_hdac_is_power_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %snd_hdac_is_power_on.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %call2 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %add.ptr) #21
  %5 = ptrtoint ptr %jackpoll_interval to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %jackpoll_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool4.not = icmp eq i32 %6, 0
  br i1 %tobool4.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_jack_set_dirty_all(ptr noundef %add.ptr) #21
  tail call void @snd_hda_jack_poll_all(ptr noundef %add.ptr) #21
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %call8 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %add.ptr) #21
  %7 = ptrtoint ptr %jackpoll_interval to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %jackpoll_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool10.not = icmp eq i32 %8, 0
  br i1 %tobool10.not, label %if.end6.cleanup_crit_edge, label %if.end12

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end12:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %9 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %9, ptr noundef %work, i32 noundef %8) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end6.cleanup_crit_edge, %snd_hdac_is_power_on.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_sysfs_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @read_pin_defaults(ptr noundef %codec) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %start_nid = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid, align 4
  %init_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %end_nid = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 19
  %2 = ptrtoint ptr %end_nid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %end_nid, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %3)
  %cmp38 = icmp ult i16 %1, %3
  br i1 %cmp38, label %for.body.lr.ph, label %entry.cleanup16_crit_edge

entry.cleanup16_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

for.body.lr.ph:                                   ; preds = %entry
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = zext i16 %1 to i32
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv = phi i32 [ %4, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc.for.body_crit_edge ]
  %5 = ptrtoint ptr %start_nid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %start_nid, align 4
  %conv1.i = zext i16 %6 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv, i32 %conv1.i)
  %cmp.i = icmp ult i32 %indvars.iv, %conv1.i
  br i1 %cmp.i, label %for.body.for.inc_crit_edge, label %lor.lhs.false.i

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

lor.lhs.false.i:                                  ; preds = %for.body
  %7 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %8, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %indvars.iv)
  %cmp8.not.i = icmp ugt i32 %add.i, %indvars.iv
  br i1 %cmp8.not.i, label %get_wcaps.exit, label %lor.lhs.false.i.for.inc_crit_edge

lor.lhs.false.i.for.inc_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

get_wcaps.exit:                                   ; preds = %lor.lhs.false.i
  %9 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %indvars.iv, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %10, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %13 = and i32 %12, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %13)
  %cmp5.not = icmp eq i32 %13, 4194304
  br i1 %cmp5.not, label %if.end, label %get_wcaps.exit.for.inc_crit_edge

get_wcaps.exit.for.inc_crit_edge:                 ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end:                                           ; preds = %get_wcaps.exit
  %call7 = tail call ptr @snd_array_new(ptr noundef %init_pins) #21
  %tobool.not = icmp eq ptr %call7, null
  br i1 %tobool.not, label %if.end.cleanup16_crit_edge, label %if.end9

if.end.cleanup16_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

if.end9:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %14 = trunc i32 %indvars.iv to i16
  %15 = ptrtoint ptr %call7 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %call7, align 4
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %14, i32 noundef 0, i32 noundef 3868, i32 noundef 0) #21
  %cfg = getelementptr inbounds %struct.hda_pincfg, ptr %call7, i32 0, i32 3
  %16 = ptrtoint ptr %cfg to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %call.i, ptr %cfg, align 4
  %call.i31 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %14, i32 noundef 0, i32 noundef 3847, i32 noundef 0) #21
  %conv13 = trunc i32 %call.i31 to i8
  %ctrl = getelementptr inbounds %struct.hda_pincfg, ptr %call7, i32 0, i32 1
  %17 = ptrtoint ptr %ctrl to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv13, ptr %ctrl, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end9, %get_wcaps.exit.for.inc_crit_edge, %lor.lhs.false.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %18 = ptrtoint ptr %end_nid to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %end_nid, align 2
  %20 = zext i16 %19 to i32
  %cmp = icmp ult i32 %indvars.iv.next, %20
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup16_crit_edge

for.inc.cleanup16_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup16

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

cleanup16:                                        ; preds = %for.inc.cleanup16_crit_edge, %if.end.cleanup16_crit_edge, %entry.cleanup16_crit_edge
  %retval.2 = phi i32 [ 0, %entry.cleanup16_crit_edge ], [ -12, %if.end.cleanup16_crit_edge ], [ 0, %for.inc.cleanup16_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hda_set_power_state(ptr noundef %codec, i32 noundef %power_state) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %afg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %0 = ptrtoint ptr %afg to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %afg, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %cond.false, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %mfg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 6
  %2 = ptrtoint ptr %mfg to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %mfg, align 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond.in = phi i16 [ %3, %cond.false ], [ %1, %entry.cond.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %power_state)
  %cmp = icmp eq i32 %power_state, 3
  br i1 %cmp, label %if.then, label %cond.end.if.end20_crit_edge

cond.end.if.end20_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.then:                                          ; preds = %cond.end
  %depop_delay = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 40
  %4 = ptrtoint ptr %depop_delay to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %depop_delay, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp8 = icmp slt i32 %5, 0
  br i1 %cmp8, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %power_caps = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 13
  %6 = ptrtoint ptr %power_caps to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %power_caps, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %tobool12.not = icmp sgt i32 %7, -1
  %cond13 = select i1 %tobool12.not, i32 100, i32 10
  br label %if.end20.sink.split

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp15.not = icmp eq i32 %5, 0
  br i1 %cmp15.not, label %if.else.if.end20_crit_edge, label %if.else.if.end20.sink.split_crit_edge

if.else.if.end20.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.sink.split

if.else.if.end20_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.end20.sink.split:                              ; preds = %if.else.if.end20.sink.split_crit_edge, %if.then10
  %cond13.sink = phi i32 [ %cond13, %if.then10 ], [ %5, %if.else.if.end20.sink.split_crit_edge ]
  tail call void @msleep(i32 noundef %cond13.sink) #21
  br label %if.end20

if.end20:                                         ; preds = %if.end20.sink.split, %if.else.if.end20_crit_edge, %cond.end.if.end20_crit_edge
  %flags.0 = phi i32 [ 0, %cond.end.if.end20_crit_edge ], [ 1, %if.else.if.end20_crit_edge ], [ 1, %if.end20.sink.split ]
  %set_power_state = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 5
  %power_filter = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %end_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 19
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body

for.body:                                         ; preds = %if.end39.for.body_crit_edge, %if.end20
  %count.082 = phi i32 [ 0, %if.end20 ], [ %inc, %if.end39.for.body_crit_edge ]
  %8 = ptrtoint ptr %set_power_state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %set_power_state, align 4
  %tobool23.not = icmp eq ptr %9, null
  br i1 %tobool23.not, label %if.else27, label %if.then24

if.then24:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %9(ptr noundef %codec, i16 noundef zeroext %cond.in, i32 noundef %power_state) #21
  br label %if.end39

if.else27:                                        ; preds = %for.body
  %10 = ptrtoint ptr %power_filter to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %power_filter, align 4
  %tobool28.not = icmp eq ptr %11, null
  br i1 %tobool28.not, label %if.else27.if.then36_crit_edge, label %if.end31

if.else27.if.then36_crit_edge:                    ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then36

if.end31:                                         ; preds = %if.else27
  %call = tail call i32 %11(ptr noundef %codec, i16 noundef zeroext %cond.in, i32 noundef %power_state) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call)
  %12 = icmp ne i32 %call, 3
  %13 = and i1 %cmp, %12
  br i1 %13, label %if.end31.if.end38_crit_edge, label %if.end31.if.then36_crit_edge

if.end31.if.then36_crit_edge:                     ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then36

if.end31.if.end38_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.then36:                                        ; preds = %if.end31.if.then36_crit_edge, %if.else27.if.then36_crit_edge
  %state.181 = phi i32 [ %call, %if.end31.if.then36_crit_edge ], [ %power_state, %if.else27.if.then36_crit_edge ]
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %cond.in, i32 noundef %flags.0, i32 noundef 1797, i32 noundef %state.181) #21
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end31.if.end38_crit_edge
  %14 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %start_nid.i, align 4
  %16 = ptrtoint ptr %end_nid.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %end_nid.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %17)
  %cmp34.i = icmp ult i16 %15, %17
  br i1 %cmp34.i, label %for.body.lr.ph.i, label %if.end38.if.end39_crit_edge

if.end38.if.end39_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end39

for.body.lr.ph.i:                                 ; preds = %if.end38
  %18 = zext i16 %15 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %indvars.iv.i = phi i32 [ %18, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %cleanup.i.for.body.i_crit_edge ]
  %19 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %start_nid.i, align 4
  %conv1.i.i = zext i16 %20 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv.i, i32 %conv1.i.i)
  %cmp.i.i = icmp ult i32 %indvars.iv.i, %conv1.i.i
  br i1 %cmp.i.i, label %for.body.i.cleanup.i_crit_edge, label %lor.lhs.false.i.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i

lor.lhs.false.i.i:                                ; preds = %for.body.i
  %21 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %22, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %indvars.iv.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %indvars.iv.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.cleanup.i_crit_edge

lor.lhs.false.i.i.cleanup.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i
  %23 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %indvars.iv.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %24, i32 %sub.i.i
  %25 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %26, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %get_wcaps.exit.i.cleanup.i_crit_edge, label %if.end.i

get_wcaps.exit.i.cleanup.i_crit_edge:             ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i

if.end.i:                                         ; preds = %get_wcaps.exit.i
  %27 = ptrtoint ptr %power_filter to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %power_filter, align 4
  %tobool4.not.i = icmp eq ptr %28, null
  %.pre.i = trunc i32 %indvars.iv.i to i16
  br i1 %tobool4.not.i, label %if.end.i.if.end14.i_crit_edge, label %if.then5.i

if.end.i.if.end14.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14.i

if.then5.i:                                       ; preds = %if.end.i
  %call7.i = tail call i32 %28(ptr noundef %codec, i16 noundef zeroext %.pre.i, i32 noundef %power_state) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call7.i)
  %29 = icmp ne i32 %call7.i, 3
  %30 = and i1 %cmp, %29
  br i1 %30, label %if.then5.i.cleanup.i_crit_edge, label %if.then5.i.if.end14.i_crit_edge

if.then5.i.if.end14.i_crit_edge:                  ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14.i

if.then5.i.cleanup.i_crit_edge:                   ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i

if.end14.i:                                       ; preds = %if.then5.i.if.end14.i_crit_edge, %if.end.i.if.end14.i_crit_edge
  %state.0.i = phi i32 [ %call7.i, %if.then5.i.if.end14.i_crit_edge ], [ %power_state, %if.end.i.if.end14.i_crit_edge ]
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %.pre.i, i32 noundef 0, i32 noundef 1797, i32 noundef %state.0.i) #21
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end14.i, %if.then5.i.cleanup.i_crit_edge, %get_wcaps.exit.i.cleanup.i_crit_edge, %lor.lhs.false.i.i.cleanup.i_crit_edge, %for.body.i.cleanup.i_crit_edge
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %31 = ptrtoint ptr %end_nid.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %end_nid.i, align 2
  %33 = zext i16 %32 to i32
  %cmp.i = icmp ult i32 %indvars.iv.next.i, %33
  br i1 %cmp.i, label %cleanup.i.for.body.i_crit_edge, label %cleanup.i.if.end39_crit_edge

cleanup.i.if.end39_crit_edge:                     ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end39

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end39:                                         ; preds = %cleanup.i.if.end39_crit_edge, %if.end38.if.end39_crit_edge, %if.then24
  %call.i77 = tail call i32 @snd_hdac_sync_power_state(ptr noundef %codec, i16 noundef zeroext %cond.in, i32 noundef %power_state) #21
  %and41 = and i32 %call.i77, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  %inc = add nuw nsw i32 %count.082, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %inc)
  %exitcond.not = icmp eq i32 %inc, 10
  %or.cond = select i1 %tobool42.not, i1 true, i1 %exitcond.not
  br i1 %or.cond, label %for.end, label %if.end39.for.body_crit_edge

if.end39.for.body_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  ret i32 %call.i77
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_codec_proc_new(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_create_hwdep(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_component_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_device_new(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_forbid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_update_widgets(ptr noundef %codec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @snd_hdac_refresh_widgets(ptr noundef %codec) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %wcaps = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %0 = ptrtoint ptr %wcaps to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wcaps, align 4
  tail call void @kfree(ptr noundef %1) #21
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i, align 8
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %3, i32 4) #21
  %5 = extractvalue { i32, i1 } %4, 1
  br i1 %5, label %kmalloc_array.exit.thread.i, label %if.end7.i.i, !prof !338

kmalloc_array.exit.thread.i:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %wcaps to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %wcaps, align 4
  br label %cleanup

if.end7.i.i:                                      ; preds = %if.end
  %7 = extractvalue { i32, i1 } %4, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %7, i32 noundef 3264) #24
  %8 = ptrtoint ptr %wcaps to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call8.i.i, ptr %wcaps, align 4
  %tobool.not.i = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not.i, label %if.end7.i.i.cleanup_crit_edge, label %if.end.i

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end7.i.i
  %9 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_nodes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp9.not.i = icmp eq i32 %10, 0
  br i1 %cmp9.not.i, label %if.end.i.if.end12_crit_edge, label %for.body.preheader.i

if.end.i.if.end12_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

for.body.preheader.i:                             ; preds = %if.end.i
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %11 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %start_nid.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %nid.011.i = phi i16 [ %inc8.i, %for.body.i.for.body.i_crit_edge ], [ %12, %for.body.preheader.i ]
  %i.010.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %call6.i = tail call i32 @snd_hdac_read_parm_uncached(ptr noundef %codec, i16 noundef zeroext %nid.011.i, i32 noundef 9) #21
  %13 = ptrtoint ptr %wcaps to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %wcaps, align 4
  %arrayidx.i = getelementptr i32, ptr %14, i32 %i.010.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %call6.i, ptr %arrayidx.i, align 4
  %inc.i = add nuw i32 %i.010.i, 1
  %inc8.i = add i16 %nid.011.i, 1
  %16 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_nodes.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %17
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end12_crit_edge

for.body.i.if.end12_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end12:                                         ; preds = %for.body.i.if.end12_crit_edge, %if.end.i.if.end12_crit_edge
  %init_pins = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  tail call void @snd_array_free(ptr noundef %init_pins) #21
  %call13 = tail call fastcc i32 @read_pin_defaults(ptr noundef %codec)
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end7.i.i.cleanup_crit_edge, %kmalloc_array.exit.thread.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %if.end12 ], [ %call, %entry.cleanup_crit_edge ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %kmalloc_array.exit.thread.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_refresh_widgets(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %stream_tag, i32 noundef %channel_id, i32 noundef %format) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %tobool.not = icmp eq i16 %nid, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_hda_codec_setup_stream.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_hda_codec_setup_stream, %if.then4)) #21
          to label %do.end [label %if.then4], !srcloc !340

if.then4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %conv = zext i16 %nid to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_hda_codec_setup_stream.__UNIQUE_ID_ddebug243, ptr noundef %codec, ptr noundef nonnull @.str.21, i32 noundef %conv, i32 noundef %stream_tag, i32 noundef %channel_id, i32 noundef %format) #21
  br label %do.end

do.end:                                           ; preds = %if.then4, %do.body
  %cvt_setups.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25
  %0 = ptrtoint ptr %cvt_setups.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cvt_setups.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp23.not.i = icmp eq i32 %1, 0
  br i1 %cmp23.not.i, label %do.end.for.end.i_crit_edge, label %for.body.lr.ph.i

do.end.for.end.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %do.end
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 4
  %2 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list.i, align 4
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.025.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %p.024.i = phi ptr [ %3, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %p.024.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %p.024.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp4.i = icmp eq i16 %5, %nid
  br i1 %cmp4.i, label %get_hda_cvt_setup.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.025.i, 1
  %6 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %7, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %1
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %do.end.for.end.i_crit_edge
  %call8.i = tail call ptr @snd_array_new(ptr noundef %cvt_setups.i) #21
  %tobool.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool.not.i, label %for.end.i.cleanup_crit_edge, label %get_hda_cvt_setup.exit.thread155

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

get_hda_cvt_setup.exit.thread155:                 ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %call8.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %nid, ptr %call8.i, align 2
  br label %if.end9

get_hda_cvt_setup.exit:                           ; preds = %for.body.i
  %tobool7.not = icmp eq ptr %p.024.i, null
  br i1 %tobool7.not, label %get_hda_cvt_setup.exit.cleanup_crit_edge, label %get_hda_cvt_setup.exit.if.end9_crit_edge

get_hda_cvt_setup.exit.if.end9_crit_edge:         ; preds = %get_hda_cvt_setup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

get_hda_cvt_setup.exit.cleanup_crit_edge:         ; preds = %get_hda_cvt_setup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end9:                                          ; preds = %get_hda_cvt_setup.exit.if.end9_crit_edge, %get_hda_cvt_setup.exit.thread155
  %retval.0.i109158 = phi ptr [ %call8.i, %get_hda_cvt_setup.exit.thread155 ], [ %p.024.i, %get_hda_cvt_setup.exit.if.end9_crit_edge ]
  %stream_pm = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 9
  %9 = ptrtoint ptr %stream_pm to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %stream_pm, align 4
  %tobool10.not = icmp eq ptr %10, null
  br i1 %tobool10.not, label %if.end9.if.end14_crit_edge, label %if.then11

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then11:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %10(ptr noundef %codec, i16 noundef zeroext %nid, i1 noundef zeroext true) #21
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.end9.if.end14_crit_edge
  %pcm_format_first = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %11 = ptrtoint ptr %pcm_format_first to i32
  call void @__asan_load4_noabort(i32 %11)
  %bf.load = load i32, ptr %pcm_format_first, align 4
  %12 = and i32 %bf.load, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool15.not = icmp eq i32 %12, 0
  br i1 %tobool15.not, label %if.end14.if.end17_crit_edge, label %if.then16

if.end14.if.end17_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then16:                                        ; preds = %if.end14
  %format_id.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 3
  %13 = ptrtoint ptr %format_id.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %format_id.i, align 2
  %conv.i = zext i16 %14 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %format)
  %cmp.not.i = icmp eq i32 %conv.i, %format
  br i1 %cmp.not.i, label %if.then16.if.end17_crit_edge, label %if.then.i

if.then16.if.end17_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then.i:                                        ; preds = %if.then16
  %call.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 2560, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %format)
  %cmp2.not.i = icmp eq i32 %call.i.i, %format
  br i1 %cmp2.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then4.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @msleep(i32 noundef 1) #21
  %call.i15.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 512, i32 noundef %format) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i.if.end.i_crit_edge
  %conv6.i = trunc i32 %format to i16
  %15 = ptrtoint ptr %format_id.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %conv6.i, ptr %format_id.i, align 2
  br label %if.end17

if.end17:                                         ; preds = %if.end.i, %if.then16.if.end17_crit_edge, %if.end14.if.end17_crit_edge
  %stream_tag1.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 1
  %16 = ptrtoint ptr %stream_tag1.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %stream_tag1.i, align 2
  %conv.i110 = zext i8 %17 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i110, i32 %stream_tag)
  %cmp.not.i111 = icmp eq i32 %conv.i110, %stream_tag
  br i1 %cmp.not.i111, label %lor.lhs.false.i, label %if.end17.if.then.i113_crit_edge

if.end17.if.then.i113_crit_edge:                  ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i113

lor.lhs.false.i:                                  ; preds = %if.end17
  %channel_id3.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 2
  %18 = ptrtoint ptr %channel_id3.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %channel_id3.i, align 1
  %conv4.i = zext i8 %19 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv4.i, i32 %channel_id)
  %cmp5.not.i = icmp eq i32 %conv4.i, %channel_id
  br i1 %cmp5.not.i, label %lor.lhs.false.i.update_pcm_stream_id.exit_crit_edge, label %lor.lhs.false.i.if.then.i113_crit_edge

lor.lhs.false.i.if.then.i113_crit_edge:           ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i113

lor.lhs.false.i.update_pcm_stream_id.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %update_pcm_stream_id.exit

if.then.i113:                                     ; preds = %lor.lhs.false.i.if.then.i113_crit_edge, %if.end17.if.then.i113_crit_edge
  %call.i.i112 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 3846, i32 noundef 0) #21
  %shl.i = shl i32 %stream_tag, 4
  %or.i = or i32 %shl.i, %channel_id
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i112, i32 %or.i)
  %cmp7.not.i = icmp eq i32 %call.i.i112, %or.i
  br i1 %cmp7.not.i, label %if.then.i113.if.end.i115_crit_edge, label %if.then9.i114

if.then.i113.if.end.i115_crit_edge:               ; preds = %if.then.i113
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i115

if.then9.i114:                                    ; preds = %if.then.i113
  call void @__sanitizer_cov_trace_pc() #23
  %call.i26.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 1798, i32 noundef %or.i) #21
  br label %if.end.i115

if.end.i115:                                      ; preds = %if.then9.i114, %if.then.i113.if.end.i115_crit_edge
  %conv11.i = trunc i32 %stream_tag to i8
  %20 = ptrtoint ptr %stream_tag1.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %conv11.i, ptr %stream_tag1.i, align 2
  %conv13.i = trunc i32 %channel_id to i8
  %channel_id14.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 2
  %21 = ptrtoint ptr %channel_id14.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv13.i, ptr %channel_id14.i, align 1
  br label %update_pcm_stream_id.exit

update_pcm_stream_id.exit:                        ; preds = %if.end.i115, %lor.lhs.false.i.update_pcm_stream_id.exit_crit_edge
  %22 = ptrtoint ptr %pcm_format_first to i32
  call void @__asan_load4_noabort(i32 %22)
  %bf.load19 = load i32, ptr %pcm_format_first, align 4
  %23 = and i32 %bf.load19, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool22.not = icmp eq i32 %23, 0
  br i1 %tobool22.not, label %if.then23, label %update_pcm_stream_id.exit.if.end24_crit_edge

update_pcm_stream_id.exit.if.end24_crit_edge:     ; preds = %update_pcm_stream_id.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

if.then23:                                        ; preds = %update_pcm_stream_id.exit
  %format_id.i116 = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 3
  %24 = ptrtoint ptr %format_id.i116 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %format_id.i116, align 2
  %conv.i117 = zext i16 %25 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i117, i32 %format)
  %cmp.not.i118 = icmp eq i32 %conv.i117, %format
  br i1 %cmp.not.i118, label %if.then23.if.end24_crit_edge, label %if.then.i121

if.then23.if.end24_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

if.then.i121:                                     ; preds = %if.then23
  %call.i.i119 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 2560, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i119, i32 %format)
  %cmp2.not.i120 = icmp eq i32 %call.i.i119, %format
  br i1 %cmp2.not.i120, label %if.then.i121.if.end.i125_crit_edge, label %if.then4.i123

if.then.i121.if.end.i125_crit_edge:               ; preds = %if.then.i121
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i125

if.then4.i123:                                    ; preds = %if.then.i121
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @msleep(i32 noundef 1) #21
  %call.i15.i122 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 512, i32 noundef %format) #21
  br label %if.end.i125

if.end.i125:                                      ; preds = %if.then4.i123, %if.then.i121.if.end.i125_crit_edge
  %conv6.i124 = trunc i32 %format to i16
  %26 = ptrtoint ptr %format_id.i116 to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %conv6.i124, ptr %format_id.i116, align 2
  br label %if.end24

if.end24:                                         ; preds = %if.end.i125, %if.then23.if.end24_crit_edge, %update_pcm_stream_id.exit.if.end24_crit_edge
  %active = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 4
  %27 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %active, align 2
  %dirty = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i109158, i32 0, i32 5
  %28 = ptrtoint ptr %dirty to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %dirty, align 1
  %conv.i127 = zext i16 %nid to i32
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %29 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %30 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %30, i16 %nid)
  %cmp.i = icmp ugt i16 %30, %nid
  br i1 %cmp.i, label %if.end24.get_wcaps.exit.thread_crit_edge, label %lor.lhs.false.i128

if.end24.get_wcaps.exit.thread_crit_edge:         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit.thread

lor.lhs.false.i128:                               ; preds = %if.end24
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %31 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %32, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i127)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i127
  br i1 %cmp8.not.i, label %get_wcaps.exit, label %lor.lhs.false.i128.get_wcaps.exit.thread_crit_edge

lor.lhs.false.i128.get_wcaps.exit.thread_crit_edge: ; preds = %lor.lhs.false.i128
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit.thread

get_wcaps.exit:                                   ; preds = %lor.lhs.false.i128
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %33 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i127, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %34, i32 %sub.i
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i131 = icmp eq i32 %36, 0
  %and.i = lshr i32 %36, 20
  %shr.i = and i32 %and.i, 15
  br i1 %tobool.not.i131, label %get_wcaps.exit.get_wcaps.exit.thread_crit_edge, label %get_wcaps.exit._crit_edge

get_wcaps.exit._crit_edge:                        ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %37

get_wcaps.exit.get_wcaps.exit.thread_crit_edge:   ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit.thread

get_wcaps.exit.thread:                            ; preds = %get_wcaps.exit.get_wcaps.exit.thread_crit_edge, %lor.lhs.false.i128.get_wcaps.exit.thread_crit_edge, %if.end24.get_wcaps.exit.thread_crit_edge
  br label %37

37:                                               ; preds = %get_wcaps.exit.thread, %get_wcaps.exit._crit_edge
  %38 = phi i32 [ -1, %get_wcaps.exit.thread ], [ %shr.i, %get_wcaps.exit._crit_edge ]
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %39 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %bus, align 8
  %codec_list = getelementptr inbounds %struct.hdac_bus, ptr %40, i32 0, i32 11
  %41 = ptrtoint ptr %codec_list to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn171 = load ptr, ptr %codec_list, align 4
  %cmp.not173 = icmp eq ptr %.pn171, %codec_list
  br i1 %cmp.not173, label %.cleanup_crit_edge, label %.for.body_crit_edge

.for.body_crit_edge:                              ; preds = %37
  br label %for.body

.cleanup_crit_edge:                               ; preds = %37
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %for.body.for.cond.loopexit_crit_edge
  %42 = ptrtoint ptr %.pn174 to i32
  call void @__asan_load4_noabort(i32 %42)
  %.pn = load ptr, ptr %.pn174, align 4
  %43 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %bus, align 8
  %codec_list32 = getelementptr inbounds %struct.hdac_bus, ptr %44, i32 0, i32 11
  %cmp.not = icmp eq ptr %.pn, %codec_list32
  br i1 %cmp.not, label %for.cond.loopexit.cleanup_crit_edge, label %for.cond.loopexit.for.body_crit_edge

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.cond.loopexit.cleanup_crit_edge:              ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %.for.body_crit_edge
  %.pn174 = phi ptr [ %.pn, %for.cond.loopexit.for.body_crit_edge ], [ %.pn171, %.for.body_crit_edge ]
  %cvt_setups = getelementptr i8, ptr %.pn174, i32 728
  %45 = ptrtoint ptr %cvt_setups to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cvt_setups, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp39168.not = icmp eq i32 %46, 0
  br i1 %cmp39168.not, label %for.body.for.cond.loopexit_crit_edge, label %for.body41.lr.ph

for.body.for.cond.loopexit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

for.body41.lr.ph:                                 ; preds = %for.body
  %list36 = getelementptr i8, ptr %.pn174, i32 744
  %47 = ptrtoint ptr %list36 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %list36, align 4
  %start_nid.i134 = getelementptr i8, ptr %.pn174, i32 56
  %num_nodes.i137 = getelementptr i8, ptr %.pn174, i32 52
  %wcaps.i141 = getelementptr i8, ptr %.pn174, i32 424
  %elem_size.i = getelementptr i8, ptr %.pn174, i32 736
  br label %for.body41

for.body41:                                       ; preds = %for.inc.for.body41_crit_edge, %for.body41.lr.ph
  %p.0170 = phi ptr [ %48, %for.body41.lr.ph ], [ %add.ptr.i, %for.inc.for.body41_crit_edge ]
  %i.0169 = phi i32 [ 0, %for.body41.lr.ph ], [ %inc, %for.inc.for.body41_crit_edge ]
  %active42 = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.0170, i32 0, i32 4
  %49 = ptrtoint ptr %active42 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %active42, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool43.not = icmp eq i8 %50, 0
  br i1 %tobool43.not, label %land.lhs.true, label %for.body41.for.inc_crit_edge

for.body41.for.inc_crit_edge:                     ; preds = %for.body41
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body41
  %stream_tag44 = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.0170, i32 0, i32 1
  %51 = ptrtoint ptr %stream_tag44 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %stream_tag44, align 2
  %conv45 = zext i8 %52 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv45, i32 %stream_tag)
  %cmp46 = icmp eq i32 %conv45, %stream_tag
  br i1 %cmp46, label %land.lhs.true48, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

land.lhs.true48:                                  ; preds = %land.lhs.true
  %53 = ptrtoint ptr %p.0170 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %p.0170, align 2
  %conv.i133 = zext i16 %54 to i32
  %55 = ptrtoint ptr %start_nid.i134 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %start_nid.i134, align 4
  %conv1.i135 = zext i16 %56 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %56, i16 %54)
  %cmp.i136 = icmp ugt i16 %56, %54
  br i1 %cmp.i136, label %land.lhs.true48.get_wcaps.exit146.thread_crit_edge, label %lor.lhs.false.i140

land.lhs.true48.get_wcaps.exit146.thread_crit_edge: ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit146.thread

lor.lhs.false.i140:                               ; preds = %land.lhs.true48
  %57 = ptrtoint ptr %num_nodes.i137 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %num_nodes.i137, align 8
  %add.i138 = add i32 %58, %conv1.i135
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i138, i32 %conv.i133)
  %cmp8.not.i139 = icmp ugt i32 %add.i138, %conv.i133
  br i1 %cmp8.not.i139, label %get_wcaps.exit146, label %lor.lhs.false.i140.get_wcaps.exit146.thread_crit_edge

lor.lhs.false.i140.get_wcaps.exit146.thread_crit_edge: ; preds = %lor.lhs.false.i140
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit146.thread

get_wcaps.exit146:                                ; preds = %lor.lhs.false.i140
  %59 = ptrtoint ptr %wcaps.i141 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %wcaps.i141, align 4
  %sub.i142 = sub nsw i32 %conv.i133, %conv1.i135
  %arrayidx.i143 = getelementptr i32, ptr %60, i32 %sub.i142
  %61 = ptrtoint ptr %arrayidx.i143 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx.i143, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i147 = icmp eq i32 %62, 0
  %and.i148 = lshr i32 %62, 20
  %shr.i149 = and i32 %and.i148, 15
  br i1 %tobool.not.i147, label %get_wcaps.exit146.get_wcaps.exit146.thread_crit_edge, label %get_wcaps.exit146._crit_edge

get_wcaps.exit146._crit_edge:                     ; preds = %get_wcaps.exit146
  call void @__sanitizer_cov_trace_pc() #23
  br label %63

get_wcaps.exit146.get_wcaps.exit146.thread_crit_edge: ; preds = %get_wcaps.exit146
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit146.thread

get_wcaps.exit146.thread:                         ; preds = %get_wcaps.exit146.get_wcaps.exit146.thread_crit_edge, %lor.lhs.false.i140.get_wcaps.exit146.thread_crit_edge, %land.lhs.true48.get_wcaps.exit146.thread_crit_edge
  br label %63

63:                                               ; preds = %get_wcaps.exit146.thread, %get_wcaps.exit146._crit_edge
  %64 = phi i32 [ -1, %get_wcaps.exit146.thread ], [ %shr.i149, %get_wcaps.exit146._crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %38)
  %cmp52 = icmp eq i32 %64, %38
  br i1 %cmp52, label %if.then54, label %.for.inc_crit_edge

.for.inc_crit_edge:                               ; preds = %63
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then54:                                        ; preds = %63
  call void @__sanitizer_cov_trace_pc() #23
  %dirty55 = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.0170, i32 0, i32 5
  %65 = ptrtoint ptr %dirty55 to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 1, ptr %dirty55, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.then54, %.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %for.body41.for.inc_crit_edge
  %inc = add nuw i32 %i.0169, 1
  %66 = ptrtoint ptr %list36 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %list36, align 4
  %68 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %69, %inc
  %add.ptr.i = getelementptr i8, ptr %67, i32 %mul.i
  %70 = ptrtoint ptr %cvt_setups to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %cvt_setups, align 4
  %cmp39 = icmp ult i32 %inc, %71
  br i1 %cmp39, label %for.inc.for.body41_crit_edge, label %for.inc.for.cond.loopexit_crit_edge

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

for.inc.for.body41_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body41

cleanup:                                          ; preds = %for.cond.loopexit.cleanup_crit_edge, %.cleanup_crit_edge, %get_hda_cvt_setup.exit.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %do_now) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %tobool.not = icmp eq i16 %nid, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %no_sticky_stream = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %no_sticky_stream to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %no_sticky_stream, align 4
  %1 = and i32 %bf.load, 16777216
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__snd_hda_codec_cleanup_stream.__UNIQUE_ID_ddebug244, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__snd_hda_codec_cleanup_stream, %if.then7)) #21
          to label %do.end [label %if.then7], !srcloc !340

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %conv = zext i16 %nid to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__snd_hda_codec_cleanup_stream.__UNIQUE_ID_ddebug244, ptr noundef %codec, ptr noundef nonnull @.str.23, i32 noundef %conv) #21
  br label %do.end

do.end:                                           ; preds = %if.then7, %if.end
  %cvt_setups.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25
  %2 = ptrtoint ptr %cvt_setups.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cvt_setups.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp23.not.i = icmp eq i32 %3, 0
  br i1 %cmp23.not.i, label %do.end.for.end.i_crit_edge, label %for.body.lr.ph.i

do.end.for.end.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %do.end
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 4
  %4 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %list.i, align 4
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.025.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %p.024.i = phi ptr [ %5, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %6 = ptrtoint ptr %p.024.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %p.024.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %7, i16 %nid)
  %cmp4.i = icmp eq i16 %7, %nid
  br i1 %cmp4.i, label %get_hda_cvt_setup.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.025.i, 1
  %8 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %9, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %3
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %do.end.for.end.i_crit_edge
  %call8.i = tail call ptr @snd_array_new(ptr noundef %cvt_setups.i) #21
  %tobool.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool.not.i, label %for.end.i.cleanup_crit_edge, label %get_hda_cvt_setup.exit.thread28

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

get_hda_cvt_setup.exit.thread28:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %call8.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %nid, ptr %call8.i, align 2
  br label %if.then11

get_hda_cvt_setup.exit:                           ; preds = %for.body.i
  %tobool10.not = icmp eq ptr %p.024.i, null
  br i1 %tobool10.not, label %get_hda_cvt_setup.exit.cleanup_crit_edge, label %get_hda_cvt_setup.exit.if.then11_crit_edge

get_hda_cvt_setup.exit.if.then11_crit_edge:       ; preds = %get_hda_cvt_setup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then11

get_hda_cvt_setup.exit.cleanup_crit_edge:         ; preds = %get_hda_cvt_setup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then11:                                        ; preds = %get_hda_cvt_setup.exit.if.then11_crit_edge, %get_hda_cvt_setup.exit.thread28
  %retval.0.i2331 = phi ptr [ %call8.i, %get_hda_cvt_setup.exit.thread28 ], [ %p.024.i, %get_hda_cvt_setup.exit.if.then11_crit_edge ]
  %11 = or i32 %1, %do_now
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %if.else, label %if.then13

if.then13:                                        ; preds = %if.then11
  %13 = ptrtoint ptr %retval.0.i2331 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %retval.0.i2331, align 2
  %stream_tag.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i2331, i32 0, i32 1
  %15 = ptrtoint ptr %stream_tag.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %stream_tag.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i24 = icmp eq i8 %16, 0
  br i1 %tobool.not.i24, label %lor.lhs.false.i, label %if.then13.if.then.i_crit_edge

if.then13.if.then.i_crit_edge:                    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then13
  %channel_id.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i2331, i32 0, i32 2
  %17 = ptrtoint ptr %channel_id.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %channel_id.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool3.not.i = icmp eq i8 %18, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i.if.end.i_crit_edge, label %lor.lhs.false.i.if.then.i_crit_edge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then13.if.then.i_crit_edge
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %14, i32 noundef 0, i32 noundef 1798, i32 noundef 0) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %lor.lhs.false.i.if.end.i_crit_edge
  %format_id.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i2331, i32 0, i32 3
  %19 = ptrtoint ptr %format_id.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %format_id.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %20)
  %tobool4.not.i = icmp eq i16 %20, 0
  br i1 %tobool4.not.i, label %if.end.i.if.end7.i_crit_edge, label %if.then5.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i26.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %14, i32 noundef 0, i32 noundef 512, i32 noundef 0) #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then5.i, %if.end.i.if.end7.i_crit_edge
  %21 = ptrtoint ptr %retval.0.i2331 to i32
  call void @__asan_storeN_noabort(i32 %21, i32 8)
  store i64 0, ptr %retval.0.i2331, align 2
  store i16 %14, ptr %retval.0.i2331, align 2
  %stream_pm.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 9
  %22 = ptrtoint ptr %stream_pm.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %stream_pm.i, align 4
  %tobool9.not.i = icmp eq ptr %23, null
  br i1 %tobool9.not.i, label %if.end7.i.cleanup_crit_edge, label %if.then10.i

if.end7.i.cleanup_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then10.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %23(ptr noundef %codec, i16 noundef zeroext %14, i1 noundef zeroext false) #21
  br label %cleanup

if.else:                                          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #23
  %active = getelementptr inbounds %struct.hda_cvt_setup, ptr %retval.0.i2331, i32 0, i32 4
  %24 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %active, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then10.i, %if.end7.i.cleanup_crit_edge, %get_hda_cvt_setup.exit.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @query_amp_caps(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %direction) #0 align 64 {
entry:
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv.i = zext i16 %nid to i32
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %lor.lhs.false.i

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

lor.lhs.false.i:                                  ; preds = %entry
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %3, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp8.not.i, label %get_wcaps.exit, label %lor.lhs.false.i.if.then_crit_edge

lor.lhs.false.i.if.then_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

get_wcaps.exit:                                   ; preds = %lor.lhs.false.i
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %5, i32 %sub.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  %and = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %get_wcaps.exit.if.then_crit_edge, label %get_wcaps.exit.if.end_crit_edge

get_wcaps.exit.if.end_crit_edge:                  ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

get_wcaps.exit.if.then_crit_edge:                 ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.then:                                          ; preds = %get_wcaps.exit.if.then_crit_edge, %lor.lhs.false.i.if.then_crit_edge, %entry.if.then_crit_edge
  %afg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %8 = ptrtoint ptr %afg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %get_wcaps.exit.if.end_crit_edge
  %nid.addr.0 = phi i16 [ %nid, %get_wcaps.exit.if.end_crit_edge ], [ %9, %if.then ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %direction)
  %cmp = icmp eq i32 %direction, 1
  %cond = select i1 %cmp, i32 18, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #21
  %10 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i, align 4, !annotation !339
  %call.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0, i32 noundef %cond, ptr noundef nonnull %val.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i6 = icmp slt i32 %call.i, 0
  br i1 %cmp.i6, label %if.end.snd_hdac_read_parm.exit_crit_edge, label %cond.false.i

if.end.snd_hdac_read_parm.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hdac_read_parm.exit

cond.false.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i, align 4
  br label %snd_hdac_read_parm.exit

snd_hdac_read_parm.exit:                          ; preds = %cond.false.i, %if.end.snd_hdac_read_parm.exit_crit_edge
  %cond.i = phi i32 [ %12, %cond.false.i ], [ -1, %if.end.snd_hdac_read_parm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #21
  ret i32 %cond.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @snd_hda_check_amp_caps(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %dir, i32 noundef %bits) #0 align 64 {
entry:
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %tobool.not = icmp eq i16 %nid, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %conv.i = zext i16 %nid to i32
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i, label %if.end.if.end8_crit_edge, label %lor.lhs.false.i

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

lor.lhs.false.i:                                  ; preds = %if.end
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %3, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp8.not.i, label %if.end.i, label %lor.lhs.false.i.get_wcaps.exit_crit_edge

lor.lhs.false.i.get_wcaps.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_wcaps.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %5, i32 %sub.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  br label %get_wcaps.exit

get_wcaps.exit:                                   ; preds = %if.end.i, %lor.lhs.false.i.get_wcaps.exit_crit_edge
  %retval.0.i = phi i32 [ %7, %if.end.i ], [ 0, %lor.lhs.false.i.get_wcaps.exit_crit_edge ]
  %add = add i32 %dir, 1
  %shl = shl nuw i32 1, %add
  %and = and i32 %retval.0.i, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %get_wcaps.exit.if.end8_crit_edge, label %lor.lhs.false.i.i.critedge

get_wcaps.exit.if.end8_crit_edge:                 ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

lor.lhs.false.i.i.critedge:                       ; preds = %get_wcaps.exit
  %8 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_nodes.i, align 8
  %add.i.i = add i32 %9, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %conv.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %conv.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.critedge.if.then.i_crit_edge

lor.lhs.false.i.i.critedge.if.then.i_crit_edge:   ; preds = %lor.lhs.false.i.i.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i.critedge
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %10 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i.i = getelementptr i32, ptr %11, i32 %sub.i.i
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %13, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %get_wcaps.exit.i.if.then.i_crit_edge, label %get_wcaps.exit.i.if.end.i14_crit_edge

get_wcaps.exit.i.if.end.i14_crit_edge:            ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i14

get_wcaps.exit.i.if.then.i_crit_edge:             ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.then.i:                                        ; preds = %get_wcaps.exit.i.if.then.i_crit_edge, %lor.lhs.false.i.i.critedge.if.then.i_crit_edge
  %afg.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %14 = ptrtoint ptr %afg.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %afg.i, align 4
  br label %if.end.i14

if.end.i14:                                       ; preds = %if.then.i, %get_wcaps.exit.i.if.end.i14_crit_edge
  %nid.addr.0.i = phi i16 [ %nid, %get_wcaps.exit.i.if.end.i14_crit_edge ], [ %15, %if.then.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i13 = icmp eq i32 %dir, 1
  %cond.i = select i1 %cmp.i13, i32 18, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #21
  %16 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %val.i.i, align 4, !annotation !339
  %call.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i, i32 noundef %cond.i, ptr noundef nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i6.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i14.query_amp_caps.exit_crit_edge, label %cond.false.i.i

if.end.i14.query_amp_caps.exit_crit_edge:         ; preds = %if.end.i14
  call void @__sanitizer_cov_trace_pc() #23
  br label %query_amp_caps.exit

cond.false.i.i:                                   ; preds = %if.end.i14
  call void @__sanitizer_cov_trace_pc() #23
  %17 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val.i.i, align 4
  br label %query_amp_caps.exit

query_amp_caps.exit:                              ; preds = %cond.false.i.i, %if.end.i14.query_amp_caps.exit_crit_edge
  %cond.i.i = phi i32 [ %18, %cond.false.i.i ], [ -1, %if.end.i14.query_amp_caps.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  %and4 = and i32 %cond.i.i, %bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %query_amp_caps.exit.if.end8_crit_edge, label %query_amp_caps.exit.return_crit_edge

query_amp_caps.exit.return_crit_edge:             ; preds = %query_amp_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

query_amp_caps.exit.if.end8_crit_edge:            ; preds = %query_amp_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.end8:                                          ; preds = %query_amp_caps.exit.if.end8_crit_edge, %get_wcaps.exit.if.end8_crit_edge, %if.end.if.end8_crit_edge
  br label %return

return:                                           ; preds = %if.end8, %query_amp_caps.exit.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end8 ], [ false, %entry.return_crit_edge ], [ true, %query_amp_caps.exit.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_override_amp_caps(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %dir, i32 noundef %caps) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv.i = zext i16 %nid to i32
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i, label %entry.snd_hda_override_wcaps.exit_crit_edge, label %lor.lhs.false.i

entry.snd_hda_override_wcaps.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_override_wcaps.exit

lor.lhs.false.i:                                  ; preds = %entry
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %3, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp8.not.i, label %if.end.i, label %lor.lhs.false.i.land.lhs.true.i_crit_edge

lor.lhs.false.i.land.lhs.true.i_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %5, i32 %sub.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  %phi.bo = or i32 %7, 8
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.i, %lor.lhs.false.i.land.lhs.true.i_crit_edge
  %retval.0.i.ph = phi i32 [ 8, %lor.lhs.false.i.land.lhs.true.i_crit_edge ], [ %phi.bo, %if.end.i ]
  %8 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_nodes.i, align 8
  %add.i10 = add i32 %9, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i10, i32 %conv.i)
  %cmp8.i = icmp ugt i32 %add.i10, %conv.i
  br i1 %cmp8.i, label %if.then.i, label %land.lhs.true.i.snd_hda_override_wcaps.exit_crit_edge

land.lhs.true.i.snd_hda_override_wcaps.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_override_wcaps.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %wcaps.i11 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %10 = ptrtoint ptr %wcaps.i11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wcaps.i11, align 4
  %sub.i12 = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i13 = getelementptr i32, ptr %11, i32 %sub.i12
  %12 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %retval.0.i.ph, ptr %arrayidx.i13, align 4
  br label %snd_hda_override_wcaps.exit

snd_hda_override_wcaps.exit:                      ; preds = %if.then.i, %land.lhs.true.i.snd_hda_override_wcaps.exit_crit_edge, %entry.snd_hda_override_wcaps.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp = icmp eq i32 %dir, 1
  %cond = select i1 %cmp, i32 18, i32 13
  %call1 = tail call i32 @snd_hdac_override_parm(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %cond, i32 noundef %caps) #21
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_override_parm(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_amp_update(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %ch, i32 noundef %dir, i32 noundef %idx, i32 noundef %mask, i32 noundef %val) #0 align 64 {
entry:
  %val.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv.i = zext i16 %nid to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i = icmp eq i32 %dir, 1
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i.i, label %entry.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.i

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.i:                              ; preds = %entry
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %3, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %5, i32 %sub.i.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %get_wcaps.exit.i.i.if.then.i.i_crit_edge, label %get_wcaps.exit.i.i.if.end.i.i_crit_edge

get_wcaps.exit.i.i.if.end.i.i_crit_edge:          ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

get_wcaps.exit.i.i.if.then.i.i_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %get_wcaps.exit.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %8 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %get_wcaps.exit.i.i.if.end.i.i_crit_edge
  %nid.addr.0.i.i = phi i16 [ %nid, %get_wcaps.exit.i.i.if.end.i.i_crit_edge ], [ %9, %if.then.i.i ]
  %cond.i.i = select i1 %cmp.i, i32 18, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %10 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !339
  %call.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i6.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.encode_amp.exit_crit_edge, label %cond.false.i.i.i

if.end.i.i.encode_amp.exit_crit_edge:             ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %encode_amp.exit

cond.false.i.i.i:                                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i.i, align 4
  %phi.bo.i = and i32 %12, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i)
  %phi.cmp.i = icmp eq i32 %phi.bo.i, 1073741824
  %phi.sel.i = select i1 %phi.cmp.i, i32 720912, i32 720896
  br label %encode_amp.exit

encode_amp.exit:                                  ; preds = %cond.false.i.i.i, %if.end.i.i.encode_amp.exit_crit_edge
  %cond.i.i.i = phi i32 [ %phi.sel.i, %cond.false.i.i.i ], [ 720896, %if.end.i.i.encode_amp.exit_crit_edge ]
  %shl.i = shl i32 %conv.i, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ch)
  %tobool.not.i = icmp eq i32 %ch, 0
  %cond.i = select i1 %tobool.not.i, i32 8192, i32 0
  %or.i = or i32 %cond.i, %shl.i
  %cond3.i = select i1 %cmp.i, i32 32768, i32 0
  %or1.i = or i32 %or.i, %cond3.i
  %or4.i = or i32 %or1.i, %idx
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %spec.select.i = or i32 %or4.i, %cond.i.i.i
  %call1 = call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %spec.select.i, i32 noundef %mask, i32 noundef %val) #21
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_regmap_update_raw(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_amp_stereo(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %direction, i32 noundef %idx, i32 noundef %mask, i32 noundef %val) #0 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %mask)
  %tobool.not = icmp ult i32 %mask, 256
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !343

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1346, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %and22 = and i32 %mask, 255
  %conv.i.i = zext i16 %nid to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %direction)
  %cmp.i.i = icmp eq i32 %direction, 1
  %start_nid.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %cond.i.i.i = select i1 %cmp.i.i, i32 18, i32 13
  %num_nodes.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %afg.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %shl.i.i = shl i32 %conv.i.i, 20
  %cond3.i.i = select i1 %cmp.i.i, i32 32768, i32 0
  %0 = ptrtoint ptr %start_nid.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i.i.i, align 4
  %conv1.i.i.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i.i.i, label %if.end.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

if.end.if.then.i.i.i_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end
  %2 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i = add i32 %3, %conv1.i.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %conv.i.i)
  %cmp8.not.i.i.i.i = icmp ugt i32 %add.i.i.i.i, %conv.i.i
  br i1 %cmp8.not.i.i.i.i, label %get_wcaps.exit.i.i.i, label %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

get_wcaps.exit.i.i.i:                             ; preds = %lor.lhs.false.i.i.i.i
  %4 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i = sub nsw i32 %conv.i.i, %conv1.i.i.i.i
  %arrayidx.i.i.i.i = getelementptr i32, ptr %5, i32 %sub.i.i.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, label %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge

get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge:      ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge, %if.end.if.then.i.i.i_crit_edge
  %8 = ptrtoint ptr %afg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg.i.i.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge
  %nid.addr.0.i.i.i = phi i16 [ %nid, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge ], [ %9, %if.then.i.i.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %10 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !339
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i.i, i32 noundef %cond.i.i.i, ptr noundef nonnull %val.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i6.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge, label %cond.false.i.i.i.i

if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_update.exit

cond.false.i.i.i.i:                               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i.i.i, align 4
  %phi.bo.i.i = and i32 %12, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i)
  %phi.cmp.i.i = icmp eq i32 %phi.bo.i.i, 1073741824
  %phi.sel.i.i = select i1 %phi.cmp.i.i, i32 720912, i32 720896
  br label %snd_hda_codec_amp_update.exit

snd_hda_codec_amp_update.exit:                    ; preds = %cond.false.i.i.i.i, %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge
  %cond.i.i.i.i = phi i32 [ %phi.sel.i.i, %cond.false.i.i.i.i ], [ 720896, %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge ]
  %or.i.i = or i32 %shl.i.i, %cond3.i.i
  %or1.i.i = or i32 %or.i.i, %idx
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %or4.i.i = or i32 %or1.i.i, %cond.i.i.i.i
  %spec.select.i.i = or i32 %or4.i.i, 8192
  %call1.i = call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %spec.select.i.i, i32 noundef %and22, i32 noundef %val) #21
  %13 = ptrtoint ptr %start_nid.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %start_nid.i.i.i.i, align 4
  %conv1.i.i.i.i.1 = zext i16 %14 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %nid)
  %cmp.i.i.i.i.1 = icmp ugt i16 %14, %nid
  br i1 %cmp.i.i.i.i.1, label %snd_hda_codec_amp_update.exit.if.then.i.i.i.1_crit_edge, label %lor.lhs.false.i.i.i.i.1

snd_hda_codec_amp_update.exit.if.then.i.i.i.1_crit_edge: ; preds = %snd_hda_codec_amp_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i.1

lor.lhs.false.i.i.i.i.1:                          ; preds = %snd_hda_codec_amp_update.exit
  %15 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i.1 = add i32 %16, %conv1.i.i.i.i.1
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i.1, i32 %conv.i.i)
  %cmp8.not.i.i.i.i.1 = icmp ugt i32 %add.i.i.i.i.1, %conv.i.i
  br i1 %cmp8.not.i.i.i.i.1, label %get_wcaps.exit.i.i.i.1, label %lor.lhs.false.i.i.i.i.1.if.then.i.i.i.1_crit_edge

lor.lhs.false.i.i.i.i.1.if.then.i.i.i.1_crit_edge: ; preds = %lor.lhs.false.i.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i.1

get_wcaps.exit.i.i.i.1:                           ; preds = %lor.lhs.false.i.i.i.i.1
  %17 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i.1 = sub nsw i32 %conv.i.i, %conv1.i.i.i.i.1
  %arrayidx.i.i.i.i.1 = getelementptr i32, ptr %18, i32 %sub.i.i.i.i.1
  %19 = ptrtoint ptr %arrayidx.i.i.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i.i.i.i.1, align 4
  %and.i.i.i.1 = and i32 %20, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.1)
  %tobool.not.i.i.i.1 = icmp eq i32 %and.i.i.i.1, 0
  br i1 %tobool.not.i.i.i.1, label %get_wcaps.exit.i.i.i.1.if.then.i.i.i.1_crit_edge, label %get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge

get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge:  ; preds = %get_wcaps.exit.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i.1

get_wcaps.exit.i.i.i.1.if.then.i.i.i.1_crit_edge: ; preds = %get_wcaps.exit.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i.1

if.then.i.i.i.1:                                  ; preds = %get_wcaps.exit.i.i.i.1.if.then.i.i.i.1_crit_edge, %lor.lhs.false.i.i.i.i.1.if.then.i.i.i.1_crit_edge, %snd_hda_codec_amp_update.exit.if.then.i.i.i.1_crit_edge
  %21 = ptrtoint ptr %afg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %afg.i.i.i, align 4
  br label %if.end.i.i.i.1

if.end.i.i.i.1:                                   ; preds = %if.then.i.i.i.1, %get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge
  %nid.addr.0.i.i.i.1 = phi i16 [ %nid, %get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge ], [ %22, %if.then.i.i.i.1 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %23 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !339
  %call.i.i.i.i.1 = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i.i.1, i32 noundef %cond.i.i.i, ptr noundef nonnull %val.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.1)
  %cmp.i6.i.i.i.1 = icmp slt i32 %call.i.i.i.i.1, 0
  br i1 %cmp.i6.i.i.i.1, label %if.end.i.i.i.1.snd_hda_codec_amp_update.exit.1_crit_edge, label %cond.false.i.i.i.i.1

if.end.i.i.i.1.snd_hda_codec_amp_update.exit.1_crit_edge: ; preds = %if.end.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_update.exit.1

cond.false.i.i.i.i.1:                             ; preds = %if.end.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %val.i.i.i.i, align 4
  %phi.bo.i.i.1 = and i32 %25, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i.1)
  %phi.cmp.i.i.1 = icmp eq i32 %phi.bo.i.i.1, 1073741824
  %phi.sel.i.i.1 = select i1 %phi.cmp.i.i.1, i32 720912, i32 720896
  br label %snd_hda_codec_amp_update.exit.1

snd_hda_codec_amp_update.exit.1:                  ; preds = %cond.false.i.i.i.i.1, %if.end.i.i.i.1.snd_hda_codec_amp_update.exit.1_crit_edge
  %cond.i.i.i.i.1 = phi i32 [ %phi.sel.i.i.1, %cond.false.i.i.i.i.1 ], [ 720896, %if.end.i.i.i.1.snd_hda_codec_amp_update.exit.1_crit_edge ]
  %or1.i.i.1 = or i32 %shl.i.i, %cond3.i.i
  %or4.i.i.1 = or i32 %or1.i.i.1, %idx
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %spec.select.i.i.1 = or i32 %or4.i.i.1, %cond.i.i.i.i.1
  %call1.i.1 = call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %spec.select.i.i.1, i32 noundef %and22, i32 noundef %val) #21
  %or.1 = or i32 %call1.i.1, %call1.i
  ret i32 %or.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_amp_init(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %ch, i32 noundef %dir, i32 noundef %idx, i32 noundef %mask, i32 noundef %val) #0 align 64 {
entry:
  %val.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv.i = zext i16 %nid to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i = icmp eq i32 %dir, 1
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i.i, label %entry.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.i

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.i:                              ; preds = %entry
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %3, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %5, i32 %sub.i.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %get_wcaps.exit.i.i.if.then.i.i_crit_edge, label %get_wcaps.exit.i.i.if.end.i.i_crit_edge

get_wcaps.exit.i.i.if.end.i.i_crit_edge:          ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

get_wcaps.exit.i.i.if.then.i.i_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %get_wcaps.exit.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %8 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %get_wcaps.exit.i.i.if.end.i.i_crit_edge
  %nid.addr.0.i.i = phi i16 [ %nid, %get_wcaps.exit.i.i.if.end.i.i_crit_edge ], [ %9, %if.then.i.i ]
  %cond.i.i = select i1 %cmp.i, i32 18, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %10 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !339
  %call.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i6.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.encode_amp.exit_crit_edge, label %cond.false.i.i.i

if.end.i.i.encode_amp.exit_crit_edge:             ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %encode_amp.exit

cond.false.i.i.i:                                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i.i, align 4
  %phi.bo.i = and i32 %12, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i)
  %phi.cmp.i = icmp eq i32 %phi.bo.i, 1073741824
  %phi.sel.i = select i1 %phi.cmp.i, i32 720912, i32 720896
  br label %encode_amp.exit

encode_amp.exit:                                  ; preds = %cond.false.i.i.i, %if.end.i.i.encode_amp.exit_crit_edge
  %cond.i.i.i = phi i32 [ %phi.sel.i, %cond.false.i.i.i ], [ 720896, %if.end.i.i.encode_amp.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %regmap = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 23
  %13 = ptrtoint ptr %regmap to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %regmap, align 4
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %encode_amp.exit.cleanup_crit_edge, label %if.end

encode_amp.exit.cleanup_crit_edge:                ; preds = %encode_amp.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %encode_amp.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ch)
  %tobool.not.i = icmp eq i32 %ch, 0
  %cond.i = select i1 %tobool.not.i, i32 8192, i32 0
  %shl.i = shl i32 %conv.i, 20
  %or.i = or i32 %cond.i, %shl.i
  %cond3.i = select i1 %cmp.i, i32 32768, i32 0
  %or1.i = or i32 %or.i, %cond3.i
  %or4.i = or i32 %or1.i, %idx
  %spec.select.i = or i32 %or4.i, %cond.i.i.i
  %call2 = call i32 @snd_hdac_regmap_update_raw_once(ptr noundef %codec, i32 noundef %spec.select.i, i32 noundef %mask, i32 noundef %val) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %encode_amp.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ -22, %encode_amp.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_regmap_update_raw_once(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_amp_init_stereo(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %dir, i32 noundef %idx, i32 noundef %mask, i32 noundef %val) #0 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %mask)
  %tobool.not = icmp ult i32 %mask, 256
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !343

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1396, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %and22 = and i32 %mask, 255
  %conv.i.i = zext i16 %nid to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i.i = icmp eq i32 %dir, 1
  %start_nid.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %cond.i.i.i = select i1 %cmp.i.i, i32 18, i32 13
  %num_nodes.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %afg.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %regmap.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 23
  %shl.i.i = shl i32 %conv.i.i, 20
  %cond3.i.i = select i1 %cmp.i.i, i32 32768, i32 0
  %0 = ptrtoint ptr %start_nid.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i.i.i, align 4
  %conv1.i.i.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i.i.i, label %if.end.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

if.end.if.then.i.i.i_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end
  %2 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i = add i32 %3, %conv1.i.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %conv.i.i)
  %cmp8.not.i.i.i.i = icmp ugt i32 %add.i.i.i.i, %conv.i.i
  br i1 %cmp8.not.i.i.i.i, label %get_wcaps.exit.i.i.i, label %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

get_wcaps.exit.i.i.i:                             ; preds = %lor.lhs.false.i.i.i.i
  %4 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i = sub nsw i32 %conv.i.i, %conv1.i.i.i.i
  %arrayidx.i.i.i.i = getelementptr i32, ptr %5, i32 %sub.i.i.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, label %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge

get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge:      ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge, %if.end.if.then.i.i.i_crit_edge
  %8 = ptrtoint ptr %afg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg.i.i.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge
  %nid.addr.0.i.i.i = phi i16 [ %nid, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge ], [ %9, %if.then.i.i.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %10 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !339
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i.i, i32 noundef %cond.i.i.i, ptr noundef nonnull %val.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i6.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.encode_amp.exit.i_crit_edge, label %cond.false.i.i.i.i

if.end.i.i.i.encode_amp.exit.i_crit_edge:         ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %encode_amp.exit.i

cond.false.i.i.i.i:                               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i.i.i, align 4
  %phi.bo.i.i = and i32 %12, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i)
  %phi.cmp.i.i = icmp eq i32 %phi.bo.i.i, 1073741824
  %phi.sel.i.i = select i1 %phi.cmp.i.i, i32 720912, i32 720896
  br label %encode_amp.exit.i

encode_amp.exit.i:                                ; preds = %cond.false.i.i.i.i, %if.end.i.i.i.encode_amp.exit.i_crit_edge
  %cond.i.i.i.i = phi i32 [ %phi.sel.i.i, %cond.false.i.i.i.i ], [ 720896, %if.end.i.i.i.encode_amp.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %13 = ptrtoint ptr %regmap.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %regmap.i, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %encode_amp.exit.i.snd_hda_codec_amp_init.exit_crit_edge, label %if.end.i

encode_amp.exit.i.snd_hda_codec_amp_init.exit_crit_edge: ; preds = %encode_amp.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_init.exit

if.end.i:                                         ; preds = %encode_amp.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %or.i.i = or i32 %shl.i.i, %cond3.i.i
  %or1.i.i = or i32 %or.i.i, %idx
  %or4.i.i = or i32 %or1.i.i, %cond.i.i.i.i
  %spec.select.i.i = or i32 %or4.i.i, 8192
  %call2.i = call i32 @snd_hdac_regmap_update_raw_once(ptr noundef %codec, i32 noundef %spec.select.i.i, i32 noundef %and22, i32 noundef %val) #21
  br label %snd_hda_codec_amp_init.exit

snd_hda_codec_amp_init.exit:                      ; preds = %if.end.i, %encode_amp.exit.i.snd_hda_codec_amp_init.exit_crit_edge
  %retval.0.i = phi i32 [ %call2.i, %if.end.i ], [ -22, %encode_amp.exit.i.snd_hda_codec_amp_init.exit_crit_edge ]
  %15 = ptrtoint ptr %start_nid.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %start_nid.i.i.i.i, align 4
  %conv1.i.i.i.i.1 = zext i16 %16 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %16, i16 %nid)
  %cmp.i.i.i.i.1 = icmp ugt i16 %16, %nid
  br i1 %cmp.i.i.i.i.1, label %snd_hda_codec_amp_init.exit.if.then.i.i.i.1_crit_edge, label %lor.lhs.false.i.i.i.i.1

snd_hda_codec_amp_init.exit.if.then.i.i.i.1_crit_edge: ; preds = %snd_hda_codec_amp_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i.1

lor.lhs.false.i.i.i.i.1:                          ; preds = %snd_hda_codec_amp_init.exit
  %17 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i.1 = add i32 %18, %conv1.i.i.i.i.1
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i.1, i32 %conv.i.i)
  %cmp8.not.i.i.i.i.1 = icmp ugt i32 %add.i.i.i.i.1, %conv.i.i
  br i1 %cmp8.not.i.i.i.i.1, label %get_wcaps.exit.i.i.i.1, label %lor.lhs.false.i.i.i.i.1.if.then.i.i.i.1_crit_edge

lor.lhs.false.i.i.i.i.1.if.then.i.i.i.1_crit_edge: ; preds = %lor.lhs.false.i.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i.1

get_wcaps.exit.i.i.i.1:                           ; preds = %lor.lhs.false.i.i.i.i.1
  %19 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i.1 = sub nsw i32 %conv.i.i, %conv1.i.i.i.i.1
  %arrayidx.i.i.i.i.1 = getelementptr i32, ptr %20, i32 %sub.i.i.i.i.1
  %21 = ptrtoint ptr %arrayidx.i.i.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.i.i.i.i.1, align 4
  %and.i.i.i.1 = and i32 %22, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.1)
  %tobool.not.i.i.i.1 = icmp eq i32 %and.i.i.i.1, 0
  br i1 %tobool.not.i.i.i.1, label %get_wcaps.exit.i.i.i.1.if.then.i.i.i.1_crit_edge, label %get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge

get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge:  ; preds = %get_wcaps.exit.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i.1

get_wcaps.exit.i.i.i.1.if.then.i.i.i.1_crit_edge: ; preds = %get_wcaps.exit.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i.1

if.then.i.i.i.1:                                  ; preds = %get_wcaps.exit.i.i.i.1.if.then.i.i.i.1_crit_edge, %lor.lhs.false.i.i.i.i.1.if.then.i.i.i.1_crit_edge, %snd_hda_codec_amp_init.exit.if.then.i.i.i.1_crit_edge
  %23 = ptrtoint ptr %afg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %afg.i.i.i, align 4
  br label %if.end.i.i.i.1

if.end.i.i.i.1:                                   ; preds = %if.then.i.i.i.1, %get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge
  %nid.addr.0.i.i.i.1 = phi i16 [ %nid, %get_wcaps.exit.i.i.i.1.if.end.i.i.i.1_crit_edge ], [ %24, %if.then.i.i.i.1 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %25 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !339
  %call.i.i.i.i.1 = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i.i.1, i32 noundef %cond.i.i.i, ptr noundef nonnull %val.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.1)
  %cmp.i6.i.i.i.1 = icmp slt i32 %call.i.i.i.i.1, 0
  br i1 %cmp.i6.i.i.i.1, label %if.end.i.i.i.1.encode_amp.exit.i.1_crit_edge, label %cond.false.i.i.i.i.1

if.end.i.i.i.1.encode_amp.exit.i.1_crit_edge:     ; preds = %if.end.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %encode_amp.exit.i.1

cond.false.i.i.i.i.1:                             ; preds = %if.end.i.i.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %val.i.i.i.i, align 4
  %phi.bo.i.i.1 = and i32 %27, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i.1)
  %phi.cmp.i.i.1 = icmp eq i32 %phi.bo.i.i.1, 1073741824
  %phi.sel.i.i.1 = select i1 %phi.cmp.i.i.1, i32 720912, i32 720896
  br label %encode_amp.exit.i.1

encode_amp.exit.i.1:                              ; preds = %cond.false.i.i.i.i.1, %if.end.i.i.i.1.encode_amp.exit.i.1_crit_edge
  %cond.i.i.i.i.1 = phi i32 [ %phi.sel.i.i.1, %cond.false.i.i.i.i.1 ], [ 720896, %if.end.i.i.i.1.encode_amp.exit.i.1_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %28 = ptrtoint ptr %regmap.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %regmap.i, align 4
  %tobool.not.i.1 = icmp eq ptr %29, null
  br i1 %tobool.not.i.1, label %encode_amp.exit.i.1.snd_hda_codec_amp_init.exit.1_crit_edge, label %if.end.i.1

encode_amp.exit.i.1.snd_hda_codec_amp_init.exit.1_crit_edge: ; preds = %encode_amp.exit.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_init.exit.1

if.end.i.1:                                       ; preds = %encode_amp.exit.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %or1.i.i.1 = or i32 %shl.i.i, %cond3.i.i
  %or4.i.i.1 = or i32 %or1.i.i.1, %idx
  %spec.select.i.i.1 = or i32 %or4.i.i.1, %cond.i.i.i.i.1
  %call2.i.1 = call i32 @snd_hdac_regmap_update_raw_once(ptr noundef %codec, i32 noundef %spec.select.i.i.1, i32 noundef %and22, i32 noundef %val) #21
  br label %snd_hda_codec_amp_init.exit.1

snd_hda_codec_amp_init.exit.1:                    ; preds = %if.end.i.1, %encode_amp.exit.i.1.snd_hda_codec_amp_init.exit.1_crit_edge
  %retval.0.i.1 = phi i32 [ %call2.i.1, %if.end.i.1 ], [ -22, %encode_amp.exit.i.1.snd_hda_codec_amp_init.exit.1_crit_edge ]
  %or.1 = or i32 %retval.0.i.1, %retval.0.i
  ret i32 %or.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_volume_info(ptr noundef %kcontrol, ptr nocapture noundef writeonly %uinfo) #0 align 64 {
entry:
  %val.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %conv = trunc i32 %3 to i16
  %shr8 = lshr i32 %3, 23
  %and9 = and i32 %shr8, 63
  %type = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 1
  %4 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 2, ptr %type, align 8
  %5 = and i32 %3, 196608
  call void @__sanitizer_cov_trace_const_cmp4(i32 196608, i32 %5)
  %cmp = icmp eq i32 %5, 196608
  %cond = select i1 %cmp, i32 2, i32 1
  %count = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 3
  %6 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %cond, ptr %count, align 8
  %value = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5
  %7 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %value, align 8
  %conv.i.i.i = and i32 %3, 65535
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 18
  %8 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %9 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %9, i16 %conv)
  %cmp.i.i.i = icmp ugt i16 %9, %conv
  br i1 %cmp.i.i.i, label %entry.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.i

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.i:                              ; preds = %entry
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 17
  %10 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %11, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 14
  %12 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %13, i32 %sub.i.i.i
  %14 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i = and i32 %15, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %get_wcaps.exit.i.i.if.then.i.i_crit_edge, label %get_wcaps.exit.i.i.if.end.i.i_crit_edge

get_wcaps.exit.i.i.if.end.i.i_crit_edge:          ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

get_wcaps.exit.i.i.if.then.i.i_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %get_wcaps.exit.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 5
  %16 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %afg.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %get_wcaps.exit.i.i.if.end.i.i_crit_edge
  %nid.addr.0.i.i = phi i16 [ %conv, %get_wcaps.exit.i.i.if.end.i.i_crit_edge ], [ %17, %if.then.i.i ]
  %18 = and i32 %3, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i.i.not = icmp eq i32 %18, 0
  %cond.i.i = select i1 %cmp.i.i.not, i32 13, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %19 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !339
  %call.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %1, i16 noundef zeroext %nid.addr.0.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i6.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp.i6.i.i, label %get_amp_max_value.exit.thread, label %get_amp_max_value.exit

get_amp_max_value.exit.thread:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %spec.select.i34 = xor i32 %and9, 127
  %max35 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5, i32 0, i32 1
  %20 = ptrtoint ptr %max35 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %spec.select.i34, ptr %max35, align 4
  br label %cleanup

get_amp_max_value.exit:                           ; preds = %if.end.i.i
  %21 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %val.i.i.i, align 4
  %phi.bo.i = lshr i32 %22, 8
  %phi.bo5.i = and i32 %phi.bo.i, 127
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %phi.bo5.i, i32 %and9)
  %cmp.i = icmp ugt i32 %phi.bo5.i, %and9
  %sub.i = select i1 %cmp.i, i32 %and9, i32 0
  %spec.select.i = sub nsw i32 %phi.bo5.i, %sub.i
  %max = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5, i32 0, i32 1
  %23 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %spec.select.i, ptr %max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %phi.bo5.i, i32 %sub.i)
  %tobool.not = icmp eq i32 %phi.bo5.i, %sub.i
  br i1 %tobool.not, label %do.end, label %get_amp_max_value.exit.cleanup_crit_edge

get_amp_max_value.exit.cleanup_crit_edge:         ; preds = %get_amp_max_value.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end:                                           ; preds = %get_amp_max_value.exit
  call void @__sanitizer_cov_trace_pc() #23
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 1, i32 4
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %1, ptr noundef nonnull @.str.24, i32 noundef %conv.i.i.i, ptr noundef %name) #25
  br label %cleanup

cleanup:                                          ; preds = %do.end, %get_amp_max_value.exit.cleanup_crit_edge, %get_amp_max_value.exit.thread
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %get_amp_max_value.exit.cleanup_crit_edge ], [ 0, %get_amp_max_value.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_volume_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val.i.i30 = alloca i32, align 4
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %shr4 = lshr i32 %3, 18
  %and5 = and i32 %shr4, 1
  %shr7 = lshr i32 %3, 19
  %and8 = and i32 %shr7, 15
  %shr10 = lshr i32 %3, 23
  %and11 = and i32 %shr10, 63
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %shl.i.i = shl i32 %3, 20
  %5 = shl nuw nsw i32 %and5, 15
  %or.i.i = or i32 %5, %shl.i.i
  %or1.i.i = or i32 %or.i.i, %and8
  %or5.i.i = or i32 %or1.i.i, 729088
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #21
  %6 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %val.i.i, align 4, !annotation !339
  %call.i.i = call i32 @snd_hdac_regmap_read_raw(ptr noundef %1, i32 noundef %or5.i.i, ptr noundef nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp6.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp6.i.i, label %if.then.read_amp_value.exit_crit_edge, label %cond.false.i.i

if.then.read_amp_value.exit_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %read_amp_value.exit

cond.false.i.i:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %7 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val.i.i, align 4
  br label %read_amp_value.exit

read_amp_value.exit:                              ; preds = %cond.false.i.i, %if.then.read_amp_value.exit_crit_edge
  %cond8.i.i = phi i32 [ %8, %cond.false.i.i ], [ %call.i.i, %if.then.read_amp_value.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  %and.i = and i32 %cond8.i.i, 127
  %9 = call i32 @llvm.usub.sat.i32(i32 %and.i, i32 %and11) #21
  %incdec.ptr = getelementptr i32, ptr %value, i32 1
  %10 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %value, align 4
  br label %if.end

if.end:                                           ; preds = %read_amp_value.exit, %entry.if.end_crit_edge
  %valp.0 = phi ptr [ %incdec.ptr, %read_amp_value.exit ], [ %value, %entry.if.end_crit_edge ]
  %11 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool14.not = icmp eq i32 %11, 0
  br i1 %tobool14.not, label %if.end.if.end17_crit_edge, label %if.then15

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then15:                                        ; preds = %if.end
  %shl.i.i32 = shl i32 %3, 20
  %12 = shl nuw nsw i32 %and5, 15
  %or1.i.i35 = or i32 %12, %shl.i.i32
  %or4.i.i36 = or i32 %or1.i.i35, %and8
  %or5.i.i37 = or i32 %or4.i.i36, 720896
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i30) #21
  %13 = ptrtoint ptr %val.i.i30 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %val.i.i30, align 4, !annotation !339
  %call.i.i38 = call i32 @snd_hdac_regmap_read_raw(ptr noundef %1, i32 noundef %or5.i.i37, ptr noundef nonnull %val.i.i30) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i38)
  %cmp6.i.i39 = icmp slt i32 %call.i.i38, 0
  br i1 %cmp6.i.i39, label %if.then15.read_amp_value.exit43_crit_edge, label %cond.false.i.i40

if.then15.read_amp_value.exit43_crit_edge:        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #23
  br label %read_amp_value.exit43

cond.false.i.i40:                                 ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #23
  %14 = ptrtoint ptr %val.i.i30 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %val.i.i30, align 4
  br label %read_amp_value.exit43

read_amp_value.exit43:                            ; preds = %cond.false.i.i40, %if.then15.read_amp_value.exit43_crit_edge
  %cond8.i.i41 = phi i32 [ %15, %cond.false.i.i40 ], [ %call.i.i38, %if.then15.read_amp_value.exit43_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i30) #21
  %and.i42 = and i32 %cond8.i.i41, 127
  %16 = call i32 @llvm.usub.sat.i32(i32 %and.i42, i32 %and11) #21
  %17 = ptrtoint ptr %valp.0 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %valp.0, align 4
  br label %if.end17

if.end17:                                         ; preds = %read_amp_value.exit43, %if.end.if.end17_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_volume_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %conv = trunc i32 %3 to i16
  %shr4 = lshr i32 %3, 18
  %and5 = and i32 %shr4, 1
  %shr7 = lshr i32 %3, 19
  %and8 = and i32 %shr7, 15
  %shr10 = lshr i32 %3, 23
  %and11 = and i32 %shr10, 63
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %5 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %value, align 4
  %call = tail call fastcc i32 @update_amp_value(ptr noundef %1, i16 noundef zeroext %conv, i32 noundef 0, i32 noundef %and5, i32 noundef %and8, i32 noundef %and11, i32 noundef %6)
  %incdec.ptr = getelementptr i32, ptr %value, i32 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %valp.0 = phi ptr [ %incdec.ptr, %if.then ], [ %value, %entry.if.end_crit_edge ]
  %change.0 = phi i32 [ %call, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %7 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool14.not = icmp eq i32 %7, 0
  br i1 %tobool14.not, label %if.end.if.end17_crit_edge, label %if.then15

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then15:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %valp.0 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %valp.0, align 4
  %call16 = tail call fastcc i32 @update_amp_value(ptr noundef %1, i16 noundef zeroext %conv, i32 noundef 1, i32 noundef %and5, i32 noundef %and8, i32 noundef %and11, i32 noundef %9)
  %or = or i32 %call16, %change.0
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end.if.end17_crit_edge
  %change.1 = phi i32 [ %or, %if.then15 ], [ %change.0, %if.end.if.end17_crit_edge ]
  ret i32 %change.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @update_amp_value(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %ch, i32 noundef %dir, i32 noundef %idx, i32 noundef %ofs, i32 noundef %val) unnamed_addr #8 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  %val.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  %conv.i.i.i = zext i16 %nid to i32
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i.i, label %entry.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.i

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.i:                              ; preds = %entry
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %3, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %5, i32 %sub.i.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %get_wcaps.exit.i.i.if.then.i.i_crit_edge, label %get_wcaps.exit.i.i.if.end.i.i_crit_edge

get_wcaps.exit.i.i.if.end.i.i_crit_edge:          ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

get_wcaps.exit.i.i.if.then.i.i_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %get_wcaps.exit.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %8 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %get_wcaps.exit.i.i.if.end.i.i_crit_edge
  %nid.addr.0.i.i = phi i16 [ %nid, %get_wcaps.exit.i.i.if.end.i.i_crit_edge ], [ %9, %if.then.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i.i = icmp eq i32 %dir, 1
  %cond.i.i = select i1 %cmp.i.i, i32 18, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %10 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !339
  %call.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i6.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.get_amp_max_value.exit_crit_edge, label %cond.false.i.i.i

if.end.i.i.get_amp_max_value.exit_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_amp_max_value.exit

cond.false.i.i.i:                                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i.i, align 4
  %phi.bo.i = lshr i32 %12, 8
  %phi.bo5.i = and i32 %phi.bo.i, 127
  br label %get_amp_max_value.exit

get_amp_max_value.exit:                           ; preds = %cond.false.i.i.i, %if.end.i.i.get_amp_max_value.exit_crit_edge
  %cond.i.i.i = phi i32 [ %phi.bo5.i, %cond.false.i.i.i ], [ 127, %if.end.i.i.get_amp_max_value.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %13 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i.i = zext i16 %14 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %nid)
  %cmp.i.i.i.i = icmp ugt i16 %14, %nid
  br i1 %cmp.i.i.i.i, label %get_amp_max_value.exit.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

get_amp_max_value.exit.if.then.i.i.i_crit_edge:   ; preds = %get_amp_max_value.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %get_amp_max_value.exit
  %num_nodes.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %15 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i = add i32 %16, %conv1.i.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i.i = icmp ugt i32 %add.i.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i.i, label %get_wcaps.exit.i.i.i, label %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

get_wcaps.exit.i.i.i:                             ; preds = %lor.lhs.false.i.i.i.i
  %wcaps.i.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %17 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i.i
  %arrayidx.i.i.i.i = getelementptr i32, ptr %18, i32 %sub.i.i.i.i
  %19 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i = and i32 %20, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, label %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge

get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge:      ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge, %get_amp_max_value.exit.if.then.i.i.i_crit_edge
  %afg.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %21 = ptrtoint ptr %afg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %afg.i.i.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge
  %nid.addr.0.i.i.i = phi i16 [ %nid, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge ], [ %22, %if.then.i.i.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %23 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !339
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i6.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge, label %cond.false.i.i.i.i

if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_update.exit

cond.false.i.i.i.i:                               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %val.i.i.i.i, align 4
  %phi.bo.i.i = and i32 %25, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i)
  %phi.cmp.i.i = icmp eq i32 %phi.bo.i.i, 1073741824
  %phi.sel.i.i = select i1 %phi.cmp.i.i, i32 720912, i32 720896
  br label %snd_hda_codec_amp_update.exit

snd_hda_codec_amp_update.exit:                    ; preds = %cond.false.i.i.i.i, %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge
  %cond.i.i.i.i = phi i32 [ %phi.sel.i.i, %cond.false.i.i.i.i ], [ 720896, %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %val)
  %cmp.not = icmp eq i32 %val, 0
  %add = add i32 %val, %ofs
  %spec.select = select i1 %cmp.not, i32 0, i32 %add
  %26 = call i32 @llvm.umin.i32(i32 %spec.select, i32 %cond.i.i.i)
  %shl.i.i = shl i32 %conv.i.i.i, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ch)
  %tobool.not.i.i14 = icmp eq i32 %ch, 0
  %cond.i.i15 = select i1 %tobool.not.i.i14, i32 8192, i32 0
  %or.i.i = or i32 %cond.i.i15, %shl.i.i
  %cond3.i.i = select i1 %cmp.i.i, i32 32768, i32 0
  %or1.i.i = or i32 %or.i.i, %cond3.i.i
  %or4.i.i = or i32 %or1.i.i, %idx
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %spec.select.i.i = or i32 %or4.i.i, %cond.i.i.i.i
  %call1.i = call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %spec.select.i.i, i32 noundef 127, i32 noundef %26) #21
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_tlv(ptr nocapture noundef readonly %kcontrol, i32 %op_flag, i32 noundef %size, ptr noundef %_tlv) #0 align 64 {
entry:
  %val.i.i.i = alloca i32, align 4
  %tlv = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tlv) #21
  %0 = getelementptr inbounds [4 x i32], ptr %tlv, i32 0, i32 1
  %1 = getelementptr inbounds [4 x i32], ptr %tlv, i32 0, i32 2
  %2 = getelementptr inbounds [4 x i32], ptr %tlv, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %size)
  %cmp = icmp ult i32 %size, 16
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %private_data.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %3 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data.i, align 4
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %5 = ptrtoint ptr %private_value.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %private_value.i, align 4
  %conv.i = trunc i32 %6 to i16
  %conv.i.i.i = and i32 %6, 65535
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %4, i32 0, i32 18
  %7 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %8 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %conv.i)
  %cmp.i.i.i = icmp ugt i16 %8, %conv.i
  br i1 %cmp.i.i.i, label %if.end.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.end.if.then.i.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %4, i32 0, i32 17
  %9 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %10, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %4, i32 0, i32 14
  %11 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %12, i32 %sub.i.i.i
  %13 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i = and i32 %14, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %get_wcaps.exit.i.i.if.then.i.i_crit_edge, label %get_wcaps.exit.i.i.if.end.i.i5_crit_edge

get_wcaps.exit.i.i.if.end.i.i5_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i5

get_wcaps.exit.i.i.if.then.i.i_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %get_wcaps.exit.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i_crit_edge, %if.end.if.then.i.i_crit_edge
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %4, i32 0, i32 5
  %15 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %afg.i.i, align 4
  br label %if.end.i.i5

if.end.i.i5:                                      ; preds = %if.then.i.i, %get_wcaps.exit.i.i.if.end.i.i5_crit_edge
  %nid.addr.0.i.i = phi i16 [ %conv.i, %get_wcaps.exit.i.i.if.end.i.i5_crit_edge ], [ %16, %if.then.i.i ]
  %17 = and i32 %6, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i.not.i = icmp eq i32 %17, 0
  %cond.i.i = select i1 %cmp.i.not.i, i32 13, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %18 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !339
  %call.i.i.i4 = call i32 @_snd_hdac_read_parm(ptr noundef %4, i16 noundef zeroext %nid.addr.0.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i4)
  %cmp.i6.i.i = icmp slt i32 %call.i.i.i4, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i5.get_ctl_amp_tlv.exit_crit_edge, label %cond.false.i.i.i

if.end.i.i5.get_ctl_amp_tlv.exit_crit_edge:       ; preds = %if.end.i.i5
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_ctl_amp_tlv.exit

cond.false.i.i.i:                                 ; preds = %if.end.i.i5
  call void @__sanitizer_cov_trace_pc() #23
  %19 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %val.i.i.i, align 4
  br label %get_ctl_amp_tlv.exit

get_ctl_amp_tlv.exit:                             ; preds = %cond.false.i.i.i, %if.end.i.i5.get_ctl_amp_tlv.exit_crit_edge
  %cond.i.i.i = phi i32 [ %20, %cond.false.i.i.i ], [ -1, %if.end.i.i5.get_ctl_amp_tlv.exit_crit_edge ]
  %21 = and i32 %6, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i = icmp eq i32 %21, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %and9.i = lshr i32 %cond.i.i.i, 16
  %shr10.i = and i32 %and9.i, 127
  %22 = mul nuw nsw i32 %shr10.i, 25
  %mul.i = add nuw nsw i32 %22, 25
  %and17.i = and i32 %cond.i.i.i, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  %or.cond.i = select i1 %tobool.not.i, i1 %tobool18.not.i, i1 false
  %or.i = or i32 %mul.i, 65536
  %val2.0.i = select i1 %or.cond.i, i32 %mul.i, i32 %or.i
  %shr4.i = lshr i32 %6, 23
  %and5.i = and i32 %shr4.i, 63
  %and11.i = and i32 %cond.i.i.i, 127
  %add13.i = sub nsw i32 %and5.i, %and11.i
  %mul14.i = mul nsw i32 %mul.i, %add13.i
  %23 = ptrtoint ptr %tlv to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %tlv, align 4
  %24 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 8, ptr %0, align 4
  %25 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %mul14.i, ptr %1, align 4
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %val2.0.i, ptr %2, align 4
  call void @__might_fault(ptr noundef nonnull @.str.60, i32 noundef 174) #21
  %call.i.i = call zeroext i1 @should_fail_usercopy() #21
  br i1 %call.i.i, label %get_ctl_amp_tlv.exit.cleanup_crit_edge, label %if.end.i.i

get_ctl_amp_tlv.exit.cleanup_crit_edge:           ; preds = %get_ctl_amp_tlv.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i.i:                                       ; preds = %get_ctl_amp_tlv.exit
  %27 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_tlv, i32 16, i32 -1226833920) #27, !srcloc !347
  %asmresult.i.i = extractvalue { i32, i32 } %27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %tlv, i32 noundef 16) #21
  %call.i1.i.i = call i32 @arm_copy_to_user(ptr noundef %_tlv, ptr noundef nonnull %tlv, i32 noundef 16) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i.i)
  %tobool.not = icmp eq i32 %call.i1.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i.cleanup_crit_edge, %get_ctl_amp_tlv.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ -14, %get_ctl_amp_tlv.exit.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tlv) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_set_vmaster_tlv(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %dir, ptr nocapture noundef writeonly %tlv) #0 align 64 {
entry:
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %conv.i.i = zext i16 %nid to i32
  %start_nid.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i.i, align 4
  %conv1.i.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp.i.i = icmp ugt i16 %1, %nid
  br i1 %cmp.i.i, label %entry.if.then.i_crit_edge, label %lor.lhs.false.i.i

entry.if.then.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

lor.lhs.false.i.i:                                ; preds = %entry
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %3, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %conv.i.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %conv.i.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.if.then.i_crit_edge

lor.lhs.false.i.i.if.then.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %conv.i.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %5, i32 %sub.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %get_wcaps.exit.i.if.then.i_crit_edge, label %get_wcaps.exit.i.if.end.i_crit_edge

get_wcaps.exit.i.if.end.i_crit_edge:              ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

get_wcaps.exit.i.if.then.i_crit_edge:             ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.then.i:                                        ; preds = %get_wcaps.exit.i.if.then.i_crit_edge, %lor.lhs.false.i.i.if.then.i_crit_edge, %entry.if.then.i_crit_edge
  %afg.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %8 = ptrtoint ptr %afg.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %afg.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %get_wcaps.exit.i.if.end.i_crit_edge
  %nid.addr.0.i = phi i16 [ %nid, %get_wcaps.exit.i.if.end.i_crit_edge ], [ %9, %if.then.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i = icmp eq i32 %dir, 1
  %cond.i = select i1 %cmp.i, i32 18, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #21
  %10 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i, align 4, !annotation !339
  %call.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid.addr.0.i, i32 noundef %cond.i, ptr noundef nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i6.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.query_amp_caps.exit_crit_edge, label %cond.false.i.i

if.end.i.query_amp_caps.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %query_amp_caps.exit

cond.false.i.i:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i, align 4
  br label %query_amp_caps.exit

query_amp_caps.exit:                              ; preds = %cond.false.i.i, %if.end.i.query_amp_caps.exit_crit_edge
  %cond.i.i = phi i32 [ %12, %cond.false.i.i ], [ -1, %if.end.i.query_amp_caps.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  %and = lshr i32 %cond.i.i, 8
  %shr = and i32 %and, 127
  %and1 = lshr i32 %cond.i.i, 16
  %shr2 = and i32 %and1, 127
  %13 = mul nuw nsw i32 %shr2, 25
  %mul = add nuw nsw i32 %13, 25
  %14 = ptrtoint ptr %tlv to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %tlv, align 4
  %arrayidx3 = getelementptr i32, ptr %tlv, i32 1
  %15 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 8, ptr %arrayidx3, align 4
  %16 = mul nuw nsw i32 %shr, %mul
  %mul4 = sub nsw i32 0, %16
  %arrayidx5 = getelementptr i32, ptr %tlv, i32 2
  %17 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %mul4, ptr %arrayidx5, align 4
  %arrayidx6 = getelementptr i32, ptr %tlv, i32 3
  %18 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %mul, ptr %arrayidx6, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @snd_hda_find_mixer_ctl(ptr nocapture noundef readonly %codec, ptr nocapture noundef readonly %name) #0 align 64 {
entry:
  %id.i = alloca %struct.snd_ctl_elem_id, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i) #21
  %0 = call ptr @memset(ptr %id.i, i32 0, i32 60)
  %iface.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i, i32 0, i32 1
  %1 = ptrtoint ptr %iface.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 2, ptr %iface.i, align 4
  %index.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i, i32 0, i32 5
  %2 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %index.i, align 4
  %call.i = tail call i32 @strlen(ptr noundef %name) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %call.i)
  %cmp.i = icmp ugt i32 %call.i, 43
  br i1 %cmp.i, label %do.end.i, label %if.end21.i, !prof !338

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1621, i32 noundef 9, ptr noundef null) #21
  br label %find_mixer_ctl.exit

if.end21.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %name22.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i, i32 0, i32 4
  %call23.i = call ptr @strcpy(ptr noundef %name22.i, ptr noundef %name) #28
  %card.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %3 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %card.i, align 4
  %call24.i = call ptr @snd_ctl_find_id(ptr noundef %4, ptr noundef nonnull %id.i) #21
  br label %find_mixer_ctl.exit

find_mixer_ctl.exit:                              ; preds = %if.end21.i, %do.end.i
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %call24.i, %if.end21.i ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i) #21
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_ctl_add(ptr noundef %codec, i16 noundef zeroext %nid, ptr noundef %kctl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %subdevice = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 3
  %0 = ptrtoint ptr %subdevice to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %subdevice, align 4
  %and = and i32 %1, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end7, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %cmp = icmp eq i16 %nid, 0
  br i1 %cmp, label %if.then4, label %if.then.if.end7.thread_crit_edge

if.then.if.end7.thread_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.thread

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %conv6 = trunc i32 %3 to i16
  br label %if.end7.thread

if.end7.thread:                                   ; preds = %if.then4, %if.then.if.end7.thread_crit_edge
  %nid.addr.0.ph = phi i16 [ %nid, %if.then.if.end7.thread_crit_edge ], [ %conv6, %if.then4 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp11.not60 = icmp slt i32 %1, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid.addr.0.ph)
  %cmp1461 = icmp eq i16 %nid.addr.0.ph, 0
  %or.cond62 = select i1 %cmp11.not60, i1 %cmp1461, i1 false
  %conv2063 = trunc i32 %1 to i16
  %nid.addr.164 = select i1 %or.cond62, i16 %conv2063, i16 %nid.addr.0.ph
  br label %if.then26

if.end7:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp11.not = icmp slt i32 %1, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %cmp14 = icmp eq i16 %nid, 0
  %or.cond = and i1 %cmp14, %cmp11.not
  %conv20 = trunc i32 %1 to i16
  %nid.addr.1 = select i1 %or.cond, i16 %conv20, i16 %nid
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %1)
  %tobool25.not = icmp ult i32 %1, 1073741824
  br i1 %tobool25.not, label %if.end7.if.end29_crit_edge, label %if.end7.if.then26_crit_edge

if.end7.if.then26_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26

if.end7.if.end29_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then26:                                        ; preds = %if.end7.if.then26_crit_edge, %if.end7.thread
  %nid.addr.168 = phi i16 [ %nid.addr.164, %if.end7.thread ], [ %nid.addr.1, %if.end7.if.then26_crit_edge ]
  %flags.066 = phi i16 [ 1, %if.end7.thread ], [ 0, %if.end7.if.then26_crit_edge ]
  %4 = ptrtoint ptr %subdevice to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %subdevice, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %if.end7.if.end29_crit_edge
  %nid.addr.169 = phi i16 [ %nid.addr.168, %if.then26 ], [ %nid.addr.1, %if.end7.if.end29_crit_edge ]
  %flags.067 = phi i16 [ %flags.066, %if.then26 ], [ 0, %if.end7.if.end29_crit_edge ]
  %card = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %5 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %card, align 4
  %call = tail call i32 @snd_ctl_add(ptr noundef %6, ptr noundef %kctl) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp30 = icmp slt i32 %call, 0
  br i1 %cmp30, label %if.end29.cleanup_crit_edge, label %if.end33

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33:                                         ; preds = %if.end29
  %mixers = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %call34 = tail call ptr @snd_array_new(ptr noundef %mixers) #21
  %tobool35.not = icmp eq ptr %call34, null
  br i1 %tobool35.not, label %if.end33.cleanup_crit_edge, label %if.end37

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end37:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  %7 = ptrtoint ptr %call34 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %kctl, ptr %call34, align 4
  %nid39 = getelementptr inbounds %struct.hda_nid_item, ptr %call34, i32 0, i32 2
  %8 = ptrtoint ptr %nid39 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %nid.addr.169, ptr %nid39, align 4
  %flags40 = getelementptr inbounds %struct.hda_nid_item, ptr %call34, i32 0, i32 3
  %9 = ptrtoint ptr %flags40 to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %flags.067, ptr %flags40, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.end33.cleanup_crit_edge, %if.end29.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end37 ], [ %call, %if.end29.cleanup_crit_edge ], [ -12, %if.end33.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_add_nid(ptr noundef %codec, ptr noundef %kctl, i32 noundef %index, i16 noundef zeroext %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %cmp.not = icmp eq i16 %nid, 0
  br i1 %cmp.not, label %do.end, label %if.then

if.then:                                          ; preds = %entry
  %nids = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 16
  %call = tail call ptr @snd_array_new(ptr noundef %nids) #21
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %kctl, ptr %call, align 4
  %index4 = getelementptr inbounds %struct.hda_nid_item, ptr %call, i32 0, i32 1
  %1 = ptrtoint ptr %index4 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %index, ptr %index4, align 4
  %nid5 = getelementptr inbounds %struct.hda_nid_item, ptr %call, i32 0, i32 2
  %2 = ptrtoint ptr %nid5 to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 %nid, ptr %nid5, align 4
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %index8 = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 5
  %3 = ptrtoint ptr %index8 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %index8, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.27, ptr noundef %name, i32 noundef %4, i32 noundef %index) #25
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %do.end ], [ -12, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_remove(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_lock_devices(ptr noundef readonly %bus) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %card1 = getelementptr inbounds %struct.hda_bus, ptr %bus, i32 0, i32 1
  %0 = ptrtoint ptr %card1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %card1, align 4
  %files_lock = getelementptr inbounds %struct.snd_card, ptr %1, i32 0, i32 24
  tail call void @_raw_spin_lock(ptr noundef %files_lock) #21
  %shutdown = getelementptr inbounds %struct.snd_card, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %shutdown, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup47_crit_edge

entry.cleanup47_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup47

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %shutdown to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %shutdown, align 8
  %ctl_files = getelementptr inbounds %struct.snd_card, ptr %1, i32 0, i32 19
  %5 = ptrtoint ptr %ctl_files to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %ctl_files, align 4
  %cmp.i.not = icmp eq ptr %6, %ctl_files
  br i1 %cmp.i.not, label %if.end5, label %if.end.err_clear_crit_edge

if.end.err_clear_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_clear

if.end5:                                          ; preds = %if.end
  %codec_list = getelementptr inbounds %struct.hdac_bus, ptr %bus, i32 0, i32 11
  %7 = ptrtoint ptr %codec_list to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn69 = load ptr, ptr %codec_list, align 4
  %cmp.not70 = icmp eq ptr %.pn69, %codec_list
  br i1 %cmp.not70, label %if.end5.cleanup47_crit_edge, label %if.end5.for.body_crit_edge

if.end5.for.body_crit_edge:                       ; preds = %if.end5
  br label %for.body

if.end5.cleanup47_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup47

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %for.body.for.cond.loopexit_crit_edge
  %8 = ptrtoint ptr %.pn71 to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn = load ptr, ptr %.pn71, align 4
  %cmp.not = icmp eq ptr %.pn, %codec_list
  br i1 %cmp.not, label %for.cond.loopexit.cleanup47_crit_edge, label %for.cond.loopexit.for.body_crit_edge

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.cond.loopexit.cleanup47_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup47

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %if.end5.for.body_crit_edge
  %.pn71 = phi ptr [ %.pn, %for.cond.loopexit.for.body_crit_edge ], [ %.pn69, %if.end5.for.body_crit_edge ]
  %pcm_list_head = getelementptr i8, ptr %.pn71, i32 348
  %9 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn6466 = load ptr, ptr %pcm_list_head, align 4
  %cmp16.not67 = icmp eq ptr %.pn6466, %pcm_list_head
  br i1 %cmp16.not67, label %for.body.for.cond.loopexit_crit_edge, label %for.body.for.body18_crit_edge

for.body.for.body18_crit_edge:                    ; preds = %for.body
  br label %for.body18

for.body.for.cond.loopexit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

for.body18:                                       ; preds = %for.inc.for.body18_crit_edge, %for.body.for.body18_crit_edge
  %.pn6468 = phi ptr [ %.pn64, %for.inc.for.body18_crit_edge ], [ %.pn6466, %for.body.for.body18_crit_edge ]
  %pcm = getelementptr i8, ptr %.pn6468, i32 -12
  %10 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pcm, align 8
  %tobool19.not = icmp eq ptr %11, null
  br i1 %tobool19.not, label %for.body18.for.inc_crit_edge, label %if.end21

for.body18.for.inc_crit_edge:                     ; preds = %for.body18
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end21:                                         ; preds = %for.body18
  %substream_opened = getelementptr inbounds %struct.snd_pcm, ptr %11, i32 0, i32 8, i32 0, i32 3
  %12 = ptrtoint ptr %substream_opened to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %substream_opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool23.not = icmp eq i32 %13, 0
  br i1 %tobool23.not, label %lor.lhs.false, label %if.end21.err_clear_crit_edge

if.end21.err_clear_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_clear

lor.lhs.false:                                    ; preds = %if.end21
  %substream_opened27 = getelementptr %struct.snd_pcm, ptr %11, i32 0, i32 8, i32 1, i32 3
  %14 = ptrtoint ptr %substream_opened27 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %substream_opened27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool28.not = icmp eq i32 %15, 0
  br i1 %tobool28.not, label %lor.lhs.false.for.inc_crit_edge, label %lor.lhs.false.err_clear_crit_edge

lor.lhs.false.err_clear_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_clear

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false.for.inc_crit_edge, %for.body18.for.inc_crit_edge
  %16 = ptrtoint ptr %.pn6468 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn64 = load ptr, ptr %.pn6468, align 4
  %cmp16.not = icmp eq ptr %.pn64, %pcm_list_head
  br i1 %cmp16.not, label %for.inc.for.cond.loopexit_crit_edge, label %for.inc.for.body18_crit_edge

for.inc.for.body18_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body18

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

err_clear:                                        ; preds = %lor.lhs.false.err_clear_crit_edge, %if.end21.err_clear_crit_edge, %if.end.err_clear_crit_edge
  %17 = ptrtoint ptr %shutdown to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %shutdown, align 8
  br label %cleanup47

cleanup47:                                        ; preds = %err_clear, %for.cond.loopexit.cleanup47_crit_edge, %if.end5.cleanup47_crit_edge, %entry.cleanup47_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5.cleanup47_crit_edge ], [ -22, %entry.cleanup47_crit_edge ], [ -22, %err_clear ], [ 0, %for.cond.loopexit.cleanup47_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %files_lock) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_unlock_devices(ptr nocapture noundef readonly %bus) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %card1 = getelementptr inbounds %struct.hda_bus, ptr %bus, i32 0, i32 1
  %0 = ptrtoint ptr %card1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %card1, align 4
  %files_lock = getelementptr inbounds %struct.snd_card, ptr %1, i32 0, i32 24
  tail call void @_raw_spin_lock(ptr noundef %files_lock) #21
  %shutdown = getelementptr inbounds %struct.snd_card, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %shutdown to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %shutdown, align 8
  tail call void @_raw_spin_unlock(ptr noundef %files_lock) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_reset(ptr noundef %codec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %0 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1, align 8
  %card1.i = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %card1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %card1.i, align 4
  %files_lock.i = getelementptr inbounds %struct.snd_card, ptr %3, i32 0, i32 24
  tail call void @_raw_spin_lock(ptr noundef %files_lock.i) #21
  %shutdown.i = getelementptr inbounds %struct.snd_card, ptr %3, i32 0, i32 25
  %4 = ptrtoint ptr %shutdown.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %shutdown.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %6 = ptrtoint ptr %shutdown.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %shutdown.i, align 8
  %ctl_files.i = getelementptr inbounds %struct.snd_card, ptr %3, i32 0, i32 19
  %7 = ptrtoint ptr %ctl_files.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %ctl_files.i, align 4
  %cmp.i.not.i = icmp eq ptr %8, %ctl_files.i
  br i1 %cmp.i.not.i, label %if.end5.i, label %if.end.i.cleanup.sink.split_crit_edge

if.end.i.cleanup.sink.split_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

if.end5.i:                                        ; preds = %if.end.i
  %codec_list.i = getelementptr inbounds %struct.hdac_bus, ptr %1, i32 0, i32 11
  %9 = ptrtoint ptr %codec_list.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn69.i = load ptr, ptr %codec_list.i, align 4
  %cmp.not70.i = icmp eq ptr %.pn69.i, %codec_list.i
  br i1 %cmp.not70.i, label %if.end5.i.if.end_crit_edge, label %if.end5.i.for.body.i_crit_edge

if.end5.i.for.body.i_crit_edge:                   ; preds = %if.end5.i
  br label %for.body.i

if.end5.i.if.end_crit_edge:                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.cond.loopexit.i:                              ; preds = %for.inc.i.for.cond.loopexit.i_crit_edge, %for.body.i.for.cond.loopexit.i_crit_edge
  %10 = ptrtoint ptr %.pn71.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn.i = load ptr, ptr %.pn71.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %codec_list.i
  br i1 %cmp.not.i, label %for.cond.loopexit.i.if.end_crit_edge, label %for.cond.loopexit.i.for.body.i_crit_edge

for.cond.loopexit.i.for.body.i_crit_edge:         ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.cond.loopexit.i.if.end_crit_edge:             ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body.i:                                       ; preds = %for.cond.loopexit.i.for.body.i_crit_edge, %if.end5.i.for.body.i_crit_edge
  %.pn71.i = phi ptr [ %.pn.i, %for.cond.loopexit.i.for.body.i_crit_edge ], [ %.pn69.i, %if.end5.i.for.body.i_crit_edge ]
  %pcm_list_head.i = getelementptr i8, ptr %.pn71.i, i32 348
  %11 = ptrtoint ptr %pcm_list_head.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn6466.i = load ptr, ptr %pcm_list_head.i, align 4
  %cmp16.not67.i = icmp eq ptr %.pn6466.i, %pcm_list_head.i
  br i1 %cmp16.not67.i, label %for.body.i.for.cond.loopexit.i_crit_edge, label %for.body.i.for.body18.i_crit_edge

for.body.i.for.body18.i_crit_edge:                ; preds = %for.body.i
  br label %for.body18.i

for.body.i.for.cond.loopexit.i_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit.i

for.body18.i:                                     ; preds = %for.inc.i.for.body18.i_crit_edge, %for.body.i.for.body18.i_crit_edge
  %.pn6468.i = phi ptr [ %.pn64.i, %for.inc.i.for.body18.i_crit_edge ], [ %.pn6466.i, %for.body.i.for.body18.i_crit_edge ]
  %pcm.i = getelementptr i8, ptr %.pn6468.i, i32 -12
  %12 = ptrtoint ptr %pcm.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pcm.i, align 8
  %tobool19.not.i = icmp eq ptr %13, null
  br i1 %tobool19.not.i, label %for.body18.i.for.inc.i_crit_edge, label %if.end21.i

for.body18.i.for.inc.i_crit_edge:                 ; preds = %for.body18.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end21.i:                                       ; preds = %for.body18.i
  %substream_opened.i = getelementptr inbounds %struct.snd_pcm, ptr %13, i32 0, i32 8, i32 0, i32 3
  %14 = ptrtoint ptr %substream_opened.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %substream_opened.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool23.not.i = icmp eq i32 %15, 0
  br i1 %tobool23.not.i, label %lor.lhs.false.i, label %if.end21.i.cleanup.sink.split_crit_edge

if.end21.i.cleanup.sink.split_crit_edge:          ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

lor.lhs.false.i:                                  ; preds = %if.end21.i
  %substream_opened27.i = getelementptr %struct.snd_pcm, ptr %13, i32 0, i32 8, i32 1, i32 3
  %16 = ptrtoint ptr %substream_opened27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %substream_opened27.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool28.not.i = icmp eq i32 %17, 0
  br i1 %tobool28.not.i, label %lor.lhs.false.i.for.inc.i_crit_edge, label %lor.lhs.false.i.cleanup.sink.split_crit_edge

lor.lhs.false.i.cleanup.sink.split_crit_edge:     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body18.i.for.inc.i_crit_edge
  %18 = ptrtoint ptr %.pn6468.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn64.i = load ptr, ptr %.pn6468.i, align 4
  %cmp16.not.i = icmp eq ptr %.pn64.i, %pcm_list_head.i
  br i1 %cmp16.not.i, label %for.inc.i.for.cond.loopexit.i_crit_edge, label %for.inc.i.for.body18.i_crit_edge

for.inc.i.for.body18.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body18.i

for.inc.i.for.cond.loopexit.i_crit_edge:          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit.i

if.end:                                           ; preds = %for.cond.loopexit.i.if.end_crit_edge, %if.end5.i.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %files_lock.i) #21
  tail call void @device_release_driver(ptr noundef %codec) #21
  %19 = ptrtoint ptr %card1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %card1.i, align 4
  %files_lock.i5 = getelementptr inbounds %struct.snd_card, ptr %20, i32 0, i32 24
  tail call void @_raw_spin_lock(ptr noundef %files_lock.i5) #21
  %shutdown.i6 = getelementptr inbounds %struct.snd_card, ptr %20, i32 0, i32 25
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end, %lor.lhs.false.i.cleanup.sink.split_crit_edge, %if.end21.i.cleanup.sink.split_crit_edge, %if.end.i.cleanup.sink.split_crit_edge
  %shutdown.i.sink = phi ptr [ %shutdown.i6, %if.end ], [ %shutdown.i, %if.end.i.cleanup.sink.split_crit_edge ], [ %shutdown.i, %lor.lhs.false.i.cleanup.sink.split_crit_edge ], [ %shutdown.i, %if.end21.i.cleanup.sink.split_crit_edge ]
  %files_lock.i.sink.ph = phi ptr [ %files_lock.i5, %if.end ], [ %files_lock.i, %if.end.i.cleanup.sink.split_crit_edge ], [ %files_lock.i, %lor.lhs.false.i.cleanup.sink.split_crit_edge ], [ %files_lock.i, %if.end21.i.cleanup.sink.split_crit_edge ]
  %retval.0.ph = phi i32 [ 0, %if.end ], [ -16, %if.end.i.cleanup.sink.split_crit_edge ], [ -16, %lor.lhs.false.i.cleanup.sink.split_crit_edge ], [ -16, %if.end21.i.cleanup.sink.split_crit_edge ]
  %21 = ptrtoint ptr %shutdown.i.sink to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %shutdown.i.sink, align 8
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  %files_lock.i.sink = phi ptr [ %files_lock.i, %entry.cleanup_crit_edge ], [ %files_lock.i.sink.ph, %cleanup.sink.split ]
  %retval.0 = phi i32 [ -16, %entry.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  tail call void @_raw_spin_unlock(ptr noundef %files_lock.i.sink) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_release_driver(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__snd_hda_add_vmaster(ptr noundef %codec, ptr noundef %name, ptr noundef %tlv, ptr nocapture noundef readonly %followers, ptr noundef %suffix, i1 noundef zeroext %init_follower_vol, i32 noundef %access, ptr noundef writeonly %ctl_ret) #0 align 64 {
entry:
  %tmpname.i60 = alloca [44 x i8], align 1
  %tmpname.i = alloca [44 x i8], align 1
  %arg = alloca %struct.follower_init_arg, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %ctl_ret, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %ctl_ret to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %ctl_ret, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %mixers.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15, i32 4
  %1 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %list.i, align 8
  %3 = ptrtoint ptr %mixers.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mixers.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp55.not.i = icmp eq i32 %4, 0
  br i1 %cmp55.not.i, label %if.end.do.body_crit_edge, label %for.body.lr.ph.i

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

for.body.lr.ph.i:                                 ; preds = %if.end
  %tobool6.not.i = icmp eq ptr %suffix, null
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc25.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.056.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc25.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.hda_nid_item, ptr %2, i32 %i.056.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc25.i_crit_edge, label %lor.lhs.false.i

for.body.i.for.inc25.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %iface.i = getelementptr inbounds %struct.snd_kcontrol, ptr %6, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %iface.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %iface.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %cmp2.not.i = icmp eq i32 %8, 2
  br i1 %cmp2.not.i, label %for.cond3.preheader.i, label %lor.lhs.false.i.for.inc25.i_crit_edge

lor.lhs.false.i.for.inc25.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i

for.cond3.preheader.i:                            ; preds = %lor.lhs.false.i
  %9 = ptrtoint ptr %followers to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %followers, align 4
  %tobool4.not53.i = icmp eq ptr %10, null
  br i1 %tobool4.not53.i, label %for.cond3.preheader.i.for.inc25.i_crit_edge, label %for.body5.lr.ph.i

for.cond3.preheader.i.for.inc25.i_crit_edge:      ; preds = %for.cond3.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i

for.body5.lr.ph.i:                                ; preds = %for.cond3.preheader.i
  %name11.i = getelementptr inbounds %struct.snd_kcontrol, ptr %6, i32 0, i32 1, i32 4
  br label %for.body5.i

for.body5.i:                                      ; preds = %for.inc.i.for.body5.i_crit_edge, %for.body5.lr.ph.i
  %11 = phi ptr [ %10, %for.body5.lr.ph.i ], [ %14, %for.inc.i.for.body5.i_crit_edge ]
  %s.054.i = phi ptr [ %followers, %for.body5.lr.ph.i ], [ %incdec.ptr.i, %for.inc.i.for.body5.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %tmpname.i) #21
  %12 = call ptr @memset(ptr %tmpname.i, i32 255, i32 44)
  br i1 %tobool6.not.i, label %for.body5.i.if.end9.i_crit_edge, label %if.then7.i

for.body5.i.if.end9.i_crit_edge:                  ; preds = %for.body5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.then7.i:                                       ; preds = %for.body5.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %tmpname.i, i32 noundef 44, ptr noundef nonnull @.str.61, ptr noundef nonnull %11, ptr noundef nonnull %suffix) #21
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then7.i, %for.body5.i.if.end9.i_crit_edge
  %name.0.i = phi ptr [ %tmpname.i, %if.then7.i ], [ %11, %for.body5.i.if.end9.i_crit_edge ]
  %call13.i = call i32 @strcmp(ptr noundef %name11.i, ptr noundef nonnull %name.0.i) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %tmpname.i) #21
  br i1 %tobool14.not.i, label %if.end9, label %for.inc.i

for.inc.i:                                        ; preds = %if.end9.i
  %incdec.ptr.i = getelementptr ptr, ptr %s.054.i, i32 1
  %13 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool4.not.i = icmp eq ptr %14, null
  br i1 %tobool4.not.i, label %for.inc.i.for.inc25.i_crit_edge, label %for.inc.i.for.body5.i_crit_edge

for.inc.i.for.body5.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body5.i

for.inc.i.for.inc25.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i

for.inc25.i:                                      ; preds = %for.inc.i.for.inc25.i_crit_edge, %for.cond3.preheader.i.for.inc25.i_crit_edge, %lor.lhs.false.i.for.inc25.i_crit_edge, %for.body.i.for.inc25.i_crit_edge
  %inc.i = add nuw i32 %i.056.i, 1
  %15 = ptrtoint ptr %mixers.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mixers.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %16
  br i1 %cmp.i, label %for.inc25.i.for.body.i_crit_edge, label %for.inc25.i.do.body_crit_edge

for.inc25.i.do.body_crit_edge:                    ; preds = %for.inc25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

for.inc25.i.for.body.i_crit_edge:                 ; preds = %for.inc25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

do.body:                                          ; preds = %for.inc25.i.do.body_crit_edge, %if.end.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__snd_hda_add_vmaster.__UNIQUE_ID_ddebug245, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__snd_hda_add_vmaster, %if.then7)) #21
          to label %cleanup [label %if.then7], !srcloc !340

if.then7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__snd_hda_add_vmaster.__UNIQUE_ID_ddebug245, ptr noundef %codec, ptr noundef nonnull @.str.30, ptr noundef %name) #21
  br label %cleanup

if.end9:                                          ; preds = %if.end9.i
  %call10 = tail call ptr @snd_ctl_make_virtual_master(ptr noundef %name, ptr noundef %tlv) #21
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.cleanup_crit_edge, label %if.end13

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  %access14 = getelementptr inbounds %struct.snd_kcontrol, ptr %call10, i32 1, i32 0, i32 1
  %17 = ptrtoint ptr %access14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %access14, align 4
  %or = or i32 %18, %access
  store i32 %or, ptr %access14, align 4
  %subdevice.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call10, i32 0, i32 1, i32 3
  %19 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %subdevice.i, align 4
  %and.i = and i32 %20, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i55 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i55, label %if.end7.i, label %if.then.i

if.then.i:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call10, i32 0, i32 7
  %21 = ptrtoint ptr %private_value.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %private_value.i, align 4
  %conv6.i = trunc i32 %22 to i16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp11.not60.i = icmp slt i32 %20, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv6.i)
  %cmp1461.i = icmp eq i16 %conv6.i, 0
  %or.cond62.i = select i1 %cmp11.not60.i, i1 %cmp1461.i, i1 false
  %conv2063.i = trunc i32 %20 to i16
  %nid.addr.164.i = select i1 %or.cond62.i, i16 %conv2063.i, i16 %conv6.i
  br label %if.then26.i

if.end7.i:                                        ; preds = %if.end13
  %23 = tail call i32 @llvm.smin.i32(i32 %20, i32 0)
  %24 = trunc i32 %23 to i16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %20)
  %tobool25.not.i = icmp ult i32 %20, 1073741824
  br i1 %tobool25.not.i, label %if.end7.i.if.end29.i_crit_edge, label %if.end7.i.if.then26.i_crit_edge

if.end7.i.if.then26.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i

if.end7.i.if.end29.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then26.i:                                      ; preds = %if.end7.i.if.then26.i_crit_edge, %if.then.i
  %nid.addr.168.i = phi i16 [ %nid.addr.164.i, %if.then.i ], [ %24, %if.end7.i.if.then26.i_crit_edge ]
  %flags.066.i = phi i16 [ 1, %if.then.i ], [ 0, %if.end7.i.if.then26.i_crit_edge ]
  %25 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %subdevice.i, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then26.i, %if.end7.i.if.end29.i_crit_edge
  %nid.addr.169.i = phi i16 [ %nid.addr.168.i, %if.then26.i ], [ %24, %if.end7.i.if.end29.i_crit_edge ]
  %flags.067.i = phi i16 [ %flags.066.i, %if.then26.i ], [ 0, %if.end7.i.if.end29.i_crit_edge ]
  %card.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %26 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %card.i, align 4
  %call.i56 = tail call i32 @snd_ctl_add(ptr noundef %27, ptr noundef nonnull %call10) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i56)
  %cmp30.i = icmp slt i32 %call.i56, 0
  br i1 %cmp30.i, label %if.end29.i.cleanup_crit_edge, label %if.end33.i

if.end29.i.cleanup_crit_edge:                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33.i:                                       ; preds = %if.end29.i
  %call34.i = tail call ptr @snd_array_new(ptr noundef %mixers.i) #21
  %tobool35.not.i = icmp eq ptr %call34.i, null
  br i1 %tobool35.not.i, label %if.end33.i.cleanup_crit_edge, label %if.end18

if.end33.i.cleanup_crit_edge:                     ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end18:                                         ; preds = %if.end33.i
  %28 = ptrtoint ptr %call34.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %call10, ptr %call34.i, align 4
  %nid39.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 2
  %29 = ptrtoint ptr %nid39.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %nid.addr.169.i, ptr %nid39.i, align 4
  %flags40.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 3
  %30 = ptrtoint ptr %flags40.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %flags.067.i, ptr %flags40.i, align 2
  %31 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %list.i, align 8
  %33 = ptrtoint ptr %mixers.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mixers.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp55.not.i63 = icmp eq i32 %34, 0
  br i1 %cmp55.not.i63, label %if.end18.if.end22_crit_edge, label %if.end18.for.body.i69_crit_edge

if.end18.for.body.i69_crit_edge:                  ; preds = %if.end18
  br label %for.body.i69

if.end18.if.end22_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

for.body.i69:                                     ; preds = %for.inc25.i95.for.body.i69_crit_edge, %if.end18.for.body.i69_crit_edge
  %i.056.i66 = phi i32 [ %inc.i93, %for.inc25.i95.for.body.i69_crit_edge ], [ 0, %if.end18.for.body.i69_crit_edge ]
  %arrayidx.i67 = getelementptr %struct.hda_nid_item, ptr %32, i32 %i.056.i66
  %35 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i67, align 4
  %tobool.not.i68 = icmp eq ptr %36, null
  br i1 %tobool.not.i68, label %for.body.i69.for.inc25.i95_crit_edge, label %lor.lhs.false.i72

for.body.i69.for.inc25.i95_crit_edge:             ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i95

lor.lhs.false.i72:                                ; preds = %for.body.i69
  %iface.i70 = getelementptr inbounds %struct.snd_kcontrol, ptr %36, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %iface.i70 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %iface.i70, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %cmp2.not.i71 = icmp eq i32 %38, 2
  br i1 %cmp2.not.i71, label %for.cond3.preheader.i74, label %lor.lhs.false.i72.for.inc25.i95_crit_edge

lor.lhs.false.i72.for.inc25.i95_crit_edge:        ; preds = %lor.lhs.false.i72
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i95

for.cond3.preheader.i74:                          ; preds = %lor.lhs.false.i72
  %39 = ptrtoint ptr %followers to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %followers, align 4
  %tobool4.not53.i73 = icmp eq ptr %40, null
  br i1 %tobool4.not53.i73, label %for.cond3.preheader.i74.for.inc25.i95_crit_edge, label %for.body5.lr.ph.i76

for.cond3.preheader.i74.for.inc25.i95_crit_edge:  ; preds = %for.cond3.preheader.i74
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i95

for.body5.lr.ph.i76:                              ; preds = %for.cond3.preheader.i74
  %name11.i75 = getelementptr inbounds %struct.snd_kcontrol, ptr %36, i32 0, i32 1, i32 4
  br label %for.body5.i78

for.body5.i78:                                    ; preds = %for.inc.i91.for.body5.i78_crit_edge, %for.body5.lr.ph.i76
  %41 = phi ptr [ %40, %for.body5.lr.ph.i76 ], [ %44, %for.inc.i91.for.body5.i78_crit_edge ]
  %s.054.i77 = phi ptr [ %followers, %for.body5.lr.ph.i76 ], [ %incdec.ptr.i89, %for.inc.i91.for.body5.i78_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %tmpname.i60) #21
  %42 = call ptr @memset(ptr %tmpname.i60, i32 255, i32 44)
  br i1 %tobool6.not.i, label %for.body5.i78.if.end9.i84_crit_edge, label %if.then7.i80

for.body5.i78.if.end9.i84_crit_edge:              ; preds = %for.body5.i78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i84

if.then7.i80:                                     ; preds = %for.body5.i78
  call void @__sanitizer_cov_trace_pc() #23
  %call.i79 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %tmpname.i60, i32 noundef 44, ptr noundef nonnull @.str.61, ptr noundef nonnull %41, ptr noundef nonnull %suffix) #21
  br label %if.end9.i84

if.end9.i84:                                      ; preds = %if.then7.i80, %for.body5.i78.if.end9.i84_crit_edge
  %name.0.i81 = phi ptr [ %tmpname.i60, %if.then7.i80 ], [ %41, %for.body5.i78.if.end9.i84_crit_edge ]
  %call13.i82 = call i32 @strcmp(ptr noundef %name11.i75, ptr noundef nonnull %name.0.i81) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i82)
  %tobool14.not.i83 = icmp eq i32 %call13.i82, 0
  br i1 %tobool14.not.i83, label %if.then15.i87, label %for.inc.i91

if.then15.i87:                                    ; preds = %if.end9.i84
  %call.i.i = tail call i32 @_snd_ctl_add_follower(ptr noundef nonnull %call10, ptr noundef nonnull %36, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool17.not.i86 = icmp eq i32 %call.i.i, 0
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %tmpname.i60) #21
  br i1 %tobool17.not.i86, label %if.then15.i87.for.inc25.i95_crit_edge, label %map_followers.exit97

if.then15.i87.for.inc25.i95_crit_edge:            ; preds = %if.then15.i87
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i95

for.inc.i91:                                      ; preds = %if.end9.i84
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %tmpname.i60) #21
  %incdec.ptr.i89 = getelementptr ptr, ptr %s.054.i77, i32 1
  %43 = ptrtoint ptr %incdec.ptr.i89 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %incdec.ptr.i89, align 4
  %tobool4.not.i90 = icmp eq ptr %44, null
  br i1 %tobool4.not.i90, label %for.inc.i91.for.inc25.i95_crit_edge, label %for.inc.i91.for.body5.i78_crit_edge

for.inc.i91.for.body5.i78_crit_edge:              ; preds = %for.inc.i91
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body5.i78

for.inc.i91.for.inc25.i95_crit_edge:              ; preds = %for.inc.i91
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc25.i95

for.inc25.i95:                                    ; preds = %for.inc.i91.for.inc25.i95_crit_edge, %if.then15.i87.for.inc25.i95_crit_edge, %for.cond3.preheader.i74.for.inc25.i95_crit_edge, %lor.lhs.false.i72.for.inc25.i95_crit_edge, %for.body.i69.for.inc25.i95_crit_edge
  %inc.i93 = add nuw i32 %i.056.i66, 1
  %45 = ptrtoint ptr %mixers.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mixers.i, align 8
  %cmp.i94 = icmp ult i32 %inc.i93, %46
  br i1 %cmp.i94, label %for.inc25.i95.for.body.i69_crit_edge, label %for.inc25.i95.if.end22_crit_edge

for.inc25.i95.if.end22_crit_edge:                 ; preds = %for.inc25.i95
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

for.inc25.i95.for.body.i69_crit_edge:             ; preds = %for.inc25.i95
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i69

map_followers.exit97:                             ; preds = %if.then15.i87
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp20 = icmp slt i32 %call.i.i, 0
  br i1 %cmp20, label %map_followers.exit97.cleanup_crit_edge, label %map_followers.exit97.if.end22_crit_edge

map_followers.exit97.if.end22_crit_edge:          ; preds = %map_followers.exit97
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

map_followers.exit97.cleanup_crit_edge:           ; preds = %map_followers.exit97
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end22:                                         ; preds = %map_followers.exit97.if.end22_crit_edge, %for.inc25.i95.if.end22_crit_edge, %if.end18.if.end22_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %47 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %47, i32 noundef 3520, i32 noundef 712) #26
  %tobool.not.i98 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i98, label %if.end22.put_kctl_with_value.exit_crit_edge, label %if.end.i

if.end22.put_kctl_with_value.exit_crit_edge:      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %put_kctl_with_value.exit

if.end.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  %value.i = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %call7.i.i.i, i32 0, i32 2
  %48 = ptrtoint ptr %value.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %value.i, align 8
  %arrayidx2.i = getelementptr [128 x i32], ptr %value.i, i32 0, i32 1
  %49 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %arrayidx2.i, align 4
  %put.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call10, i32 0, i32 5
  %50 = ptrtoint ptr %put.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %put.i, align 4
  %call3.i = tail call i32 %51(ptr noundef nonnull %call10, ptr noundef nonnull %call7.i.i.i) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %put_kctl_with_value.exit

put_kctl_with_value.exit:                         ; preds = %if.end.i, %if.end22.put_kctl_with_value.exit_crit_edge
  br i1 %init_follower_vol, label %if.then25, label %put_kctl_with_value.exit.if.end29_crit_edge

put_kctl_with_value.exit.if.end29_crit_edge:      ; preds = %put_kctl_with_value.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then25:                                        ; preds = %put_kctl_with_value.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg) #21
  %52 = getelementptr inbounds %struct.follower_init_arg, ptr %arg, i32 0, i32 1
  %53 = ptrtoint ptr %arg to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %codec, ptr %arg, align 4
  %54 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %52, align 4
  %tobool27.not = icmp eq ptr %tlv, null
  %cond = select i1 %tobool27.not, ptr @init_follower_unmute, ptr @init_follower_0dB
  %call28 = call i32 @snd_ctl_apply_vmaster_followers(ptr noundef nonnull %call10, ptr noundef nonnull %cond, ptr noundef nonnull %arg) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg) #21
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %put_kctl_with_value.exit.if.end29_crit_edge
  br i1 %tobool.not, label %if.end29.cleanup_crit_edge, label %if.then31

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then31:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  %55 = ptrtoint ptr %ctl_ret to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %call10, ptr %ctl_ret, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then31, %if.end29.cleanup_crit_edge, %map_followers.exit97.cleanup_crit_edge, %if.end33.i.cleanup_crit_edge, %if.end29.i.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.then7, %do.body
  %retval.0 = phi i32 [ 0, %if.then7 ], [ -12, %if.end9.cleanup_crit_edge ], [ %call.i.i, %map_followers.exit97.cleanup_crit_edge ], [ 0, %if.then31 ], [ 0, %if.end29.cleanup_crit_edge ], [ 0, %do.body ], [ -12, %if.end33.i.cleanup_crit_edge ], [ %call.i56, %if.end29.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_ctl_make_virtual_master(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_apply_vmaster_followers(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @init_follower_0dB(ptr noundef %follower, ptr noundef %kctl, ptr nocapture noundef %_arg) #0 align 64 {
entry:
  %val.i.i.i = alloca i32, align 4
  %_tlv = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %_tlv) #21
  %0 = getelementptr inbounds [4 x i32], ptr %_tlv, i32 0, i32 1
  %1 = getelementptr inbounds [4 x i32], ptr %_tlv, i32 0, i32 2
  %2 = getelementptr inbounds [4 x i32], ptr %_tlv, i32 0, i32 3
  %access = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 1, i32 0, i32 1
  %3 = call ptr @memset(ptr %_tlv, i32 255, i32 16)
  %4 = ptrtoint ptr %access to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %access, align 4
  %and = and i32 %5, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %tlv1 = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 6
  %6 = ptrtoint ptr %tlv1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tlv1, align 4
  %cmp.not = icmp eq ptr %7, @snd_hda_mixer_amp_tlv
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %_arg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %_arg, align 4
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %index = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 5
  %10 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %9, ptr noundef nonnull @.str.62, ptr noundef %name, i32 noundef %11) #25
  br label %cleanup

if.end:                                           ; preds = %if.then
  %private_data.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 8
  %12 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data.i, align 4
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 7
  %14 = ptrtoint ptr %private_value.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %private_value.i, align 4
  %conv.i = trunc i32 %15 to i16
  %conv.i.i.i = and i32 %15, 65535
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %13, i32 0, i32 18
  %16 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %17, i16 %conv.i)
  %cmp.i.i.i = icmp ugt i16 %17, %conv.i
  br i1 %cmp.i.i.i, label %if.end.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.end.if.then.i.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %13, i32 0, i32 17
  %18 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %19, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %13, i32 0, i32 14
  %20 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %21, i32 %sub.i.i.i
  %22 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i = and i32 %23, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %get_wcaps.exit.i.i.if.then.i.i_crit_edge, label %get_wcaps.exit.i.i.if.end.i.i_crit_edge

get_wcaps.exit.i.i.if.end.i.i_crit_edge:          ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

get_wcaps.exit.i.i.if.then.i.i_crit_edge:         ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %get_wcaps.exit.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i_crit_edge, %if.end.if.then.i.i_crit_edge
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %13, i32 0, i32 5
  %24 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %afg.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %get_wcaps.exit.i.i.if.end.i.i_crit_edge
  %nid.addr.0.i.i = phi i16 [ %conv.i, %get_wcaps.exit.i.i.if.end.i.i_crit_edge ], [ %25, %if.then.i.i ]
  %26 = and i32 %15, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp.i.not.i = icmp eq i32 %26, 0
  %cond.i.i = select i1 %cmp.i.not.i, i32 13, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %27 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !339
  %call.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %13, i16 noundef zeroext %nid.addr.0.i.i, i32 noundef %cond.i.i, ptr noundef nonnull %val.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i6.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.lor.lhs.false.thread_crit_edge, label %cond.false.i.i.i

if.end.i.i.lor.lhs.false.thread_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %lor.lhs.false.thread

cond.false.i.i.i:                                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %val.i.i.i, align 4
  br label %lor.lhs.false.thread

lor.lhs.false.thread:                             ; preds = %cond.false.i.i.i, %if.end.i.i.lor.lhs.false.thread_crit_edge
  %cond.i.i.i = phi i32 [ %29, %cond.false.i.i.i ], [ -1, %if.end.i.i.lor.lhs.false.thread_crit_edge ]
  %30 = and i32 %15, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.i = icmp eq i32 %30, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #21
  %and9.i = lshr i32 %cond.i.i.i, 16
  %shr10.i = and i32 %and9.i, 127
  %31 = mul nuw nsw i32 %shr10.i, 25
  %mul.i = add nuw nsw i32 %31, 25
  %and17.i = and i32 %cond.i.i.i, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  %or.cond.i = select i1 %tobool.not.i, i1 %tobool18.not.i, i1 false
  %or.i = or i32 %mul.i, 65536
  %val2.0.i = select i1 %or.cond.i, i32 %mul.i, i32 %or.i
  %shr4.i = lshr i32 %15, 23
  %and5.i = and i32 %shr4.i, 63
  %and11.i = and i32 %cond.i.i.i, 127
  %add13.i = sub nsw i32 %and5.i, %and11.i
  %mul14.i = mul nsw i32 %mul.i, %add13.i
  %32 = ptrtoint ptr %_tlv to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 1, ptr %_tlv, align 4
  %33 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 8, ptr %0, align 4
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %mul14.i, ptr %1, align 4
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %val2.0.i, ptr %2, align 4
  br label %if.end19

if.else:                                          ; preds = %entry
  %and9 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.else.cleanup_crit_edge, label %if.end14

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end14:                                         ; preds = %if.else
  %tlv12 = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 6
  %36 = ptrtoint ptr %tlv12 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tlv12, align 4
  %tobool15.not = icmp eq ptr %37, null
  br i1 %tobool15.not, label %if.end14.cleanup_crit_edge, label %lor.lhs.false

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end14
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %.pr = load i32, ptr %37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp17.not = icmp eq i32 %.pr, 1
  br i1 %cmp17.not, label %lor.lhs.false.if.end19_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false.if.end19_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.end19:                                         ; preds = %lor.lhs.false.if.end19_crit_edge, %lor.lhs.false.thread
  %tlv.07477 = phi ptr [ %_tlv, %lor.lhs.false.thread ], [ %37, %lor.lhs.false.if.end19_crit_edge ]
  %arrayidx20 = getelementptr i32, ptr %tlv.07477, i32 3
  %39 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx20, align 4
  %and21 = and i32 %40, -65537
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %if.end19.cleanup_crit_edge, label %if.end24

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end24:                                         ; preds = %if.end19
  %step25 = getelementptr inbounds %struct.follower_init_arg, ptr %_arg, i32 0, i32 1
  %41 = ptrtoint ptr %step25 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %step25, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool26.not = icmp eq i32 %42, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %and21)
  %cmp28.not = icmp eq i32 %42, %and21
  %or.cond = select i1 %tobool26.not, i1 true, i1 %cmp28.not
  br i1 %or.cond, label %if.end37, label %do.end32

do.end32:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  %43 = ptrtoint ptr %_arg to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %_arg, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %44, ptr noundef nonnull @.str.65, i32 noundef %42, i32 noundef %and21) #25
  br label %cleanup

if.end37:                                         ; preds = %if.end24
  %45 = ptrtoint ptr %step25 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %and21, ptr %step25, align 4
  %arrayidx39 = getelementptr i32, ptr %tlv.07477, i32 2
  %46 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx39, align 4
  %sub = sub i32 0, %47
  %div = sdiv i32 %sub, %and21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div)
  %cmp40 = icmp sgt i32 %div, 0
  br i1 %cmp40, label %if.then41, label %if.end37.cleanup_crit_edge

if.end37.cleanup_crit_edge:                       ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then41:                                        ; preds = %if.end37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %48 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %48, i32 noundef 3520, i32 noundef 712) #26
  %tobool.not.i68 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i68, label %if.then41.cleanup_crit_edge, label %if.end.i

if.then41.cleanup_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #23
  %value.i = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %call7.i.i.i, i32 0, i32 2
  %49 = ptrtoint ptr %value.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %div, ptr %value.i, align 8
  %arrayidx2.i = getelementptr [128 x i32], ptr %value.i, i32 0, i32 1
  %50 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %div, ptr %arrayidx2.i, align 4
  %put.i = getelementptr inbounds %struct.snd_kcontrol, ptr %follower, i32 0, i32 5
  %51 = ptrtoint ptr %put.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %put.i, align 4
  %call3.i = call i32 %52(ptr noundef %follower, ptr noundef nonnull %call7.i.i.i) #21
  call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.then41.cleanup_crit_edge, %if.end37.cleanup_crit_edge, %do.end32, %if.end19.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.else.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ 0, %do.end32 ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %if.end14.cleanup_crit_edge ], [ 0, %if.end19.cleanup_crit_edge ], [ 0, %if.end37.cleanup_crit_edge ], [ %div, %if.then41.cleanup_crit_edge ], [ %div, %if.end.i ], [ 0, %if.else.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %_tlv) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @init_follower_unmute(ptr noundef %follower, ptr nocapture noundef readnone %kctl, ptr nocapture noundef readnone %_arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 712) #26
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %entry.put_kctl_with_value.exit_crit_edge, label %if.end.i

entry.put_kctl_with_value.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %put_kctl_with_value.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %value.i = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %call7.i.i.i, i32 0, i32 2
  %1 = ptrtoint ptr %value.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %value.i, align 8
  %arrayidx2.i = getelementptr [128 x i32], ptr %value.i, i32 0, i32 1
  %2 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %arrayidx2.i, align 4
  %put.i = getelementptr inbounds %struct.snd_kcontrol, ptr %follower, i32 0, i32 5
  %3 = ptrtoint ptr %put.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %put.i, align 4
  %call3.i = tail call i32 %4(ptr noundef %follower, ptr noundef nonnull %call7.i.i.i) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %put_kctl_with_value.exit

put_kctl_with_value.exit:                         ; preds = %if.end.i, %entry.put_kctl_with_value.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ -12, %entry.put_kctl_with_value.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_add_vmaster_hook(ptr noundef %codec, ptr noundef %hook) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %hook1 = getelementptr inbounds %struct.hda_vmaster_mute_hook, ptr %hook, i32 0, i32 1
  %0 = ptrtoint ptr %hook1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hook1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %2 = ptrtoint ptr %hook to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hook, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %lor.lhs.false.return_crit_edge, label %if.end

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  %codec3 = getelementptr inbounds %struct.hda_vmaster_mute_hook, ptr %hook, i32 0, i32 2
  %4 = ptrtoint ptr %codec3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %codec, ptr %codec3, align 4
  %call = tail call i32 @snd_ctl_add_vmaster_hook(ptr noundef nonnull %3, ptr noundef nonnull @vmaster_hook, ptr noundef %hook) #21
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_add_vmaster_hook(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vmaster_hook(ptr nocapture noundef readonly %private_data, i32 noundef %enabled) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %hook1 = getelementptr inbounds %struct.hda_vmaster_mute_hook, ptr %private_data, i32 0, i32 1
  %0 = ptrtoint ptr %hook1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hook1, align 4
  %codec = getelementptr inbounds %struct.hda_vmaster_mute_hook, ptr %private_data, i32 0, i32 2
  %2 = ptrtoint ptr %codec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %codec, align 4
  tail call void %1(ptr noundef %3, i32 noundef %enabled) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_sync_vmaster_hook(ptr nocapture noundef readonly %hook) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %hook1 = getelementptr inbounds %struct.hda_vmaster_mute_hook, ptr %hook, i32 0, i32 1
  %0 = ptrtoint ptr %hook1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hook1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %codec = getelementptr inbounds %struct.hda_vmaster_mute_hook, ptr %hook, i32 0, i32 2
  %2 = ptrtoint ptr %codec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %codec, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %lor.lhs.false.return_crit_edge, label %if.end

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %bus = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus, align 8
  %shutdown = getelementptr inbounds %struct.hda_bus, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %shutdown to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %shutdown, align 4
  %7 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool4.not = icmp eq i8 %7, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %hook to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hook, align 4
  tail call void @snd_ctl_sync_vmaster(ptr noundef %9, i1 noundef zeroext true) #21
  br label %return

return:                                           ; preds = %if.end6, %if.end.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_ctl_sync_vmaster(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_switch_info(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %uinfo) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %0 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %private_value, align 4
  %type = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 1
  %2 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %type, align 8
  %3 = and i32 %1, 196608
  call void @__sanitizer_cov_trace_const_cmp4(i32 196608, i32 %3)
  %cmp = icmp eq i32 %3, 196608
  %cond = select i1 %cmp, i32 2, i32 1
  %count = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 3
  %4 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %cond, ptr %count, align 8
  %value = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5
  %5 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %value, align 8
  %max = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5, i32 0, i32 1
  %6 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %max, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_switch_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val.i31 = alloca i32, align 4
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %shr4 = lshr i32 %3, 18
  %and5 = and i32 %shr4, 1
  %shr7 = lshr i32 %3, 19
  %and8 = and i32 %shr7, 15
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %shl.i = shl i32 %3, 20
  %5 = shl nuw nsw i32 %and5, 15
  %or.i = or i32 %5, %shl.i
  %or1.i = or i32 %or.i, %and8
  %or5.i = or i32 %or1.i, 729088
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #21
  %6 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %val.i, align 4, !annotation !339
  %call.i = call i32 @snd_hdac_regmap_read_raw(ptr noundef %1, i32 noundef %or5.i, ptr noundef nonnull %val.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp6.i = icmp slt i32 %call.i, 0
  br i1 %cmp6.i, label %if.then.snd_hdac_regmap_get_amp.exit_crit_edge, label %cond.false.i

if.then.snd_hdac_regmap_get_amp.exit_crit_edge:   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hdac_regmap_get_amp.exit

cond.false.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %7 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val.i, align 4
  br label %snd_hdac_regmap_get_amp.exit

snd_hdac_regmap_get_amp.exit:                     ; preds = %cond.false.i, %if.then.snd_hdac_regmap_get_amp.exit_crit_edge
  %cond8.i = phi i32 [ %8, %cond.false.i ], [ %call.i, %if.then.snd_hdac_regmap_get_amp.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #21
  %and10 = lshr i32 %cond8.i, 7
  %and10.lobit = and i32 %and10, 1
  %9 = xor i32 %and10.lobit, 1
  %incdec.ptr = getelementptr i32, ptr %value, i32 1
  %10 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %value, align 4
  br label %if.end

if.end:                                           ; preds = %snd_hdac_regmap_get_amp.exit, %entry.if.end_crit_edge
  %valp.0 = phi ptr [ %incdec.ptr, %snd_hdac_regmap_get_amp.exit ], [ %value, %entry.if.end_crit_edge ]
  %11 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool13.not = icmp eq i32 %11, 0
  br i1 %tobool13.not, label %if.end.if.end20_crit_edge, label %if.then14

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.then14:                                        ; preds = %if.end
  %shl.i33 = shl i32 %3, 20
  %12 = shl nuw nsw i32 %and5, 15
  %or1.i36 = or i32 %12, %shl.i33
  %or4.i37 = or i32 %or1.i36, %and8
  %or5.i38 = or i32 %or4.i37, 720896
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i31) #21
  %13 = ptrtoint ptr %val.i31 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %val.i31, align 4, !annotation !339
  %call.i39 = call i32 @snd_hdac_regmap_read_raw(ptr noundef %1, i32 noundef %or5.i38, ptr noundef nonnull %val.i31) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i39)
  %cmp6.i40 = icmp slt i32 %call.i39, 0
  br i1 %cmp6.i40, label %if.then14.snd_hdac_regmap_get_amp.exit43_crit_edge, label %cond.false.i41

if.then14.snd_hdac_regmap_get_amp.exit43_crit_edge: ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hdac_regmap_get_amp.exit43

cond.false.i41:                                   ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  %14 = ptrtoint ptr %val.i31 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %val.i31, align 4
  br label %snd_hdac_regmap_get_amp.exit43

snd_hdac_regmap_get_amp.exit43:                   ; preds = %cond.false.i41, %if.then14.snd_hdac_regmap_get_amp.exit43_crit_edge
  %cond8.i42 = phi i32 [ %15, %cond.false.i41 ], [ %call.i39, %if.then14.snd_hdac_regmap_get_amp.exit43_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i31) #21
  %and17 = lshr i32 %cond8.i42, 7
  %and17.lobit = and i32 %and17, 1
  %16 = xor i32 %and17.lobit, 1
  %17 = ptrtoint ptr %valp.0 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %valp.0, align 4
  br label %if.end20

if.end20:                                         ; preds = %snd_hdac_regmap_get_amp.exit43, %if.end.if.end20_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_mixer_amp_switch_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  %val.i.i.i.i33 = alloca i32, align 4
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %conv = trunc i32 %3 to i16
  %shr4 = lshr i32 %3, 18
  %and5 = and i32 %shr4, 1
  %shr7 = lshr i32 %3, 19
  %and8 = and i32 %shr7, 15
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %5 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %value, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool10.not = icmp eq i32 %6, 0
  %cond = select i1 %tobool10.not, i32 128, i32 0
  %conv.i.i = and i32 %3, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %cmp.i.i.not = icmp eq i32 %and5, 0
  %start_nid.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 18
  %7 = ptrtoint ptr %start_nid.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %start_nid.i.i.i.i, align 4
  %conv1.i.i.i.i = zext i16 %8 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %conv)
  %cmp.i.i.i.i = icmp ugt i16 %8, %conv
  br i1 %cmp.i.i.i.i, label %if.then.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

if.then.if.then.i.i.i_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.then
  %num_nodes.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 17
  %9 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i = add i32 %10, %conv1.i.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %conv.i.i)
  %cmp8.not.i.i.i.i = icmp ugt i32 %add.i.i.i.i, %conv.i.i
  br i1 %cmp8.not.i.i.i.i, label %get_wcaps.exit.i.i.i, label %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

get_wcaps.exit.i.i.i:                             ; preds = %lor.lhs.false.i.i.i.i
  %wcaps.i.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 14
  %11 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i = sub nsw i32 %conv.i.i, %conv1.i.i.i.i
  %arrayidx.i.i.i.i = getelementptr i32, ptr %12, i32 %sub.i.i.i.i
  %13 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i = and i32 %14, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, label %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge

get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge:      ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i

get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %get_wcaps.exit.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.i.i.i.if.then.i.i.i_crit_edge, %if.then.if.then.i.i.i_crit_edge
  %afg.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 5
  %15 = ptrtoint ptr %afg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %afg.i.i.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge
  %nid.addr.0.i.i.i = phi i16 [ %conv, %get_wcaps.exit.i.i.i.if.end.i.i.i_crit_edge ], [ %16, %if.then.i.i.i ]
  %cond.i.i.i = select i1 %cmp.i.i.not, i32 13, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %17 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !339
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %1, i16 noundef zeroext %nid.addr.0.i.i.i, i32 noundef %cond.i.i.i, ptr noundef nonnull %val.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i6.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge, label %cond.false.i.i.i.i

if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_update.exit

cond.false.i.i.i.i:                               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %val.i.i.i.i, align 4
  %phi.bo.i.i = and i32 %19, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i)
  %phi.cmp.i.i = icmp eq i32 %phi.bo.i.i, 1073741824
  %phi.sel.i.i = select i1 %phi.cmp.i.i, i32 720912, i32 720896
  br label %snd_hda_codec_amp_update.exit

snd_hda_codec_amp_update.exit:                    ; preds = %cond.false.i.i.i.i, %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge
  %cond.i.i.i.i = phi i32 [ %phi.sel.i.i, %cond.false.i.i.i.i ], [ 720896, %if.end.i.i.i.snd_hda_codec_amp_update.exit_crit_edge ]
  %shl.i.i = shl i32 %3, 20
  %20 = shl nuw nsw i32 %and5, 15
  %or.i.i = or i32 %20, %shl.i.i
  %or1.i.i = or i32 %or.i.i, %and8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #21
  %or4.i.i = or i32 %cond.i.i.i.i, %or1.i.i
  %spec.select.i.i = or i32 %or4.i.i, 8192
  %call1.i = call i32 @snd_hdac_regmap_update_raw(ptr noundef %1, i32 noundef %spec.select.i.i, i32 noundef 128, i32 noundef %cond) #21
  %incdec.ptr = getelementptr i32, ptr %value, i32 1
  br label %if.end

if.end:                                           ; preds = %snd_hda_codec_amp_update.exit, %entry.if.end_crit_edge
  %valp.0 = phi ptr [ %incdec.ptr, %snd_hda_codec_amp_update.exit ], [ %value, %entry.if.end_crit_edge ]
  %change.0 = phi i32 [ %call1.i, %snd_hda_codec_amp_update.exit ], [ 0, %entry.if.end_crit_edge ]
  %21 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool12.not = icmp eq i32 %21, 0
  br i1 %tobool12.not, label %if.end.if.end17_crit_edge, label %if.then13

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then13:                                        ; preds = %if.end
  %22 = ptrtoint ptr %valp.0 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %valp.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool14.not = icmp eq i32 %23, 0
  %cond15 = select i1 %tobool14.not, i32 128, i32 0
  %conv.i.i34 = and i32 %3, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %cmp.i.i35.not = icmp eq i32 %and5, 0
  %start_nid.i.i.i.i36 = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 18
  %24 = ptrtoint ptr %start_nid.i.i.i.i36 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %start_nid.i.i.i.i36, align 4
  %conv1.i.i.i.i37 = zext i16 %25 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %25, i16 %conv)
  %cmp.i.i.i.i38 = icmp ugt i16 %25, %conv
  br i1 %cmp.i.i.i.i38, label %if.then13.if.then.i.i.i50_crit_edge, label %lor.lhs.false.i.i.i.i42

if.then13.if.then.i.i.i50_crit_edge:              ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i50

lor.lhs.false.i.i.i.i42:                          ; preds = %if.then13
  %num_nodes.i.i.i.i39 = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 17
  %26 = ptrtoint ptr %num_nodes.i.i.i.i39 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %num_nodes.i.i.i.i39, align 8
  %add.i.i.i.i40 = add i32 %27, %conv1.i.i.i.i37
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i40, i32 %conv.i.i34)
  %cmp8.not.i.i.i.i41 = icmp ugt i32 %add.i.i.i.i40, %conv.i.i34
  br i1 %cmp8.not.i.i.i.i41, label %get_wcaps.exit.i.i.i48, label %lor.lhs.false.i.i.i.i42.if.then.i.i.i50_crit_edge

lor.lhs.false.i.i.i.i42.if.then.i.i.i50_crit_edge: ; preds = %lor.lhs.false.i.i.i.i42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i50

get_wcaps.exit.i.i.i48:                           ; preds = %lor.lhs.false.i.i.i.i42
  %wcaps.i.i.i.i43 = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 14
  %28 = ptrtoint ptr %wcaps.i.i.i.i43 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %wcaps.i.i.i.i43, align 4
  %sub.i.i.i.i44 = sub nsw i32 %conv.i.i34, %conv1.i.i.i.i37
  %arrayidx.i.i.i.i45 = getelementptr i32, ptr %29, i32 %sub.i.i.i.i44
  %30 = ptrtoint ptr %arrayidx.i.i.i.i45 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.i.i.i.i45, align 4
  %and.i.i.i46 = and i32 %31, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i46)
  %tobool.not.i.i.i47 = icmp eq i32 %and.i.i.i46, 0
  br i1 %tobool.not.i.i.i47, label %get_wcaps.exit.i.i.i48.if.then.i.i.i50_crit_edge, label %get_wcaps.exit.i.i.i48.if.end.i.i.i55_crit_edge

get_wcaps.exit.i.i.i48.if.end.i.i.i55_crit_edge:  ; preds = %get_wcaps.exit.i.i.i48
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i.i55

get_wcaps.exit.i.i.i48.if.then.i.i.i50_crit_edge: ; preds = %get_wcaps.exit.i.i.i48
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i.i50

if.then.i.i.i50:                                  ; preds = %get_wcaps.exit.i.i.i48.if.then.i.i.i50_crit_edge, %lor.lhs.false.i.i.i.i42.if.then.i.i.i50_crit_edge, %if.then13.if.then.i.i.i50_crit_edge
  %afg.i.i.i49 = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 5
  %32 = ptrtoint ptr %afg.i.i.i49 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %afg.i.i.i49, align 4
  br label %if.end.i.i.i55

if.end.i.i.i55:                                   ; preds = %if.then.i.i.i50, %get_wcaps.exit.i.i.i48.if.end.i.i.i55_crit_edge
  %nid.addr.0.i.i.i51 = phi i16 [ %conv, %get_wcaps.exit.i.i.i48.if.end.i.i.i55_crit_edge ], [ %33, %if.then.i.i.i50 ]
  %cond.i.i.i52 = select i1 %cmp.i.i35.not, i32 13, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i33) #21
  %34 = ptrtoint ptr %val.i.i.i.i33 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %val.i.i.i.i33, align 4, !annotation !339
  %call.i.i.i.i53 = call i32 @_snd_hdac_read_parm(ptr noundef %1, i16 noundef zeroext %nid.addr.0.i.i.i51, i32 noundef %cond.i.i.i52, ptr noundef nonnull %val.i.i.i.i33) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i53)
  %cmp.i6.i.i.i54 = icmp slt i32 %call.i.i.i.i53, 0
  br i1 %cmp.i6.i.i.i54, label %if.end.i.i.i55.snd_hda_codec_amp_update.exit67_crit_edge, label %cond.false.i.i.i.i59

if.end.i.i.i55.snd_hda_codec_amp_update.exit67_crit_edge: ; preds = %if.end.i.i.i55
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_amp_update.exit67

cond.false.i.i.i.i59:                             ; preds = %if.end.i.i.i55
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %val.i.i.i.i33 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %val.i.i.i.i33, align 4
  %phi.bo.i.i56 = and i32 %36, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %phi.bo.i.i56)
  %phi.cmp.i.i57 = icmp eq i32 %phi.bo.i.i56, 1073741824
  %phi.sel.i.i58 = select i1 %phi.cmp.i.i57, i32 720912, i32 720896
  br label %snd_hda_codec_amp_update.exit67

snd_hda_codec_amp_update.exit67:                  ; preds = %cond.false.i.i.i.i59, %if.end.i.i.i55.snd_hda_codec_amp_update.exit67_crit_edge
  %cond.i.i.i.i60 = phi i32 [ %phi.sel.i.i58, %cond.false.i.i.i.i59 ], [ 720896, %if.end.i.i.i55.snd_hda_codec_amp_update.exit67_crit_edge ]
  %shl.i.i61 = shl i32 %3, 20
  %37 = shl nuw nsw i32 %and5, 15
  %or1.i.i63 = or i32 %37, %shl.i.i61
  %or4.i.i64 = or i32 %or1.i.i63, %and8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i33) #21
  %spec.select.i.i65 = or i32 %cond.i.i.i.i60, %or4.i.i64
  %call1.i66 = call i32 @snd_hdac_regmap_update_raw(ptr noundef %1, i32 noundef %spec.select.i.i65, i32 noundef 128, i32 noundef %cond15) #21
  %or = or i32 %call1.i66, %change.0
  br label %if.end17

if.end17:                                         ; preds = %snd_hda_codec_amp_update.exit67, %if.end.if.end17_crit_edge
  %change.1 = phi i32 [ %or, %snd_hda_codec_amp_update.exit67 ], [ %change.0, %if.end.if.end17_crit_edge ]
  %check_power_status.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 7, i32 8
  %38 = ptrtoint ptr %check_power_status.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %check_power_status.i, align 8
  %tobool.not.i = icmp eq ptr %39, null
  br i1 %tobool.not.i, label %if.end17.hda_call_check_power_status.exit_crit_edge, label %if.then.i

if.end17.hda_call_check_power_status.exit_crit_edge: ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_call_check_power_status.exit

if.then.i:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = call i32 %39(ptr noundef %1, i16 noundef zeroext %conv) #21
  br label %hda_call_check_power_status.exit

hda_call_check_power_status.exit:                 ; preds = %if.then.i, %if.end17.hda_call_check_power_status.exit_crit_edge
  ret i32 %change.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_create_dig_out_ctls(ptr noundef %codec, i16 noundef zeroext %associated_nid, i16 noundef zeroext %cvt_nid, i32 noundef %type) #0 align 64 {
entry:
  %id.i.i = alloca %struct.snd_ctl_elem_id, align 4
  %id.i = alloca %struct.snd_ctl_elem_id, align 4
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #21
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %val, align 4
  %bus1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %1 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %bus1, align 8
  %primary_dig_out_type = getelementptr inbounds %struct.hda_bus, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %primary_dig_out_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %primary_dig_out_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp = icmp eq i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %type)
  %cmp2 = icmp eq i32 %type, 1
  %or.cond = and i1 %cmp2, %cmp
  br i1 %or.cond, label %entry.if.end18_crit_edge, label %if.else

entry.if.end18_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp4 = icmp eq i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %type)
  %cmp6 = icmp eq i32 %type, 2
  %or.cond88 = and i1 %cmp6, %cmp4
  br i1 %or.cond88, label %find_mixer_ctl.exit, label %if.end13

find_mixer_ctl.exit:                              ; preds = %if.else
  %iface.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i, i32 0, i32 1
  %index.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i, i32 0, i32 5
  %name22.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i, i32 0, i32 4
  %card.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i) #21
  %5 = call ptr @memset(ptr %id.i, i32 0, i32 60)
  %6 = ptrtoint ptr %iface.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 2, ptr %iface.i, align 4
  %7 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %index.i, align 4
  %8 = call ptr @memcpy(ptr %name22.i, ptr @.str.67, i32 25)
  %9 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %card.i, align 4
  %call24.i = call ptr @snd_ctl_find_id(ptr noundef %10, ptr noundef nonnull %id.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i) #21
  %tobool9.not = icmp eq ptr %call24.i, null
  br i1 %tobool9.not, label %find_mixer_ctl.exit.if.end18.sink.split_crit_edge, label %find_mixer_ctl.exit.1

find_mixer_ctl.exit.if.end18.sink.split_crit_edge: ; preds = %find_mixer_ctl.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18.sink.split

find_mixer_ctl.exit.1:                            ; preds = %find_mixer_ctl.exit
  %index = getelementptr inbounds %struct.snd_kcontrol, ptr %call24.i, i32 0, i32 1, i32 5
  %11 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 16, ptr %index, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i) #21
  %12 = call ptr @memset(ptr %id.i, i32 0, i32 60)
  %13 = ptrtoint ptr %iface.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2, ptr %iface.i, align 4
  %14 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %index.i, align 4
  %15 = call ptr @memcpy(ptr %name22.i, ptr @.str.68, i32 25)
  %16 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %card.i, align 4
  %call24.i.1 = call ptr @snd_ctl_find_id(ptr noundef %17, ptr noundef nonnull %id.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i) #21
  %tobool9.not.1 = icmp eq ptr %call24.i.1, null
  br i1 %tobool9.not.1, label %find_mixer_ctl.exit.1.if.end18.sink.split_crit_edge, label %find_mixer_ctl.exit.2

find_mixer_ctl.exit.1.if.end18.sink.split_crit_edge: ; preds = %find_mixer_ctl.exit.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18.sink.split

find_mixer_ctl.exit.2:                            ; preds = %find_mixer_ctl.exit.1
  %index.1 = getelementptr inbounds %struct.snd_kcontrol, ptr %call24.i.1, i32 0, i32 1, i32 5
  %18 = ptrtoint ptr %index.1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 16, ptr %index.1, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i) #21
  %19 = call ptr @memset(ptr %id.i, i32 0, i32 60)
  %20 = ptrtoint ptr %iface.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 2, ptr %iface.i, align 4
  %21 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %index.i, align 4
  %22 = call ptr @memcpy(ptr %name22.i, ptr @.str.69, i32 24)
  %23 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %card.i, align 4
  %call24.i.2 = call ptr @snd_ctl_find_id(ptr noundef %24, ptr noundef nonnull %id.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i) #21
  %tobool9.not.2 = icmp eq ptr %call24.i.2, null
  br i1 %tobool9.not.2, label %find_mixer_ctl.exit.2.if.end18.sink.split_crit_edge, label %find_mixer_ctl.exit.3

find_mixer_ctl.exit.2.if.end18.sink.split_crit_edge: ; preds = %find_mixer_ctl.exit.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18.sink.split

find_mixer_ctl.exit.3:                            ; preds = %find_mixer_ctl.exit.2
  %index.2 = getelementptr inbounds %struct.snd_kcontrol, ptr %call24.i.2, i32 0, i32 1, i32 5
  %25 = ptrtoint ptr %index.2 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 16, ptr %index.2, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i) #21
  %26 = call ptr @memset(ptr %id.i, i32 0, i32 60)
  %27 = ptrtoint ptr %iface.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 2, ptr %iface.i, align 4
  %28 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %index.i, align 4
  %29 = call ptr @memcpy(ptr %name22.i, ptr @.str.31, i32 23)
  %30 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %card.i, align 4
  %call24.i.3 = call ptr @snd_ctl_find_id(ptr noundef %31, ptr noundef nonnull %id.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i) #21
  %tobool9.not.3 = icmp eq ptr %call24.i.3, null
  br i1 %tobool9.not.3, label %find_mixer_ctl.exit.3.if.end18.sink.split_crit_edge, label %if.end.3

find_mixer_ctl.exit.3.if.end18.sink.split_crit_edge: ; preds = %find_mixer_ctl.exit.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18.sink.split

if.end.3:                                         ; preds = %find_mixer_ctl.exit.3
  call void @__sanitizer_cov_trace_pc() #23
  %index.3 = getelementptr inbounds %struct.snd_kcontrol, ptr %call24.i.3, i32 0, i32 1, i32 5
  %32 = ptrtoint ptr %index.3 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 16, ptr %index.3, align 4
  br label %if.end18.sink.split

if.end13:                                         ; preds = %if.else
  %33 = ptrtoint ptr %primary_dig_out_type to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pr = load i32, ptr %primary_dig_out_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool15.not = icmp eq i32 %.pr, 0
  br i1 %tobool15.not, label %if.end13.if.end18.sink.split_crit_edge, label %if.end13.if.end18_crit_edge

if.end13.if.end18_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18

if.end13.if.end18.sink.split_crit_edge:           ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18.sink.split

if.end18.sink.split:                              ; preds = %if.end13.if.end18.sink.split_crit_edge, %if.end.3, %find_mixer_ctl.exit.3.if.end18.sink.split_crit_edge, %find_mixer_ctl.exit.2.if.end18.sink.split_crit_edge, %find_mixer_ctl.exit.1.if.end18.sink.split_crit_edge, %find_mixer_ctl.exit.if.end18.sink.split_crit_edge
  %.sink = phi i32 [ 2, %find_mixer_ctl.exit.if.end18.sink.split_crit_edge ], [ 2, %find_mixer_ctl.exit.1.if.end18.sink.split_crit_edge ], [ 2, %find_mixer_ctl.exit.2.if.end18.sink.split_crit_edge ], [ 2, %find_mixer_ctl.exit.3.if.end18.sink.split_crit_edge ], [ 2, %if.end.3 ], [ %type, %if.end13.if.end18.sink.split_crit_edge ]
  %34 = ptrtoint ptr %primary_dig_out_type to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %.sink, ptr %primary_dig_out_type, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.end18.sink.split, %if.end13.if.end18_crit_edge, %entry.if.end18_crit_edge
  %idx.0103 = phi i32 [ 0, %if.end13.if.end18_crit_edge ], [ 16, %entry.if.end18_crit_edge ], [ 0, %if.end18.sink.split ]
  %iface.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 1
  %index.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 5
  %name22.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 4
  %card.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end18
  %idx.010.i = phi i32 [ %idx.0103, %if.end18 ], [ %inc1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.09.i = phi i32 [ 0, %if.end18 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i.i) #21
  %35 = call ptr @memset(ptr %id.i.i, i32 0, i32 60)
  %36 = ptrtoint ptr %iface.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 2, ptr %iface.i.i, align 4
  %37 = ptrtoint ptr %index.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %idx.010.i, ptr %index.i.i, align 4
  %38 = call ptr @memcpy(ptr %name22.i.i, ptr @.str.31, i32 23)
  %39 = ptrtoint ptr %card.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %card.i.i, align 4
  %call24.i.i = call ptr @snd_ctl_find_id(ptr noundef %40, ptr noundef nonnull %id.i.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i.i) #21
  %tobool.not.i = icmp eq ptr %call24.i.i, null
  br i1 %tobool.not.i, label %if.end22, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.09.i, 1
  %inc1.i = add nuw nsw i32 %idx.010.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 16
  br i1 %exitcond.not.i, label %do.end, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

do.end:                                           ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.32) #25
  br label %cleanup

if.end22:                                         ; preds = %for.body.i
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  %call23 = call ptr @snd_array_new(ptr noundef %spdif_out) #21
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %if.end22.cleanup_crit_edge, label %for.cond27.preheader

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond27.preheader:                             ; preds = %if.end22
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %associated_nid)
  %cmp.i91 = icmp eq i16 %associated_nid, 0
  %mixers.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  br label %for.body30

for.body30:                                       ; preds = %for.inc42.for.body30_crit_edge, %for.cond27.preheader
  %dig_mix.1110 = phi ptr [ @dig_mixes, %for.cond27.preheader ], [ %incdec.ptr43, %for.inc42.for.body30_crit_edge ]
  %call31 = call ptr @snd_ctl_new1(ptr noundef %dig_mix.1110, ptr noundef %codec) #21
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %for.body30.cleanup_crit_edge, label %if.end34

for.body30.cleanup_crit_edge:                     ; preds = %for.body30
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end34:                                         ; preds = %for.body30
  %index36 = getelementptr inbounds %struct.snd_kcontrol, ptr %call31, i32 0, i32 1, i32 5
  %41 = ptrtoint ptr %index36 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %idx.010.i, ptr %index36, align 4
  %42 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %spdif_out, align 8
  %sub = add i32 %43, -1
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %call31, i32 0, i32 7
  %44 = ptrtoint ptr %private_value to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %sub, ptr %private_value, align 4
  %subdevice.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call31, i32 0, i32 1, i32 3
  %45 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %subdevice.i, align 4
  %and.i = and i32 %46, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i90 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i90, label %if.end7.i, label %if.then.i

if.then.i:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #23
  %conv6.i = trunc i32 %sub to i16
  %spec.select = select i1 %cmp.i91, i16 %conv6.i, i16 %associated_nid
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp11.not60.i = icmp slt i32 %46, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %spec.select)
  %cmp1461.i = icmp eq i16 %spec.select, 0
  %or.cond62.i = select i1 %cmp11.not60.i, i1 %cmp1461.i, i1 false
  %conv2063.i = trunc i32 %46 to i16
  %nid.addr.164.i = select i1 %or.cond62.i, i16 %conv2063.i, i16 %spec.select
  br label %if.then26.i

if.end7.i:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp11.not.i = icmp slt i32 %46, 0
  %or.cond.i = and i1 %cmp.i91, %cmp11.not.i
  %conv20.i = trunc i32 %46 to i16
  %nid.addr.1.i = select i1 %or.cond.i, i16 %conv20.i, i16 %associated_nid
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %46)
  %tobool25.not.i = icmp ult i32 %46, 1073741824
  br i1 %tobool25.not.i, label %if.end7.i.if.end29.i_crit_edge, label %if.end7.i.if.then26.i_crit_edge

if.end7.i.if.then26.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i

if.end7.i.if.end29.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then26.i:                                      ; preds = %if.end7.i.if.then26.i_crit_edge, %if.then.i
  %nid.addr.168.i = phi i16 [ %nid.addr.164.i, %if.then.i ], [ %nid.addr.1.i, %if.end7.i.if.then26.i_crit_edge ]
  %flags.066.i = phi i16 [ 1, %if.then.i ], [ 0, %if.end7.i.if.then26.i_crit_edge ]
  %47 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %subdevice.i, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then26.i, %if.end7.i.if.end29.i_crit_edge
  %nid.addr.169.i = phi i16 [ %nid.addr.168.i, %if.then26.i ], [ %nid.addr.1.i, %if.end7.i.if.end29.i_crit_edge ]
  %flags.067.i = phi i16 [ %flags.066.i, %if.then26.i ], [ 0, %if.end7.i.if.end29.i_crit_edge ]
  %48 = ptrtoint ptr %card.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %card.i.i, align 4
  %call.i93 = call i32 @snd_ctl_add(ptr noundef %49, ptr noundef nonnull %call31) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i93)
  %cmp30.i = icmp slt i32 %call.i93, 0
  br i1 %cmp30.i, label %if.end29.i.cleanup_crit_edge, label %if.end33.i

if.end29.i.cleanup_crit_edge:                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33.i:                                       ; preds = %if.end29.i
  %call34.i = call ptr @snd_array_new(ptr noundef %mixers.i) #21
  %tobool35.not.i = icmp eq ptr %call34.i, null
  br i1 %tobool35.not.i, label %if.end33.i.cleanup_crit_edge, label %for.inc42

if.end33.i.cleanup_crit_edge:                     ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc42:                                        ; preds = %if.end33.i
  %50 = ptrtoint ptr %call34.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %call31, ptr %call34.i, align 4
  %nid39.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 2
  %51 = ptrtoint ptr %nid39.i to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %nid.addr.169.i, ptr %nid39.i, align 4
  %flags40.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 3
  %52 = ptrtoint ptr %flags40.i to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %flags.067.i, ptr %flags40.i, align 2
  %incdec.ptr43 = getelementptr %struct.snd_kcontrol_new, ptr %dig_mix.1110, i32 1
  %name28 = getelementptr %struct.snd_kcontrol_new, ptr %dig_mix.1110, i32 1, i32 3
  %53 = ptrtoint ptr %name28 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %name28, align 4
  %tobool29.not = icmp eq ptr %54, null
  br i1 %tobool29.not, label %for.end44, label %for.inc42.for.body30_crit_edge

for.inc42.for.body30_crit_edge:                   ; preds = %for.inc42
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body30

for.end44:                                        ; preds = %for.inc42
  %55 = ptrtoint ptr %call23 to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 %cvt_nid, ptr %call23, align 4
  %conv.i = zext i16 %cvt_nid to i32
  %shl1.i = shl i32 %conv.i, 20
  %or2.i = or i32 %shl1.i, 986368
  %call.i95 = call i32 @snd_hdac_regmap_read_raw(ptr noundef %codec, i32 noundef %or2.i, ptr noundef nonnull %val) #21
  %56 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %val, align 4
  %conv = trunc i32 %57 to i16
  %ctls = getelementptr inbounds %struct.hda_spdif_out, ptr %call23, i32 0, i32 2
  %58 = ptrtoint ptr %ctls to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %conv, ptr %ctls, align 4
  %and.i97 = lshr i32 %57, 4
  %59 = and i32 %and.i97, 2
  %and2.i = lshr i32 %57, 6
  %60 = and i32 %and2.i, 1
  %61 = or i32 %60, %59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool8.not.i = icmp eq i32 %60, 0
  br i1 %tobool8.not.i, label %if.else.i, label %if.then9.i

if.then9.i:                                       ; preds = %for.end44
  call void @__sanitizer_cov_trace_pc() #23
  %and11.i = and i32 %57, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  %or14.i = or i32 %61, 12
  %spec.select52.i = select i1 %tobool12.not.i, i32 %61, i32 %or14.i
  br label %convert_to_spdif_status.exit

if.else.i:                                        ; preds = %for.end44
  call void @__sanitizer_cov_trace_pc() #23
  %and23.i = lshr i32 %57, 2
  %62 = and i32 %and23.i, 4
  %conv.i96 = shl i32 %57, 8
  %and29.i = and i32 %conv.i96, 32768
  %63 = and i32 %57, 32520
  %64 = or i32 %62, %63
  %65 = or i32 %64, %and29.i
  %66 = or i32 %65, %61
  %or36.i = xor i32 %66, 4
  br label %convert_to_spdif_status.exit

convert_to_spdif_status.exit:                     ; preds = %if.else.i, %if.then9.i
  %sbits.5.i = phi i32 [ %or36.i, %if.else.i ], [ %spec.select52.i, %if.then9.i ]
  %status = getelementptr inbounds %struct.hda_spdif_out, ptr %call23, i32 0, i32 1
  %67 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %sbits.5.i, ptr %status, align 4
  br label %cleanup

cleanup:                                          ; preds = %convert_to_spdif_status.exit, %if.end33.i.cleanup_crit_edge, %if.end29.i.cleanup_crit_edge, %for.body30.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -16, %do.end ], [ 0, %convert_to_spdif_status.exit ], [ -12, %if.end22.cleanup_crit_edge ], [ %call.i93, %if.end29.i.cleanup_crit_edge ], [ -12, %if.end33.i.cleanup_crit_edge ], [ -12, %for.body30.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_ctl_new1(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @snd_hda_spdif_out_of_nid(ptr nocapture noundef readonly %codec, i16 noundef zeroext %nid) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  %0 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp12.not = icmp eq i32 %1, 0
  br i1 %cmp12.not, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %list = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 4
  %2 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list, align 8
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.014 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %spdif.013 = phi ptr [ %3, %for.body.lr.ph ], [ %add.ptr.i, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %spdif.013 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %spdif.013, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp4 = icmp eq i16 %5, %nid
  br i1 %cmp4, label %for.body.cleanup_crit_edge, label %for.inc

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add nuw i32 %i.014, 1
  %6 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list, align 4
  %8 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %9, %inc
  %add.ptr.i = getelementptr i8, ptr %7, i32 %mul.i
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ], [ %spdif.013, %for.body.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_spdif_ctls_unassign(ptr noundef %codec, i32 noundef %idx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  %0 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %idx)
  %cmp.not = icmp ugt i32 %1, %idx
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !343

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2499, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 4
  %2 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list.i, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 2
  %4 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %5, %idx
  %add.ptr.i = getelementptr i8, ptr %3, i32 %mul.i
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %add.ptr.i, align 4
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_spdif_ctls_assign(ptr noundef %codec, i32 noundef %idx, i16 noundef zeroext %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  %0 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %idx)
  %cmp.not = icmp ugt i32 %1, %idx
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !343

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2521, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %entry
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 4
  %2 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list.i, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 2
  %4 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %5, %idx
  %add.ptr.i = getelementptr i8, ptr %3, i32 %mul.i
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %7, i16 %nid)
  %cmp25.not = icmp eq i16 %7, %nid
  br i1 %cmp25.not, label %if.end21.if.end32_crit_edge, label %if.then27

if.end21.if.end32_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

if.then27:                                        ; preds = %if.end21
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %nid, ptr %add.ptr.i, align 4
  %ctls = getelementptr inbounds %struct.hda_spdif_out, ptr %add.ptr.i, i32 0, i32 2
  %9 = ptrtoint ptr %ctls to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %ctls, align 4
  %conv29 = zext i16 %10 to i32
  %conv.i.i.i.i = zext i16 %nid to i32
  %shl1.i.i.i.i = shl i32 %conv.i.i.i.i, 20
  %or2.i.i.i.i = or i32 %shl1.i.i.i.i, 986368
  %call.i.i.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %or2.i.i.i.i, i32 noundef 65535, i32 noundef %conv29) #21
  %follower_dig_outs.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %11 = ptrtoint ptr %follower_dig_outs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %follower_dig_outs.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i.i, label %if.then27.set_dig_out_convert.exit.i_crit_edge, label %for.cond.preheader.i.i.i

if.then27.set_dig_out_convert.exit.i_crit_edge:   ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_dig_out_convert.exit.i

for.cond.preheader.i.i.i:                         ; preds = %if.then27
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %12, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool1.not16.i.i.i = icmp eq i16 %14, 0
  br i1 %tobool1.not16.i.i.i, label %for.cond.preheader.i.i.i.set_dig_out_convert.exit.i_crit_edge, label %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge

for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  br label %for.body.i.i.i

for.cond.preheader.i.i.i.set_dig_out_convert.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_dig_out_convert.exit.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge
  %15 = phi i16 [ %17, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ %14, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %d.017.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ %12, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %conv.i12.i.i.i = zext i16 %15 to i32
  %shl1.i13.i.i.i = shl i32 %conv.i12.i.i.i, 20
  %or2.i14.i.i.i = or i32 %shl1.i13.i.i.i, 986368
  %call.i15.i.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %or2.i14.i.i.i, i32 noundef 65535, i32 noundef %conv29) #21
  %incdec.ptr.i.i.i = getelementptr i16, ptr %d.017.i.i.i, i32 1
  %16 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %incdec.ptr.i.i.i, align 2
  %tobool1.not.i.i.i = icmp eq i16 %17, 0
  br i1 %tobool1.not.i.i.i, label %for.body.i.i.i.set_dig_out_convert.exit.i_crit_edge, label %for.body.i.i.i.for.body.i.i.i_crit_edge

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i.i

for.body.i.i.i.set_dig_out_convert.exit.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_dig_out_convert.exit.i

set_dig_out_convert.exit.i:                       ; preds = %for.body.i.i.i.set_dig_out_convert.exit.i_crit_edge, %for.cond.preheader.i.i.i.set_dig_out_convert.exit.i_crit_edge, %if.then27.set_dig_out_convert.exit.i_crit_edge
  %start_nid.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %18 = ptrtoint ptr %start_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %start_nid.i.i, align 4
  %conv1.i.i = zext i16 %19 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %19, i16 %nid)
  %cmp.i.i = icmp ugt i16 %19, %nid
  br i1 %cmp.i.i, label %set_dig_out_convert.exit.i.if.end32_crit_edge, label %lor.lhs.false.i.i

set_dig_out_convert.exit.i.if.end32_crit_edge:    ; preds = %set_dig_out_convert.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

lor.lhs.false.i.i:                                ; preds = %set_dig_out_convert.exit.i
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %20 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %21, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %conv.i.i.i.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %conv.i.i.i.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.if.end32_crit_edge

lor.lhs.false.i.i.if.end32_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %22 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %conv.i.i.i.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %23, i32 %sub.i.i
  %24 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and1.i = and i32 %conv29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %or.cond.i = or i1 %tobool2.not.i, %tobool.not.i
  br i1 %or.cond.i, label %get_wcaps.exit.i.if.end32_crit_edge, label %if.then.i

get_wcaps.exit.i.if.end32_crit_edge:              ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

if.then.i:                                        ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %call3.i = tail call i32 @snd_hda_codec_amp_stereo(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 1, i32 noundef 0, i32 noundef 128, i32 noundef 0) #21
  br label %if.end32

if.end32:                                         ; preds = %if.then.i, %get_wcaps.exit.i.if.end32_crit_edge, %lor.lhs.false.i.i.if.end32_crit_edge, %set_dig_out_convert.exit.i.if.end32_crit_edge, %if.end21.if.end32_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_create_spdif_share_sw(ptr noundef %codec, ptr noundef %mout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %0 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dig_out_nid, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @snd_ctl_new1(ptr noundef nonnull @spdif_share_sw, ptr noundef %mout) #21
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %2 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %dig_out_nid, align 2
  %subdevice.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call, i32 0, i32 1, i32 3
  %4 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %subdevice.i, align 4
  %and.i = and i32 %5, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end7.i, label %if.then.i

if.then.i:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp.i = icmp eq i16 %3, 0
  br i1 %cmp.i, label %if.then4.i, label %if.then.i.if.end7.thread.i_crit_edge

if.then.i.if.end7.thread.i_crit_edge:             ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.thread.i

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call, i32 0, i32 7
  %6 = ptrtoint ptr %private_value.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %private_value.i, align 4
  %conv6.i = trunc i32 %7 to i16
  br label %if.end7.thread.i

if.end7.thread.i:                                 ; preds = %if.then4.i, %if.then.i.if.end7.thread.i_crit_edge
  %nid.addr.0.ph.i = phi i16 [ %3, %if.then.i.if.end7.thread.i_crit_edge ], [ %conv6.i, %if.then4.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp11.not60.i = icmp slt i32 %5, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid.addr.0.ph.i)
  %cmp1461.i = icmp eq i16 %nid.addr.0.ph.i, 0
  %or.cond62.i = select i1 %cmp11.not60.i, i1 %cmp1461.i, i1 false
  %conv2063.i = trunc i32 %5 to i16
  %nid.addr.164.i = select i1 %or.cond62.i, i16 %conv2063.i, i16 %nid.addr.0.ph.i
  br label %if.then26.i

if.end7.i:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp11.not.i = icmp slt i32 %5, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp14.i = icmp eq i16 %3, 0
  %or.cond.i = and i1 %cmp14.i, %cmp11.not.i
  %conv20.i = trunc i32 %5 to i16
  %nid.addr.1.i = select i1 %or.cond.i, i16 %conv20.i, i16 %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %5)
  %tobool25.not.i = icmp ult i32 %5, 1073741824
  br i1 %tobool25.not.i, label %if.end7.i.if.end29.i_crit_edge, label %if.end7.i.if.then26.i_crit_edge

if.end7.i.if.then26.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i

if.end7.i.if.end29.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then26.i:                                      ; preds = %if.end7.i.if.then26.i_crit_edge, %if.end7.thread.i
  %nid.addr.168.i = phi i16 [ %nid.addr.164.i, %if.end7.thread.i ], [ %nid.addr.1.i, %if.end7.i.if.then26.i_crit_edge ]
  %flags.066.i = phi i16 [ 1, %if.end7.thread.i ], [ 0, %if.end7.i.if.then26.i_crit_edge ]
  %8 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %subdevice.i, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then26.i, %if.end7.i.if.end29.i_crit_edge
  %nid.addr.169.i = phi i16 [ %nid.addr.168.i, %if.then26.i ], [ %nid.addr.1.i, %if.end7.i.if.end29.i_crit_edge ]
  %flags.067.i = phi i16 [ %flags.066.i, %if.then26.i ], [ 0, %if.end7.i.if.end29.i_crit_edge ]
  %card.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %9 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %card.i, align 4
  %call.i = tail call i32 @snd_ctl_add(ptr noundef %10, ptr noundef nonnull %call) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp30.i = icmp slt i32 %call.i, 0
  br i1 %cmp30.i, label %if.end29.i.cleanup_crit_edge, label %if.end33.i

if.end29.i.cleanup_crit_edge:                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33.i:                                       ; preds = %if.end29.i
  %mixers.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %call34.i = tail call ptr @snd_array_new(ptr noundef %mixers.i) #21
  %tobool35.not.i = icmp eq ptr %call34.i, null
  br i1 %tobool35.not.i, label %if.end33.i.cleanup_crit_edge, label %if.end37.i

if.end33.i.cleanup_crit_edge:                     ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end37.i:                                       ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %call34.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call, ptr %call34.i, align 4
  %nid39.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 2
  %12 = ptrtoint ptr %nid39.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %nid.addr.169.i, ptr %nid39.i, align 4
  %flags40.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 3
  %13 = ptrtoint ptr %flags40.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %flags.067.i, ptr %flags40.i, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end37.i, %if.end33.i.cleanup_crit_edge, %if.end29.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ 0, %if.end37.i ], [ %call.i, %if.end29.i.cleanup_crit_edge ], [ -12, %if.end33.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_create_spdif_in_ctls(ptr noundef %codec, i16 noundef zeroext %nid) #0 align 64 {
entry:
  %id.i.i = alloca %struct.snd_ctl_elem_id, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %iface.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 1
  %index.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 5
  %name22.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 4
  %card.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry
  %idx.010.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.inc.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i.i) #21
  %0 = call ptr @memset(ptr %id.i.i, i32 0, i32 60)
  %1 = ptrtoint ptr %iface.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 2, ptr %iface.i.i, align 4
  %2 = ptrtoint ptr %index.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %idx.010.i, ptr %index.i.i, align 4
  %3 = call ptr @memcpy(ptr %name22.i.i, ptr @.str.34, i32 22)
  %4 = ptrtoint ptr %card.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %card.i.i, align 4
  %call24.i.i = call ptr @snd_ctl_find_id(ptr noundef %5, ptr noundef nonnull %id.i.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i.i) #21
  %tobool.not.i = icmp eq ptr %call24.i.i, null
  br i1 %tobool.not.i, label %for.cond.preheader, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc1.i = add nuw nsw i32 %idx.010.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 16
  br i1 %exitcond.not.i, label %do.end, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.cond.preheader:                               ; preds = %for.body.i
  %conv = zext i16 %nid to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %cmp.i = icmp eq i16 %nid, 0
  %mixers.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %call1 = call ptr @snd_ctl_new1(ptr noundef nonnull @dig_in_ctls, ptr noundef %codec) #21
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %for.cond.preheader.cleanup_crit_edge, label %if.end4

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end:                                           ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.35) #25
  br label %cleanup

if.end4:                                          ; preds = %for.cond.preheader
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %call1, i32 0, i32 7
  %6 = ptrtoint ptr %private_value to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %conv, ptr %private_value, align 4
  %subdevice.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call1, i32 0, i32 1, i32 3
  %7 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %subdevice.i, align 4
  %and.i = and i32 %8, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i26 = icmp eq i32 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp11.not.i = icmp slt i32 %8, 0
  %or.cond.i = and i1 %cmp.i, %cmp11.not.i
  %conv20.i = trunc i32 %8 to i16
  %nid.addr.1.i = select i1 %or.cond.i, i16 %conv20.i, i16 %nid
  br i1 %tobool.not.i26, label %if.end7.i, label %if.end4.if.then26.i_crit_edge

if.end4.if.then26.i_crit_edge:                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i

if.end7.i:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %8)
  %tobool25.not.i = icmp ult i32 %8, 1073741824
  br i1 %tobool25.not.i, label %if.end7.i.if.end29.i_crit_edge, label %if.end7.i.if.then26.i_crit_edge

if.end7.i.if.then26.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i

if.end7.i.if.end29.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then26.i:                                      ; preds = %if.end7.i.if.then26.i_crit_edge, %if.end4.if.then26.i_crit_edge
  %flags.066.i = phi i16 [ 0, %if.end7.i.if.then26.i_crit_edge ], [ 1, %if.end4.if.then26.i_crit_edge ]
  %9 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %subdevice.i, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then26.i, %if.end7.i.if.end29.i_crit_edge
  %flags.067.i = phi i16 [ %flags.066.i, %if.then26.i ], [ 0, %if.end7.i.if.end29.i_crit_edge ]
  %10 = ptrtoint ptr %card.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %card.i.i, align 4
  %call.i = call i32 @snd_ctl_add(ptr noundef %11, ptr noundef nonnull %call1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp30.i = icmp slt i32 %call.i, 0
  br i1 %cmp30.i, label %if.end29.i.cleanup_crit_edge, label %if.end33.i

if.end29.i.cleanup_crit_edge:                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33.i:                                       ; preds = %if.end29.i
  %call34.i = call ptr @snd_array_new(ptr noundef %mixers.i) #21
  %tobool35.not.i = icmp eq ptr %call34.i, null
  br i1 %tobool35.not.i, label %if.end33.i.cleanup_crit_edge, label %for.inc

if.end33.i.cleanup_crit_edge:                     ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc:                                          ; preds = %if.end33.i
  %12 = ptrtoint ptr %call34.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call1, ptr %call34.i, align 4
  %nid39.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 2
  %13 = ptrtoint ptr %nid39.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %nid.addr.1.i, ptr %nid39.i, align 4
  %flags40.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 3
  %14 = ptrtoint ptr %flags40.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %flags.067.i, ptr %flags40.i, align 2
  %call1.1 = call ptr @snd_ctl_new1(ptr noundef getelementptr inbounds ([3 x %struct.snd_kcontrol_new], ptr @dig_in_ctls, i32 0, i32 1), ptr noundef %codec) #21
  %tobool2.not.1 = icmp eq ptr %call1.1, null
  br i1 %tobool2.not.1, label %for.inc.cleanup_crit_edge, label %if.end4.1

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end4.1:                                        ; preds = %for.inc
  %private_value.1 = getelementptr inbounds %struct.snd_kcontrol, ptr %call1.1, i32 0, i32 7
  %15 = ptrtoint ptr %private_value.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv, ptr %private_value.1, align 4
  %subdevice.i.1 = getelementptr inbounds %struct.snd_kcontrol, ptr %call1.1, i32 0, i32 1, i32 3
  %16 = ptrtoint ptr %subdevice.i.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %subdevice.i.1, align 4
  %and.i.1 = and i32 %17, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.1)
  %tobool.not.i26.1 = icmp eq i32 %and.i.1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp11.not.i.1 = icmp slt i32 %17, 0
  %or.cond.i.1 = and i1 %cmp.i, %cmp11.not.i.1
  %conv20.i.1 = trunc i32 %17 to i16
  %nid.addr.1.i.1 = select i1 %or.cond.i.1, i16 %conv20.i.1, i16 %nid
  br i1 %tobool.not.i26.1, label %if.end7.i.1, label %if.end4.1.if.then26.i.1_crit_edge

if.end4.1.if.then26.i.1_crit_edge:                ; preds = %if.end4.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i.1

if.end7.i.1:                                      ; preds = %if.end4.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %17)
  %tobool25.not.i.1 = icmp ult i32 %17, 1073741824
  br i1 %tobool25.not.i.1, label %if.end7.i.1.if.end29.i.1_crit_edge, label %if.end7.i.1.if.then26.i.1_crit_edge

if.end7.i.1.if.then26.i.1_crit_edge:              ; preds = %if.end7.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i.1

if.end7.i.1.if.end29.i.1_crit_edge:               ; preds = %if.end7.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i.1

if.then26.i.1:                                    ; preds = %if.end7.i.1.if.then26.i.1_crit_edge, %if.end4.1.if.then26.i.1_crit_edge
  %flags.066.i.1 = phi i16 [ 0, %if.end7.i.1.if.then26.i.1_crit_edge ], [ 1, %if.end4.1.if.then26.i.1_crit_edge ]
  %18 = ptrtoint ptr %subdevice.i.1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %subdevice.i.1, align 4
  br label %if.end29.i.1

if.end29.i.1:                                     ; preds = %if.then26.i.1, %if.end7.i.1.if.end29.i.1_crit_edge
  %flags.067.i.1 = phi i16 [ %flags.066.i.1, %if.then26.i.1 ], [ 0, %if.end7.i.1.if.end29.i.1_crit_edge ]
  %19 = ptrtoint ptr %card.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %card.i.i, align 4
  %call.i.1 = call i32 @snd_ctl_add(ptr noundef %20, ptr noundef nonnull %call1.1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %cmp30.i.1 = icmp slt i32 %call.i.1, 0
  br i1 %cmp30.i.1, label %if.end29.i.1.cleanup_crit_edge, label %if.end33.i.1

if.end29.i.1.cleanup_crit_edge:                   ; preds = %if.end29.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33.i.1:                                     ; preds = %if.end29.i.1
  %call34.i.1 = call ptr @snd_array_new(ptr noundef %mixers.i) #21
  %tobool35.not.i.1 = icmp eq ptr %call34.i.1, null
  br i1 %tobool35.not.i.1, label %if.end33.i.1.cleanup_crit_edge, label %for.inc.1

if.end33.i.1.cleanup_crit_edge:                   ; preds = %if.end33.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc.1:                                        ; preds = %if.end33.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %21 = ptrtoint ptr %call34.i.1 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call1.1, ptr %call34.i.1, align 4
  %nid39.i.1 = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i.1, i32 0, i32 2
  %22 = ptrtoint ptr %nid39.i.1 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %nid.addr.1.i.1, ptr %nid39.i.1, align 4
  %flags40.i.1 = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i.1, i32 0, i32 3
  %23 = ptrtoint ptr %flags40.i.1 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %flags.067.i.1, ptr %flags40.i.1, align 2
  %call.i28 = call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 3853, i32 noundef 0) #21
  %and = and i32 %call.i28, 1
  %spdif_in_enable = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 21
  %24 = ptrtoint ptr %spdif_in_enable to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %and, ptr %spdif_in_enable, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.inc.1, %if.end33.i.1.cleanup_crit_edge, %if.end29.i.1.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %if.end33.i.cleanup_crit_edge, %if.end29.i.cleanup_crit_edge, %do.end, %for.cond.preheader.cleanup_crit_edge
  %retval.0 = phi i32 [ -16, %do.end ], [ 0, %for.inc.1 ], [ -12, %for.cond.preheader.cleanup_crit_edge ], [ -12, %if.end33.i.cleanup_crit_edge ], [ %call.i, %if.end29.i.cleanup_crit_edge ], [ -12, %for.inc.cleanup_crit_edge ], [ %call.i.1, %if.end29.i.1.cleanup_crit_edge ], [ -12, %if.end33.i.1.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_set_power_to_all(ptr noundef %codec, i16 zeroext %fg, i32 noundef %power_state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %start_nid = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid, align 4
  %end_nid = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 19
  %2 = ptrtoint ptr %end_nid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %end_nid, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %3)
  %cmp34 = icmp ult i16 %1, %3
  br i1 %cmp34, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %power_filter = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %power_state)
  %cmp10 = icmp eq i32 %power_state, 3
  %4 = zext i16 %1 to i32
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv = phi i32 [ %4, %for.body.lr.ph ], [ %indvars.iv.next, %cleanup.for.body_crit_edge ]
  %5 = ptrtoint ptr %start_nid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %start_nid, align 4
  %conv1.i = zext i16 %6 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv, i32 %conv1.i)
  %cmp.i = icmp ult i32 %indvars.iv, %conv1.i
  br i1 %cmp.i, label %for.body.cleanup_crit_edge, label %lor.lhs.false.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %for.body
  %7 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %8, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %indvars.iv)
  %cmp8.not.i = icmp ugt i32 %add.i, %indvars.iv
  br i1 %cmp8.not.i, label %get_wcaps.exit, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

get_wcaps.exit:                                   ; preds = %lor.lhs.false.i
  %9 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %indvars.iv, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %10, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %and = and i32 %12, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %get_wcaps.exit.cleanup_crit_edge, label %if.end

get_wcaps.exit.cleanup_crit_edge:                 ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %get_wcaps.exit
  %13 = ptrtoint ptr %power_filter to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %power_filter, align 4
  %tobool4.not = icmp eq ptr %14, null
  %.pre = trunc i32 %indvars.iv to i16
  br i1 %tobool4.not, label %if.end.if.end14_crit_edge, label %if.then5

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then5:                                         ; preds = %if.end
  %call7 = tail call i32 %14(ptr noundef %codec, i16 noundef zeroext %.pre, i32 noundef %power_state) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call7)
  %15 = icmp ne i32 %call7, 3
  %16 = and i1 %cmp10, %15
  br i1 %16, label %if.then5.cleanup_crit_edge, label %if.then5.if.end14_crit_edge

if.then5.if.end14_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then5.cleanup_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end14:                                         ; preds = %if.then5.if.end14_crit_edge, %if.end.if.end14_crit_edge
  %state.0 = phi i32 [ %call7, %if.then5.if.end14_crit_edge ], [ %power_state, %if.end.if.end14_crit_edge ]
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %.pre, i32 noundef 0, i32 noundef 1797, i32 noundef %state.0) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then5.cleanup_crit_edge, %get_wcaps.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %17 = ptrtoint ptr %end_nid to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %end_nid, align 2
  %19 = zext i16 %18 to i32
  %cmp = icmp ult i32 %indvars.iv.next, %19
  br i1 %cmp, label %cleanup.for.body_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_eapd_power_filter(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %power_state) #0 align 64 {
entry:
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %afg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %0 = ptrtoint ptr %afg to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %afg, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp = icmp eq i16 %1, %nid
  br i1 %cmp, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %mfg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 6
  %2 = ptrtoint ptr %mfg to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %mfg, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %nid)
  %cmp6 = icmp eq i16 %3, %nid
  br i1 %cmp6, label %lor.lhs.false.return_crit_edge, label %if.end

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %power_state)
  %cmp8 = icmp eq i32 %power_state, 3
  br i1 %cmp8, label %land.lhs.true, label %if.end.if.end21_crit_edge

if.end.if.end21_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

land.lhs.true:                                    ; preds = %if.end
  %conv.i = zext i16 %nid to i32
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %4 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp.i = icmp ugt i16 %5, %nid
  br i1 %cmp.i, label %land.lhs.true.if.end21_crit_edge, label %lor.lhs.false.i

land.lhs.true.if.end21_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

lor.lhs.false.i:                                  ; preds = %land.lhs.true
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %6 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %7, %conv1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp8.not.i = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp8.not.i, label %get_wcaps.exit, label %lor.lhs.false.i.if.end21_crit_edge

lor.lhs.false.i.if.end21_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

get_wcaps.exit:                                   ; preds = %lor.lhs.false.i
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %8 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 %conv.i, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %9, i32 %sub.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  %12 = and i32 %11, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %12)
  %cmp11 = icmp eq i32 %12, 4194304
  br i1 %cmp11, label %land.lhs.true13, label %get_wcaps.exit.if.end21_crit_edge

get_wcaps.exit.if.end21_crit_edge:                ; preds = %get_wcaps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

land.lhs.true13:                                  ; preds = %get_wcaps.exit
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #21
  %13 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %val.i.i, align 4, !annotation !339
  %call.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 12, ptr noundef nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %snd_hda_query_pin_caps.exit.thread, label %snd_hda_query_pin_caps.exit

snd_hda_query_pin_caps.exit.thread:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  br label %if.then15

snd_hda_query_pin_caps.exit:                      ; preds = %land.lhs.true13
  %14 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %val.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  %and = and i32 %15, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %snd_hda_query_pin_caps.exit.if.end21_crit_edge, label %snd_hda_query_pin_caps.exit.if.then15_crit_edge

snd_hda_query_pin_caps.exit.if.then15_crit_edge:  ; preds = %snd_hda_query_pin_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then15

snd_hda_query_pin_caps.exit.if.end21_crit_edge:   ; preds = %snd_hda_query_pin_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.then15:                                        ; preds = %snd_hda_query_pin_caps.exit.if.then15_crit_edge, %snd_hda_query_pin_caps.exit.thread
  %call.i = call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 3852, i32 noundef 0) #21
  %and17 = and i32 %call.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp eq i32 %and17, 0
  br i1 %tobool18.not, label %if.then15.if.end21_crit_edge, label %if.then15.return_crit_edge

if.then15.return_crit_edge:                       ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.then15.if.end21_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.end21:                                         ; preds = %if.then15.if.end21_crit_edge, %snd_hda_query_pin_caps.exit.if.end21_crit_edge, %get_wcaps.exit.if.end21_crit_edge, %lor.lhs.false.i.if.end21_crit_edge, %land.lhs.true.if.end21_crit_edge, %if.end.if.end21_crit_edge
  br label %return

return:                                           ; preds = %if.end21, %if.then15.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.1 = phi i32 [ 0, %if.then15.return_crit_edge ], [ %power_state, %if.end21 ], [ %power_state, %lor.lhs.false.return_crit_edge ], [ %power_state, %entry.return_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @snd_hda_update_power_acct(ptr nocapture noundef %codec) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime_status.i.i = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12, i32 18
  %0 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp.i.i = icmp eq i32 %1, 2
  br i1 %cmp.i.i, label %snd_hdac_is_power_on.exit, label %snd_hdac_is_power_on.exit.thread

snd_hdac_is_power_on.exit.thread:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %power_jiffies.i2 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 34
  %3 = ptrtoint ptr %power_jiffies.i2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %power_jiffies.i2, align 8
  %sub.i3 = sub i32 %2, %4
  br label %if.then.i

snd_hdac_is_power_on.exit:                        ; preds = %entry
  %disable_depth.i.i = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12, i32 15
  %5 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i)
  %tobool.not.i.i = icmp ugt i16 %bf.load.i.i, 8191
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %power_jiffies.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 34
  %7 = ptrtoint ptr %power_jiffies.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %power_jiffies.i, align 8
  %sub.i = sub i32 %6, %8
  br i1 %tobool.not.i.i, label %snd_hdac_is_power_on.exit.if.then.i_crit_edge, label %if.else.i

snd_hdac_is_power_on.exit.if.then.i_crit_edge:    ; preds = %snd_hdac_is_power_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.then.i:                                        ; preds = %snd_hdac_is_power_on.exit.if.then.i_crit_edge, %snd_hdac_is_power_on.exit.thread
  %sub.i6 = phi i32 [ %sub.i3, %snd_hdac_is_power_on.exit.thread ], [ %sub.i, %snd_hdac_is_power_on.exit.if.then.i_crit_edge ]
  %power_jiffies.i5 = phi ptr [ %power_jiffies.i2, %snd_hdac_is_power_on.exit.thread ], [ %power_jiffies.i, %snd_hdac_is_power_on.exit.if.then.i_crit_edge ]
  %9 = phi i32 [ %2, %snd_hdac_is_power_on.exit.thread ], [ %6, %snd_hdac_is_power_on.exit.if.then.i_crit_edge ]
  %power_on_acct.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 32
  %10 = ptrtoint ptr %power_on_acct.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %power_on_acct.i, align 8
  %add.i = add i32 %11, %sub.i6
  store i32 %add.i, ptr %power_on_acct.i, align 8
  br label %update_power_acct.exit

if.else.i:                                        ; preds = %snd_hdac_is_power_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  %power_off_acct.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 33
  %12 = ptrtoint ptr %power_off_acct.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %power_off_acct.i, align 4
  %add1.i = add i32 %13, %sub.i
  store i32 %add1.i, ptr %power_off_acct.i, align 4
  br label %update_power_acct.exit

update_power_acct.exit:                           ; preds = %if.else.i, %if.then.i
  %power_jiffies.i4 = phi ptr [ %power_jiffies.i5, %if.then.i ], [ %power_jiffies.i, %if.else.i ]
  %14 = phi i32 [ %9, %if.then.i ], [ %6, %if.else.i ]
  %15 = ptrtoint ptr %power_jiffies.i4 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %power_jiffies.i4, align 8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hda_codec_pm_prepare(ptr nocapture noundef %dev) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 2, ptr %power, align 8
  %runtime_status.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 18
  %1 = ptrtoint ptr %runtime_status.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %runtime_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %cmp.i = icmp eq i32 %2, 2
  br i1 %cmp.i, label %land.rhs.i, label %entry.pm_runtime_suspended.exit_crit_edge

entry.pm_runtime_suspended.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %pm_runtime_suspended.exit

land.rhs.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %disable_depth.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 15
  %3 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load.i = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i)
  %tobool.not.i = icmp ult i16 %bf.load.i, 8192
  %phi.cast = zext i1 %tobool.not.i to i32
  br label %pm_runtime_suspended.exit

pm_runtime_suspended.exit:                        ; preds = %land.rhs.i, %entry.pm_runtime_suspended.exit_crit_edge
  %4 = phi i32 [ 0, %entry.pm_runtime_suspended.exit_crit_edge ], [ %phi.cast, %land.rhs.i ]
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hda_codec_pm_complete(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %power, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 16, ptr %power, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %runtime_status.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 18
  %3 = ptrtoint ptr %runtime_status.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %runtime_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp.i = icmp eq i32 %4, 2
  br i1 %cmp.i, label %pm_runtime_suspended.exit, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

pm_runtime_suspended.exit:                        ; preds = %if.end
  %disable_depth.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 15
  %5 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %bf.load.i = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i)
  %tobool.not.i = icmp ult i16 %bf.load.i, 8192
  br i1 %tobool.not.i, label %land.lhs.true, label %pm_runtime_suspended.exit.if.end9_crit_edge

pm_runtime_suspended.exit.if.end9_crit_edge:      ; preds = %pm_runtime_suspended.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

land.lhs.true:                                    ; preds = %pm_runtime_suspended.exit
  %jackpoll_interval = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 38
  %6 = ptrtoint ptr %jackpoll_interval to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %jackpoll_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %lor.lhs.false, label %land.lhs.true.if.then7_crit_edge

land.lhs.true.if.then7_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

lor.lhs.false:                                    ; preds = %land.lhs.true
  %relaxed_resume.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 31
  %8 = ptrtoint ptr %relaxed_resume.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %bf.load.i16 = load i32, ptr %relaxed_resume.i, align 4
  %9 = and i32 %bf.load.i16, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i17 = icmp eq i32 %9, 0
  br i1 %tobool.not.i17, label %hda_codec_need_resume.exit, label %lor.lhs.false5

hda_codec_need_resume.exit:                       ; preds = %lor.lhs.false
  %jacktbl.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 37
  %10 = ptrtoint ptr %jacktbl.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %jacktbl.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool1.i = icmp eq i32 %11, 0
  %12 = and i32 %bf.load.i16, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool6.not = icmp eq i32 %12, 0
  %or.cond = select i1 %tobool1.i, i1 %tobool6.not, i1 false
  br i1 %or.cond, label %hda_codec_need_resume.exit.if.end9_crit_edge, label %hda_codec_need_resume.exit.if.then7_crit_edge

hda_codec_need_resume.exit.if.then7_crit_edge:    ; preds = %hda_codec_need_resume.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

hda_codec_need_resume.exit.if.end9_crit_edge:     ; preds = %hda_codec_need_resume.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %.old = and i32 %bf.load.i16, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.old)
  %tobool6.not.old = icmp eq i32 %.old, 0
  br i1 %tobool6.not.old, label %lor.lhs.false5.if.end9_crit_edge, label %lor.lhs.false5.if.then7_crit_edge

lor.lhs.false5.if.then7_crit_edge:                ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

lor.lhs.false5.if.end9_crit_edge:                 ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then7:                                         ; preds = %lor.lhs.false5.if.then7_crit_edge, %hda_codec_need_resume.exit.if.then7_crit_edge, %land.lhs.true.if.then7_crit_edge
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev, i32 noundef 1) #21
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %lor.lhs.false5.if.end9_crit_edge, %hda_codec_need_resume.exit.if.end9_crit_edge, %pm_runtime_suspended.exit.if.end9_crit_edge, %if.end.if.end9_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_pm_suspend(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 2, ptr %power, align 8
  %call = tail call i32 @pm_runtime_force_suspend(ptr noundef %dev) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_pm_resume(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 16, ptr %power, align 8
  %call = tail call i32 @pm_runtime_force_resume(ptr noundef %dev) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_pm_freeze(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1, ptr %power, align 8
  %call = tail call i32 @pm_runtime_force_suspend(ptr noundef %dev) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_pm_thaw(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 32, ptr %power, align 8
  %call = tail call i32 @pm_runtime_force_resume(ptr noundef %dev) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_pm_restore(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %power = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 64, ptr %power, align 8
  %call = tail call i32 @pm_runtime_force_resume(ptr noundef %dev) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_runtime_suspend(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %card = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 2
  %0 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %card, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %jackpoll_work = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 39
  %call = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %jackpoll_work) #21
  %call1 = tail call fastcc i32 @hda_call_codec_suspend(ptr noundef %dev)
  %link_down_at_suspend = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 31
  %2 = ptrtoint ptr %link_down_at_suspend to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load = load i32, ptr %link_down_at_suspend, align 4
  %3 = and i32 %bf.load, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool2.not = icmp eq i32 %3, 0
  br i1 %tobool2.not, label %lor.lhs.false, label %if.end.if.then11_crit_edge

if.end.if.then11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then11

lor.lhs.false:                                    ; preds = %if.end
  %power_caps = getelementptr inbounds %struct.hdac_device, ptr %dev, i32 0, i32 13
  %4 = ptrtoint ptr %power_caps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %power_caps, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1073741824, i32 %5)
  %6 = icmp ult i32 %5, -1073741824
  %and9 = and i32 %call1, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  %or.cond22 = select i1 %6, i1 true, i1 %tobool10.not
  br i1 %or.cond22, label %lor.lhs.false.if.end13_crit_edge, label %lor.lhs.false.if.then11_crit_edge

lor.lhs.false.if.then11_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then11

lor.lhs.false.if.end13_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end13

if.then11:                                        ; preds = %lor.lhs.false.if.then11_crit_edge, %if.end.if.then11_crit_edge
  tail call void @snd_hdac_codec_link_down(ptr noundef %dev) #21
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %lor.lhs.false.if.end13_crit_edge
  %7 = ptrtoint ptr %link_down_at_suspend to i32
  call void @__asan_load4_noabort(i32 %7)
  %bf.load.i = load i32, ptr %link_down_at_suspend, align 4
  %8 = and i32 %bf.load.i, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %if.end13.cleanup_crit_edge, label %if.then.i

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 1
  %9 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bus.i, align 8
  %addr.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 3
  %11 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %addr.i, align 8
  tail call void @snd_hdac_display_power(ptr noundef %10, i32 noundef %12, i1 noundef zeroext false) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end13.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_codec_runtime_resume(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %card = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 2
  %0 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %card, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %display_power_control.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 31
  %2 = ptrtoint ptr %display_power_control.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load.i = load i32, ptr %display_power_control.i, align 4
  %3 = and i32 %bf.load.i, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %if.end.snd_hda_codec_display_power.exit_crit_edge, label %if.then.i

if.end.snd_hda_codec_display_power.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_display_power.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus.i, align 8
  %addr.i = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 3
  %6 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %addr.i, align 8
  tail call void @snd_hdac_display_power(ptr noundef %5, i32 noundef %7, i1 noundef zeroext true) #21
  br label %snd_hda_codec_display_power.exit

snd_hda_codec_display_power.exit:                 ; preds = %if.then.i, %if.end.snd_hda_codec_display_power.exit_crit_edge
  tail call void @snd_hdac_codec_link_up(ptr noundef %dev) #21
  tail call fastcc void @hda_call_codec_resume(ptr noundef %dev)
  %call.i = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 22
  %8 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %8)
  store volatile i64 %call.i, ptr %last_busy.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %snd_hda_codec_display_power.exit, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_shutdown(ptr noundef %codec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %registered = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %registered to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %registered, align 4
  %1 = and i32 %bf.load, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %pcm_list_head = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %2 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn16 = load ptr, ptr %pcm_list_head, align 4
  %cmp.not17 = icmp eq ptr %.pn16, %pcm_list_head
  br i1 %cmp.not17, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn18 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn16, %if.end.for.body_crit_edge ]
  %pcm = getelementptr i8, ptr %.pn18, i32 -12
  %3 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pcm, align 8
  %call = tail call i32 @snd_pcm_suspend_all(ptr noundef %4) #21
  %5 = ptrtoint ptr %.pn18 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn = load ptr, ptr %.pn18, align 4
  %cmp.not = icmp eq ptr %.pn, %pcm_list_head
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %call7 = tail call i32 @pm_runtime_force_suspend(ptr noundef %codec) #21
  tail call void @__pm_runtime_disable(ptr noundef %codec, i1 noundef zeroext true) #21
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_suspend_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_runtime_force_suspend(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_build_controls(ptr noundef %codec) #0 align 64 {
entry:
  %chmap.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 27, i32 4
  %0 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hda_exec_init_verbs.exit_crit_edge, label %if.then.i

entry.hda_exec_init_verbs.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_exec_init_verbs.exit

if.then.i:                                        ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not6.i.i = icmp eq i16 %3, 0
  br i1 %tobool.not6.i.i, label %if.then.i.hda_exec_init_verbs.exit_crit_edge, label %if.then.i.for.body.i.i_crit_edge

if.then.i.for.body.i.i_crit_edge:                 ; preds = %if.then.i
  br label %for.body.i.i

if.then.i.hda_exec_init_verbs.exit_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_exec_init_verbs.exit

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.then.i.for.body.i.i_crit_edge
  %4 = phi i16 [ %10, %for.body.i.i.for.body.i.i_crit_edge ], [ %3, %if.then.i.for.body.i.i_crit_edge ]
  %seq.addr.07.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %1, %if.then.i.for.body.i.i_crit_edge ]
  %verb.i.i = getelementptr inbounds %struct.hda_verb, ptr %seq.addr.07.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %verb.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %verb.i.i, align 4
  %param.i.i = getelementptr inbounds %struct.hda_verb, ptr %seq.addr.07.i.i, i32 0, i32 2
  %7 = ptrtoint ptr %param.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %param.i.i, align 4
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %4, i32 noundef 0, i32 noundef %6, i32 noundef %8) #21
  %incdec.ptr.i.i = getelementptr %struct.hda_verb, ptr %seq.addr.07.i.i, i32 1
  %9 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %incdec.ptr.i.i, align 4
  %tobool.not.i.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.hda_exec_init_verbs.exit_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.body.i.i.hda_exec_init_verbs.exit_crit_edge:  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_exec_init_verbs.exit

hda_exec_init_verbs.exit:                         ; preds = %for.body.i.i.hda_exec_init_verbs.exit_crit_edge, %if.then.i.hda_exec_init_verbs.exit_crit_edge, %entry.hda_exec_init_verbs.exit_crit_edge
  %patch_ops = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7
  %init = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 2
  %11 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %init, align 8
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %hda_exec_init_verbs.exit.land.lhs.true_crit_edge, label %if.end

hda_exec_init_verbs.exit.land.lhs.true_crit_edge: ; preds = %hda_exec_init_verbs.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true

if.end:                                           ; preds = %hda_exec_init_verbs.exit
  %call = tail call i32 %12(ptr noundef %codec) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.end.land.lhs.true_crit_edge, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.end.land.lhs.true_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.land.lhs.true_crit_edge, %hda_exec_init_verbs.exit.land.lhs.true_crit_edge
  %13 = ptrtoint ptr %patch_ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %patch_ops, align 8
  %tobool5.not = icmp eq ptr %14, null
  br i1 %tobool5.not, label %land.lhs.true.if.end12_crit_edge, label %if.then6

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.then6:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %call9 = tail call i32 %14(ptr noundef %codec) #21
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end.if.end10_crit_edge
  %err.1 = phi i32 [ %call, %if.end.if.end10_crit_edge ], [ %call9, %if.then6 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.1)
  %cmp = icmp slt i32 %err.1, 0
  br i1 %cmp, label %if.end10.cleanup_crit_edge, label %if.end10.if.end12_crit_edge

if.end10.if.end12_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end12:                                         ; preds = %if.end10.if.end12_crit_edge, %land.lhs.true.if.end12_crit_edge
  %pcm_list_head.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %15 = ptrtoint ptr %pcm_list_head.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn46.i = load ptr, ptr %pcm_list_head.i, align 4
  %cmp.not47.i = icmp eq ptr %.pn46.i, %pcm_list_head.i
  br i1 %cmp.not47.i, label %if.end12.if.end16_crit_edge, label %if.end12.for.cond2.preheader.i_crit_edge

if.end12.for.cond2.preheader.i_crit_edge:         ; preds = %if.end12
  br label %for.cond2.preheader.i

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.cond2.preheader.i:                            ; preds = %for.inc.1.i.for.cond2.preheader.i_crit_edge, %if.end12.for.cond2.preheader.i_crit_edge
  %.pn48.i = phi ptr [ %.pn.i, %for.inc.1.i.for.cond2.preheader.i_crit_edge ], [ %.pn46.i, %if.end12.for.cond2.preheader.i_crit_edge ]
  %stream.i = getelementptr i8, ptr %.pn48.i, i32 -148
  %pcm5.i = getelementptr i8, ptr %.pn48.i, i32 -12
  %own_chmap.i = getelementptr i8, ptr %.pn48.i, i32 -8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %chmap.i) #21
  %16 = ptrtoint ptr %chmap.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 -1 to ptr), ptr %chmap.i, align 4, !annotation !339
  %17 = ptrtoint ptr %pcm5.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pcm5.i, align 8
  %tobool.not.i36 = icmp eq ptr %18, null
  br i1 %tobool.not.i36, label %for.cond2.preheader.i.for.inc.i_crit_edge, label %lor.lhs.false.i

for.cond2.preheader.i.for.inc.i_crit_edge:        ; preds = %for.cond2.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.cond2.preheader.i
  %19 = ptrtoint ptr %own_chmap.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %own_chmap.i, align 4, !range !348
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool6.not.i = icmp eq i8 %20, 0
  br i1 %tobool6.not.i, label %lor.lhs.false7.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

lor.lhs.false7.i:                                 ; preds = %lor.lhs.false.i
  %21 = ptrtoint ptr %stream.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %stream.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool8.not.i = icmp eq i32 %22, 0
  br i1 %tobool8.not.i, label %lor.lhs.false7.i.for.inc.i_crit_edge, label %if.end.i

lor.lhs.false7.i.for.inc.i_crit_edge:             ; preds = %lor.lhs.false7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end.i:                                         ; preds = %lor.lhs.false7.i
  %chmap9.i = getelementptr i8, ptr %.pn48.i, i32 -112
  %23 = ptrtoint ptr %chmap9.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %chmap9.i, align 4
  %tobool10.not.i = icmp eq ptr %24, null
  %spec.select.i = select i1 %tobool10.not.i, ptr @snd_pcm_std_chmaps, ptr %24
  %channels_max.i = getelementptr i8, ptr %.pn48.i, i32 -140
  %25 = ptrtoint ptr %channels_max.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %channels_max.i, align 8
  %call.i = call i32 @snd_pcm_add_chmap_ctls(ptr noundef nonnull %18, i32 noundef 0, ptr noundef nonnull %spec.select.i, i32 noundef %26, i32 noundef 0, ptr noundef nonnull %chmap.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp13.i = icmp slt i32 %call.i, 0
  br i1 %cmp13.i, label %if.end.i.add_std_chmaps.exit_crit_edge, label %if.end15.i

if.end.i.add_std_chmaps.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %add_std_chmaps.exit

if.end15.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %27 = ptrtoint ptr %chmap.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %chmap.i, align 4
  %channel_mask.i = getelementptr inbounds %struct.snd_pcm_chmap, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %channel_mask.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 340, ptr %channel_mask.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end15.i, %lor.lhs.false7.i.for.inc.i_crit_edge, %lor.lhs.false.i.for.inc.i_crit_edge, %for.cond2.preheader.i.for.inc.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %chmap.i) #21
  %arrayidx.1.i = getelementptr i8, ptr %.pn48.i, i32 -84
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %chmap.i) #21
  %30 = ptrtoint ptr %chmap.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 -1 to ptr), ptr %chmap.i, align 4, !annotation !339
  %31 = ptrtoint ptr %pcm5.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pcm5.i, align 8
  %tobool.not.1.i = icmp eq ptr %32, null
  br i1 %tobool.not.1.i, label %for.inc.i.for.inc.1.i_crit_edge, label %lor.lhs.false.1.i

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1.i

lor.lhs.false.1.i:                                ; preds = %for.inc.i
  %33 = ptrtoint ptr %own_chmap.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %own_chmap.i, align 4, !range !348
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool6.not.1.i = icmp eq i8 %34, 0
  br i1 %tobool6.not.1.i, label %lor.lhs.false7.1.i, label %lor.lhs.false.1.i.for.inc.1.i_crit_edge

lor.lhs.false.1.i.for.inc.1.i_crit_edge:          ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1.i

lor.lhs.false7.1.i:                               ; preds = %lor.lhs.false.1.i
  %35 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.1.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool8.not.1.i = icmp eq i32 %36, 0
  br i1 %tobool8.not.1.i, label %lor.lhs.false7.1.i.for.inc.1.i_crit_edge, label %if.end.1.i

lor.lhs.false7.1.i.for.inc.1.i_crit_edge:         ; preds = %lor.lhs.false7.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1.i

if.end.1.i:                                       ; preds = %lor.lhs.false7.1.i
  %chmap9.1.i = getelementptr i8, ptr %.pn48.i, i32 -48
  %37 = ptrtoint ptr %chmap9.1.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %chmap9.1.i, align 4
  %tobool10.not.1.i = icmp eq ptr %38, null
  %spec.select.1.i = select i1 %tobool10.not.1.i, ptr @snd_pcm_std_chmaps, ptr %38
  %channels_max.1.i = getelementptr i8, ptr %.pn48.i, i32 -76
  %39 = ptrtoint ptr %channels_max.1.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %channels_max.1.i, align 8
  %call.1.i = call i32 @snd_pcm_add_chmap_ctls(ptr noundef nonnull %32, i32 noundef 1, ptr noundef nonnull %spec.select.1.i, i32 noundef %40, i32 noundef 0, ptr noundef nonnull %chmap.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1.i)
  %cmp13.1.i = icmp slt i32 %call.1.i, 0
  br i1 %cmp13.1.i, label %if.end.1.i.add_std_chmaps.exit_crit_edge, label %if.end15.1.i

if.end.1.i.add_std_chmaps.exit_crit_edge:         ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %add_std_chmaps.exit

if.end15.1.i:                                     ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #23
  %41 = ptrtoint ptr %chmap.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %chmap.i, align 4
  %channel_mask.1.i = getelementptr inbounds %struct.snd_pcm_chmap, ptr %42, i32 0, i32 5
  %43 = ptrtoint ptr %channel_mask.1.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 340, ptr %channel_mask.1.i, align 4
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.end15.1.i, %lor.lhs.false7.1.i.for.inc.1.i_crit_edge, %lor.lhs.false.1.i.for.inc.1.i_crit_edge, %for.inc.i.for.inc.1.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %chmap.i) #21
  %44 = ptrtoint ptr %.pn48.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %.pn.i = load ptr, ptr %.pn48.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %pcm_list_head.i
  br i1 %cmp.not.i, label %for.inc.1.i.if.end16_crit_edge, label %for.inc.1.i.for.cond2.preheader.i_crit_edge

for.inc.1.i.for.cond2.preheader.i_crit_edge:      ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond2.preheader.i

for.inc.1.i.if.end16_crit_edge:                   ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

add_std_chmaps.exit:                              ; preds = %if.end.1.i.add_std_chmaps.exit_crit_edge, %if.end.i.add_std_chmaps.exit_crit_edge
  %call.lcssa.i = phi i32 [ %call.i, %if.end.i.add_std_chmaps.exit_crit_edge ], [ %call.1.i, %if.end.1.i.add_std_chmaps.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %chmap.i) #21
  br label %cleanup

if.end16:                                         ; preds = %for.inc.1.i.if.end16_crit_edge, %if.end12.if.end16_crit_edge
  %jackpoll_interval = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 38
  %45 = ptrtoint ptr %jackpoll_interval to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %jackpoll_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool17.not = icmp eq i32 %46, 0
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %jackpoll_work = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39
  call void @hda_jackpoll_work(ptr noundef %jackpoll_work)
  br label %if.end19

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  call void @snd_hda_jack_report_sync(ptr noundef %codec) #21
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then18
  %power_filter.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %47 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %power_filter.i, align 4
  %tobool.not.i37 = icmp eq ptr %48, null
  br i1 %tobool.not.i37, label %if.end19.cleanup_crit_edge, label %if.end.i38

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i38:                                       ; preds = %if.end19
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %49 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %start_nid.i, align 4
  %end_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 19
  %51 = ptrtoint ptr %end_nid.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %end_nid.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %50, i16 %52)
  %cmp39.i = icmp ult i16 %50, %52
  br i1 %cmp39.i, label %for.body.lr.ph.i, label %if.end.i38.cleanup_crit_edge

if.end.i38.cleanup_crit_edge:                     ; preds = %if.end.i38
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.end.i38
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %53 = zext i16 %50 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i39.for.body.i_crit_edge, %for.body.lr.ph.i
  %indvars.iv.i = phi i32 [ %53, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %cleanup.i39.for.body.i_crit_edge ]
  %54 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %start_nid.i, align 4
  %conv1.i.i = zext i16 %55 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv.i, i32 %conv1.i.i)
  %cmp.i.i = icmp ult i32 %indvars.iv.i, %conv1.i.i
  br i1 %cmp.i.i, label %for.body.i.cleanup.i39_crit_edge, label %lor.lhs.false.i.i

for.body.i.cleanup.i39_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i39

lor.lhs.false.i.i:                                ; preds = %for.body.i
  %56 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %57, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %indvars.iv.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %indvars.iv.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.cleanup.i39_crit_edge

lor.lhs.false.i.i.cleanup.i39_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i39

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i
  %58 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %indvars.iv.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %59, i32 %sub.i.i
  %60 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %61, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool4.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool4.not.i, label %get_wcaps.exit.i.cleanup.i39_crit_edge, label %if.end6.i

get_wcaps.exit.i.cleanup.i39_crit_edge:           ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i39

if.end6.i:                                        ; preds = %get_wcaps.exit.i
  %62 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %power_filter.i, align 4
  %64 = trunc i32 %indvars.iv.i to i16
  %call8.i = call i32 %63(ptr noundef %codec, i16 noundef zeroext %64, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %cmp9.i = icmp eq i32 %call8.i, 0
  br i1 %cmp9.i, label %if.end6.i.cleanup.i39_crit_edge, label %if.end12.i

if.end6.i.cleanup.i39_crit_edge:                  ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i39

if.end12.i:                                       ; preds = %if.end6.i
  %call.i.i = call zeroext i1 @snd_hdac_check_power_state(ptr noundef %codec, i16 noundef zeroext %64, i32 noundef %call8.i) #21
  br i1 %call.i.i, label %if.end12.i.cleanup.i39_crit_edge, label %if.then14.i

if.end12.i.cleanup.i39_crit_edge:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.i39

if.then14.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i35.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %64, i32 noundef 0, i32 noundef 1797, i32 noundef %call8.i) #21
  br label %cleanup.i39

cleanup.i39:                                      ; preds = %if.then14.i, %if.end12.i.cleanup.i39_crit_edge, %if.end6.i.cleanup.i39_crit_edge, %get_wcaps.exit.i.cleanup.i39_crit_edge, %lor.lhs.false.i.i.cleanup.i39_crit_edge, %for.body.i.cleanup.i39_crit_edge
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %65 = ptrtoint ptr %end_nid.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %end_nid.i, align 2
  %67 = zext i16 %66 to i32
  %cmp.i = icmp ult i32 %indvars.iv.next.i, %67
  br i1 %cmp.i, label %cleanup.i39.for.body.i_crit_edge, label %cleanup.i39.cleanup_crit_edge

cleanup.i39.cleanup_crit_edge:                    ; preds = %cleanup.i39
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup.i39.for.body.i_crit_edge:                 ; preds = %cleanup.i39
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

cleanup:                                          ; preds = %cleanup.i39.cleanup_crit_edge, %if.end.i38.cleanup_crit_edge, %if.end19.cleanup_crit_edge, %add_std_chmaps.exit, %if.end10.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %if.end10.cleanup_crit_edge ], [ %call.lcssa.i, %add_std_chmaps.exit ], [ 0, %if.end19.cleanup_crit_edge ], [ 0, %if.end.i38.cleanup_crit_edge ], [ 0, %cleanup.i39.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_jack_report_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_prepare(ptr noundef %codec, ptr noundef %hinfo, i32 noundef %stream, i32 noundef %format, ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %prepare_mutex = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %prepare_mutex, i32 noundef 0) #21
  %prepare = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 8, i32 2
  %2 = ptrtoint ptr %prepare to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prepare, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end4_crit_edge, label %if.end

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.end:                                           ; preds = %entry
  %call = tail call i32 %3(ptr noundef %hinfo, ptr noundef %codec, i32 noundef %stream, i32 noundef %format, ptr noundef %substream) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then3, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.then3:                                         ; preds = %if.end
  %4 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus, align 8
  %codec_list.i = getelementptr inbounds %struct.hdac_bus, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %codec_list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn32.i = load ptr, ptr %codec_list.i, align 4
  %cmp.not35.i = icmp eq ptr %.pn32.i, %codec_list.i
  br i1 %cmp.not35.i, label %if.then3.if.end4_crit_edge, label %if.then3.for.body.i_crit_edge

if.then3.for.body.i_crit_edge:                    ; preds = %if.then3
  br label %for.body.i

if.then3.if.end4_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

for.cond.loopexit.i:                              ; preds = %for.inc.i.for.cond.loopexit.i_crit_edge, %for.body.i.for.cond.loopexit.i_crit_edge
  %7 = ptrtoint ptr %.pn36.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn.i = load ptr, ptr %.pn36.i, align 4
  %8 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bus, align 8
  %codec_list4.i = getelementptr inbounds %struct.hdac_bus, ptr %9, i32 0, i32 11
  %cmp.not.i = icmp eq ptr %.pn.i, %codec_list4.i
  br i1 %cmp.not.i, label %for.cond.loopexit.i.if.end4_crit_edge, label %for.cond.loopexit.i.for.body.i_crit_edge

for.cond.loopexit.i.for.body.i_crit_edge:         ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.cond.loopexit.i.if.end4_crit_edge:            ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

for.body.i:                                       ; preds = %for.cond.loopexit.i.for.body.i_crit_edge, %if.then3.for.body.i_crit_edge
  %.pn36.i = phi ptr [ %.pn.i, %for.cond.loopexit.i.for.body.i_crit_edge ], [ %.pn32.i, %if.then3.for.body.i_crit_edge ]
  %c.037.i = getelementptr i8, ptr %.pn36.i, i32 -940
  %cvt_setups.i = getelementptr i8, ptr %.pn36.i, i32 728
  %10 = ptrtoint ptr %cvt_setups.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cvt_setups.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp827.not.i = icmp eq i32 %11, 0
  br i1 %cmp827.not.i, label %for.body.i.for.cond.loopexit.i_crit_edge, label %for.body9.lr.ph.i

for.body.i.for.cond.loopexit.i_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit.i

for.body9.lr.ph.i:                                ; preds = %for.body.i
  %list5.i = getelementptr i8, ptr %.pn36.i, i32 744
  %12 = ptrtoint ptr %list5.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %list5.i, align 4
  %stream_pm.i.i = getelementptr i8, ptr %.pn36.i, i32 344
  %elem_size.i.i = getelementptr i8, ptr %.pn36.i, i32 736
  br label %for.body9.i

for.body9.i:                                      ; preds = %for.inc.i.for.body9.i_crit_edge, %for.body9.lr.ph.i
  %p.029.i = phi ptr [ %13, %for.body9.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body9.i_crit_edge ]
  %i.028.i = phi i32 [ 0, %for.body9.lr.ph.i ], [ %inc.i, %for.inc.i.for.body9.i_crit_edge ]
  %dirty.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.029.i, i32 0, i32 5
  %14 = ptrtoint ptr %dirty.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %dirty.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i = icmp eq i8 %15, 0
  br i1 %tobool.not.i, label %for.body9.i.for.inc.i_crit_edge, label %if.then.i

for.body9.i.for.inc.i_crit_edge:                  ; preds = %for.body9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body9.i
  %16 = ptrtoint ptr %p.029.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %p.029.i, align 2
  %stream_tag.i.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.029.i, i32 0, i32 1
  %18 = ptrtoint ptr %stream_tag.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %stream_tag.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.not.i.i = icmp eq i8 %19, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.then.i.if.then.i.i_crit_edge

if.then.i.if.then.i.i_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then.i
  %channel_id.i.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.029.i, i32 0, i32 2
  %20 = ptrtoint ptr %channel_id.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %channel_id.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool3.not.i.i = icmp eq i8 %21, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false.i.i.if.end.i.i_crit_edge, label %lor.lhs.false.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.i

lor.lhs.false.i.i.if.end.i.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then.i.if.then.i.i_crit_edge
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %c.037.i, i16 noundef zeroext %17, i32 noundef 0, i32 noundef 1798, i32 noundef 0) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %lor.lhs.false.i.i.if.end.i.i_crit_edge
  %format_id.i.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.029.i, i32 0, i32 3
  %22 = ptrtoint ptr %format_id.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %format_id.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool4.not.i.i = icmp eq i16 %23, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.then5.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i.i

if.then5.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i26.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %c.037.i, i16 noundef zeroext %17, i32 noundef 0, i32 noundef 512, i32 noundef 0) #21
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.then5.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %24 = ptrtoint ptr %p.029.i to i32
  call void @__asan_storeN_noabort(i32 %24, i32 8)
  store i64 0, ptr %p.029.i, align 2
  store i16 %17, ptr %p.029.i, align 2
  %25 = ptrtoint ptr %stream_pm.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %stream_pm.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %26, null
  br i1 %tobool9.not.i.i, label %if.end7.i.i.for.inc.i_crit_edge, label %if.then10.i.i

if.end7.i.i.for.inc.i_crit_edge:                  ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then10.i.i:                                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %26(ptr noundef %c.037.i, i16 noundef zeroext %17, i1 noundef zeroext false) #21
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then10.i.i, %if.end7.i.i.for.inc.i_crit_edge, %for.body9.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.028.i, 1
  %27 = ptrtoint ptr %list5.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %list5.i, align 4
  %29 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %30, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %28, i32 %mul.i.i
  %31 = ptrtoint ptr %cvt_setups.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cvt_setups.i, align 4
  %cmp8.i = icmp ult i32 %inc.i, %32
  br i1 %cmp8.i, label %for.inc.i.for.body9.i_crit_edge, label %for.inc.i.for.cond.loopexit.i_crit_edge

for.inc.i.for.cond.loopexit.i_crit_edge:          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit.i

for.inc.i.for.body9.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body9.i

if.end4:                                          ; preds = %for.cond.loopexit.i.if.end4_crit_edge, %if.then3.if.end4_crit_edge, %if.end.if.end4_crit_edge, %entry.if.end4_crit_edge
  %ret.015 = phi i32 [ %call, %if.end.if.end4_crit_edge ], [ %call, %if.then3.if.end4_crit_edge ], [ -19, %entry.if.end4_crit_edge ], [ %call, %for.cond.loopexit.i.if.end4_crit_edge ]
  %33 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %bus, align 8
  %prepare_mutex6 = getelementptr inbounds %struct.hda_bus, ptr %34, i32 0, i32 4
  tail call void @mutex_unlock(ptr noundef %prepare_mutex6) #21
  ret i32 %ret.015
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_codec_cleanup(ptr noundef %codec, ptr noundef %hinfo, ptr noundef %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %prepare_mutex = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %prepare_mutex, i32 noundef 0) #21
  %cleanup = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 8, i32 3
  %2 = ptrtoint ptr %cleanup to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cleanup, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 %3(ptr noundef %hinfo, ptr noundef %codec, ptr noundef %substream) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus, align 8
  %prepare_mutex4 = getelementptr inbounds %struct.hda_bus, ptr %5, i32 0, i32 4
  tail call void @mutex_unlock(ptr noundef %prepare_mutex4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_parse_pcms(ptr noundef %codec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pcm_list_head = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %0 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %pcm_list_head, align 4
  %cmp.i.not = icmp eq ptr %1, %pcm_list_head
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup39_crit_edge

entry.cleanup39_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup39

if.end:                                           ; preds = %entry
  %build_pcms = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 1
  %2 = ptrtoint ptr %build_pcms to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %build_pcms, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.end.cleanup39_crit_edge, label %if.end3

if.end.cleanup39_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup39

if.end3:                                          ; preds = %if.end
  %call6 = tail call i32 %3(ptr noundef %codec) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %do.end, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end3
  %4 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn80 = load ptr, ptr %pcm_list_head, align 4
  %cmp12.not81 = icmp eq ptr %.pn80, %pcm_list_head
  br i1 %cmp12.not81, label %for.cond.preheader.cleanup39_crit_edge, label %for.cond.preheader.for.cond13.preheader_crit_edge

for.cond.preheader.for.cond13.preheader_crit_edge: ; preds = %for.cond.preheader
  br label %for.cond13.preheader

for.cond.preheader.cleanup39_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup39

do.end:                                           ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %addr = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 3
  %5 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %addr, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.41, i32 noundef %6, i32 noundef %call6) #25
  br label %cleanup39

for.cond13.preheader:                             ; preds = %for.inc.1.for.cond13.preheader_crit_edge, %for.cond.preheader.for.cond13.preheader_crit_edge
  %.pn82 = phi ptr [ %.pn, %for.inc.1.for.cond13.preheader_crit_edge ], [ %.pn80, %for.cond.preheader.for.cond13.preheader_crit_edge ]
  %stream16 = getelementptr i8, ptr %.pn82, i32 -148
  %7 = ptrtoint ptr %stream16 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %stream16, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool17.not = icmp eq i32 %8, 0
  br i1 %tobool17.not, label %for.cond13.preheader.for.inc_crit_edge, label %if.end19

for.cond13.preheader.for.inc_crit_edge:           ; preds = %for.cond13.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end19:                                         ; preds = %for.cond13.preheader
  %nid.i = getelementptr i8, ptr %.pn82, i32 -136
  %9 = ptrtoint ptr %nid.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %nid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i, label %if.end19.if.end22.i_crit_edge, label %land.lhs.true.i

if.end19.if.end22.i_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22.i

land.lhs.true.i:                                  ; preds = %if.end19
  %rates.i = getelementptr i8, ptr %.pn82, i32 -132
  %11 = ptrtoint ptr %rates.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rates.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool1.not.i = icmp eq i32 %12, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.then.i_crit_edge, label %lor.lhs.false.i

land.lhs.true.i.if.then.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %formats.i = getelementptr i8, ptr %.pn82, i32 -124
  %13 = ptrtoint ptr %formats.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %formats.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool2.not.i = icmp eq i64 %14, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.if.end22.i_crit_edge

lor.lhs.false.i.if.end22.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22.i

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %land.lhs.true.i.if.then.i_crit_edge
  %spec.select.i = phi ptr [ null, %lor.lhs.false.i.if.then.i_crit_edge ], [ %rates.i, %land.lhs.true.i.if.then.i_crit_edge ]
  %formats7.i = getelementptr i8, ptr %.pn82, i32 -124
  %15 = ptrtoint ptr %formats7.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %formats7.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %16)
  %tobool8.not.i = icmp eq i64 %16, 0
  %cond13.i = select i1 %tobool8.not.i, ptr %formats7.i, ptr null
  %maxbps.i = getelementptr i8, ptr %.pn82, i32 -116
  %17 = ptrtoint ptr %maxbps.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %maxbps.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool14.not.i = icmp eq i32 %18, 0
  %cond19.i = select i1 %tobool14.not.i, ptr %maxbps.i, ptr null
  %call.i = tail call i32 @snd_hdac_query_supported_pcm(ptr noundef %codec, i16 noundef zeroext %10, ptr noundef %spec.select.i, ptr noundef %cond13.i, ptr noundef %cond19.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i61 = icmp slt i32 %call.i, 0
  br i1 %cmp.i61, label %if.then.i.cleanup29.thread_crit_edge, label %if.then.i.if.end22.i_crit_edge

if.then.i.if.end22.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22.i

if.then.i.cleanup29.thread_crit_edge:             ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup29.thread

if.end22.i:                                       ; preds = %if.then.i.if.end22.i_crit_edge, %lor.lhs.false.i.if.end22.i_crit_edge, %if.end19.if.end22.i_crit_edge
  %ops.i = getelementptr i8, ptr %.pn82, i32 -108
  %19 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ops.i, align 8
  %cmp23.i = icmp eq ptr %20, null
  br i1 %cmp23.i, label %if.then25.i, label %if.end22.i.if.end28.i_crit_edge

if.end22.i.if.end28.i_crit_edge:                  ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28.i

if.then25.i:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #23
  %21 = ptrtoint ptr %ops.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @hda_pcm_default_open_close, ptr %ops.i, align 8
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then25.i, %if.end22.i.if.end28.i_crit_edge
  %close.i = getelementptr i8, ptr %.pn82, i32 -104
  %22 = ptrtoint ptr %close.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %close.i, align 4
  %cmp30.i = icmp eq ptr %23, null
  br i1 %cmp30.i, label %if.then32.i, label %if.end28.i.if.end35.i_crit_edge

if.end28.i.if.end35.i_crit_edge:                  ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35.i

if.then32.i:                                      ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %close.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @hda_pcm_default_open_close, ptr %close.i, align 4
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.then32.i, %if.end28.i.if.end35.i_crit_edge
  %prepare.i = getelementptr i8, ptr %.pn82, i32 -100
  %25 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prepare.i, align 8
  %cmp37.i = icmp eq ptr %26, null
  br i1 %cmp37.i, label %if.then39.i, label %if.end35.i.if.end69.i_crit_edge

if.end35.i.if.end69.i_crit_edge:                  ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69.i

if.then39.i:                                      ; preds = %if.end35.i
  %27 = ptrtoint ptr %nid.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %nid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool41.not.i = icmp eq i16 %28, 0
  br i1 %tobool41.not.i, label %if.then39.i.cleanup29.thread.sink.split_crit_edge, label %if.end66.i, !prof !338

if.then39.i.cleanup29.thread.sink.split_crit_edge: ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup29.thread.sink.split

if.end66.i:                                       ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #23
  %29 = ptrtoint ptr %prepare.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @hda_pcm_default_prepare, ptr %prepare.i, align 8
  br label %if.end69.i

if.end69.i:                                       ; preds = %if.end66.i, %if.end35.i.if.end69.i_crit_edge
  %cleanup.i = getelementptr i8, ptr %.pn82, i32 -96
  %30 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cleanup.i, align 4
  %cmp71.i = icmp eq ptr %31, null
  br i1 %cmp71.i, label %if.then73.i, label %if.end69.i.for.inc_crit_edge

if.end69.i.for.inc_crit_edge:                     ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then73.i:                                      ; preds = %if.end69.i
  %32 = ptrtoint ptr %nid.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %nid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %33)
  %tobool76.not.i = icmp eq i16 %33, 0
  br i1 %tobool76.not.i, label %if.then73.i.cleanup29.thread.sink.split_crit_edge, label %if.end110.i, !prof !338

if.then73.i.cleanup29.thread.sink.split_crit_edge: ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup29.thread.sink.split

if.end110.i:                                      ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #23
  %34 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @hda_pcm_default_cleanup, ptr %cleanup.i, align 4
  br label %for.inc

cleanup29.thread.sink.split:                      ; preds = %if.then73.i.1.cleanup29.thread.sink.split_crit_edge, %if.then39.i.1.cleanup29.thread.sink.split_crit_edge, %if.then73.i.cleanup29.thread.sink.split_crit_edge, %if.then39.i.cleanup29.thread.sink.split_crit_edge
  %.sink = phi i32 [ 3128, %if.then39.i.1.cleanup29.thread.sink.split_crit_edge ], [ 3128, %if.then39.i.cleanup29.thread.sink.split_crit_edge ], [ 3133, %if.then73.i.1.cleanup29.thread.sink.split_crit_edge ], [ 3133, %if.then73.i.cleanup29.thread.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #21
  br label %cleanup29.thread

cleanup29.thread:                                 ; preds = %if.then.i.1.cleanup29.thread_crit_edge, %cleanup29.thread.sink.split, %if.then.i.cleanup29.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -22, %cleanup29.thread.sink.split ], [ %call.i.1, %if.then.i.1.cleanup29.thread_crit_edge ], [ %call.i, %if.then.i.cleanup29.thread_crit_edge ]
  %cpcm.074 = getelementptr i8, ptr %.pn82, i32 -156
  %35 = ptrtoint ptr %cpcm.074 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cpcm.074, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %codec, ptr noundef nonnull @.str.44, ptr noundef %36) #25
  br label %cleanup39

for.inc:                                          ; preds = %if.end110.i, %if.end69.i.for.inc_crit_edge, %for.cond13.preheader.for.inc_crit_edge
  %arrayidx.1 = getelementptr i8, ptr %.pn82, i32 -84
  %37 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx.1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool17.not.1 = icmp eq i32 %38, 0
  br i1 %tobool17.not.1, label %for.inc.for.inc.1_crit_edge, label %if.end19.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1

if.end19.1:                                       ; preds = %for.inc
  %nid.i.1 = getelementptr i8, ptr %.pn82, i32 -72
  %39 = ptrtoint ptr %nid.i.1 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %nid.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %tobool.not.i.1 = icmp eq i16 %40, 0
  br i1 %tobool.not.i.1, label %if.end19.1.if.end22.i.1_crit_edge, label %land.lhs.true.i.1

if.end19.1.if.end22.i.1_crit_edge:                ; preds = %if.end19.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22.i.1

land.lhs.true.i.1:                                ; preds = %if.end19.1
  %rates.i.1 = getelementptr i8, ptr %.pn82, i32 -68
  %41 = ptrtoint ptr %rates.i.1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rates.i.1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool1.not.i.1 = icmp eq i32 %42, 0
  br i1 %tobool1.not.i.1, label %land.lhs.true.i.1.if.then.i.1_crit_edge, label %lor.lhs.false.i.1

land.lhs.true.i.1.if.then.i.1_crit_edge:          ; preds = %land.lhs.true.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.1

lor.lhs.false.i.1:                                ; preds = %land.lhs.true.i.1
  %formats.i.1 = getelementptr i8, ptr %.pn82, i32 -60
  %43 = ptrtoint ptr %formats.i.1 to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %formats.i.1, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %44)
  %tobool2.not.i.1 = icmp eq i64 %44, 0
  br i1 %tobool2.not.i.1, label %lor.lhs.false.i.1.if.then.i.1_crit_edge, label %lor.lhs.false.i.1.if.end22.i.1_crit_edge

lor.lhs.false.i.1.if.end22.i.1_crit_edge:         ; preds = %lor.lhs.false.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22.i.1

lor.lhs.false.i.1.if.then.i.1_crit_edge:          ; preds = %lor.lhs.false.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i.1

if.then.i.1:                                      ; preds = %lor.lhs.false.i.1.if.then.i.1_crit_edge, %land.lhs.true.i.1.if.then.i.1_crit_edge
  %spec.select.i.1 = phi ptr [ null, %lor.lhs.false.i.1.if.then.i.1_crit_edge ], [ %rates.i.1, %land.lhs.true.i.1.if.then.i.1_crit_edge ]
  %formats7.i.1 = getelementptr i8, ptr %.pn82, i32 -60
  %45 = ptrtoint ptr %formats7.i.1 to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %formats7.i.1, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %46)
  %tobool8.not.i.1 = icmp eq i64 %46, 0
  %cond13.i.1 = select i1 %tobool8.not.i.1, ptr %formats7.i.1, ptr null
  %maxbps.i.1 = getelementptr i8, ptr %.pn82, i32 -52
  %47 = ptrtoint ptr %maxbps.i.1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %maxbps.i.1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool14.not.i.1 = icmp eq i32 %48, 0
  %cond19.i.1 = select i1 %tobool14.not.i.1, ptr %maxbps.i.1, ptr null
  %call.i.1 = tail call i32 @snd_hdac_query_supported_pcm(ptr noundef %codec, i16 noundef zeroext %40, ptr noundef %spec.select.i.1, ptr noundef %cond13.i.1, ptr noundef %cond19.i.1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %cmp.i61.1 = icmp slt i32 %call.i.1, 0
  br i1 %cmp.i61.1, label %if.then.i.1.cleanup29.thread_crit_edge, label %if.then.i.1.if.end22.i.1_crit_edge

if.then.i.1.if.end22.i.1_crit_edge:               ; preds = %if.then.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22.i.1

if.then.i.1.cleanup29.thread_crit_edge:           ; preds = %if.then.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup29.thread

if.end22.i.1:                                     ; preds = %if.then.i.1.if.end22.i.1_crit_edge, %lor.lhs.false.i.1.if.end22.i.1_crit_edge, %if.end19.1.if.end22.i.1_crit_edge
  %ops.i.1 = getelementptr i8, ptr %.pn82, i32 -44
  %49 = ptrtoint ptr %ops.i.1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %ops.i.1, align 8
  %cmp23.i.1 = icmp eq ptr %50, null
  br i1 %cmp23.i.1, label %if.then25.i.1, label %if.end22.i.1.if.end28.i.1_crit_edge

if.end22.i.1.if.end28.i.1_crit_edge:              ; preds = %if.end22.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28.i.1

if.then25.i.1:                                    ; preds = %if.end22.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %51 = ptrtoint ptr %ops.i.1 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @hda_pcm_default_open_close, ptr %ops.i.1, align 8
  br label %if.end28.i.1

if.end28.i.1:                                     ; preds = %if.then25.i.1, %if.end22.i.1.if.end28.i.1_crit_edge
  %close.i.1 = getelementptr i8, ptr %.pn82, i32 -40
  %52 = ptrtoint ptr %close.i.1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %close.i.1, align 4
  %cmp30.i.1 = icmp eq ptr %53, null
  br i1 %cmp30.i.1, label %if.then32.i.1, label %if.end28.i.1.if.end35.i.1_crit_edge

if.end28.i.1.if.end35.i.1_crit_edge:              ; preds = %if.end28.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35.i.1

if.then32.i.1:                                    ; preds = %if.end28.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %54 = ptrtoint ptr %close.i.1 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @hda_pcm_default_open_close, ptr %close.i.1, align 4
  br label %if.end35.i.1

if.end35.i.1:                                     ; preds = %if.then32.i.1, %if.end28.i.1.if.end35.i.1_crit_edge
  %prepare.i.1 = getelementptr i8, ptr %.pn82, i32 -36
  %55 = ptrtoint ptr %prepare.i.1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %prepare.i.1, align 8
  %cmp37.i.1 = icmp eq ptr %56, null
  br i1 %cmp37.i.1, label %if.then39.i.1, label %if.end35.i.1.if.end69.i.1_crit_edge

if.end35.i.1.if.end69.i.1_crit_edge:              ; preds = %if.end35.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69.i.1

if.then39.i.1:                                    ; preds = %if.end35.i.1
  %57 = ptrtoint ptr %nid.i.1 to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %nid.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %58)
  %tobool41.not.i.1 = icmp eq i16 %58, 0
  br i1 %tobool41.not.i.1, label %if.then39.i.1.cleanup29.thread.sink.split_crit_edge, label %if.end66.i.1, !prof !338

if.then39.i.1.cleanup29.thread.sink.split_crit_edge: ; preds = %if.then39.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup29.thread.sink.split

if.end66.i.1:                                     ; preds = %if.then39.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %59 = ptrtoint ptr %prepare.i.1 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @hda_pcm_default_prepare, ptr %prepare.i.1, align 8
  br label %if.end69.i.1

if.end69.i.1:                                     ; preds = %if.end66.i.1, %if.end35.i.1.if.end69.i.1_crit_edge
  %cleanup.i.1 = getelementptr i8, ptr %.pn82, i32 -32
  %60 = ptrtoint ptr %cleanup.i.1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %cleanup.i.1, align 4
  %cmp71.i.1 = icmp eq ptr %61, null
  br i1 %cmp71.i.1, label %if.then73.i.1, label %if.end69.i.1.for.inc.1_crit_edge

if.end69.i.1.for.inc.1_crit_edge:                 ; preds = %if.end69.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1

if.then73.i.1:                                    ; preds = %if.end69.i.1
  %62 = ptrtoint ptr %nid.i.1 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %nid.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %63)
  %tobool76.not.i.1 = icmp eq i16 %63, 0
  br i1 %tobool76.not.i.1, label %if.then73.i.1.cleanup29.thread.sink.split_crit_edge, label %if.end110.i.1, !prof !338

if.then73.i.1.cleanup29.thread.sink.split_crit_edge: ; preds = %if.then73.i.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup29.thread.sink.split

if.end110.i.1:                                    ; preds = %if.then73.i.1
  call void @__sanitizer_cov_trace_pc() #23
  %64 = ptrtoint ptr %cleanup.i.1 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @hda_pcm_default_cleanup, ptr %cleanup.i.1, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.end110.i.1, %if.end69.i.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %65 = ptrtoint ptr %.pn82 to i32
  call void @__asan_load4_noabort(i32 %65)
  %.pn = load ptr, ptr %.pn82, align 4
  %cmp12.not = icmp eq ptr %.pn, %pcm_list_head
  br i1 %cmp12.not, label %for.inc.1.cleanup39_crit_edge, label %for.inc.1.for.cond13.preheader_crit_edge

for.inc.1.for.cond13.preheader_crit_edge:         ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond13.preheader

for.inc.1.cleanup39_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup39

cleanup39:                                        ; preds = %for.inc.1.cleanup39_crit_edge, %cleanup29.thread, %do.end, %for.cond.preheader.cleanup39_crit_edge, %if.end.cleanup39_crit_edge, %entry.cleanup39_crit_edge
  %retval.4 = phi i32 [ %call6, %do.end ], [ 0, %entry.cleanup39_crit_edge ], [ 0, %if.end.cleanup39_crit_edge ], [ %retval.0.i.ph, %cleanup29.thread ], [ 0, %for.cond.preheader.cleanup39_crit_edge ], [ 0, %for.inc.1.cleanup39_crit_edge ]
  ret i32 %retval.4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_codec_build_pcms(ptr noundef %codec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %0 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1, align 8
  %call = tail call i32 @snd_hda_codec_parse_pcms(ptr noundef %codec)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %pcm_list_head = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 8
  %2 = ptrtoint ptr %pcm_list_head to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn60 = load ptr, ptr %pcm_list_head, align 4
  %cmp3.not62 = icmp eq ptr %.pn60, %pcm_list_head
  br i1 %cmp3.not62, label %if.end.cleanup_crit_edge, label %for.body.lr.ph

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %pcm_dev_bits.i = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 5
  %card24.i = getelementptr inbounds %struct.hda_bus, ptr %1, i32 0, i32 1
  %addr = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn63 = phi ptr [ %.pn60, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %cpcm.064 = getelementptr i8, ptr %.pn63, i32 -156
  %pcm = getelementptr i8, ptr %.pn63, i32 -12
  %3 = ptrtoint ptr %pcm to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pcm, align 8
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %if.end5, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end5:                                          ; preds = %for.body
  %stream = getelementptr i8, ptr %.pn63, i32 -148
  %5 = ptrtoint ptr %stream to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %stream, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool6.not = icmp eq i32 %6, 0
  br i1 %tobool6.not, label %land.lhs.true, label %if.end5.if.end12_crit_edge

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end5
  %arrayidx8 = getelementptr i8, ptr %.pn63, i32 -84
  %7 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool10.not = icmp eq i32 %8, 0
  br i1 %tobool10.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end12:                                         ; preds = %land.lhs.true.if.end12_crit_edge, %if.end5.if.end12_crit_edge
  %pcm_type = getelementptr i8, ptr %.pn63, i32 -20
  %9 = ptrtoint ptr %pcm_type to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pcm_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %10)
  %cmp.i = icmp ugt i32 %10, 3
  br i1 %cmp.i, label %do.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end12
  %arrayidx145.i = getelementptr [4 x [5 x i32]], ptr @get_empty_pcm_device.audio_idx, i32 0, i32 %10, i32 0
  %11 = ptrtoint ptr %arrayidx145.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx145.i, align 4
  br label %for.body.i

do.end.i:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  %13 = ptrtoint ptr %card24.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %card24.i, align 4
  %dev.i = getelementptr inbounds %struct.snd_card, ptr %14, i32 0, i32 27
  %15 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %16, ptr noundef nonnull @.str.72, i32 noundef %10) #25
  br label %if.then15

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add i32 %i.047.i, 1
  %arrayidx1.i = getelementptr [4 x [5 x i32]], ptr @get_empty_pcm_device.audio_idx, i32 0, i32 %10, i32 %inc.i
  %17 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx1.i, align 4
  %cmp2.i = icmp sgt i32 %18, -1
  br i1 %cmp2.i, label %for.cond.i.for.body.i_crit_edge, label %for.cond9.preheader.i

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.cond9.preheader.i:                            ; preds = %for.cond.i
  %call14.i = tail call i32 @_test_and_set_bit(i32 noundef 10, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %for.cond9.preheader.i.if.end16_crit_edge, label %for.inc18.i

for.cond9.preheader.i.if.end16_crit_edge:         ; preds = %for.cond9.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %19 = phi i32 [ %12, %for.body.lr.ph.i ], [ %18, %for.cond.i.for.body.i_crit_edge ]
  %i.047.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.cond.i.for.body.i_crit_edge ]
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef %19, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %get_empty_pcm_device.exit, label %for.cond.i

for.inc18.i:                                      ; preds = %for.cond9.preheader.i
  %call14.1.i = tail call i32 @_test_and_set_bit(i32 noundef 11, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.1.i)
  %tobool15.not.1.i = icmp eq i32 %call14.1.i, 0
  br i1 %tobool15.not.1.i, label %for.inc18.i.if.end16_crit_edge, label %for.inc18.1.i

for.inc18.i.if.end16_crit_edge:                   ; preds = %for.inc18.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.1.i:                                    ; preds = %for.inc18.i
  %call14.2.i = tail call i32 @_test_and_set_bit(i32 noundef 12, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.2.i)
  %tobool15.not.2.i = icmp eq i32 %call14.2.i, 0
  br i1 %tobool15.not.2.i, label %for.inc18.1.i.if.end16_crit_edge, label %for.inc18.2.i

for.inc18.1.i.if.end16_crit_edge:                 ; preds = %for.inc18.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.2.i:                                    ; preds = %for.inc18.1.i
  %call14.3.i = tail call i32 @_test_and_set_bit(i32 noundef 13, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.3.i)
  %tobool15.not.3.i = icmp eq i32 %call14.3.i, 0
  br i1 %tobool15.not.3.i, label %for.inc18.2.i.if.end16_crit_edge, label %for.inc18.3.i

for.inc18.2.i.if.end16_crit_edge:                 ; preds = %for.inc18.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.3.i:                                    ; preds = %for.inc18.2.i
  %call14.4.i = tail call i32 @_test_and_set_bit(i32 noundef 14, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.4.i)
  %tobool15.not.4.i = icmp eq i32 %call14.4.i, 0
  br i1 %tobool15.not.4.i, label %for.inc18.3.i.if.end16_crit_edge, label %for.inc18.4.i

for.inc18.3.i.if.end16_crit_edge:                 ; preds = %for.inc18.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.4.i:                                    ; preds = %for.inc18.3.i
  %call14.5.i = tail call i32 @_test_and_set_bit(i32 noundef 15, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.5.i)
  %tobool15.not.5.i = icmp eq i32 %call14.5.i, 0
  br i1 %tobool15.not.5.i, label %for.inc18.4.i.if.end16_crit_edge, label %for.inc18.5.i

for.inc18.4.i.if.end16_crit_edge:                 ; preds = %for.inc18.4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.5.i:                                    ; preds = %for.inc18.4.i
  %call14.6.i = tail call i32 @_test_and_set_bit(i32 noundef 16, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.6.i)
  %tobool15.not.6.i = icmp eq i32 %call14.6.i, 0
  br i1 %tobool15.not.6.i, label %for.inc18.5.i.if.end16_crit_edge, label %for.inc18.6.i

for.inc18.5.i.if.end16_crit_edge:                 ; preds = %for.inc18.5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.6.i:                                    ; preds = %for.inc18.5.i
  %call14.7.i = tail call i32 @_test_and_set_bit(i32 noundef 17, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.7.i)
  %tobool15.not.7.i = icmp eq i32 %call14.7.i, 0
  br i1 %tobool15.not.7.i, label %for.inc18.6.i.if.end16_crit_edge, label %for.inc18.7.i

for.inc18.6.i.if.end16_crit_edge:                 ; preds = %for.inc18.6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.7.i:                                    ; preds = %for.inc18.6.i
  %call14.8.i = tail call i32 @_test_and_set_bit(i32 noundef 18, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.8.i)
  %tobool15.not.8.i = icmp eq i32 %call14.8.i, 0
  br i1 %tobool15.not.8.i, label %for.inc18.7.i.if.end16_crit_edge, label %for.inc18.8.i

for.inc18.7.i.if.end16_crit_edge:                 ; preds = %for.inc18.7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.8.i:                                    ; preds = %for.inc18.7.i
  %call14.9.i = tail call i32 @_test_and_set_bit(i32 noundef 19, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.9.i)
  %tobool15.not.9.i = icmp eq i32 %call14.9.i, 0
  br i1 %tobool15.not.9.i, label %for.inc18.8.i.if.end16_crit_edge, label %for.inc18.9.i

for.inc18.8.i.if.end16_crit_edge:                 ; preds = %for.inc18.8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.9.i:                                    ; preds = %for.inc18.8.i
  %call14.10.i = tail call i32 @_test_and_set_bit(i32 noundef 20, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.10.i)
  %tobool15.not.10.i = icmp eq i32 %call14.10.i, 0
  br i1 %tobool15.not.10.i, label %for.inc18.9.i.if.end16_crit_edge, label %for.inc18.10.i

for.inc18.9.i.if.end16_crit_edge:                 ; preds = %for.inc18.9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.10.i:                                   ; preds = %for.inc18.9.i
  %call14.11.i = tail call i32 @_test_and_set_bit(i32 noundef 21, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.11.i)
  %tobool15.not.11.i = icmp eq i32 %call14.11.i, 0
  br i1 %tobool15.not.11.i, label %for.inc18.10.i.if.end16_crit_edge, label %for.inc18.11.i

for.inc18.10.i.if.end16_crit_edge:                ; preds = %for.inc18.10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.11.i:                                   ; preds = %for.inc18.10.i
  %call14.12.i = tail call i32 @_test_and_set_bit(i32 noundef 22, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.12.i)
  %tobool15.not.12.i = icmp eq i32 %call14.12.i, 0
  br i1 %tobool15.not.12.i, label %for.inc18.11.i.if.end16_crit_edge, label %for.inc18.12.i

for.inc18.11.i.if.end16_crit_edge:                ; preds = %for.inc18.11.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.12.i:                                   ; preds = %for.inc18.11.i
  %call14.13.i = tail call i32 @_test_and_set_bit(i32 noundef 23, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.13.i)
  %tobool15.not.13.i = icmp eq i32 %call14.13.i, 0
  br i1 %tobool15.not.13.i, label %for.inc18.12.i.if.end16_crit_edge, label %for.inc18.13.i

for.inc18.12.i.if.end16_crit_edge:                ; preds = %for.inc18.12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.13.i:                                   ; preds = %for.inc18.12.i
  %call14.14.i = tail call i32 @_test_and_set_bit(i32 noundef 24, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.14.i)
  %tobool15.not.14.i = icmp eq i32 %call14.14.i, 0
  br i1 %tobool15.not.14.i, label %for.inc18.13.i.if.end16_crit_edge, label %for.inc18.14.i

for.inc18.13.i.if.end16_crit_edge:                ; preds = %for.inc18.13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.14.i:                                   ; preds = %for.inc18.13.i
  %call14.15.i = tail call i32 @_test_and_set_bit(i32 noundef 25, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.15.i)
  %tobool15.not.15.i = icmp eq i32 %call14.15.i, 0
  br i1 %tobool15.not.15.i, label %for.inc18.14.i.if.end16_crit_edge, label %for.inc18.15.i

for.inc18.14.i.if.end16_crit_edge:                ; preds = %for.inc18.14.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.15.i:                                   ; preds = %for.inc18.14.i
  %call14.16.i = tail call i32 @_test_and_set_bit(i32 noundef 26, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.16.i)
  %tobool15.not.16.i = icmp eq i32 %call14.16.i, 0
  br i1 %tobool15.not.16.i, label %for.inc18.15.i.if.end16_crit_edge, label %for.inc18.16.i

for.inc18.15.i.if.end16_crit_edge:                ; preds = %for.inc18.15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.16.i:                                   ; preds = %for.inc18.15.i
  %call14.17.i = tail call i32 @_test_and_set_bit(i32 noundef 27, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.17.i)
  %tobool15.not.17.i = icmp eq i32 %call14.17.i, 0
  br i1 %tobool15.not.17.i, label %for.inc18.16.i.if.end16_crit_edge, label %for.inc18.17.i

for.inc18.16.i.if.end16_crit_edge:                ; preds = %for.inc18.16.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.17.i:                                   ; preds = %for.inc18.16.i
  %call14.18.i = tail call i32 @_test_and_set_bit(i32 noundef 28, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.18.i)
  %tobool15.not.18.i = icmp eq i32 %call14.18.i, 0
  br i1 %tobool15.not.18.i, label %for.inc18.17.i.if.end16_crit_edge, label %for.inc18.18.i

for.inc18.17.i.if.end16_crit_edge:                ; preds = %for.inc18.17.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.18.i:                                   ; preds = %for.inc18.17.i
  %call14.19.i = tail call i32 @_test_and_set_bit(i32 noundef 29, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.19.i)
  %tobool15.not.19.i = icmp eq i32 %call14.19.i, 0
  br i1 %tobool15.not.19.i, label %for.inc18.18.i.if.end16_crit_edge, label %for.inc18.19.i

for.inc18.18.i.if.end16_crit_edge:                ; preds = %for.inc18.18.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.19.i:                                   ; preds = %for.inc18.18.i
  %call14.20.i = tail call i32 @_test_and_set_bit(i32 noundef 30, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.20.i)
  %tobool15.not.20.i = icmp eq i32 %call14.20.i, 0
  br i1 %tobool15.not.20.i, label %for.inc18.19.i.if.end16_crit_edge, label %for.inc18.20.i

for.inc18.19.i.if.end16_crit_edge:                ; preds = %for.inc18.19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.20.i:                                   ; preds = %for.inc18.19.i
  %call14.21.i = tail call i32 @_test_and_set_bit(i32 noundef 31, ptr noundef %pcm_dev_bits.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.21.i)
  %tobool15.not.21.i = icmp eq i32 %call14.21.i, 0
  br i1 %tobool15.not.21.i, label %for.inc18.20.i.if.end16_crit_edge, label %for.inc18.21.i

for.inc18.20.i.if.end16_crit_edge:                ; preds = %for.inc18.20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

for.inc18.21.i:                                   ; preds = %for.inc18.20.i
  call void @__sanitizer_cov_trace_pc() #23
  %20 = ptrtoint ptr %card24.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %card24.i, align 4
  %dev25.i = getelementptr inbounds %struct.snd_card, ptr %21, i32 0, i32 27
  %22 = ptrtoint ptr %dev25.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev25.i, align 8
  %arrayidx26.i = getelementptr [4 x ptr], ptr @snd_hda_pcm_type_name, i32 0, i32 %10
  %24 = ptrtoint ptr %arrayidx26.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx26.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %23, ptr noundef nonnull @.str.75, ptr noundef %25) #25
  br label %if.then15

get_empty_pcm_device.exit:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp14 = icmp slt i32 %19, 0
  br i1 %cmp14, label %get_empty_pcm_device.exit.if.then15_crit_edge, label %get_empty_pcm_device.exit.if.end16_crit_edge

get_empty_pcm_device.exit.if.end16_crit_edge:     ; preds = %get_empty_pcm_device.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

get_empty_pcm_device.exit.if.then15_crit_edge:    ; preds = %get_empty_pcm_device.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then15

if.then15:                                        ; preds = %get_empty_pcm_device.exit.if.then15_crit_edge, %for.inc18.21.i, %do.end.i
  %device = getelementptr i8, ptr %.pn63, i32 -16
  %26 = ptrtoint ptr %device to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 -1, ptr %device, align 4
  br label %for.inc

if.end16:                                         ; preds = %get_empty_pcm_device.exit.if.end16_crit_edge, %for.inc18.20.i.if.end16_crit_edge, %for.inc18.19.i.if.end16_crit_edge, %for.inc18.18.i.if.end16_crit_edge, %for.inc18.17.i.if.end16_crit_edge, %for.inc18.16.i.if.end16_crit_edge, %for.inc18.15.i.if.end16_crit_edge, %for.inc18.14.i.if.end16_crit_edge, %for.inc18.13.i.if.end16_crit_edge, %for.inc18.12.i.if.end16_crit_edge, %for.inc18.11.i.if.end16_crit_edge, %for.inc18.10.i.if.end16_crit_edge, %for.inc18.9.i.if.end16_crit_edge, %for.inc18.8.i.if.end16_crit_edge, %for.inc18.7.i.if.end16_crit_edge, %for.inc18.6.i.if.end16_crit_edge, %for.inc18.5.i.if.end16_crit_edge, %for.inc18.4.i.if.end16_crit_edge, %for.inc18.3.i.if.end16_crit_edge, %for.inc18.2.i.if.end16_crit_edge, %for.inc18.1.i.if.end16_crit_edge, %for.inc18.i.if.end16_crit_edge, %for.cond9.preheader.i.if.end16_crit_edge
  %retval.0.i53 = phi i32 [ %19, %get_empty_pcm_device.exit.if.end16_crit_edge ], [ 31, %for.inc18.20.i.if.end16_crit_edge ], [ 30, %for.inc18.19.i.if.end16_crit_edge ], [ 29, %for.inc18.18.i.if.end16_crit_edge ], [ 28, %for.inc18.17.i.if.end16_crit_edge ], [ 27, %for.inc18.16.i.if.end16_crit_edge ], [ 26, %for.inc18.15.i.if.end16_crit_edge ], [ 25, %for.inc18.14.i.if.end16_crit_edge ], [ 24, %for.inc18.13.i.if.end16_crit_edge ], [ 23, %for.inc18.12.i.if.end16_crit_edge ], [ 22, %for.inc18.11.i.if.end16_crit_edge ], [ 21, %for.inc18.10.i.if.end16_crit_edge ], [ 20, %for.inc18.9.i.if.end16_crit_edge ], [ 19, %for.inc18.8.i.if.end16_crit_edge ], [ 18, %for.inc18.7.i.if.end16_crit_edge ], [ 17, %for.inc18.6.i.if.end16_crit_edge ], [ 16, %for.inc18.5.i.if.end16_crit_edge ], [ 15, %for.inc18.4.i.if.end16_crit_edge ], [ 14, %for.inc18.3.i.if.end16_crit_edge ], [ 13, %for.inc18.2.i.if.end16_crit_edge ], [ 12, %for.inc18.1.i.if.end16_crit_edge ], [ 11, %for.inc18.i.if.end16_crit_edge ], [ 10, %for.cond9.preheader.i.if.end16_crit_edge ]
  %device17 = getelementptr i8, ptr %.pn63, i32 -16
  %27 = ptrtoint ptr %device17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %retval.0.i53, ptr %device17, align 4
  %call18 = tail call i32 @snd_hda_attach_pcm_stream(ptr noundef %1, ptr noundef %codec, ptr noundef %cpcm.064) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %do.end, label %if.end16.for.inc_crit_edge

if.end16.for.inc_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

do.end:                                           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %addr, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.46, i32 noundef %retval.0.i53, i32 noundef %29) #25
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.end16.for.inc_crit_edge, %if.then15, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %30 = ptrtoint ptr %.pn63 to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pn = load ptr, ptr %.pn63, align 4
  %cmp3.not = icmp eq ptr %.pn, %pcm_list_head
  br i1 %cmp3.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_attach_pcm_stream(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_add_new_ctls(ptr noundef %codec, ptr noundef %knew) #0 align 64 {
entry:
  %id.i.i = alloca %struct.snd_ctl_elem_id, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %name88 = getelementptr inbounds %struct.snd_kcontrol_new, ptr %knew, i32 0, i32 3
  %0 = ptrtoint ptr %name88 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %name88, align 4
  %tobool.not89 = icmp eq ptr %1, null
  br i1 %tobool.not89, label %entry.cleanup38_crit_edge, label %for.body.lr.ph

entry.cleanup38_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

for.body.lr.ph:                                   ; preds = %entry
  %card.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %mixers.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 15
  %addr17 = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 3
  %iface.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 1
  %index.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 5
  %name22.i.i = getelementptr inbounds %struct.snd_ctl_elem_id, ptr %id.i.i, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %name92 = phi ptr [ %name88, %for.body.lr.ph ], [ %name, %for.inc.for.body_crit_edge ]
  %knew.addr.090 = phi ptr [ %knew, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %knew.addr.090 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %knew.addr.090, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %for.body.for.inc_crit_edge, label %for.cond1.preheader

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

for.cond1.preheader:                              ; preds = %for.body
  %call77 = call ptr @snd_ctl_new1(ptr noundef %knew.addr.090, ptr noundef %codec) #21
  %tobool2.not78 = icmp eq ptr %call77, null
  br i1 %tobool2.not78, label %for.cond1.preheader.cleanup38_crit_edge, label %if.end4.lr.ph

for.cond1.preheader.cleanup38_crit_edge:          ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

if.end4.lr.ph:                                    ; preds = %for.cond1.preheader
  %index24 = getelementptr inbounds %struct.snd_kcontrol_new, ptr %knew.addr.090, i32 0, i32 4
  br label %if.end4

if.end4:                                          ; preds = %if.end34.if.end4_crit_edge, %if.end4.lr.ph
  %call83 = phi ptr [ %call77, %if.end4.lr.ph ], [ %call, %if.end34.if.end4_crit_edge ]
  %idx.081 = phi i32 [ 0, %if.end4.lr.ph ], [ %idx.1, %if.end34.if.end4_crit_edge ]
  %addr.079 = phi i32 [ 0, %if.end4.lr.ph ], [ %addr.1, %if.end34.if.end4_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %addr.079)
  %cmp5 = icmp sgt i32 %addr.079, 0
  br i1 %cmp5, label %if.then6, label %if.end4.if.end7_crit_edge

if.end4.if.end7_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  %device = getelementptr inbounds %struct.snd_kcontrol, ptr %call83, i32 0, i32 1, i32 2
  %4 = ptrtoint ptr %device to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %addr.079, ptr %device, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4.if.end7_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %idx.081)
  %cmp8 = icmp sgt i32 %idx.081, 0
  br i1 %cmp8, label %if.then9, label %if.end7.if.end11_crit_edge

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %index = getelementptr inbounds %struct.snd_kcontrol, ptr %call83, i32 0, i32 1, i32 5
  %5 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %idx.081, ptr %index, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7.if.end11_crit_edge
  %subdevice.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call83, i32 0, i32 1, i32 3
  %6 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %subdevice.i, align 4
  %and.i = and i32 %7, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end7.i, label %if.then.i

if.then.i:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call83, i32 0, i32 7
  %8 = ptrtoint ptr %private_value.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %private_value.i, align 4
  %conv6.i = trunc i32 %9 to i16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp11.not60.i = icmp slt i32 %7, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv6.i)
  %cmp1461.i = icmp eq i16 %conv6.i, 0
  %or.cond62.i = select i1 %cmp11.not60.i, i1 %cmp1461.i, i1 false
  %conv2063.i = trunc i32 %7 to i16
  %nid.addr.164.i = select i1 %or.cond62.i, i16 %conv2063.i, i16 %conv6.i
  br label %if.then26.i

if.end7.i:                                        ; preds = %if.end11
  %10 = call i32 @llvm.smin.i32(i32 %7, i32 0)
  %11 = trunc i32 %10 to i16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %7)
  %tobool25.not.i = icmp ult i32 %7, 1073741824
  br i1 %tobool25.not.i, label %if.end7.i.if.end29.i_crit_edge, label %if.end7.i.if.then26.i_crit_edge

if.end7.i.if.then26.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then26.i

if.end7.i.if.end29.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then26.i:                                      ; preds = %if.end7.i.if.then26.i_crit_edge, %if.then.i
  %nid.addr.168.i = phi i16 [ %nid.addr.164.i, %if.then.i ], [ %11, %if.end7.i.if.then26.i_crit_edge ]
  %flags.066.i = phi i16 [ 1, %if.then.i ], [ 0, %if.end7.i.if.then26.i_crit_edge ]
  %12 = ptrtoint ptr %subdevice.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %subdevice.i, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then26.i, %if.end7.i.if.end29.i_crit_edge
  %nid.addr.169.i = phi i16 [ %nid.addr.168.i, %if.then26.i ], [ %11, %if.end7.i.if.end29.i_crit_edge ]
  %flags.067.i = phi i16 [ %flags.066.i, %if.then26.i ], [ 0, %if.end7.i.if.end29.i_crit_edge ]
  %13 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %card.i, align 4
  %call.i = call i32 @snd_ctl_add(ptr noundef %14, ptr noundef nonnull %call83) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp30.i = icmp slt i32 %call.i, 0
  br i1 %cmp30.i, label %if.end29.i.if.end15_crit_edge, label %if.end33.i

if.end29.i.if.end15_crit_edge:                    ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

if.end33.i:                                       ; preds = %if.end29.i
  %call34.i = call ptr @snd_array_new(ptr noundef %mixers.i) #21
  %tobool35.not.i = icmp eq ptr %call34.i, null
  br i1 %tobool35.not.i, label %if.end33.i.if.end15_crit_edge, label %snd_hda_ctl_add.exit

if.end33.i.if.end15_crit_edge:                    ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

snd_hda_ctl_add.exit:                             ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %call34.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call83, ptr %call34.i, align 4
  %nid39.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 2
  %16 = ptrtoint ptr %nid39.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %nid.addr.169.i, ptr %nid39.i, align 4
  %flags40.i = getelementptr inbounds %struct.hda_nid_item, ptr %call34.i, i32 0, i32 3
  %17 = ptrtoint ptr %flags40.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %flags.067.i, ptr %flags40.i, align 2
  br label %for.inc

if.end15:                                         ; preds = %if.end33.i.if.end15_crit_edge, %if.end29.i.if.end15_crit_edge
  %retval.0.i.ph = phi i32 [ -12, %if.end33.i.if.end15_crit_edge ], [ %call.i, %if.end29.i.if.end15_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %addr.079)
  %tobool16.not = icmp eq i32 %addr.079, 0
  br i1 %tobool16.not, label %land.lhs.true, label %if.end15.if.else_crit_edge

if.end15.if.else_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %if.end15
  %18 = ptrtoint ptr %addr17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %addr17, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool18.not = icmp eq i32 %19, 0
  br i1 %tobool18.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.if.end34_crit_edge

land.lhs.true.if.end34_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end15.if.else_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %idx.081)
  %tobool22.not = icmp eq i32 %idx.081, 0
  br i1 %tobool22.not, label %land.lhs.true23, label %if.else.cleanup38_crit_edge

if.else.cleanup38_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

land.lhs.true23:                                  ; preds = %if.else
  %20 = ptrtoint ptr %index24 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %index24, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool25.not = icmp eq i32 %21, 0
  br i1 %tobool25.not, label %if.then26, label %land.lhs.true23.cleanup38_crit_edge

land.lhs.true23.cleanup38_crit_edge:              ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

if.then26:                                        ; preds = %land.lhs.true23
  %22 = ptrtoint ptr %name92 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %name92, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then26
  %idx.010.i = phi i32 [ 0, %if.then26 ], [ %inc1.i, %for.inc.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %id.i.i) #21
  %24 = call ptr @memset(ptr %id.i.i, i32 0, i32 60)
  %25 = ptrtoint ptr %iface.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 2, ptr %iface.i.i, align 4
  %26 = ptrtoint ptr %index.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %idx.010.i, ptr %index.i.i, align 4
  %call.i.i = call i32 @strlen(ptr noundef %23) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %call.i.i)
  %cmp.i.i = icmp ugt i32 %call.i.i, 43
  br i1 %cmp.i.i, label %find_mixer_ctl.exit.thread.i, label %find_mixer_ctl.exit.i, !prof !338

find_mixer_ctl.exit.thread.i:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1621, i32 noundef 9, ptr noundef null) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i.i) #21
  br label %find_empty_mixer_ctl_idx.exit

find_mixer_ctl.exit.i:                            ; preds = %for.body.i
  %call23.i.i = call ptr @strcpy(ptr noundef %name22.i.i, ptr noundef %23) #28
  %27 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %card.i, align 4
  %call24.i.i = call ptr @snd_ctl_find_id(ptr noundef %28, ptr noundef nonnull %id.i.i) #21
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %id.i.i) #21
  %tobool.not.i58 = icmp eq ptr %call24.i.i, null
  br i1 %tobool.not.i58, label %find_mixer_ctl.exit.i.find_empty_mixer_ctl_idx.exit_crit_edge, label %for.inc.i

find_mixer_ctl.exit.i.find_empty_mixer_ctl_idx.exit_crit_edge: ; preds = %find_mixer_ctl.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %find_empty_mixer_ctl_idx.exit

for.inc.i:                                        ; preds = %find_mixer_ctl.exit.i
  %inc1.i = add nuw nsw i32 %idx.010.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 16
  br i1 %exitcond.not.i, label %for.inc.i.cleanup38_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.cleanup38_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

find_empty_mixer_ctl_idx.exit:                    ; preds = %find_mixer_ctl.exit.i.find_empty_mixer_ctl_idx.exit_crit_edge, %find_mixer_ctl.exit.thread.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %idx.010.i)
  %cmp29 = icmp eq i32 %idx.010.i, 0
  br i1 %cmp29, label %find_empty_mixer_ctl_idx.exit.cleanup38_crit_edge, label %find_empty_mixer_ctl_idx.exit.if.end34_crit_edge

find_empty_mixer_ctl_idx.exit.if.end34_crit_edge: ; preds = %find_empty_mixer_ctl_idx.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

find_empty_mixer_ctl_idx.exit.cleanup38_crit_edge: ; preds = %find_empty_mixer_ctl_idx.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

if.end34:                                         ; preds = %find_empty_mixer_ctl_idx.exit.if.end34_crit_edge, %land.lhs.true.if.end34_crit_edge
  %addr.1 = phi i32 [ %addr.079, %find_empty_mixer_ctl_idx.exit.if.end34_crit_edge ], [ %19, %land.lhs.true.if.end34_crit_edge ]
  %idx.1 = phi i32 [ %idx.010.i, %find_empty_mixer_ctl_idx.exit.if.end34_crit_edge ], [ %idx.081, %land.lhs.true.if.end34_crit_edge ]
  %call = call ptr @snd_ctl_new1(ptr noundef %knew.addr.090, ptr noundef %codec) #21
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.end34.cleanup38_crit_edge, label %if.end34.if.end4_crit_edge

if.end34.if.end4_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.end34.cleanup38_crit_edge:                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

for.inc:                                          ; preds = %snd_hda_ctl_add.exit, %for.body.for.inc_crit_edge
  %incdec.ptr = getelementptr %struct.snd_kcontrol_new, ptr %knew.addr.090, i32 1
  %name = getelementptr %struct.snd_kcontrol_new, ptr %knew.addr.090, i32 1, i32 3
  %29 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %name, align 4
  %tobool.not = icmp eq ptr %30, null
  br i1 %tobool.not, label %for.inc.cleanup38_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.cleanup38_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup38

cleanup38:                                        ; preds = %for.inc.cleanup38_crit_edge, %if.end34.cleanup38_crit_edge, %find_empty_mixer_ctl_idx.exit.cleanup38_crit_edge, %for.inc.i.cleanup38_crit_edge, %land.lhs.true23.cleanup38_crit_edge, %if.else.cleanup38_crit_edge, %for.cond1.preheader.cleanup38_crit_edge, %entry.cleanup38_crit_edge
  %retval.2 = phi i32 [ 0, %entry.cleanup38_crit_edge ], [ %retval.0.i.ph, %for.inc.i.cleanup38_crit_edge ], [ -12, %if.end34.cleanup38_crit_edge ], [ %retval.0.i.ph, %find_empty_mixer_ctl_idx.exit.cleanup38_crit_edge ], [ %retval.0.i.ph, %land.lhs.true23.cleanup38_crit_edge ], [ %retval.0.i.ph, %if.else.cleanup38_crit_edge ], [ -12, %for.cond1.preheader.cleanup38_crit_edge ], [ 0, %for.inc.cleanup38_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_set_power_save(ptr noundef readonly %bus, i32 noundef %delay) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %codec_list = getelementptr inbounds %struct.hdac_bus, ptr %bus, i32 0, i32 11
  %0 = ptrtoint ptr %codec_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn13 = load ptr, ptr %codec_list, align 4
  %cmp.not14 = icmp eq ptr %.pn13, %codec_list
  br i1 %cmp.not14, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delay)
  %cmp.i = icmp eq i32 %delay, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delay)
  %cmp2.i = icmp sgt i32 %delay, 0
  br label %for.body

for.body:                                         ; preds = %codec_set_power_save.exit.for.body_crit_edge, %for.body.lr.ph
  %.pn15 = phi ptr [ %.pn13, %for.body.lr.ph ], [ %.pn, %codec_set_power_save.exit.for.body_crit_edge ]
  %c.0 = getelementptr i8, ptr %.pn15, i32 -940
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body
  %auto_runtime_pm.i = getelementptr i8, ptr %.pn15, i32 904
  %1 = ptrtoint ptr %auto_runtime_pm.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %bf.load.i = load i32, ptr %auto_runtime_pm.i, align 4
  %2 = and i32 %bf.load.i, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.if.then3.i_crit_edge

land.lhs.true.i.if.then3.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

if.end.i:                                         ; preds = %for.body
  br i1 %cmp2.i, label %if.end.i.if.then3.i_crit_edge, label %if.end.i.if.else.i_crit_edge

if.end.i.if.else.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

if.end.i.if.then3.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i.if.then3.i_crit_edge, %land.lhs.true.i.if.then3.i_crit_edge
  %delay.addr.018.i = phi i32 [ %delay, %if.end.i.if.then3.i_crit_edge ], [ 3000, %land.lhs.true.i.if.then3.i_crit_edge ]
  tail call void @pm_runtime_set_autosuspend_delay(ptr noundef %c.0, i32 noundef %delay.addr.018.i) #21
  tail call void @__pm_runtime_use_autosuspend(ptr noundef %c.0, i1 noundef zeroext true) #21
  tail call void @pm_runtime_allow(ptr noundef %c.0) #21
  %runtime_status.i.i = getelementptr i8, ptr %.pn15, i32 -252
  %3 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp.i.i = icmp eq i32 %4, 2
  br i1 %cmp.i.i, label %pm_runtime_suspended.exit.i, label %if.then3.i.if.then4.i_crit_edge

if.then3.i.if.then4.i_crit_edge:                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then4.i

pm_runtime_suspended.exit.i:                      ; preds = %if.then3.i
  %disable_depth.i.i = getelementptr i8, ptr %.pn15, i32 -264
  %5 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i.i)
  %tobool.not.i.i = icmp ult i16 %bf.load.i.i, 8192
  br i1 %tobool.not.i.i, label %pm_runtime_suspended.exit.i.codec_set_power_save.exit_crit_edge, label %pm_runtime_suspended.exit.i.if.then4.i_crit_edge

pm_runtime_suspended.exit.i.if.then4.i_crit_edge: ; preds = %pm_runtime_suspended.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then4.i

pm_runtime_suspended.exit.i.codec_set_power_save.exit_crit_edge: ; preds = %pm_runtime_suspended.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %codec_set_power_save.exit

if.then4.i:                                       ; preds = %pm_runtime_suspended.exit.i.if.then4.i_crit_edge, %if.then3.i.if.then4.i_crit_edge
  %call.i.i = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i.i = getelementptr i8, ptr %.pn15, i32 -236
  %6 = ptrtoint ptr %last_busy.i.i to i32
  call void @__asan_store8_noabort(i32 %6)
  store volatile i64 %call.i.i, ptr %last_busy.i.i, align 8
  br label %codec_set_power_save.exit

if.else.i:                                        ; preds = %if.end.i.if.else.i_crit_edge, %land.lhs.true.i.if.else.i_crit_edge
  tail call void @__pm_runtime_use_autosuspend(ptr noundef %c.0, i1 noundef zeroext false) #21
  tail call void @pm_runtime_forbid(ptr noundef %c.0) #21
  br label %codec_set_power_save.exit

codec_set_power_save.exit:                        ; preds = %if.else.i, %if.then4.i, %pm_runtime_suspended.exit.i.codec_set_power_save.exit_crit_edge
  %7 = ptrtoint ptr %.pn15 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn = load ptr, ptr %.pn15, align 4
  %cmp.not = icmp eq ptr %.pn, %codec_list
  br i1 %cmp.not, label %codec_set_power_save.exit.for.end_crit_edge, label %codec_set_power_save.exit.for.body_crit_edge

codec_set_power_save.exit.for.body_crit_edge:     ; preds = %codec_set_power_save.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

codec_set_power_save.exit.for.end_crit_edge:      ; preds = %codec_set_power_save.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %codec_set_power_save.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_check_amp_list_power(ptr noundef %codec, ptr nocapture noundef %check, i16 noundef zeroext %nid) #0 align 64 {
entry:
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %check to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %check, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %entry.for.cond_crit_edge

entry.for.cond_crit_edge:                         ; preds = %entry
  br label %for.cond

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond:                                         ; preds = %for.cond.for.cond_crit_edge, %entry.for.cond_crit_edge
  %p.0 = phi ptr [ %incdec.ptr, %for.cond.for.cond_crit_edge ], [ %1, %entry.for.cond_crit_edge ]
  %2 = ptrtoint ptr %p.0 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %p.0, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool3.not = icmp eq i16 %3, 0
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %nid)
  %cmp = icmp eq i16 %3, %nid
  %or.cond = or i1 %tobool3.not, %cmp
  %incdec.ptr = getelementptr %struct.hda_amp_list, ptr %p.0, i32 1
  br i1 %or.cond, label %for.end, label %for.cond.for.cond_crit_edge

for.cond.for.cond_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br i1 %tobool3.not, label %for.end.cleanup_crit_edge, label %for.cond14.preheader

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond14.preheader:                             ; preds = %for.end
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool16.not77 = icmp eq i16 %5, 0
  br i1 %tobool16.not77, label %for.cond14.preheader.for.end40_crit_edge, label %for.cond14.preheader.for.cond18.preheader_crit_edge

for.cond14.preheader.for.cond18.preheader_crit_edge: ; preds = %for.cond14.preheader
  br label %for.cond18.preheader

for.cond14.preheader.for.end40_crit_edge:         ; preds = %for.cond14.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end40

for.cond18.preheader:                             ; preds = %for.inc36.1.for.cond18.preheader_crit_edge, %for.cond14.preheader.for.cond18.preheader_crit_edge
  %p.178 = phi ptr [ %incdec.ptr39, %for.inc36.1.for.cond18.preheader_crit_edge ], [ %1, %for.cond14.preheader.for.cond18.preheader_crit_edge ]
  %dir = getelementptr inbounds %struct.hda_amp_list, ptr %p.178, i32 0, i32 1
  %idx = getelementptr inbounds %struct.hda_amp_list, ptr %p.178, i32 0, i32 2
  %6 = ptrtoint ptr %p.178 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %p.178, align 2
  %8 = ptrtoint ptr %dir to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %dir, align 2
  %10 = ptrtoint ptr %idx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %idx, align 1
  %conv24 = zext i8 %11 to i32
  %conv.i = zext i16 %7 to i32
  %shl.i = shl i32 %conv.i, 20
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %9)
  %cmp.i = icmp eq i8 %9, 1
  %cond3.i = select i1 %cmp.i, i32 32768, i32 0
  %or.i = or i32 %shl.i, %cond3.i
  %or1.i = or i32 %or.i, %conv24
  %or5.i = or i32 %or1.i, 729088
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #21
  %12 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %val.i, align 4, !annotation !339
  %call.i = call i32 @snd_hdac_regmap_read_raw(ptr noundef %codec, i32 noundef %or5.i, ptr noundef nonnull %val.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp6.i = icmp slt i32 %call.i, 0
  br i1 %cmp6.i, label %snd_hdac_regmap_get_amp.exit.thread, label %snd_hdac_regmap_get_amp.exit

snd_hdac_regmap_get_amp.exit.thread:              ; preds = %for.cond18.preheader
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #21
  br label %for.inc36

snd_hdac_regmap_get_amp.exit:                     ; preds = %for.cond18.preheader
  %13 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %val.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #21
  %and = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool25.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp26 = icmp sgt i32 %14, 0
  %or.cond70 = and i1 %cmp26, %tobool25.not
  br i1 %or.cond70, label %snd_hdac_regmap_get_amp.exit.if.then28_crit_edge, label %snd_hdac_regmap_get_amp.exit.for.inc36_crit_edge

snd_hdac_regmap_get_amp.exit.for.inc36_crit_edge: ; preds = %snd_hdac_regmap_get_amp.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc36

snd_hdac_regmap_get_amp.exit.if.then28_crit_edge: ; preds = %snd_hdac_regmap_get_amp.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then28

if.then28:                                        ; preds = %snd_hdac_regmap_get_amp.exit.1.if.then28_crit_edge, %snd_hdac_regmap_get_amp.exit.if.then28_crit_edge
  %power_on = getelementptr inbounds %struct.hda_loopback_check, ptr %check, i32 0, i32 1
  %15 = ptrtoint ptr %power_on to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %power_on, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool29.not = icmp eq i32 %16, 0
  br i1 %tobool29.not, label %if.then30, label %if.then28.cleanup_crit_edge

if.then28.cleanup_crit_edge:                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then30:                                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  %17 = ptrtoint ptr %power_on to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %power_on, align 4
  %call33 = call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #21
  br label %cleanup

for.inc36:                                        ; preds = %snd_hdac_regmap_get_amp.exit.for.inc36_crit_edge, %snd_hdac_regmap_get_amp.exit.thread
  %18 = ptrtoint ptr %p.178 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %p.178, align 2
  %20 = ptrtoint ptr %dir to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %dir, align 2
  %22 = ptrtoint ptr %idx to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %idx, align 1
  %conv24.1 = zext i8 %23 to i32
  %conv.i.1 = zext i16 %19 to i32
  %shl.i.1 = shl i32 %conv.i.1, 20
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %21)
  %cmp.i.1 = icmp eq i8 %21, 1
  %cond3.i.1 = select i1 %cmp.i.1, i32 32768, i32 0
  %or1.i.1 = or i32 %shl.i.1, %cond3.i.1
  %or4.i.1 = or i32 %or1.i.1, %conv24.1
  %or5.i.1 = or i32 %or4.i.1, 720896
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #21
  %24 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %val.i, align 4, !annotation !339
  %call.i.1 = call i32 @snd_hdac_regmap_read_raw(ptr noundef %codec, i32 noundef %or5.i.1, ptr noundef nonnull %val.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %cmp6.i.1 = icmp slt i32 %call.i.1, 0
  br i1 %cmp6.i.1, label %snd_hdac_regmap_get_amp.exit.thread.1, label %snd_hdac_regmap_get_amp.exit.1

snd_hdac_regmap_get_amp.exit.1:                   ; preds = %for.inc36
  %25 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %val.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #21
  %and.1 = and i32 %26, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool25.not.1 = icmp eq i32 %and.1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp26.1 = icmp sgt i32 %26, 0
  %or.cond70.1 = and i1 %cmp26.1, %tobool25.not.1
  br i1 %or.cond70.1, label %snd_hdac_regmap_get_amp.exit.1.if.then28_crit_edge, label %snd_hdac_regmap_get_amp.exit.1.for.inc36.1_crit_edge

snd_hdac_regmap_get_amp.exit.1.for.inc36.1_crit_edge: ; preds = %snd_hdac_regmap_get_amp.exit.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc36.1

snd_hdac_regmap_get_amp.exit.1.if.then28_crit_edge: ; preds = %snd_hdac_regmap_get_amp.exit.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then28

snd_hdac_regmap_get_amp.exit.thread.1:            ; preds = %for.inc36
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #21
  br label %for.inc36.1

for.inc36.1:                                      ; preds = %snd_hdac_regmap_get_amp.exit.thread.1, %snd_hdac_regmap_get_amp.exit.1.for.inc36.1_crit_edge
  %incdec.ptr39 = getelementptr %struct.hda_amp_list, ptr %p.178, i32 1
  %27 = ptrtoint ptr %incdec.ptr39 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %incdec.ptr39, align 2
  %tobool16.not = icmp eq i16 %28, 0
  br i1 %tobool16.not, label %for.inc36.1.for.end40_crit_edge, label %for.inc36.1.for.cond18.preheader_crit_edge

for.inc36.1.for.cond18.preheader_crit_edge:       ; preds = %for.inc36.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond18.preheader

for.inc36.1.for.end40_crit_edge:                  ; preds = %for.inc36.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end40

for.end40:                                        ; preds = %for.inc36.1.for.end40_crit_edge, %for.cond14.preheader.for.end40_crit_edge
  %power_on41 = getelementptr inbounds %struct.hda_loopback_check, ptr %check, i32 0, i32 1
  %29 = ptrtoint ptr %power_on41 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %power_on41, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool42.not = icmp eq i32 %30, 0
  br i1 %tobool42.not, label %for.end40.cleanup_crit_edge, label %if.then43

for.end40.cleanup_crit_edge:                      ; preds = %for.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then43:                                        ; preds = %for.end40
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %power_on41 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %power_on41, align 4
  %call46 = call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then43, %for.end40.cleanup_crit_edge, %if.then30, %if.then28.cleanup_crit_edge, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.end.cleanup_crit_edge ], [ 1, %if.then30 ], [ 1, %if.then28.cleanup_crit_edge ], [ 0, %if.then43 ], [ 0, %for.end40.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_power_up_pm(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_power_down_pm(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @snd_hda_input_mux_info(ptr nocapture noundef readonly %imux, ptr noundef %uinfo) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 1
  %0 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 3, ptr %type, align 8
  %count = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 3
  %1 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %count, align 8
  %2 = ptrtoint ptr %imux to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %imux, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5
  %4 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %value, align 8
  %5 = load i32, ptr %imux, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %item = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5, i32 0, i32 1
  %6 = ptrtoint ptr %item to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %item, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %5)
  %cmp.not = icmp ult i32 %7, %5
  %sub = add i32 %5, -1
  %spec.select = select i1 %cmp.not, i32 %7, i32 %sub
  %name = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5, i32 0, i32 2
  %arrayidx = getelementptr %struct.hda_input_mux, ptr %imux, i32 0, i32 1, i32 %spec.select
  %call = tail call ptr @strcpy(ptr noundef %name, ptr noundef %arrayidx) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_input_mux_put(ptr noundef %codec, ptr nocapture noundef readonly %imux, ptr nocapture noundef readonly %ucontrol, i16 noundef zeroext %nid, ptr nocapture noundef %cur_val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %imux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %imux, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %2 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %value, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %1)
  %cmp.not = icmp ult i32 %3, %1
  %sub = add i32 %1, -1
  %spec.select = select i1 %cmp.not, i32 %3, i32 %sub
  %4 = ptrtoint ptr %cur_val to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cur_val, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %spec.select)
  %cmp5 = icmp eq i32 %5, %spec.select
  br i1 %cmp5, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %index = getelementptr %struct.hda_input_mux, ptr %imux, i32 0, i32 1, i32 %spec.select, i32 1
  %6 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %index, align 4
  %conv.i.i = zext i16 %nid to i32
  %shl1.i.i = shl i32 %conv.i.i, 20
  %or2.i.i = or i32 %shl1.i.i, 983296
  %call.i.i = tail call i32 @snd_hdac_regmap_write_raw(ptr noundef %codec, i32 noundef %or2.i.i, i32 noundef %7) #21
  %8 = ptrtoint ptr %cur_val to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %spec.select, ptr %cur_val, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.end7 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_enum_helper_info(ptr nocapture readnone %kcontrol, ptr noundef %uinfo, i32 noundef %num_items, ptr noundef %texts) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %texts, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_items)
  %tobool1.not = icmp eq i32 %num_items, 0
  %or.cond = or i1 %tobool1.not, %tobool.not
  %num_items.addr.0 = select i1 %or.cond, i32 2, i32 %num_items
  %texts.addr.0 = select i1 %or.cond, ptr @snd_hda_enum_helper_info.texts_default, ptr %texts
  %call = tail call i32 @snd_ctl_enum_info(ptr noundef %uinfo, i32 noundef 1, i32 noundef %num_items.addr.0, ptr noundef nonnull %texts.addr.0) #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_enum_info(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_dig_open(ptr noundef %codec, ptr nocapture noundef %mout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %dig_out_used = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 8
  %0 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dig_out_used, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %2 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %dig_out_nid, align 2
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %3, i32 noundef 0) #21
  %follower_dig_outs.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %4 = ptrtoint ptr %follower_dig_outs.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %follower_dig_outs.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %for.cond.preheader.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.cond.preheader.i:                             ; preds = %if.then
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %5, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool2.not9.i = icmp eq i16 %7, 0
  br i1 %tobool2.not9.i, label %for.cond.preheader.i.if.end_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.if.end_crit_edge:            ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %8 = phi i16 [ %10, %for.body.i.for.body.i_crit_edge ], [ %7, %for.cond.preheader.i.for.body.i_crit_edge ]
  %d.010.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %5, %for.cond.preheader.i.for.body.i_crit_edge ]
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0) #21
  %incdec.ptr.i = getelementptr i16, ptr %d.010.i, i32 1
  %9 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %incdec.ptr.i, align 2
  %tobool2.not.i = icmp eq i16 %10, 0
  br i1 %tobool2.not.i, label %for.body.i.if.end_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %for.body.i.if.end_crit_edge, %for.cond.preheader.i.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %11 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %dig_out_used, align 8
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_dig_prepare(ptr noundef %codec, ptr nocapture noundef readonly %mout, i32 noundef %stream_tag, i32 noundef %format, ptr nocapture readnone %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %0 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dig_out_nid, align 2
  tail call fastcc void @setup_dig_out_stream(ptr noundef %codec, i16 noundef zeroext %1, i32 noundef %stream_tag, i32 noundef %format)
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @setup_dig_out_stream(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %stream_tag, i32 noundef %format) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_out.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  %0 = ptrtoint ptr %spdif_out.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spdif_out.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp12.not.i = icmp eq i32 %1, 0
  br i1 %cmp12.not.i, label %entry.do.end_crit_edge, label %for.body.lr.ph.i

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

for.body.lr.ph.i:                                 ; preds = %entry
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 4
  %2 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list.i, align 8
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.014.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %spdif.013.i = phi ptr [ %3, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %spdif.013.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %spdif.013.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp4.i = icmp eq i16 %5, %nid
  br i1 %cmp4.i, label %snd_hda_spdif_out_of_nid.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.014.i, 1
  %6 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %7, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %1
  br i1 %exitcond.not.i, label %for.inc.i.do.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.do.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

snd_hda_spdif_out_of_nid.exit:                    ; preds = %for.body.i
  %cmp = icmp eq ptr %spdif.013.i, null
  br i1 %cmp, label %snd_hda_spdif_out_of_nid.exit.do.end_crit_edge, label %if.end21, !prof !338

snd_hda_spdif_out_of_nid.exit.do.end_crit_edge:   ; preds = %snd_hda_spdif_out_of_nid.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

do.end:                                           ; preds = %snd_hda_spdif_out_of_nid.exit.do.end_crit_edge, %for.inc.i.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3561, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %snd_hda_spdif_out_of_nid.exit
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 2560, i32 noundef 0) #21
  %spdif_status_reset = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %8 = ptrtoint ptr %spdif_status_reset to i32
  call void @__asan_load4_noabort(i32 %8)
  %bf.load = load i32, ptr %spdif_status_reset, align 4
  %9 = and i32 %bf.load, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool23.not = icmp eq i32 %9, 0
  br i1 %tobool23.not, label %if.end21.if.end33_crit_edge, label %land.end

if.end21.if.end33_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

land.end:                                         ; preds = %if.end21
  %ctls = getelementptr inbounds %struct.hda_spdif_out, ptr %spdif.013.i, i32 0, i32 2
  %10 = ptrtoint ptr %ctls to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %ctls, align 4
  %12 = and i16 %11, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool24.not = icmp ne i16 %12, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %format)
  %cmp25 = icmp ne i32 %call.i, %format
  %spec.select = select i1 %tobool24.not, i1 %cmp25, i1 false
  br i1 %spec.select, label %if.then28, label %land.end.if.end33_crit_edge

land.end.if.end33_crit_edge:                      ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

if.then28:                                        ; preds = %land.end
  %13 = ptrtoint ptr %ctls to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %ctls, align 4
  %15 = and i16 %14, 254
  %and32 = zext i16 %15 to i32
  %conv.i.i.i = zext i16 %nid to i32
  %shl1.i.i.i = shl i32 %conv.i.i.i, 20
  %or2.i.i.i = or i32 %shl1.i.i.i, 986368
  %call.i.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %or2.i.i.i, i32 noundef 255, i32 noundef %and32) #21
  %follower_dig_outs.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %16 = ptrtoint ptr %follower_dig_outs.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %follower_dig_outs.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %if.then28.if.end33_crit_edge, label %for.cond.preheader.i.i

if.then28.if.end33_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

for.cond.preheader.i.i:                           ; preds = %if.then28
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %17, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool1.not16.i.i = icmp eq i16 %19, 0
  br i1 %tobool1.not16.i.i, label %for.cond.preheader.i.i.if.end33_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.if.end33_crit_edge:        ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %20 = phi i16 [ %22, %for.body.i.i.for.body.i.i_crit_edge ], [ %19, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %d.017.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %17, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %conv.i12.i.i = zext i16 %20 to i32
  %shl1.i13.i.i = shl i32 %conv.i12.i.i, 20
  %or2.i14.i.i = or i32 %shl1.i13.i.i, 986368
  %call.i15.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %or2.i14.i.i, i32 noundef 255, i32 noundef %and32) #21
  %incdec.ptr.i.i = getelementptr i16, ptr %d.017.i.i, i32 1
  %21 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %incdec.ptr.i.i, align 2
  %tobool1.not.i.i = icmp eq i16 %22, 0
  br i1 %tobool1.not.i.i, label %for.body.i.i.if.end33_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.body.i.i.if.end33_crit_edge:                  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

if.end33:                                         ; preds = %for.body.i.i.if.end33_crit_edge, %for.cond.preheader.i.i.if.end33_crit_edge, %if.then28.if.end33_crit_edge, %land.end.if.end33_crit_edge, %if.end21.if.end33_crit_edge
  %23 = phi i1 [ false, %land.end.if.end33_crit_edge ], [ true, %if.then28.if.end33_crit_edge ], [ true, %for.cond.preheader.i.i.if.end33_crit_edge ], [ false, %if.end21.if.end33_crit_edge ], [ true, %for.body.i.i.if.end33_crit_edge ]
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  %follower_dig_outs = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %24 = ptrtoint ptr %follower_dig_outs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %follower_dig_outs, align 8
  %tobool34.not = icmp eq ptr %25, null
  br i1 %tobool34.not, label %if.end33.if.end38_crit_edge, label %for.cond.preheader

if.end33.if.end38_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

for.cond.preheader:                               ; preds = %if.end33
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %25, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool37.not93 = icmp eq i16 %27, 0
  br i1 %tobool37.not93, label %for.cond.preheader.if.end38_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end38_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %28 = phi i16 [ %30, %for.body.for.body_crit_edge ], [ %27, %for.cond.preheader.for.body_crit_edge ]
  %d.094 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %25, %for.cond.preheader.for.body_crit_edge ]
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %28, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  %incdec.ptr = getelementptr i16, ptr %d.094, i32 1
  %29 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %incdec.ptr, align 2
  %tobool37.not = icmp eq i16 %30, 0
  br i1 %tobool37.not, label %for.body.if.end38_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.if.end38_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.end38:                                         ; preds = %for.body.if.end38_crit_edge, %for.cond.preheader.if.end38_crit_edge, %if.end33.if.end38_crit_edge
  br i1 %23, label %if.then40, label %if.end38.cleanup_crit_edge

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then40:                                        ; preds = %if.end38
  %ctls41 = getelementptr inbounds %struct.hda_spdif_out, ptr %spdif.013.i, i32 0, i32 2
  %31 = ptrtoint ptr %ctls41 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %ctls41, align 4
  %33 = and i16 %32, 255
  %and43 = zext i16 %33 to i32
  %conv.i.i.i70 = zext i16 %nid to i32
  %shl1.i.i.i71 = shl i32 %conv.i.i.i70, 20
  %or2.i.i.i72 = or i32 %shl1.i.i.i71, 986368
  %call.i.i.i73 = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %or2.i.i.i72, i32 noundef 255, i32 noundef %and43) #21
  %34 = ptrtoint ptr %follower_dig_outs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %follower_dig_outs, align 8
  %tobool.not.i.i75 = icmp eq ptr %35, null
  br i1 %tobool.not.i.i75, label %if.then40.cleanup_crit_edge, label %for.cond.preheader.i.i77

if.then40.cleanup_crit_edge:                      ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.cond.preheader.i.i77:                         ; preds = %if.then40
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %35, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %tobool1.not16.i.i76 = icmp eq i16 %37, 0
  br i1 %tobool1.not16.i.i76, label %for.cond.preheader.i.i77.cleanup_crit_edge, label %for.cond.preheader.i.i77.for.body.i.i85_crit_edge

for.cond.preheader.i.i77.for.body.i.i85_crit_edge: ; preds = %for.cond.preheader.i.i77
  br label %for.body.i.i85

for.cond.preheader.i.i77.cleanup_crit_edge:       ; preds = %for.cond.preheader.i.i77
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.i.i85:                                   ; preds = %for.body.i.i85.for.body.i.i85_crit_edge, %for.cond.preheader.i.i77.for.body.i.i85_crit_edge
  %38 = phi i16 [ %40, %for.body.i.i85.for.body.i.i85_crit_edge ], [ %37, %for.cond.preheader.i.i77.for.body.i.i85_crit_edge ]
  %d.017.i.i78 = phi ptr [ %incdec.ptr.i.i83, %for.body.i.i85.for.body.i.i85_crit_edge ], [ %35, %for.cond.preheader.i.i77.for.body.i.i85_crit_edge ]
  %conv.i12.i.i79 = zext i16 %38 to i32
  %shl1.i13.i.i80 = shl i32 %conv.i12.i.i79, 20
  %or2.i14.i.i81 = or i32 %shl1.i13.i.i80, 986368
  %call.i15.i.i82 = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %codec, i32 noundef %or2.i14.i.i81, i32 noundef 255, i32 noundef %and43) #21
  %incdec.ptr.i.i83 = getelementptr i16, ptr %d.017.i.i78, i32 1
  %39 = ptrtoint ptr %incdec.ptr.i.i83 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %incdec.ptr.i.i83, align 2
  %tobool1.not.i.i84 = icmp eq i16 %40, 0
  br i1 %tobool1.not.i.i84, label %for.body.i.i85.cleanup_crit_edge, label %for.body.i.i85.for.body.i.i85_crit_edge

for.body.i.i85.for.body.i.i85_crit_edge:          ; preds = %for.body.i.i85
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i85

for.body.i.i85.cleanup_crit_edge:                 ; preds = %for.body.i.i85
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.body.i.i85.cleanup_crit_edge, %for.cond.preheader.i.i77.cleanup_crit_edge, %if.then40.cleanup_crit_edge, %if.end38.cleanup_crit_edge, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_dig_cleanup(ptr noundef %codec, ptr nocapture noundef readonly %mout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %0 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dig_out_nid, align 2
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %1, i32 noundef 0) #21
  %follower_dig_outs.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %2 = ptrtoint ptr %follower_dig_outs.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %follower_dig_outs.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.cleanup_dig_out_stream.exit_crit_edge, label %for.cond.preheader.i

entry.cleanup_dig_out_stream.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup_dig_out_stream.exit

for.cond.preheader.i:                             ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool2.not9.i = icmp eq i16 %5, 0
  br i1 %tobool2.not9.i, label %for.cond.preheader.i.cleanup_dig_out_stream.exit_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.cleanup_dig_out_stream.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup_dig_out_stream.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %6 = phi i16 [ %8, %for.body.i.for.body.i_crit_edge ], [ %5, %for.cond.preheader.i.for.body.i_crit_edge ]
  %d.010.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %3, %for.cond.preheader.i.for.body.i_crit_edge ]
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %6, i32 noundef 0) #21
  %incdec.ptr.i = getelementptr i16, ptr %d.010.i, i32 1
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %incdec.ptr.i, align 2
  %tobool2.not.i = icmp eq i16 %8, 0
  br i1 %tobool2.not.i, label %for.body.i.cleanup_dig_out_stream.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.cleanup_dig_out_stream.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup_dig_out_stream.exit

cleanup_dig_out_stream.exit:                      ; preds = %for.body.i.cleanup_dig_out_stream.exit_crit_edge, %for.cond.preheader.i.cleanup_dig_out_stream.exit_crit_edge, %entry.cleanup_dig_out_stream.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_dig_close(ptr noundef %codec, ptr nocapture noundef writeonly %mout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %dig_out_used = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 8
  %0 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %dig_out_used, align 8
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_analog_open(ptr noundef %codec, ptr noundef %mout, ptr nocapture noundef readonly %substream, ptr nocapture noundef %hinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime1 = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %0 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %runtime1, align 4
  %max_channels = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 7
  %2 = ptrtoint ptr %max_channels to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %max_channels, align 4
  %channels_max = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46, i32 6
  %4 = ptrtoint ptr %channels_max to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %channels_max, align 8
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %5 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %dig_out_nid, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool.not = icmp eq i16 %6, 0
  br i1 %tobool.not, label %entry.if.end49_crit_edge, label %if.then

entry.if.end49_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49

if.then:                                          ; preds = %entry
  %analog_rates = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 11
  %7 = ptrtoint ptr %analog_rates to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %analog_rates, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool2.not = icmp eq i32 %8, 0
  br i1 %tobool2.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %rates = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 4
  %9 = ptrtoint ptr %rates to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rates, align 8
  %11 = ptrtoint ptr %analog_rates to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %analog_rates, align 4
  %formats = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 5
  %12 = ptrtoint ptr %formats to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %formats, align 8
  %analog_formats = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 13
  %14 = ptrtoint ptr %analog_formats to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %analog_formats, align 8
  %maxbps = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 6
  %15 = ptrtoint ptr %maxbps to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %maxbps, align 8
  %analog_maxbps = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 12
  %17 = ptrtoint ptr %analog_maxbps to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %analog_maxbps, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %rates7 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46, i32 2
  %18 = ptrtoint ptr %rates7 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %8, ptr %rates7, align 8
  %analog_formats8 = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 13
  %19 = ptrtoint ptr %analog_formats8 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %analog_formats8, align 8
  %formats10 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46, i32 1
  %21 = ptrtoint ptr %formats10 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %formats10, align 8
  %analog_maxbps11 = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 12
  %22 = ptrtoint ptr %analog_maxbps11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %analog_maxbps11, align 8
  %maxbps12 = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 6
  %24 = ptrtoint ptr %maxbps12 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %maxbps12, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %spdif_rates = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 14
  %25 = ptrtoint ptr %spdif_rates to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %spdif_rates, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool13.not = icmp eq i32 %26, 0
  br i1 %tobool13.not, label %if.then14, label %if.end.if.end17_crit_edge

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then14:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %27 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %dig_out_nid, align 2
  %spdif_formats = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 16
  %spdif_maxbps = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 15
  %call = tail call i32 @snd_hdac_query_supported_pcm(ptr noundef %codec, i16 noundef zeroext %28, ptr noundef %spdif_rates, ptr noundef %spdif_formats, ptr noundef %spdif_maxbps) #21
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end.if.end17_crit_edge
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %share_spdif = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 10
  %29 = ptrtoint ptr %share_spdif to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %share_spdif, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool18.not = icmp eq i32 %30, 0
  br i1 %tobool18.not, label %if.end17.if.end47_crit_edge, label %if.then19

if.end17.if.end47_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

if.then19:                                        ; preds = %if.end17
  %rates21 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46, i32 2
  %31 = ptrtoint ptr %rates21 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rates21, align 8
  %33 = ptrtoint ptr %spdif_rates to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %spdif_rates, align 8
  %and = and i32 %34, %32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool23.not = icmp eq i32 %and, 0
  br i1 %tobool23.not, label %if.then19.if.else44_crit_edge, label %land.lhs.true

if.then19.if.else44_crit_edge:                    ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else44

land.lhs.true:                                    ; preds = %if.then19
  %formats25 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %1, i32 0, i32 46, i32 1
  %35 = ptrtoint ptr %formats25 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %formats25, align 8
  %spdif_formats26 = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 16
  %37 = ptrtoint ptr %spdif_formats26 to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %spdif_formats26, align 8
  %and27 = and i64 %38, %36
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and27)
  %tobool28.not = icmp eq i64 %and27, 0
  br i1 %tobool28.not, label %land.lhs.true.if.else44_crit_edge, label %if.then29

land.lhs.true.if.else44_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else44

if.then29:                                        ; preds = %land.lhs.true
  %39 = ptrtoint ptr %rates21 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %and, ptr %rates21, align 8
  %40 = ptrtoint ptr %spdif_formats26 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %spdif_formats26, align 8
  %and37 = and i64 %41, %36
  %42 = ptrtoint ptr %formats25 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %and37, ptr %formats25, align 8
  %spdif_maxbps38 = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 15
  %43 = ptrtoint ptr %spdif_maxbps38 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %spdif_maxbps38, align 4
  %maxbps39 = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 6
  %45 = ptrtoint ptr %maxbps39 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %maxbps39, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %46)
  %cmp = icmp ult i32 %44, %46
  br i1 %cmp, label %if.then40, label %if.then29.if.end47_crit_edge

if.then29.if.end47_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

if.then40:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #23
  %47 = ptrtoint ptr %maxbps39 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %44, ptr %maxbps39, align 8
  br label %if.end47

if.else44:                                        ; preds = %land.lhs.true.if.else44_crit_edge, %if.then19.if.else44_crit_edge
  %48 = ptrtoint ptr %share_spdif to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %share_spdif, align 8
  br label %if.end47

if.end47:                                         ; preds = %if.else44, %if.then40, %if.then29.if.end47_crit_edge, %if.end17.if.end47_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %if.end49

if.end49:                                         ; preds = %if.end47, %entry.if.end49_crit_edge
  %49 = ptrtoint ptr %runtime1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %runtime1, align 4
  %call51 = tail call i32 @snd_pcm_hw_constraint_step(ptr noundef %50, i32 noundef 0, i32 noundef 10, i32 noundef 2) #21
  ret i32 %call51
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_query_supported_pcm(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_hw_constraint_step(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_analog_prepare(ptr noundef %codec, ptr nocapture noundef %mout, i32 noundef %stream_tag, i32 noundef %format, ptr nocapture noundef readonly %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dac_nids = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 1
  %0 = ptrtoint ptr %dac_nids to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dac_nids, align 4
  %runtime = getelementptr inbounds %struct.snd_pcm_substream, ptr %substream, i32 0, i32 11
  %2 = ptrtoint ptr %runtime to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %runtime, align 4
  %channels = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i32 0, i32 15
  %4 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %channels, align 8
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %6 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %dig_out_nid, align 2
  %spdif_out.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20
  %8 = ptrtoint ptr %spdif_out.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %spdif_out.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp12.not.i = icmp eq i32 %9, 0
  br i1 %cmp12.not.i, label %entry.snd_hda_spdif_out_of_nid.exit_crit_edge, label %for.body.lr.ph.i

entry.snd_hda_spdif_out_of_nid.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_spdif_out_of_nid.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 4
  %10 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %list.i, align 8
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 20, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.014.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %spdif.013.i = phi ptr [ %11, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %12 = ptrtoint ptr %spdif.013.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %spdif.013.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %7)
  %cmp4.i = icmp eq i16 %13, %7
  br i1 %cmp4.i, label %for.body.i.snd_hda_spdif_out_of_nid.exit_crit_edge, label %for.inc.i

for.body.i.snd_hda_spdif_out_of_nid.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_spdif_out_of_nid.exit

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.014.i, 1
  %14 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %15, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %11, i32 %mul.i.i
  %exitcond.not.i = icmp eq i32 %inc.i, %9
  br i1 %exitcond.not.i, label %for.inc.i.snd_hda_spdif_out_of_nid.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.snd_hda_spdif_out_of_nid.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_spdif_out_of_nid.exit

snd_hda_spdif_out_of_nid.exit:                    ; preds = %for.inc.i.snd_hda_spdif_out_of_nid.exit_crit_edge, %for.body.i.snd_hda_spdif_out_of_nid.exit_crit_edge, %entry.snd_hda_spdif_out_of_nid.exit_crit_edge
  %retval.0.i = phi ptr [ null, %entry.snd_hda_spdif_out_of_nid.exit_crit_edge ], [ %spdif.013.i, %for.body.i.snd_hda_spdif_out_of_nid.exit_crit_edge ], [ null, %for.inc.i.snd_hda_spdif_out_of_nid.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %snd_hda_spdif_out_of_nid.exit.if.end21_crit_edge, label %land.lhs.true

snd_hda_spdif_out_of_nid.exit.if.end21_crit_edge: ; preds = %snd_hda_spdif_out_of_nid.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

land.lhs.true:                                    ; preds = %snd_hda_spdif_out_of_nid.exit
  %share_spdif = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 10
  %16 = ptrtoint ptr %share_spdif to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %share_spdif, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool2.not = icmp eq i32 %17, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end21_crit_edge, label %land.lhs.true3

land.lhs.true.if.end21_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

land.lhs.true3:                                   ; preds = %land.lhs.true
  %dig_out_used = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 8
  %18 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dig_out_used, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp.not = icmp eq i32 %19, 1
  br i1 %cmp.not, label %land.lhs.true3.if.end21_crit_edge, label %if.then

land.lhs.true3.if.end21_crit_edge:                ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp5 = icmp ne i32 %5, 2
  %cmp8.not = icmp eq ptr %retval.0.i, null
  %or.cond = or i1 %cmp5, %cmp8.not
  br i1 %or.cond, label %if.then.if.else_crit_edge, label %land.lhs.true10

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true10:                                  ; preds = %if.then
  %call12 = tail call zeroext i1 @snd_hdac_is_supported_format(ptr noundef %codec, i16 noundef zeroext %7, i32 noundef %format) #21
  br i1 %call12, label %land.lhs.true14, label %land.lhs.true10.if.else_crit_edge

land.lhs.true10.if.else_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %status = getelementptr inbounds %struct.hda_spdif_out, ptr %retval.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %status, align 4
  %and = and i32 %21, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %if.then16, label %land.lhs.true14.if.else_crit_edge

land.lhs.true14.if.else_crit_edge:                ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then16:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #23
  %22 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 2, ptr %dig_out_used, align 8
  %23 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %dig_out_nid, align 2
  tail call fastcc void @setup_dig_out_stream(ptr noundef %codec, i16 noundef zeroext %24, i32 noundef %stream_tag, i32 noundef %format)
  br label %if.end21

if.else:                                          ; preds = %land.lhs.true14.if.else_crit_edge, %land.lhs.true10.if.else_crit_edge, %if.then.if.else_crit_edge
  %25 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %dig_out_used, align 8
  %26 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %dig_out_nid, align 2
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %27, i32 noundef 0) #21
  %follower_dig_outs.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %28 = ptrtoint ptr %follower_dig_outs.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %follower_dig_outs.i, align 8
  %tobool.not.i = icmp eq ptr %29, null
  br i1 %tobool.not.i, label %if.else.if.end21_crit_edge, label %for.cond.preheader.i

if.else.if.end21_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

for.cond.preheader.i:                             ; preds = %if.else
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %29, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %tobool2.not9.i = icmp eq i16 %31, 0
  br i1 %tobool2.not9.i, label %for.cond.preheader.i.if.end21_crit_edge, label %for.cond.preheader.i.for.body.i163_crit_edge

for.cond.preheader.i.for.body.i163_crit_edge:     ; preds = %for.cond.preheader.i
  br label %for.body.i163

for.cond.preheader.i.if.end21_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

for.body.i163:                                    ; preds = %for.body.i163.for.body.i163_crit_edge, %for.cond.preheader.i.for.body.i163_crit_edge
  %32 = phi i16 [ %34, %for.body.i163.for.body.i163_crit_edge ], [ %31, %for.cond.preheader.i.for.body.i163_crit_edge ]
  %d.010.i = phi ptr [ %incdec.ptr.i, %for.body.i163.for.body.i163_crit_edge ], [ %29, %for.cond.preheader.i.for.body.i163_crit_edge ]
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %32, i32 noundef 0) #21
  %incdec.ptr.i = getelementptr i16, ptr %d.010.i, i32 1
  %33 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %incdec.ptr.i, align 2
  %tobool2.not.i = icmp eq i16 %34, 0
  br i1 %tobool2.not.i, label %for.body.i163.if.end21_crit_edge, label %for.body.i163.for.body.i163_crit_edge

for.body.i163.for.body.i163_crit_edge:            ; preds = %for.body.i163
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i163

for.body.i163.if.end21_crit_edge:                 ; preds = %for.body.i163
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.end21:                                         ; preds = %for.body.i163.if.end21_crit_edge, %for.cond.preheader.i.if.end21_crit_edge, %if.else.if.end21_crit_edge, %if.then16, %land.lhs.true3.if.end21_crit_edge, %land.lhs.true.if.end21_crit_edge, %snd_hda_spdif_out_of_nid.exit.if.end21_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %1, align 2
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %36, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  %no_share_stream = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 9
  %37 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool23.not = icmp eq i32 %38, 0
  br i1 %tobool23.not, label %land.lhs.true24, label %if.end21.for.inc.4_crit_edge

if.end21.for.inc.4_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

land.lhs.true24:                                  ; preds = %if.end21
  %hp_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 2
  %39 = ptrtoint ptr %hp_nid to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %hp_nid, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %tobool26.not = icmp eq i16 %40, 0
  br i1 %tobool26.not, label %land.lhs.true24.if.end36_crit_edge, label %land.lhs.true27

land.lhs.true24.if.end36_crit_edge:               ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %1, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %40, i16 %42)
  %cmp32.not = icmp eq i16 %40, %42
  br i1 %cmp32.not, label %land.lhs.true27.if.end36_crit_edge, label %if.then34

land.lhs.true27.if.end36_crit_edge:               ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.then34:                                        ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %40, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %land.lhs.true27.if.end36_crit_edge, %land.lhs.true24.if.end36_crit_edge
  %43 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %43)
  %.pr = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool40.not = icmp eq i32 %.pr, 0
  br i1 %tobool40.not, label %land.lhs.true41, label %if.end36.for.inc.4_crit_edge

if.end36.for.inc.4_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

land.lhs.true41:                                  ; preds = %if.end36
  %arrayidx42 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 0
  %44 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %arrayidx42, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %45)
  %tobool44.not = icmp eq i16 %45, 0
  br i1 %tobool44.not, label %land.lhs.true41.for.inc_crit_edge, label %if.then45

land.lhs.true41.for.inc_crit_edge:                ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then45:                                        ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %45, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %for.inc

for.inc:                                          ; preds = %if.then45, %land.lhs.true41.for.inc_crit_edge
  %46 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pr172 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr172)
  %tobool40.not.1 = icmp eq i32 %.pr172, 0
  br i1 %tobool40.not.1, label %land.lhs.true41.1, label %for.inc.for.inc.4_crit_edge

for.inc.for.inc.4_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

land.lhs.true41.1:                                ; preds = %for.inc
  %arrayidx42.1 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 1
  %47 = ptrtoint ptr %arrayidx42.1 to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %arrayidx42.1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %48)
  %tobool44.not.1 = icmp eq i16 %48, 0
  br i1 %tobool44.not.1, label %land.lhs.true41.1.for.inc.1_crit_edge, label %if.then45.1

land.lhs.true41.1.for.inc.1_crit_edge:            ; preds = %land.lhs.true41.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1

if.then45.1:                                      ; preds = %land.lhs.true41.1
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %48, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then45.1, %land.lhs.true41.1.for.inc.1_crit_edge
  %49 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %49)
  %.pr174.pr = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr174.pr)
  %tobool40.not.2 = icmp eq i32 %.pr174.pr, 0
  br i1 %tobool40.not.2, label %land.lhs.true41.2, label %for.inc.1.for.inc.4_crit_edge

for.inc.1.for.inc.4_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

land.lhs.true41.2:                                ; preds = %for.inc.1
  %arrayidx42.2 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 2
  %50 = ptrtoint ptr %arrayidx42.2 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %arrayidx42.2, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %51)
  %tobool44.not.2 = icmp eq i16 %51, 0
  br i1 %tobool44.not.2, label %land.lhs.true41.2.for.inc.2_crit_edge, label %if.then45.2

land.lhs.true41.2.for.inc.2_crit_edge:            ; preds = %land.lhs.true41.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.2

if.then45.2:                                      ; preds = %land.lhs.true41.2
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %51, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then45.2, %land.lhs.true41.2.for.inc.2_crit_edge
  %52 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %52)
  %.pr176 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr176)
  %tobool40.not.3 = icmp eq i32 %.pr176, 0
  br i1 %tobool40.not.3, label %land.lhs.true41.3, label %for.inc.2.for.inc.4_crit_edge

for.inc.2.for.inc.4_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

land.lhs.true41.3:                                ; preds = %for.inc.2
  %arrayidx42.3 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 3
  %53 = ptrtoint ptr %arrayidx42.3 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %arrayidx42.3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %54)
  %tobool44.not.3 = icmp eq i16 %54, 0
  br i1 %tobool44.not.3, label %land.lhs.true41.3.for.inc.3_crit_edge, label %if.then45.3

land.lhs.true41.3.for.inc.3_crit_edge:            ; preds = %land.lhs.true41.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3

if.then45.3:                                      ; preds = %land.lhs.true41.3
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %54, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then45.3, %land.lhs.true41.3.for.inc.3_crit_edge
  %55 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %55)
  %.pr178.pr.pr = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr178.pr.pr)
  %tobool40.not.4 = icmp eq i32 %.pr178.pr.pr, 0
  br i1 %tobool40.not.4, label %land.lhs.true41.4, label %for.inc.3.for.inc.4_crit_edge

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

land.lhs.true41.4:                                ; preds = %for.inc.3
  %arrayidx42.4 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 4
  %56 = ptrtoint ptr %arrayidx42.4 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %arrayidx42.4, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %tobool44.not.4 = icmp eq i16 %57, 0
  br i1 %tobool44.not.4, label %land.lhs.true41.4.for.inc.4_crit_edge, label %if.then45.4

land.lhs.true41.4.for.inc.4_crit_edge:            ; preds = %land.lhs.true41.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

if.then45.4:                                      ; preds = %land.lhs.true41.4
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %57, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then45.4, %land.lhs.true41.4.for.inc.4_crit_edge, %for.inc.3.for.inc.4_crit_edge, %for.inc.2.for.inc.4_crit_edge, %for.inc.1.for.inc.4_crit_edge, %for.inc.for.inc.4_crit_edge, %if.end36.for.inc.4_crit_edge, %if.end21.for.inc.4_crit_edge
  %58 = ptrtoint ptr %mout to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %mout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %59)
  %cmp50168 = icmp sgt i32 %59, 1
  br i1 %cmp50168, label %for.inc.4.for.body52_crit_edge, label %for.inc.4.for.cond68.preheader_crit_edge

for.inc.4.for.cond68.preheader_crit_edge:         ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond68.preheader

for.inc.4.for.body52_crit_edge:                   ; preds = %for.inc.4
  br label %for.body52

for.cond68.preheader:                             ; preds = %for.inc65.for.cond68.preheader_crit_edge, %for.inc.4.for.cond68.preheader_crit_edge
  %arrayidx72 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 0
  %60 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %arrayidx72, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %61)
  %tobool73.not = icmp eq i16 %61, 0
  br i1 %tobool73.not, label %for.cond68.preheader.for.end92_crit_edge, label %if.end75

for.cond68.preheader.for.end92_crit_edge:         ; preds = %for.cond68.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

for.body52:                                       ; preds = %for.inc65.for.body52_crit_edge, %for.inc.4.for.body52_crit_edge
  %i.1169 = phi i32 [ %add, %for.inc65.for.body52_crit_edge ], [ 1, %for.inc.4.for.body52_crit_edge ]
  %add = add nuw nsw i32 %i.1169, 1
  %mul = shl nuw i32 %add, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %mul)
  %cmp53.not = icmp slt i32 %5, %mul
  br i1 %cmp53.not, label %if.else58, label %if.then55

if.then55:                                        ; preds = %for.body52
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx56 = getelementptr i16, ptr %1, i32 %i.1169
  %62 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %arrayidx56, align 2
  %mul57 = shl nuw i32 %i.1169, 1
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %63, i32 noundef %stream_tag, i32 noundef %mul57, i32 noundef %format)
  br label %for.inc65

if.else58:                                        ; preds = %for.body52
  %64 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool60.not = icmp eq i32 %65, 0
  br i1 %tobool60.not, label %if.then61, label %if.else58.for.inc65_crit_edge

if.else58.for.inc65_crit_edge:                    ; preds = %if.else58
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc65

if.then61:                                        ; preds = %if.else58
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx62 = getelementptr i16, ptr %1, i32 %i.1169
  %66 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %arrayidx62, align 2
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %67, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  br label %for.inc65

for.inc65:                                        ; preds = %if.then61, %if.else58.for.inc65_crit_edge, %if.then55
  %68 = ptrtoint ptr %mout to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %mout, align 8
  %cmp50 = icmp slt i32 %add, %69
  br i1 %cmp50, label %for.inc65.for.body52_crit_edge, label %for.inc65.for.cond68.preheader_crit_edge

for.inc65.for.cond68.preheader_crit_edge:         ; preds = %for.inc65
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond68.preheader

for.inc65.for.body52_crit_edge:                   ; preds = %for.inc65
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body52

if.end75:                                         ; preds = %for.cond68.preheader
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp78.not = icmp slt i32 %5, 2
  br i1 %cmp78.not, label %if.else82, label %if.end75.for.inc90_crit_edge

if.end75.for.inc90_crit_edge:                     ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90

if.else82:                                        ; preds = %if.end75
  %70 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool84.not = icmp eq i32 %71, 0
  br i1 %tobool84.not, label %if.else82.for.end92_crit_edge, label %if.else82.for.inc90_crit_edge

if.else82.for.inc90_crit_edge:                    ; preds = %if.else82
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90

if.else82.for.end92_crit_edge:                    ; preds = %if.else82
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

for.inc90:                                        ; preds = %if.else82.for.inc90_crit_edge, %if.end75.for.inc90_crit_edge
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %61, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  %arrayidx72.1 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 1
  %72 = ptrtoint ptr %arrayidx72.1 to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %arrayidx72.1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %73)
  %tobool73.not.1 = icmp eq i16 %73, 0
  br i1 %tobool73.not.1, label %for.inc90.for.end92_crit_edge, label %if.end75.1

for.inc90.for.end92_crit_edge:                    ; preds = %for.inc90
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

if.end75.1:                                       ; preds = %for.inc90
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %cmp78.not.1 = icmp slt i32 %5, 4
  br i1 %cmp78.not.1, label %if.else82.1, label %if.end75.1.for.inc90.1_crit_edge

if.end75.1.for.inc90.1_crit_edge:                 ; preds = %if.end75.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.1

if.else82.1:                                      ; preds = %if.end75.1
  %74 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool84.not.1 = icmp eq i32 %75, 0
  br i1 %tobool84.not.1, label %if.else82.1.for.end92_crit_edge, label %if.else82.1.for.inc90.1_crit_edge

if.else82.1.for.inc90.1_crit_edge:                ; preds = %if.else82.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.1

if.else82.1.for.end92_crit_edge:                  ; preds = %if.else82.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

for.inc90.1:                                      ; preds = %if.else82.1.for.inc90.1_crit_edge, %if.end75.1.for.inc90.1_crit_edge
  %ch.0.1 = phi i32 [ 0, %if.else82.1.for.inc90.1_crit_edge ], [ 2, %if.end75.1.for.inc90.1_crit_edge ]
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %73, i32 noundef %stream_tag, i32 noundef %ch.0.1, i32 noundef %format)
  %arrayidx72.2 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 2
  %76 = ptrtoint ptr %arrayidx72.2 to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %arrayidx72.2, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %tobool73.not.2 = icmp eq i16 %77, 0
  br i1 %tobool73.not.2, label %for.inc90.1.for.end92_crit_edge, label %if.end75.2

for.inc90.1.for.end92_crit_edge:                  ; preds = %for.inc90.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

if.end75.2:                                       ; preds = %for.inc90.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %5)
  %cmp78.not.2 = icmp slt i32 %5, 6
  br i1 %cmp78.not.2, label %if.else82.2, label %if.end75.2.for.inc90.2_crit_edge

if.end75.2.for.inc90.2_crit_edge:                 ; preds = %if.end75.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.2

if.else82.2:                                      ; preds = %if.end75.2
  %78 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool84.not.2 = icmp eq i32 %79, 0
  br i1 %tobool84.not.2, label %if.else82.2.for.end92_crit_edge, label %if.else82.2.for.inc90.2_crit_edge

if.else82.2.for.inc90.2_crit_edge:                ; preds = %if.else82.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.2

if.else82.2.for.end92_crit_edge:                  ; preds = %if.else82.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

for.inc90.2:                                      ; preds = %if.else82.2.for.inc90.2_crit_edge, %if.end75.2.for.inc90.2_crit_edge
  %ch.0.2 = phi i32 [ 0, %if.else82.2.for.inc90.2_crit_edge ], [ 4, %if.end75.2.for.inc90.2_crit_edge ]
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %77, i32 noundef %stream_tag, i32 noundef %ch.0.2, i32 noundef %format)
  %arrayidx72.3 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 3
  %80 = ptrtoint ptr %arrayidx72.3 to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %arrayidx72.3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %81)
  %tobool73.not.3 = icmp eq i16 %81, 0
  br i1 %tobool73.not.3, label %for.inc90.2.for.end92_crit_edge, label %if.end75.3

for.inc90.2.for.end92_crit_edge:                  ; preds = %for.inc90.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

if.end75.3:                                       ; preds = %for.inc90.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %5)
  %cmp78.not.3 = icmp slt i32 %5, 8
  br i1 %cmp78.not.3, label %if.else82.3, label %if.end75.3.for.inc90.3_crit_edge

if.end75.3.for.inc90.3_crit_edge:                 ; preds = %if.end75.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.3

if.else82.3:                                      ; preds = %if.end75.3
  %82 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool84.not.3 = icmp eq i32 %83, 0
  br i1 %tobool84.not.3, label %if.else82.3.for.end92_crit_edge, label %if.else82.3.for.inc90.3_crit_edge

if.else82.3.for.inc90.3_crit_edge:                ; preds = %if.else82.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.3

if.else82.3.for.end92_crit_edge:                  ; preds = %if.else82.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

for.inc90.3:                                      ; preds = %if.else82.3.for.inc90.3_crit_edge, %if.end75.3.for.inc90.3_crit_edge
  %ch.0.3 = phi i32 [ 0, %if.else82.3.for.inc90.3_crit_edge ], [ 6, %if.end75.3.for.inc90.3_crit_edge ]
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %81, i32 noundef %stream_tag, i32 noundef %ch.0.3, i32 noundef %format)
  %arrayidx72.4 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 4
  %84 = ptrtoint ptr %arrayidx72.4 to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %arrayidx72.4, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %85)
  %tobool73.not.4 = icmp eq i16 %85, 0
  br i1 %tobool73.not.4, label %for.inc90.3.for.end92_crit_edge, label %if.end75.4

for.inc90.3.for.end92_crit_edge:                  ; preds = %for.inc90.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

if.end75.4:                                       ; preds = %for.inc90.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %5)
  %cmp78.not.4 = icmp slt i32 %5, 10
  br i1 %cmp78.not.4, label %if.else82.4, label %if.end75.4.for.inc90.4_crit_edge

if.end75.4.for.inc90.4_crit_edge:                 ; preds = %if.end75.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.4

if.else82.4:                                      ; preds = %if.end75.4
  %86 = ptrtoint ptr %no_share_stream to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %no_share_stream, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool84.not.4 = icmp eq i32 %87, 0
  br i1 %tobool84.not.4, label %if.else82.4.for.end92_crit_edge, label %if.else82.4.for.inc90.4_crit_edge

if.else82.4.for.inc90.4_crit_edge:                ; preds = %if.else82.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc90.4

if.else82.4.for.end92_crit_edge:                  ; preds = %if.else82.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end92

for.inc90.4:                                      ; preds = %if.else82.4.for.inc90.4_crit_edge, %if.end75.4.for.inc90.4_crit_edge
  %ch.0.4 = phi i32 [ 0, %if.else82.4.for.inc90.4_crit_edge ], [ 8, %if.end75.4.for.inc90.4_crit_edge ]
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %85, i32 noundef %stream_tag, i32 noundef %ch.0.4, i32 noundef %format)
  br label %for.end92

for.end92:                                        ; preds = %for.inc90.4, %if.else82.4.for.end92_crit_edge, %for.inc90.3.for.end92_crit_edge, %if.else82.3.for.end92_crit_edge, %for.inc90.2.for.end92_crit_edge, %if.else82.2.for.end92_crit_edge, %for.inc90.1.for.end92_crit_edge, %if.else82.1.for.end92_crit_edge, %for.inc90.for.end92_crit_edge, %if.else82.for.end92_crit_edge, %for.cond68.preheader.for.end92_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @snd_hdac_is_supported_format(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_multi_out_analog_cleanup(ptr noundef %codec, ptr nocapture noundef %mout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dac_nids = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 1
  %0 = ptrtoint ptr %dac_nids to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dac_nids, align 4
  %2 = ptrtoint ptr %mout to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp63 = icmp sgt i32 %3, 0
  br i1 %cmp63, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.064 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr i16, ptr %1, i32 %i.064
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %arrayidx, align 2
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %5, i32 noundef 0)
  %inc = add nuw nsw i32 %i.064, 1
  %6 = ptrtoint ptr %mout to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mout, align 8
  %cmp = icmp slt i32 %inc, %7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %hp_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 2
  %8 = ptrtoint ptr %hp_nid to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %hp_nid, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not = icmp eq i16 %9, 0
  br i1 %tobool.not, label %for.end.if.end_crit_edge, label %if.then

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %9, i32 noundef 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end.if.end_crit_edge
  %arrayidx5 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 0
  %10 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx5, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool6.not = icmp eq i16 %11, 0
  br i1 %tobool6.not, label %if.end.for.inc11_crit_edge, label %if.then7

if.end.for.inc11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc11

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %11, i32 noundef 0)
  br label %for.inc11

for.inc11:                                        ; preds = %if.then7, %if.end.for.inc11_crit_edge
  %arrayidx5.1 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 1
  %12 = ptrtoint ptr %arrayidx5.1 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %arrayidx5.1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %tobool6.not.1 = icmp eq i16 %13, 0
  br i1 %tobool6.not.1, label %for.inc11.for.inc11.1_crit_edge, label %if.then7.1

for.inc11.for.inc11.1_crit_edge:                  ; preds = %for.inc11
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc11.1

if.then7.1:                                       ; preds = %for.inc11
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %13, i32 noundef 0)
  br label %for.inc11.1

for.inc11.1:                                      ; preds = %if.then7.1, %for.inc11.for.inc11.1_crit_edge
  %arrayidx5.2 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 2
  %14 = ptrtoint ptr %arrayidx5.2 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %arrayidx5.2, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool6.not.2 = icmp eq i16 %15, 0
  br i1 %tobool6.not.2, label %for.inc11.1.for.inc11.2_crit_edge, label %if.then7.2

for.inc11.1.for.inc11.2_crit_edge:                ; preds = %for.inc11.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc11.2

if.then7.2:                                       ; preds = %for.inc11.1
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %15, i32 noundef 0)
  br label %for.inc11.2

for.inc11.2:                                      ; preds = %if.then7.2, %for.inc11.1.for.inc11.2_crit_edge
  %arrayidx5.3 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 3
  %16 = ptrtoint ptr %arrayidx5.3 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %arrayidx5.3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool6.not.3 = icmp eq i16 %17, 0
  br i1 %tobool6.not.3, label %for.inc11.2.for.inc11.3_crit_edge, label %if.then7.3

for.inc11.2.for.inc11.3_crit_edge:                ; preds = %for.inc11.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc11.3

if.then7.3:                                       ; preds = %for.inc11.2
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %17, i32 noundef 0)
  br label %for.inc11.3

for.inc11.3:                                      ; preds = %if.then7.3, %for.inc11.2.for.inc11.3_crit_edge
  %arrayidx5.4 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 3, i32 4
  %18 = ptrtoint ptr %arrayidx5.4 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx5.4, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool6.not.4 = icmp eq i16 %19, 0
  br i1 %tobool6.not.4, label %for.inc11.3.for.inc11.4_crit_edge, label %if.then7.4

for.inc11.3.for.inc11.4_crit_edge:                ; preds = %for.inc11.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc11.4

if.then7.4:                                       ; preds = %for.inc11.3
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %19, i32 noundef 0)
  br label %for.inc11.4

for.inc11.4:                                      ; preds = %if.then7.4, %for.inc11.3.for.inc11.4_crit_edge
  %arrayidx17 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 0
  %20 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %arrayidx17, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool18.not = icmp eq i16 %21, 0
  br i1 %tobool18.not, label %for.inc11.4.for.inc23_crit_edge, label %if.then19

for.inc11.4.for.inc23_crit_edge:                  ; preds = %for.inc11.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc23

if.then19:                                        ; preds = %for.inc11.4
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %21, i32 noundef 0)
  br label %for.inc23

for.inc23:                                        ; preds = %if.then19, %for.inc11.4.for.inc23_crit_edge
  %arrayidx17.1 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 1
  %22 = ptrtoint ptr %arrayidx17.1 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %arrayidx17.1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool18.not.1 = icmp eq i16 %23, 0
  br i1 %tobool18.not.1, label %for.inc23.for.inc23.1_crit_edge, label %if.then19.1

for.inc23.for.inc23.1_crit_edge:                  ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc23.1

if.then19.1:                                      ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %23, i32 noundef 0)
  br label %for.inc23.1

for.inc23.1:                                      ; preds = %if.then19.1, %for.inc23.for.inc23.1_crit_edge
  %arrayidx17.2 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 2
  %24 = ptrtoint ptr %arrayidx17.2 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %arrayidx17.2, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool18.not.2 = icmp eq i16 %25, 0
  br i1 %tobool18.not.2, label %for.inc23.1.for.inc23.2_crit_edge, label %if.then19.2

for.inc23.1.for.inc23.2_crit_edge:                ; preds = %for.inc23.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc23.2

if.then19.2:                                      ; preds = %for.inc23.1
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %25, i32 noundef 0)
  br label %for.inc23.2

for.inc23.2:                                      ; preds = %if.then19.2, %for.inc23.1.for.inc23.2_crit_edge
  %arrayidx17.3 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 3
  %26 = ptrtoint ptr %arrayidx17.3 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx17.3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool18.not.3 = icmp eq i16 %27, 0
  br i1 %tobool18.not.3, label %for.inc23.2.for.inc23.3_crit_edge, label %if.then19.3

for.inc23.2.for.inc23.3_crit_edge:                ; preds = %for.inc23.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc23.3

if.then19.3:                                      ; preds = %for.inc23.2
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %27, i32 noundef 0)
  br label %for.inc23.3

for.inc23.3:                                      ; preds = %if.then19.3, %for.inc23.2.for.inc23.3_crit_edge
  %arrayidx17.4 = getelementptr %struct.hda_multi_out, ptr %mout, i32 0, i32 4, i32 4
  %28 = ptrtoint ptr %arrayidx17.4 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %arrayidx17.4, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool18.not.4 = icmp eq i16 %29, 0
  br i1 %tobool18.not.4, label %for.inc23.3.for.inc23.4_crit_edge, label %if.then19.4

for.inc23.3.for.inc23.4_crit_edge:                ; preds = %for.inc23.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc23.4

if.then19.4:                                      ; preds = %for.inc23.3
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %29, i32 noundef 0)
  br label %for.inc23.4

for.inc23.4:                                      ; preds = %if.then19.4, %for.inc23.3.for.inc23.4_crit_edge
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %dig_out_nid = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 5
  %30 = ptrtoint ptr %dig_out_nid to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %dig_out_nid, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %tobool26.not = icmp eq i16 %31, 0
  br i1 %tobool26.not, label %for.inc23.4.if.end32_crit_edge, label %land.lhs.true

for.inc23.4.if.end32_crit_edge:                   ; preds = %for.inc23.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

land.lhs.true:                                    ; preds = %for.inc23.4
  %dig_out_used = getelementptr inbounds %struct.hda_multi_out, ptr %mout, i32 0, i32 8
  %32 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %dig_out_used, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %33)
  %cmp27 = icmp eq i32 %33, 2
  br i1 %cmp27, label %if.then29, label %land.lhs.true.if.end32_crit_edge

land.lhs.true.if.end32_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

if.then29:                                        ; preds = %land.lhs.true
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %31, i32 noundef 0) #21
  %follower_dig_outs.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 22
  %34 = ptrtoint ptr %follower_dig_outs.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %follower_dig_outs.i, align 8
  %tobool.not.i = icmp eq ptr %35, null
  br i1 %tobool.not.i, label %if.then29.cleanup_dig_out_stream.exit_crit_edge, label %for.cond.preheader.i

if.then29.cleanup_dig_out_stream.exit_crit_edge:  ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup_dig_out_stream.exit

for.cond.preheader.i:                             ; preds = %if.then29
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %35, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %tobool2.not9.i = icmp eq i16 %37, 0
  br i1 %tobool2.not9.i, label %for.cond.preheader.i.cleanup_dig_out_stream.exit_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.cleanup_dig_out_stream.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup_dig_out_stream.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %38 = phi i16 [ %40, %for.body.i.for.body.i_crit_edge ], [ %37, %for.cond.preheader.i.for.body.i_crit_edge ]
  %d.010.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %35, %for.cond.preheader.i.for.body.i_crit_edge ]
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %38, i32 noundef 0) #21
  %incdec.ptr.i = getelementptr i16, ptr %d.010.i, i32 1
  %39 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %incdec.ptr.i, align 2
  %tobool2.not.i = icmp eq i16 %40, 0
  br i1 %tobool2.not.i, label %for.body.i.cleanup_dig_out_stream.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.cleanup_dig_out_stream.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup_dig_out_stream.exit

cleanup_dig_out_stream.exit:                      ; preds = %for.body.i.cleanup_dig_out_stream.exit_crit_edge, %for.cond.preheader.i.cleanup_dig_out_stream.exit_crit_edge, %if.then29.cleanup_dig_out_stream.exit_crit_edge
  %41 = ptrtoint ptr %dig_out_used to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %dig_out_used, align 8
  br label %if.end32

if.end32:                                         ; preds = %cleanup_dig_out_stream.exit, %land.lhs.true.if.end32_crit_edge, %for.inc23.4.if.end32_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_get_default_vref(ptr noundef %codec, i16 noundef zeroext %pin) #0 align 64 {
entry:
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef 0, i32 noundef 3847, i32 noundef 0) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #21
  %0 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val.i.i, align 4, !annotation !339
  %call.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef 12, ptr noundef nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %entry.snd_hda_query_pin_caps.exit_crit_edge, label %cond.false.i.i

entry.snd_hda_query_pin_caps.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_query_pin_caps.exit

cond.false.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %1 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %val.i.i, align 4
  br label %snd_hda_query_pin_caps.exit

snd_hda_query_pin_caps.exit:                      ; preds = %cond.false.i.i, %entry.snd_hda_query_pin_caps.exit_crit_edge
  %cond.i.i = phi i32 [ %2, %cond.false.i.i ], [ -1, %entry.snd_hda_query_pin_caps.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  %3 = and i32 %cond.i.i, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 33
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp.not
  br i1 %or.cond, label %if.else, label %snd_hda_query_pin_caps.exit.cleanup_crit_edge

snd_hda_query_pin_caps.exit.cleanup_crit_edge:    ; preds = %snd_hda_query_pin_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else:                                          ; preds = %snd_hda_query_pin_caps.exit
  %4 = and i32 %cond.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool4.not = icmp eq i32 %4, 0
  br i1 %tobool4.not, label %if.else6, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else6:                                         ; preds = %if.else
  %5 = and i32 %cond.i.i, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool8.not = icmp eq i32 %5, 0
  br i1 %tobool8.not, label %if.else10, label %if.else6.cleanup_crit_edge

if.else6.cleanup_crit_edge:                       ; preds = %if.else6
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else10:                                        ; preds = %if.else6
  call void @__sanitizer_cov_trace_pc() #23
  %6 = lshr i32 %cond.i.i, 9
  %7 = and i32 %6, 2
  br label %cleanup

cleanup:                                          ; preds = %if.else10, %if.else6.cleanup_crit_edge, %if.else.cleanup_crit_edge, %snd_hda_query_pin_caps.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 4, %snd_hda_query_pin_caps.exit.cleanup_crit_edge ], [ 1, %if.else.cleanup_crit_edge ], [ 5, %if.else6.cleanup_crit_edge ], [ %7, %if.else10 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_correct_pin_ctl(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef %val) #0 align 64 {
entry:
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %val)
  %tobool.not = icmp eq i32 %val, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #21
  %0 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val.i.i, align 4, !annotation !339
  %call.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef 12, ptr noundef nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %snd_hda_query_pin_caps.exit.thread, label %snd_hda_query_pin_caps.exit

snd_hda_query_pin_caps.exit.thread:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  br label %if.end3

snd_hda_query_pin_caps.exit:                      ; preds = %if.end
  %1 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %val.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %snd_hda_query_pin_caps.exit.cleanup_crit_edge, label %snd_hda_query_pin_caps.exit.if.end3_crit_edge

snd_hda_query_pin_caps.exit.if.end3_crit_edge:    ; preds = %snd_hda_query_pin_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

snd_hda_query_pin_caps.exit.cleanup_crit_edge:    ; preds = %snd_hda_query_pin_caps.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %snd_hda_query_pin_caps.exit.if.end3_crit_edge, %snd_hda_query_pin_caps.exit.thread
  %cond.i.i70 = phi i32 [ -1, %snd_hda_query_pin_caps.exit.thread ], [ %2, %snd_hda_query_pin_caps.exit.if.end3_crit_edge ]
  %and = and i32 %val, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.end3.if.end18_crit_edge, label %if.then5

if.end3.if.end18_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18

if.then5:                                         ; preds = %if.end3
  %and6 = and i32 %cond.i.i70, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  %and9 = and i32 %val, -193
  br label %if.end18

if.else:                                          ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  %and10 = and i32 %val, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp ne i32 %and10, 0
  %and12 = and i32 %cond.i.i70, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  %or.cond = select i1 %tobool11.not, i1 %tobool13.not, i1 false
  %and15 = and i32 %val, -129
  %spec.select = select i1 %or.cond, i32 %and15, i32 %val
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then8, %if.end3.if.end18_crit_edge
  %val.addr.0 = phi i32 [ %and9, %if.then8 ], [ %val, %if.end3.if.end18_crit_edge ], [ %spec.select, %if.else ]
  %and19 = and i32 %val.addr.0, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  br i1 %tobool20.not, label %if.end18.cleanup_crit_edge, label %if.then21

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then21:                                        ; preds = %if.end18
  %and22 = and i32 %cond.i.i70, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %if.then24, label %if.else26

if.then24:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #23
  %and25 = and i32 %val.addr.0, -40
  br label %cleanup

if.else26:                                        ; preds = %if.then21
  %and28 = and i32 %val.addr.0, 7
  %3 = zext i32 %and28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.77)
  switch i32 %and28, label %if.else26.for.inc.3_crit_edge [
    i32 5, label %land.lhs.true31
    i32 4, label %if.else26.land.lhs.true31.1_crit_edge
    i32 1, label %if.else26.land.lhs.true31.2_crit_edge
    i32 2, label %if.else26.land.lhs.true31.3_crit_edge
  ]

if.else26.land.lhs.true31.3_crit_edge:            ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true31.3

if.else26.land.lhs.true31.2_crit_edge:            ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true31.2

if.else26.land.lhs.true31.1_crit_edge:            ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true31.1

if.else26.for.inc.3_crit_edge:                    ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3

land.lhs.true31:                                  ; preds = %if.else26
  %4 = and i32 %cond.i.i70, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool35.not = icmp eq i32 %4, 0
  br i1 %tobool35.not, label %land.lhs.true31.land.lhs.true31.1_crit_edge, label %land.lhs.true31.for.inc.3_crit_edge

land.lhs.true31.for.inc.3_crit_edge:              ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3

land.lhs.true31.land.lhs.true31.1_crit_edge:      ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true31.1

land.lhs.true31.1:                                ; preds = %land.lhs.true31.land.lhs.true31.1_crit_edge, %if.else26.land.lhs.true31.1_crit_edge
  %5 = and i32 %cond.i.i70, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool35.not.1 = icmp eq i32 %5, 0
  br i1 %tobool35.not.1, label %land.lhs.true31.1.land.lhs.true31.2_crit_edge, label %land.lhs.true31.1.for.inc.3_crit_edge

land.lhs.true31.1.for.inc.3_crit_edge:            ; preds = %land.lhs.true31.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3

land.lhs.true31.1.land.lhs.true31.2_crit_edge:    ; preds = %land.lhs.true31.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true31.2

land.lhs.true31.2:                                ; preds = %land.lhs.true31.1.land.lhs.true31.2_crit_edge, %if.else26.land.lhs.true31.2_crit_edge
  %6 = and i32 %cond.i.i70, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool35.not.2 = icmp eq i32 %6, 0
  br i1 %tobool35.not.2, label %land.lhs.true31.2.land.lhs.true31.3_crit_edge, label %land.lhs.true31.2.for.inc.3_crit_edge

land.lhs.true31.2.for.inc.3_crit_edge:            ; preds = %land.lhs.true31.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3

land.lhs.true31.2.land.lhs.true31.3_crit_edge:    ; preds = %land.lhs.true31.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true31.3

land.lhs.true31.3:                                ; preds = %land.lhs.true31.2.land.lhs.true31.3_crit_edge, %if.else26.land.lhs.true31.3_crit_edge
  %7 = lshr i32 %cond.i.i70, 9
  %8 = and i32 %7, 2
  br label %for.inc.3

for.inc.3:                                        ; preds = %land.lhs.true31.3, %land.lhs.true31.2.for.inc.3_crit_edge, %land.lhs.true31.1.for.inc.3_crit_edge, %land.lhs.true31.for.inc.3_crit_edge, %if.else26.for.inc.3_crit_edge
  %vref.1.3 = phi i32 [ 1, %land.lhs.true31.2.for.inc.3_crit_edge ], [ 4, %land.lhs.true31.1.for.inc.3_crit_edge ], [ 5, %land.lhs.true31.for.inc.3_crit_edge ], [ %and28, %if.else26.for.inc.3_crit_edge ], [ %8, %land.lhs.true31.3 ]
  %and44 = and i32 %val.addr.0, -8
  %or = or i32 %vref.1.3, %and44
  br label %cleanup

cleanup:                                          ; preds = %for.inc.3, %if.then24, %if.end18.cleanup_crit_edge, %snd_hda_query_pin_caps.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %val, %snd_hda_query_pin_caps.exit.cleanup_crit_edge ], [ %or, %for.inc.3 ], [ %and25, %if.then24 ], [ %val.addr.0, %if.end18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef %val, i1 noundef zeroext %cached) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @snd_hda_correct_pin_ctl(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef %val)
  %init_pins.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %list.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %0 = ptrtoint ptr %list.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list.i.i, align 4
  %2 = ptrtoint ptr %init_pins.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %init_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp1.not.i.i, label %entry.snd_hda_codec_set_pin_target.exit_crit_edge, label %for.body.lr.ph.i.i

entry.snd_hda_codec_set_pin_target.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_set_pin_target.exit

for.body.lr.ph.i.i:                               ; preds = %entry
  %elem_size.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.03.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %pin.02.i.i = phi ptr [ %1, %for.body.lr.ph.i.i ], [ %add.ptr.i.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %4 = ptrtoint ptr %pin.02.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pin.02.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %pin)
  %cmp3.i.i = icmp eq i16 %5, %pin
  br i1 %cmp3.i.i, label %look_up_pincfg.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw i32 %i.03.i.i, 1
  %6 = ptrtoint ptr %elem_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %elem_size.i.i.i, align 4
  %mul.i.i.i = mul i32 %7, %inc.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %1, i32 %mul.i.i.i
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %3
  br i1 %exitcond.not.i.i, label %for.inc.i.i.snd_hda_codec_set_pin_target.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.inc.i.i.snd_hda_codec_set_pin_target.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_set_pin_target.exit

look_up_pincfg.exit.i:                            ; preds = %for.body.i.i
  %tobool.not.i = icmp eq ptr %pin.02.i.i, null
  br i1 %tobool.not.i, label %look_up_pincfg.exit.i.snd_hda_codec_set_pin_target.exit_crit_edge, label %if.end.i

look_up_pincfg.exit.i.snd_hda_codec_set_pin_target.exit_crit_edge: ; preds = %look_up_pincfg.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %snd_hda_codec_set_pin_target.exit

if.end.i:                                         ; preds = %look_up_pincfg.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %conv.i = trunc i32 %call to i8
  %target.i = getelementptr inbounds %struct.hda_pincfg, ptr %pin.02.i.i, i32 0, i32 2
  %8 = ptrtoint ptr %target.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv.i, ptr %target.i, align 1
  br label %snd_hda_codec_set_pin_target.exit

snd_hda_codec_set_pin_target.exit:                ; preds = %if.end.i, %look_up_pincfg.exit.i.snd_hda_codec_set_pin_target.exit_crit_edge, %for.inc.i.i.snd_hda_codec_set_pin_target.exit_crit_edge, %entry.snd_hda_codec_set_pin_target.exit_crit_edge
  br i1 %cached, label %if.then, label %if.else

if.then:                                          ; preds = %snd_hda_codec_set_pin_target.exit
  call void @__sanitizer_cov_trace_pc() #23
  %conv.i.i = zext i16 %pin to i32
  %shl1.i.i = shl i32 %conv.i.i, 20
  %or2.i.i = or i32 %shl1.i.i, 984832
  %call.i.i = tail call i32 @snd_hdac_regmap_write_raw(ptr noundef %codec, i32 noundef %or2.i.i, i32 noundef %call) #21
  br label %return

if.else:                                          ; preds = %snd_hda_codec_set_pin_target.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %pin, i32 noundef 0, i32 noundef 1799, i32 noundef %call) #21
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %call.i.i, %if.then ], [ %call.i, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_hda_add_imux_item(ptr noundef %codec, ptr noundef %imux, ptr noundef %label, i32 noundef %index, ptr noundef writeonly %type_idx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %imux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %imux, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 35, i32 %1)
  %cmp = icmp ugt i32 %1, 35
  br i1 %cmp, label %do.end, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp251.not = icmp eq i32 %1, 0
  br i1 %cmp251.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %call = tail call i32 @strlen(ptr noundef %label) #29
  br label %for.body

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.50) #25
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %label_idx.053 = phi i32 [ 0, %for.body.lr.ph ], [ %spec.select, %for.body.for.body_crit_edge ]
  %i.052 = phi i32 [ 0, %for.body.lr.ph ], [ %inc7, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hda_input_mux, ptr %imux, i32 0, i32 1, i32 %i.052
  %call4 = tail call i32 @strncmp(ptr noundef %label, ptr noundef %arrayidx, i32 noundef %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  %inc = zext i1 %tobool.not to i32
  %spec.select = add i32 %label_idx.053, %inc
  %inc7 = add nuw i32 %i.052, 1
  %exitcond.not = icmp eq i32 %inc7, %1
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %label_idx.0.lcssa = phi i32 [ 0, %for.cond.preheader.for.end_crit_edge ], [ %spec.select, %for.body.for.end_crit_edge ]
  %tobool8.not = icmp eq ptr %type_idx, null
  br i1 %tobool8.not, label %for.end.if.end10_crit_edge, label %if.then9

for.end.if.end10_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.then9:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %type_idx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %label_idx.0.lcssa, ptr %type_idx, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %for.end.if.end10_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %label_idx.0.lcssa)
  %cmp11 = icmp sgt i32 %label_idx.0.lcssa, 0
  %3 = ptrtoint ptr %imux to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %imux, align 4
  %arrayidx15 = getelementptr %struct.hda_input_mux, ptr %imux, i32 0, i32 1, i32 %4
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  %call18 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %arrayidx15, i32 noundef 32, ptr noundef nonnull @.str.52, ptr noundef %label, i32 noundef %label_idx.0.lcssa)
  br label %if.end25

if.else:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  %call24 = tail call i32 @strscpy(ptr noundef %arrayidx15, ptr noundef %label, i32 noundef 32) #21
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then12
  %5 = ptrtoint ptr %imux to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %imux, align 4
  %index29 = getelementptr %struct.hda_input_mux, ptr %imux, i32 0, i32 1, i32 %6, i32 1
  %7 = ptrtoint ptr %index29 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %index, ptr %index29, align 4
  %8 = load i32, ptr %imux, align 4
  %inc31 = add i32 %8, 1
  store i32 %inc31, ptr %imux, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %if.end25 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_hda_bus_reset_codecs(ptr noundef readonly %bus) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %codec_list = getelementptr inbounds %struct.hdac_bus, ptr %bus, i32 0, i32 11
  %0 = ptrtoint ptr %codec_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn25 = load ptr, ptr %codec_list, align 4
  %cmp.not27 = icmp eq ptr %.pn25, %codec_list
  br i1 %cmp.not27, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn28 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn25, %entry.for.body_crit_edge ]
  %codec.029 = getelementptr i8, ptr %.pn28, i32 -940
  %call = tail call ptr @current_work() #21
  %jackpoll_work = getelementptr i8, ptr %.pn28, i32 952
  %cmp4.not = icmp eq ptr %call, %jackpoll_work
  br i1 %cmp4.not, label %for.body.if.end_crit_edge, label %if.then

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %call6 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %jackpoll_work) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.if.end_crit_edge
  %runtime_status.i.i = getelementptr i8, ptr %.pn28, i32 -252
  %1 = ptrtoint ptr %runtime_status.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %runtime_status.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %cmp.i.i = icmp eq i32 %2, 2
  br i1 %cmp.i.i, label %snd_hdac_is_power_on.exit, label %if.end.if.then9_crit_edge

if.end.if.then9_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then9

snd_hdac_is_power_on.exit:                        ; preds = %if.end
  %disable_depth.i.i = getelementptr i8, ptr %.pn28, i32 -264
  %3 = ptrtoint ptr %disable_depth.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load.i.i = load i16, ptr %disable_depth.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8191, i16 %bf.load.i.i)
  %tobool.not.i.i = icmp ugt i16 %bf.load.i.i, 8191
  br i1 %tobool.not.i.i, label %snd_hdac_is_power_on.exit.if.then9_crit_edge, label %snd_hdac_is_power_on.exit.for.inc_crit_edge

snd_hdac_is_power_on.exit.for.inc_crit_edge:      ; preds = %snd_hdac_is_power_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

snd_hdac_is_power_on.exit.if.then9_crit_edge:     ; preds = %snd_hdac_is_power_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then9

if.then9:                                         ; preds = %snd_hdac_is_power_on.exit.if.then9_crit_edge, %if.end.if.then9_crit_edge
  %call10 = tail call fastcc i32 @hda_call_codec_suspend(ptr noundef %codec.029)
  tail call fastcc void @hda_call_codec_resume(ptr noundef %codec.029)
  br label %for.inc

for.inc:                                          ; preds = %if.then9, %snd_hdac_is_power_on.exit.for.inc_crit_edge
  %4 = ptrtoint ptr %.pn28 to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load ptr, ptr %.pn28, align 4
  %cmp.not = icmp eq ptr %.pn, %codec_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @current_work() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hda_call_codec_suspend(ptr noundef %codec) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %in_pm.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 20
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_pm.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %in_pm.i, i32 1, i32 3, i32 1) #21
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %in_pm.i, ptr %in_pm.i, i32 1, ptr elementtype(i32) %in_pm.i) #21, !srcloc !346
  %suspend = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 6
  %1 = ptrtoint ptr %suspend to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %suspend, align 8
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 %2(ptr noundef %codec) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cvt_setups.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25
  %3 = ptrtoint ptr %cvt_setups.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cvt_setups.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp8.not.i = icmp eq i32 %4, 0
  br i1 %cmp8.not.i, label %if.end.hda_cleanup_all_streams.exit_crit_edge, label %for.body.lr.ph.i

if.end.hda_cleanup_all_streams.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_cleanup_all_streams.exit

for.body.lr.ph.i:                                 ; preds = %if.end
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 4
  %5 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %list.i, align 4
  %stream_pm.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 9
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 25, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.010.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %p.09.i = phi ptr [ %6, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %stream_tag.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.09.i, i32 0, i32 1
  %7 = ptrtoint ptr %stream_tag.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %stream_tag.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end.i.i:                                       ; preds = %for.body.i
  %9 = ptrtoint ptr %p.09.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %p.09.i, align 2
  %call.i.i.i12 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %10, i32 noundef 0, i32 noundef 1798, i32 noundef 0) #21
  %format_id.i.i = getelementptr inbounds %struct.hda_cvt_setup, ptr %p.09.i, i32 0, i32 3
  %11 = ptrtoint ptr %format_id.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %format_id.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool4.not.i.i = icmp eq i16 %12, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.then5.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i.i

if.then5.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i26.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %10, i32 noundef 0, i32 noundef 512, i32 noundef 0) #21
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.then5.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %13 = ptrtoint ptr %p.09.i to i32
  call void @__asan_storeN_noabort(i32 %13, i32 8)
  store i64 0, ptr %p.09.i, align 2
  store i16 %10, ptr %p.09.i, align 2
  %14 = ptrtoint ptr %stream_pm.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %stream_pm.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %15, null
  br i1 %tobool9.not.i.i, label %if.end7.i.i.for.inc.i_crit_edge, label %if.then10.i.i

if.end7.i.i.for.inc.i_crit_edge:                  ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then10.i.i:                                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %15(ptr noundef %codec, i16 noundef zeroext %10, i1 noundef zeroext false) #21
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then10.i.i, %if.end7.i.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.010.i, 1
  %16 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %list.i, align 4
  %18 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %19, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 %mul.i.i
  %20 = ptrtoint ptr %cvt_setups.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cvt_setups.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %21
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.hda_cleanup_all_streams.exit_crit_edge

for.inc.i.hda_cleanup_all_streams.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_cleanup_all_streams.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

hda_cleanup_all_streams.exit:                     ; preds = %for.inc.i.hda_cleanup_all_streams.exit_crit_edge, %if.end.hda_cleanup_all_streams.exit_crit_edge
  %call3 = tail call fastcc i32 @hda_set_power_state(ptr noundef %codec, i32 noundef 3)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %22 = load volatile i32, ptr @jiffies, align 128
  %power_jiffies.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 34
  %23 = ptrtoint ptr %power_jiffies.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %power_jiffies.i, align 8
  %sub.i = sub i32 %22, %24
  %power_on_acct.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 32
  %25 = ptrtoint ptr %power_on_acct.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %power_on_acct.i, align 8
  %add.i = add i32 %sub.i, %26
  store i32 %add.i, ptr %power_on_acct.i, align 8
  store i32 %22, ptr %power_jiffies.i, align 8
  %call.i.i.i14 = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_pm.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %in_pm.i, i32 1, i32 3, i32 1) #21
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %in_pm.i, ptr %in_pm.i, i32 1, ptr elementtype(i32) %in_pm.i) #21, !srcloc !349
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hda_call_codec_resume(ptr noundef %codec) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %in_pm.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 20
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_pm.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %in_pm.i, i32 1, i32 3, i32 1) #21
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %in_pm.i, ptr %in_pm.i, i32 1, ptr elementtype(i32) %in_pm.i) #21, !srcloc !346
  %regmap = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 23
  %1 = ptrtoint ptr %regmap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %regmap, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @regcache_mark_dirty(ptr noundef nonnull %2) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %3 = load volatile i32, ptr @jiffies, align 128
  %power_jiffies = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 34
  %4 = ptrtoint ptr %power_jiffies to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %power_jiffies, align 8
  %call = tail call fastcc i32 @hda_set_power_state(ptr noundef %codec, i32 noundef 0)
  %pins_shutup.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %5 = ptrtoint ptr %pins_shutup.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %bf.load.i = load i32, ptr %pins_shutup.i, align 4
  %6 = and i32 %bf.load.i, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.end.restore_shutup_pins.exit_crit_edge, label %if.end.i

if.end.restore_shutup_pins.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %restore_shutup_pins.exit

if.end.i:                                         ; preds = %if.end
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %7 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bus.i, align 8
  %shutdown.i = getelementptr inbounds %struct.hda_bus, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %shutdown.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load1.i = load i8, ptr %shutdown.i, align 4
  %10 = and i8 %bf.load1.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool4.not.i = icmp eq i8 %10, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %if.end.i.restore_shutup_pins.exit_crit_edge

if.end.i.restore_shutup_pins.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %restore_shutup_pins.exit

if.end6.i:                                        ; preds = %if.end.i
  %init_pins.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %11 = ptrtoint ptr %init_pins.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %init_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp22.not.i = icmp eq i32 %12, 0
  br i1 %cmp22.not.i, label %if.end6.i.for.end.i_crit_edge, label %for.body.lr.ph.i

if.end6.i.for.end.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end6.i
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %13 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %list.i, align 4
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.024.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %pin.023.i = phi ptr [ %14, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.body.i.for.body.i_crit_edge ]
  %15 = ptrtoint ptr %pin.023.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %pin.023.i, align 4
  %ctrl.i = getelementptr inbounds %struct.hda_pincfg, ptr %pin.023.i, i32 0, i32 1
  %17 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %ctrl.i, align 2
  %conv.i = zext i8 %18 to i32
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %16, i32 noundef 0, i32 noundef 1799, i32 noundef %conv.i) #21
  %inc.i = add nuw i32 %i.024.i, 1
  %19 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %list.i, align 4
  %21 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %22, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %20, i32 %mul.i.i
  %23 = ptrtoint ptr %init_pins.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %init_pins.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %24
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.for.end.i_crit_edge

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.end6.i.for.end.i_crit_edge
  %25 = ptrtoint ptr %pins_shutup.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %bf.load11.i = load i32, ptr %pins_shutup.i, align 4
  %bf.clear12.i = and i32 %bf.load11.i, -8388609
  store i32 %bf.clear12.i, ptr %pins_shutup.i, align 4
  br label %restore_shutup_pins.exit

restore_shutup_pins.exit:                         ; preds = %for.end.i, %if.end.i.restore_shutup_pins.exit_crit_edge, %if.end.restore_shutup_pins.exit_crit_edge
  %list.i45 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 27, i32 4
  %26 = ptrtoint ptr %list.i45 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %list.i45, align 4
  %tobool.not.i46 = icmp eq ptr %27, null
  br i1 %tobool.not.i46, label %restore_shutup_pins.exit.hda_exec_init_verbs.exit_crit_edge, label %if.then.i

restore_shutup_pins.exit.hda_exec_init_verbs.exit_crit_edge: ; preds = %restore_shutup_pins.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_exec_init_verbs.exit

if.then.i:                                        ; preds = %restore_shutup_pins.exit
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %27, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool.not6.i.i = icmp eq i16 %29, 0
  br i1 %tobool.not6.i.i, label %if.then.i.hda_exec_init_verbs.exit_crit_edge, label %if.then.i.for.body.i.i_crit_edge

if.then.i.for.body.i.i_crit_edge:                 ; preds = %if.then.i
  br label %for.body.i.i

if.then.i.hda_exec_init_verbs.exit_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_exec_init_verbs.exit

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.then.i.for.body.i.i_crit_edge
  %30 = phi i16 [ %36, %for.body.i.i.for.body.i.i_crit_edge ], [ %29, %if.then.i.for.body.i.i_crit_edge ]
  %seq.addr.07.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %27, %if.then.i.for.body.i.i_crit_edge ]
  %verb.i.i = getelementptr inbounds %struct.hda_verb, ptr %seq.addr.07.i.i, i32 0, i32 1
  %31 = ptrtoint ptr %verb.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %verb.i.i, align 4
  %param.i.i = getelementptr inbounds %struct.hda_verb, ptr %seq.addr.07.i.i, i32 0, i32 2
  %33 = ptrtoint ptr %param.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %param.i.i, align 4
  %call.i.i.i47 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %30, i32 noundef 0, i32 noundef %32, i32 noundef %34) #21
  %incdec.ptr.i.i = getelementptr %struct.hda_verb, ptr %seq.addr.07.i.i, i32 1
  %35 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %incdec.ptr.i.i, align 4
  %tobool.not.i.i = icmp eq i16 %36, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.hda_exec_init_verbs.exit_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.body.i.i.hda_exec_init_verbs.exit_crit_edge:  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hda_exec_init_verbs.exit

hda_exec_init_verbs.exit:                         ; preds = %for.body.i.i.hda_exec_init_verbs.exit_crit_edge, %if.then.i.hda_exec_init_verbs.exit_crit_edge, %restore_shutup_pins.exit.hda_exec_init_verbs.exit_crit_edge
  tail call void @snd_hda_jack_set_dirty_all(ptr noundef %codec) #21
  %resume = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 7
  %37 = ptrtoint ptr %resume to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %resume, align 4
  %tobool4.not = icmp eq ptr %38, null
  br i1 %tobool4.not, label %if.else, label %if.then5

if.then5:                                         ; preds = %hda_exec_init_verbs.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call8 = tail call i32 %38(ptr noundef %codec) #21
  br label %if.end17

if.else:                                          ; preds = %hda_exec_init_verbs.exit
  %init = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 2
  %39 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %init, align 8
  %tobool10.not = icmp eq ptr %40, null
  br i1 %tobool10.not, label %if.else.if.end15_crit_edge, label %if.then11

if.else.if.end15_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

if.then11:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %call14 = tail call i32 %40(ptr noundef %codec) #21
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.else.if.end15_crit_edge
  tail call void @snd_hdac_regmap_sync(ptr noundef %codec) #21
  br label %if.end17

if.end17:                                         ; preds = %if.end15, %if.then5
  %jackpoll_interval = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 38
  %41 = ptrtoint ptr %jackpoll_interval to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %jackpoll_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool18.not = icmp eq i32 %42, 0
  br i1 %tobool18.not, label %if.else20, label %if.then19

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  %jackpoll_work = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 39
  tail call void @hda_jackpoll_work(ptr noundef %jackpoll_work)
  br label %if.end21

if.else20:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @snd_hda_jack_report_sync(ptr noundef %codec) #21
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  %power = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12
  %43 = ptrtoint ptr %power to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %power, align 8
  %call.i.i.i50 = tail call zeroext i1 @__kasan_check_write(ptr noundef %in_pm.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %in_pm.i, i32 1, i32 3, i32 1) #21
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %in_pm.i, ptr %in_pm.i, i32 1, ptr elementtype(i32) %in_pm.i) #21, !srcloc !349
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_print_pcm_bits(i32 noundef %pcm, ptr noundef %buf, i32 noundef %buflen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %pcm, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.for.inc_crit_edge, label %if.then

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef %buflen, ptr noundef nonnull @.str.53, i32 noundef 8) #21
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry.for.inc_crit_edge
  %j.1 = phi i32 [ %call, %if.then ], [ 0, %entry.for.inc_crit_edge ]
  %and.1 = and i32 %pcm, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.1 = getelementptr i8, ptr %buf, i32 %j.1
  %sub.1 = sub i32 %buflen, %j.1
  %call.1 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr.1, i32 noundef %sub.1, ptr noundef nonnull @.str.53, i32 noundef 16) #21
  %add.1 = add i32 %call.1, %j.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc.for.inc.1_crit_edge
  %j.1.1 = phi i32 [ %add.1, %if.then.1 ], [ %j.1, %for.inc.for.inc.1_crit_edge ]
  %and.2 = and i32 %pcm, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.2

if.then.2:                                        ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.2 = getelementptr i8, ptr %buf, i32 %j.1.1
  %sub.2 = sub i32 %buflen, %j.1.1
  %call.2 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr.2, i32 noundef %sub.2, ptr noundef nonnull @.str.53, i32 noundef 20) #21
  %add.2 = add i32 %call.2, %j.1.1
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1.for.inc.2_crit_edge
  %j.1.2 = phi i32 [ %add.2, %if.then.2 ], [ %j.1.1, %for.inc.1.for.inc.2_crit_edge ]
  %and.3 = and i32 %pcm, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3

if.then.3:                                        ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.3 = getelementptr i8, ptr %buf, i32 %j.1.2
  %sub.3 = sub i32 %buflen, %j.1.2
  %call.3 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr.3, i32 noundef %sub.3, ptr noundef nonnull @.str.53, i32 noundef 24) #21
  %add.3 = add i32 %call.3, %j.1.2
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2.for.inc.3_crit_edge
  %j.1.3 = phi i32 [ %add.3, %if.then.3 ], [ %j.1.2, %for.inc.2.for.inc.3_crit_edge ]
  %and.4 = and i32 %pcm, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.4

if.then.4:                                        ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.4 = getelementptr i8, ptr %buf, i32 %j.1.3
  %sub.4 = sub i32 %buflen, %j.1.3
  %call.4 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr.4, i32 noundef %sub.4, ptr noundef nonnull @.str.53, i32 noundef 32) #21
  %add.4 = add i32 %call.4, %j.1.3
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then.4, %for.inc.3.for.inc.4_crit_edge
  %j.1.4 = phi i32 [ %add.4, %if.then.4 ], [ %j.1.3, %for.inc.3.for.inc.4_crit_edge ]
  %arrayidx1 = getelementptr i8, ptr %buf, i32 %j.1.4
  %0 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %arrayidx1, align 1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @scnprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_codec_write(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_get_connections(ptr noundef, i16 noundef zeroext, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #14

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_codec_read(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #17

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_disable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_device_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_device_init(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_device_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_device_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_sysfs_clear(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_bus_exec_verb_unlocked(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_bus_reset(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_jack_set_dirty_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_jack_poll_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_snd_hdac_read_parm(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_ctl_find_id(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_snd_ctl_add_follower(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_regmap_read_raw(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @snd_hda_spdif_mask_info(ptr nocapture noundef readnone %kcontrol, ptr nocapture noundef writeonly %uinfo) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 1
  %0 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 5, ptr %type, align 8
  %count = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 3
  %1 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %count, align 8
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @snd_hda_spdif_cmask_get(ptr nocapture noundef readnone %kcontrol, ptr nocapture noundef writeonly %ucontrol) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %0 = ptrtoint ptr %value to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 15, ptr %value, align 8
  %arrayidx3 = getelementptr [24 x i8], ptr %value, i32 0, i32 1
  %1 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 -1, ptr %arrayidx3, align 1
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @snd_hda_spdif_pmask_get(ptr nocapture noundef readnone %kcontrol, ptr nocapture noundef writeonly %ucontrol) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %0 = ptrtoint ptr %value to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 15, ptr %value, align 8
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_spdif_default_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not = icmp ugt i32 %5, %3
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !343

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2183, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 4
  %6 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list.i, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 2
  %8 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %9, %3
  %add.ptr.i = getelementptr i8, ptr %7, i32 %mul.i
  %status = getelementptr inbounds %struct.hda_spdif_out, ptr %add.ptr.i, i32 0, i32 1
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status, align 4
  %conv = trunc i32 %11 to i8
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %12 = ptrtoint ptr %value to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv, ptr %value, align 8
  %13 = load i32, ptr %status, align 4
  %shr = lshr i32 %13, 8
  %conv26 = trunc i32 %shr to i8
  %arrayidx29 = getelementptr [24 x i8], ptr %value, i32 0, i32 1
  %14 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv26, ptr %arrayidx29, align 1
  %15 = load i32, ptr %status, align 4
  %shr31 = lshr i32 %15, 16
  %conv33 = trunc i32 %shr31 to i8
  %arrayidx36 = getelementptr [24 x i8], ptr %value, i32 0, i32 2
  %16 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv33, ptr %arrayidx36, align 2
  %17 = load i32, ptr %status, align 4
  %shr38 = lshr i32 %17, 24
  %conv40 = trunc i32 %shr38 to i8
  %arrayidx43 = getelementptr [24 x i8], ptr %value, i32 0, i32 3
  %18 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv40, ptr %arrayidx43, align 1
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %if.end21 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_spdif_default_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not = icmp ugt i32 %5, %3
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !343

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2292, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %entry
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 4
  %6 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list.i, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 2
  %8 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %9, %3
  %add.ptr.i = getelementptr i8, ptr %7, i32 %mul.i
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr.i, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %12 = ptrtoint ptr %value to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %value, align 8
  %conv = zext i8 %13 to i32
  %arrayidx26 = getelementptr [24 x i8], ptr %value, i32 0, i32 1
  %14 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx26, align 1
  %conv27 = zext i8 %15 to i32
  %shl = shl nuw nsw i32 %conv27, 8
  %or = or i32 %shl, %conv
  %arrayidx30 = getelementptr [24 x i8], ptr %value, i32 0, i32 2
  %16 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx30, align 2
  %conv31 = zext i8 %17 to i32
  %shl32 = shl nuw nsw i32 %conv31, 16
  %or33 = or i32 %or, %shl32
  %arrayidx36 = getelementptr [24 x i8], ptr %value, i32 0, i32 3
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  %conv37 = zext i8 %19 to i32
  %shl38 = shl nuw i32 %conv37, 24
  %or39 = or i32 %or33, %shl38
  %status40 = getelementptr inbounds %struct.hda_spdif_out, ptr %add.ptr.i, i32 0, i32 1
  %20 = ptrtoint ptr %status40 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or39, ptr %status40, align 4
  %and.i = and i32 %conv, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %trunc.i = trunc i8 %13 to i7
  %rev.i = tail call i7 @llvm.bitreverse.i7(i7 %trunc.i) #21
  %mask.i = and i7 %rev.i, -32
  %21 = zext i7 %mask.i to i16
  br i1 %tobool.not.i, label %if.else.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  %and12.i = and i32 %conv, 28
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %and12.i)
  %cmp.i = icmp eq i32 %and12.i, 12
  %22 = or i16 %21, 8
  %spec.select60.i = select i1 %cmp.i, i16 %22, i16 %21
  br label %convert_from_spdif_status.exit

if.else.i:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  %and19.i = and i32 %conv, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %and19.i)
  %cmp20.i = icmp eq i32 %and19.i, 8
  %23 = or i16 %21, 8
  %spec.select61.i = select i1 %cmp20.i, i16 %23, i16 %21
  %and27.i = and i32 %conv, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  %24 = or i16 %spec.select61.i, 16
  %val.3.i = select i1 %tobool28.not.i, i16 %24, i16 %spec.select61.i
  %25 = trunc i32 %or to i16
  %26 = lshr i16 %25, 8
  %27 = and i16 %26, 128
  %28 = and i16 %25, 32512
  %29 = or i16 %27, %28
  %conv44.i = or i16 %29, %val.3.i
  br label %convert_from_spdif_status.exit

convert_from_spdif_status.exit:                   ; preds = %if.else.i, %if.then11.i
  %val.5.i = phi i16 [ %conv44.i, %if.else.i ], [ %spec.select60.i, %if.then11.i ]
  %ctls = getelementptr inbounds %struct.hda_spdif_out, ptr %add.ptr.i, i32 0, i32 2
  %30 = ptrtoint ptr %ctls to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %ctls, align 4
  %and = and i16 %31, 1
  %or45 = or i16 %and, %val.5.i
  call void @__sanitizer_cov_trace_cmp2(i16 %31, i16 %or45)
  %cmp50 = icmp ne i16 %31, %or45
  %conv51 = zext i1 %cmp50 to i32
  %32 = ptrtoint ptr %ctls to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %or45, ptr %ctls, align 4
  %cmp50.not = xor i1 %cmp50, true
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %11)
  %cmp55.not = icmp eq i16 %11, -1
  %or.cond = select i1 %cmp50.not, i1 true, i1 %cmp55.not
  br i1 %or.cond, label %convert_from_spdif_status.exit.if.end62_crit_edge, label %if.then57

convert_from_spdif_status.exit.if.end62_crit_edge: ; preds = %convert_from_spdif_status.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

if.then57:                                        ; preds = %convert_from_spdif_status.exit
  %conv49 = zext i16 %or45 to i32
  %conv.i.i.i = zext i16 %11 to i32
  %shl1.i.i.i = shl i32 %conv.i.i.i, 20
  %or2.i.i.i = or i32 %shl1.i.i.i, 986368
  %call.i.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %1, i32 noundef %or2.i.i.i, i32 noundef 65535, i32 noundef %conv49) #21
  %follower_dig_outs.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 22
  %33 = ptrtoint ptr %follower_dig_outs.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %follower_dig_outs.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %34, null
  br i1 %tobool.not.i.i, label %if.then57.if.end62_crit_edge, label %for.cond.preheader.i.i

if.then57.if.end62_crit_edge:                     ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

for.cond.preheader.i.i:                           ; preds = %if.then57
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %34, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool1.not16.i.i = icmp eq i16 %36, 0
  br i1 %tobool1.not16.i.i, label %for.cond.preheader.i.i.if.end62_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.if.end62_crit_edge:        ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %37 = phi i16 [ %39, %for.body.i.i.for.body.i.i_crit_edge ], [ %36, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %d.017.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %34, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %conv.i12.i.i = zext i16 %37 to i32
  %shl1.i13.i.i = shl i32 %conv.i12.i.i, 20
  %or2.i14.i.i = or i32 %shl1.i13.i.i, 986368
  %call.i15.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %1, i32 noundef %or2.i14.i.i, i32 noundef 65535, i32 noundef %conv49) #21
  %incdec.ptr.i.i = getelementptr i16, ptr %d.017.i.i, i32 1
  %38 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %incdec.ptr.i.i, align 2
  %tobool1.not.i.i = icmp eq i16 %39, 0
  br i1 %tobool1.not.i.i, label %for.body.i.i.if.end62_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.body.i.i.if.end62_crit_edge:                  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

if.end62:                                         ; preds = %for.body.i.i.if.end62_crit_edge, %for.cond.preheader.i.i.if.end62_crit_edge, %if.then57.if.end62_crit_edge, %convert_from_spdif_status.exit.if.end62_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end62, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %conv51, %if.end62 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_boolean_mono_info(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_spdif_out_switch_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not = icmp ugt i32 %5, %3
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !343

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2320, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 4
  %6 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list.i, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 2
  %8 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %9, %3
  %add.ptr.i = getelementptr i8, ptr %7, i32 %mul.i
  %ctls = getelementptr inbounds %struct.hda_spdif_out, ptr %add.ptr.i, i32 0, i32 2
  %10 = ptrtoint ptr %ctls to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %ctls, align 4
  %12 = and i16 %11, 1
  %and = zext i16 %12 to i32
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %13 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and, ptr %value, align 8
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %if.end21 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_spdif_out_switch_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %spdif_out = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %spdif_out to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %spdif_out, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not = icmp ugt i32 %5, %3
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !343

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2350, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end21:                                         ; preds = %entry
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 4
  %6 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list.i, align 4
  %elem_size.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 20, i32 2
  %8 = ptrtoint ptr %elem_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %elem_size.i, align 4
  %mul.i = mul i32 %9, %3
  %add.ptr.i = getelementptr i8, ptr %7, i32 %mul.i
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr.i, align 4
  %ctls = getelementptr inbounds %struct.hda_spdif_out, ptr %add.ptr.i, i32 0, i32 2
  %12 = ptrtoint ptr %ctls to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %ctls, align 4
  %14 = and i16 %13, -2
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %15 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool25.not = icmp ne i32 %16, 0
  %masksel = zext i1 %tobool25.not to i16
  %spec.select = or i16 %14, %masksel
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %spec.select)
  %cmp33 = icmp ne i16 %13, %spec.select
  %conv34 = zext i1 %cmp33 to i32
  %17 = ptrtoint ptr %ctls to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %spec.select, ptr %ctls, align 4
  %cmp33.not = xor i1 %cmp33, true
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %11)
  %cmp38.not = icmp eq i16 %11, -1
  %or.cond = select i1 %cmp33.not, i1 true, i1 %cmp38.not
  br i1 %or.cond, label %if.end21.if.end43_crit_edge, label %if.then40

if.end21.if.end43_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

if.then40:                                        ; preds = %if.end21
  %18 = and i16 %spec.select, 255
  %and42 = zext i16 %18 to i32
  %conv.i.i.i.i = zext i16 %11 to i32
  %shl1.i.i.i.i = shl i32 %conv.i.i.i.i, 20
  %or2.i.i.i.i = or i32 %shl1.i.i.i.i, 986368
  %call.i.i.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %1, i32 noundef %or2.i.i.i.i, i32 noundef 255, i32 noundef %and42) #21
  %follower_dig_outs.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 22
  %19 = ptrtoint ptr %follower_dig_outs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %follower_dig_outs.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %20, null
  br i1 %tobool.not.i.i.i, label %if.then40.set_dig_out_convert.exit.i_crit_edge, label %for.cond.preheader.i.i.i

if.then40.set_dig_out_convert.exit.i_crit_edge:   ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_dig_out_convert.exit.i

for.cond.preheader.i.i.i:                         ; preds = %if.then40
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %20, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool1.not16.i.i.i = icmp eq i16 %22, 0
  br i1 %tobool1.not16.i.i.i, label %for.cond.preheader.i.i.i.set_dig_out_convert.exit.i_crit_edge, label %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge

for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  br label %for.body.i.i.i

for.cond.preheader.i.i.i.set_dig_out_convert.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_dig_out_convert.exit.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge
  %23 = phi i16 [ %25, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ %22, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %d.017.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ %20, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %conv.i12.i.i.i = zext i16 %23 to i32
  %shl1.i13.i.i.i = shl i32 %conv.i12.i.i.i, 20
  %or2.i14.i.i.i = or i32 %shl1.i13.i.i.i, 986368
  %call.i15.i.i.i = tail call i32 @snd_hdac_regmap_update_raw(ptr noundef %1, i32 noundef %or2.i14.i.i.i, i32 noundef 255, i32 noundef %and42) #21
  %incdec.ptr.i.i.i = getelementptr i16, ptr %d.017.i.i.i, i32 1
  %24 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %incdec.ptr.i.i.i, align 2
  %tobool1.not.i.i.i = icmp eq i16 %25, 0
  br i1 %tobool1.not.i.i.i, label %for.body.i.i.i.set_dig_out_convert.exit.i_crit_edge, label %for.body.i.i.i.for.body.i.i.i_crit_edge

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i.i

for.body.i.i.i.set_dig_out_convert.exit.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_dig_out_convert.exit.i

set_dig_out_convert.exit.i:                       ; preds = %for.body.i.i.i.set_dig_out_convert.exit.i_crit_edge, %for.cond.preheader.i.i.i.set_dig_out_convert.exit.i_crit_edge, %if.then40.set_dig_out_convert.exit.i_crit_edge
  %start_nid.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 18
  %26 = ptrtoint ptr %start_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %start_nid.i.i, align 4
  %conv1.i.i = zext i16 %27 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %27, i16 %11)
  %cmp.i.i = icmp ugt i16 %27, %11
  br i1 %cmp.i.i, label %set_dig_out_convert.exit.i.if.end43_crit_edge, label %lor.lhs.false.i.i

set_dig_out_convert.exit.i.if.end43_crit_edge:    ; preds = %set_dig_out_convert.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

lor.lhs.false.i.i:                                ; preds = %set_dig_out_convert.exit.i
  %num_nodes.i.i = getelementptr inbounds %struct.hdac_device, ptr %1, i32 0, i32 17
  %28 = ptrtoint ptr %num_nodes.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_nodes.i.i, align 8
  %add.i.i = add i32 %29, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %conv.i.i.i.i)
  %cmp8.not.i.i = icmp ugt i32 %add.i.i, %conv.i.i.i.i
  br i1 %cmp8.not.i.i, label %get_wcaps.exit.i, label %lor.lhs.false.i.i.if.end43_crit_edge

lor.lhs.false.i.i.if.end43_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

get_wcaps.exit.i:                                 ; preds = %lor.lhs.false.i.i
  %wcaps.i.i = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 14
  %30 = ptrtoint ptr %wcaps.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %wcaps.i.i, align 4
  %sub.i.i = sub nsw i32 %conv.i.i.i.i, %conv1.i.i
  %arrayidx.i.i = getelementptr i32, ptr %31, i32 %sub.i.i
  %32 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and1.i = and i32 %and42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %or.cond.i = or i1 %tobool2.not.i, %tobool.not.i
  br i1 %or.cond.i, label %get_wcaps.exit.i.if.end43_crit_edge, label %if.then.i

get_wcaps.exit.i.if.end43_crit_edge:              ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

if.then.i:                                        ; preds = %get_wcaps.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %call3.i = tail call i32 @snd_hda_codec_amp_stereo(ptr noundef %1, i16 noundef zeroext %11, i32 noundef 1, i32 noundef 0, i32 noundef 128, i32 noundef 0) #21
  br label %if.end43

if.end43:                                         ; preds = %if.then.i, %get_wcaps.exit.i.if.end43_crit_edge, %lor.lhs.false.i.i.if.end43_crit_edge, %set_dig_out_convert.exit.i.if.end43_crit_edge, %if.end21.if.end43_crit_edge
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %conv34, %if.end43 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @spdif_share_sw_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %share_spdif = getelementptr inbounds %struct.hda_multi_out, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %share_spdif to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %share_spdif, align 8
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %value, align 8
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @spdif_share_sw_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %2 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool = icmp ne i32 %3, 0
  %lnot.ext = zext i1 %tobool to i32
  %share_spdif = getelementptr inbounds %struct.hda_multi_out, ptr %1, i32 0, i32 10
  %4 = ptrtoint ptr %share_spdif to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %lnot.ext, ptr %share_spdif, align 8
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @snd_hda_spdif_in_switch_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %spdif_in_enable = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 21
  %2 = ptrtoint ptr %spdif_in_enable to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %spdif_in_enable, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %value, align 8
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_spdif_in_switch_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %4 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool = icmp ne i32 %5, 0
  %lnot.ext = zext i1 %tobool to i32
  %spdif_mutex = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %spdif_mutex, i32 noundef 0) #21
  %spdif_in_enable = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 21
  %6 = ptrtoint ptr %spdif_in_enable to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %spdif_in_enable, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %lnot.ext)
  %cmp = icmp ne i32 %7, %lnot.ext
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %spdif_in_enable to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %lnot.ext, ptr %spdif_in_enable, align 4
  %shl1.i = shl i32 %3, 20
  %or2.i = or i32 %shl1.i, 986368
  %call.i = tail call i32 @snd_hdac_regmap_write_raw(ptr noundef %1, i32 noundef %or2.i, i32 noundef %lnot.ext) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = zext i1 %cmp to i32
  tail call void @mutex_unlock(ptr noundef %spdif_mutex) #21
  ret i32 %conv2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_hda_spdif_in_status_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #21
  %4 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %val, align 4, !annotation !339
  %shl1.i = shl i32 %3, 20
  %or2.i = or i32 %shl1.i, 986368
  %call.i = call i32 @snd_hdac_regmap_read_raw(ptr noundef %1, i32 noundef %or2.i, ptr noundef nonnull %val) #21
  %5 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val, align 4
  %and.i = lshr i32 %6, 4
  %7 = and i32 %and.i, 2
  %and2.i = lshr i32 %6, 6
  %8 = and i32 %and2.i, 1
  %9 = or i32 %8, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool8.not.i = icmp eq i32 %8, 0
  br i1 %tobool8.not.i, label %if.else.i, label %if.then9.i

if.then9.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %and11.i = and i32 %6, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  %or14.i = or i32 %9, 12
  %spec.select52.i = select i1 %tobool12.not.i, i32 %9, i32 %or14.i
  br label %convert_to_spdif_status.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %and23.i = lshr i32 %6, 2
  %10 = and i32 %and23.i, 4
  %conv.i25 = shl i32 %6, 8
  %and29.i = and i32 %conv.i25, 32768
  %11 = and i32 %6, 32520
  %12 = or i32 %10, %11
  %13 = or i32 %12, %and29.i
  %14 = or i32 %13, %9
  %or36.i = xor i32 %14, 4
  br label %convert_to_spdif_status.exit

convert_to_spdif_status.exit:                     ; preds = %if.else.i, %if.then9.i
  %sbits.5.i = phi i32 [ %or36.i, %if.else.i ], [ %spec.select52.i, %if.then9.i ]
  %conv3 = trunc i32 %sbits.5.i to i8
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %15 = ptrtoint ptr %value to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv3, ptr %value, align 8
  %shr = lshr i32 %sbits.5.i, 8
  %conv4 = trunc i32 %shr to i8
  %arrayidx7 = getelementptr [24 x i8], ptr %value, i32 0, i32 1
  %16 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv4, ptr %arrayidx7, align 1
  %shr8 = lshr i32 %sbits.5.i, 16
  %conv9 = trunc i32 %shr8 to i8
  %arrayidx12 = getelementptr [24 x i8], ptr %value, i32 0, i32 2
  %17 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv9, ptr %arrayidx12, align 2
  %shr13 = lshr i32 %sbits.5.i, 24
  %conv14 = trunc i32 %shr13 to i8
  %arrayidx17 = getelementptr [24 x i8], ptr %value, i32 0, i32 3
  %18 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv14, ptr %arrayidx17, align 1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #21
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_regmap_write_raw(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_sync_power_state(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_runtime_force_resume(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_codec_link_down(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_codec_link_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_pcm_add_chmap_ctls(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @snd_hdac_check_power_state(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hda_pcm_default_open_close(ptr nocapture noundef readnone %hinfo, ptr nocapture noundef readnone %codec, ptr nocapture noundef readnone %substream) #20 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_pcm_default_prepare(ptr nocapture noundef readonly %hinfo, ptr noundef %codec, i32 noundef %stream_tag, i32 noundef %format, ptr nocapture noundef readnone %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %nid = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 3
  %0 = ptrtoint ptr %nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %nid, align 4
  tail call void @snd_hda_codec_setup_stream(ptr noundef %codec, i16 noundef zeroext %1, i32 noundef %stream_tag, i32 noundef 0, i32 noundef %format)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hda_pcm_default_cleanup(ptr nocapture noundef readonly %hinfo, ptr noundef %codec, ptr nocapture noundef readnone %substream) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %nid = getelementptr inbounds %struct.hda_pcm_stream, ptr %hinfo, i32 0, i32 3
  %0 = ptrtoint ptr %nid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %nid, align 4
  tail call void @__snd_hda_codec_cleanup_stream(ptr noundef %codec, i16 noundef zeroext %1, i32 noundef 0)
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_set_autosuspend_delay(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_allow(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_use_autosuspend(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @regcache_mark_dirty(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_regmap_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i7 @llvm.bitreverse.i7(i7) #14

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #21

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #22 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 92)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #22 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 92)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nocallback nofree nosync nounwind willreturn }
attributes #7 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #18 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { nounwind }
attributes #22 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #23 = { nomerge }
attributes #24 = { nounwind allocsize(0) }
attributes #25 = { cold nounwind }
attributes #26 = { nounwind allocsize(2) }
attributes #27 = { nounwind readnone }
attributes #28 = { nobuiltin nounwind }
attributes #29 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !9, !10, !11, !12, !13, !15, !17, !19, !20, !21, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !53, !54, !56, !57, !59, !60, !62, !63, !65, !66, !67, !68, !70, !72, !74, !76, !77, !78, !80, !82, !83, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !103, !104, !105, !106, !108, !110, !112, !114, !116, !118, !120, !122, !123, !124, !125, !127, !129, !131, !133, !134, !135, !137, !139, !141, !143, !145, !147, !149, !151, !152, !153, !154, !156, !158, !160, !162, !164, !166, !168, !169, !170, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !202, !203, !204, !206, !207, !208, !210, !212, !213, !214, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !258, !259, !260, !262, !264, !266, !268, !270, !272, !274, !275, !277, !278, !280, !282, !283, !284, !286, !287, !289, !291, !293, !295, !296, !297, !298, !300, !301, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !323, !324, !325, !327, !328}
!llvm.module.flags = !{!329, !330, !331, !332, !333, !334, !335, !336}
!llvm.ident = !{!337}

!0 = !{ptr @__ksymtab_snd_hda_sequence_write, !1, !"__ksymtab_snd_hda_sequence_write", i1 false, i1 false}
!1 = !{!"../sound/pci/hda/hda_codec.c", i32 84, i32 1}
!2 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../sound/pci/hda/hda_codec.c", i32 184, i32 7}
!4 = !{ptr @__ksymtab_snd_hda_get_conn_list, !5, !"__ksymtab_snd_hda_get_conn_list", i1 false, i1 false}
!5 = !{!"../sound/pci/hda/hda_codec.c", i32 193, i32 1}
!6 = !{ptr @.str.1, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../sound/pci/hda/hda_codec.c", i32 215, i32 4}
!8 = !{ptr @.str.2, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!10 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!11 = !{ptr @snd_hda_get_connections._entry, !7, !"_entry", i1 false, i1 false}
!12 = !{ptr @snd_hda_get_connections._entry_ptr, !7, !"_entry_ptr", i1 false, i1 false}
!13 = !{ptr @__ksymtab_snd_hda_get_connections, !14, !"__ksymtab_snd_hda_get_connections", i1 false, i1 false}
!14 = !{!"../sound/pci/hda/hda_codec.c", i32 224, i32 1}
!15 = !{ptr @__ksymtab_snd_hda_override_conn_list, !16, !"__ksymtab_snd_hda_override_conn_list", i1 false, i1 false}
!16 = !{!"../sound/pci/hda/hda_codec.c", i32 251, i32 1}
!17 = !{ptr @.str.5, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../sound/pci/hda/hda_codec.c", i32 277, i32 3}
!19 = !{ptr @.str.6, !18, !"<string literal>", i1 false, i1 false}
!20 = !{ptr @.str.7, !18, !"<string literal>", i1 false, i1 false}
!21 = !{ptr @snd_hda_get_conn_index.__UNIQUE_ID_ddebug240, !18, !"__UNIQUE_ID_ddebug240", i1 false, i1 false}
!22 = !{ptr @__ksymtab_snd_hda_get_conn_index, !23, !"__ksymtab_snd_hda_get_conn_index", i1 false, i1 false}
!23 = !{!"../sound/pci/hda/hda_codec.c", i32 290, i32 1}
!24 = !{ptr @__ksymtab_snd_hda_get_num_devices, !25, !"__ksymtab_snd_hda_get_num_devices", i1 false, i1 false}
!25 = !{!"../sound/pci/hda/hda_codec.c", i32 314, i32 1}
!26 = !{ptr @__ksymtab_snd_hda_get_dev_select, !27, !"__ksymtab_snd_hda_get_dev_select", i1 false, i1 false}
!27 = !{!"../sound/pci/hda/hda_codec.c", i32 373, i32 1}
!28 = !{ptr @__ksymtab_snd_hda_set_dev_select, !29, !"__ksymtab_snd_hda_set_dev_select", i1 false, i1 false}
!29 = !{!"../sound/pci/hda/hda_codec.c", i32 411, i32 1}
!30 = !{ptr @__ksymtab_snd_hda_codec_set_pincfg, !31, !"__ksymtab_snd_hda_codec_set_pincfg", i1 false, i1 false}
!31 = !{!"../sound/pci/hda/hda_codec.c", i32 517, i32 1}
!32 = !{ptr @__ksymtab_snd_hda_codec_get_pincfg, !33, !"__ksymtab_snd_hda_codec_get_pincfg", i1 false, i1 false}
!33 = !{!"../sound/pci/hda/hda_codec.c", i32 552, i32 1}
!34 = !{ptr @__ksymtab_snd_hda_codec_set_pin_target, !35, !"__ksymtab_snd_hda_codec_set_pin_target", i1 false, i1 false}
!35 = !{!"../sound/pci/hda/hda_codec.c", i32 575, i32 1}
!36 = !{ptr @__ksymtab_snd_hda_codec_get_pin_target, !37, !"__ksymtab_snd_hda_codec_get_pin_target", i1 false, i1 false}
!37 = !{!"../sound/pci/hda/hda_codec.c", i32 591, i32 1}
!38 = !{ptr @__ksymtab_snd_hda_shutup_pins, !39, !"__ksymtab_snd_hda_shutup_pins", i1 false, i1 false}
!39 = !{!"../sound/pci/hda/hda_codec.c", i32 617, i32 1}
!40 = !{ptr @__ksymtab_snd_hda_codec_pcm_put, !41, !"__ksymtab_snd_hda_codec_pcm_put", i1 false, i1 false}
!41 = !{!"../sound/pci/hda/hda_codec.c", i32 711, i32 1}
!42 = !{ptr @__ksymtab_snd_hda_codec_pcm_new, !43, !"__ksymtab_snd_hda_codec_pcm_new", i1 false, i1 false}
!43 = !{!"../sound/pci/hda/hda_codec.c", i32 736, i32 1}
!44 = !{ptr @__ksymtab_snd_hda_codec_cleanup_for_unbind, !45, !"__ksymtab_snd_hda_codec_cleanup_for_unbind", i1 false, i1 false}
!45 = !{!"../sound/pci/hda/hda_codec.c", i32 804, i32 1}
!46 = !{ptr @__ksymtab_snd_hda_codec_new, !47, !"__ksymtab_snd_hda_codec_new", i1 false, i1 false}
!47 = !{!"../sound/pci/hda/hda_codec.c", i32 931, i32 1}
!48 = !{ptr @snd_hda_codec_device_new.dev_ops, !49, !"dev_ops", i1 false, i1 false}
!49 = !{!"../sound/pci/hda/hda_codec.c", i32 939, i32 37}
!50 = !{ptr @.str.8, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../sound/pci/hda/hda_codec.c", i32 944, i32 2}
!52 = !{ptr @.str.9, !51, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @snd_hda_codec_device_new.__UNIQUE_ID_ddebug242, !51, !"__UNIQUE_ID_ddebug242", i1 false, i1 false}
!54 = !{ptr @snd_hda_codec_device_new.__key, !55, !"__key", i1 false, i1 false}
!55 = !{!"../sound/pci/hda/hda_codec.c", i32 957, i32 2}
!56 = !{ptr @.str.10, !55, !"<string literal>", i1 false, i1 false}
!57 = !{ptr @snd_hda_codec_device_new.__key.11, !58, !"__key", i1 false, i1 false}
!58 = !{!"../sound/pci/hda/hda_codec.c", i32 958, i32 2}
!59 = !{ptr @.str.12, !58, !"<string literal>", i1 false, i1 false}
!60 = !{ptr @snd_hda_codec_device_new.__key.13, !61, !"__key", i1 false, i1 false}
!61 = !{!"../sound/pci/hda/hda_codec.c", i32 970, i32 2}
!62 = !{ptr @.str.14, !61, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @snd_hda_codec_device_new.__key.15, !64, !"__key", i1 false, i1 false}
!64 = !{!"../sound/pci/hda/hda_codec.c", i32 972, i32 2}
!65 = !{ptr @.str.16, !64, !"<string literal>", i1 false, i1 false}
!66 = !{ptr @snd_hda_codec_device_new.__key.17, !64, !"__key", i1 false, i1 false}
!67 = !{ptr @.str.18, !64, !"<string literal>", i1 false, i1 false}
!68 = !{ptr @.str.19, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../sound/pci/hda/hda_codec.c", i32 1006, i32 21}
!70 = !{ptr @__ksymtab_snd_hda_codec_device_new, !71, !"__ksymtab_snd_hda_codec_device_new", i1 false, i1 false}
!71 = !{!"../sound/pci/hda/hda_codec.c", i32 1023, i32 1}
!72 = !{ptr @__ksymtab_snd_hda_codec_update_widgets, !73, !"__ksymtab_snd_hda_codec_update_widgets", i1 false, i1 false}
!73 = !{!"../sound/pci/hda/hda_codec.c", i32 1055, i32 1}
!74 = !{ptr @.str.20, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../sound/pci/hda/hda_codec.c", i32 1115, i32 2}
!76 = !{ptr @.str.21, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @snd_hda_codec_setup_stream.__UNIQUE_ID_ddebug243, !75, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!78 = !{ptr @__ksymtab_snd_hda_codec_setup_stream, !79, !"__ksymtab_snd_hda_codec_setup_stream", i1 false, i1 false}
!79 = !{!"../sound/pci/hda/hda_codec.c", i32 1143, i32 1}
!80 = !{ptr @.str.22, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../sound/pci/hda/hda_codec.c", i32 1165, i32 2}
!82 = !{ptr @.str.23, !81, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @__snd_hda_codec_cleanup_stream.__UNIQUE_ID_ddebug244, !81, !"__UNIQUE_ID_ddebug244", i1 false, i1 false}
!84 = !{ptr @__ksymtab___snd_hda_codec_cleanup_stream, !85, !"__ksymtab___snd_hda_codec_cleanup_stream", i1 false, i1 false}
!85 = !{!"../sound/pci/hda/hda_codec.c", i32 1178, i32 1}
!86 = !{ptr @__ksymtab_query_amp_caps, !87, !"__ksymtab_query_amp_caps", i1 false, i1 false}
!87 = !{!"../sound/pci/hda/hda_codec.c", i32 1248, i32 1}
!88 = !{ptr @__ksymtab_snd_hda_check_amp_caps, !89, !"__ksymtab_snd_hda_check_amp_caps", i1 false, i1 false}
!89 = !{!"../sound/pci/hda/hda_codec.c", i32 1269, i32 1}
!90 = !{ptr @__ksymtab_snd_hda_override_amp_caps, !91, !"__ksymtab_snd_hda_override_amp_caps", i1 false, i1 false}
!91 = !{!"../sound/pci/hda/hda_codec.c", i32 1294, i32 1}
!92 = !{ptr @__ksymtab_snd_hda_codec_amp_update, !93, !"__ksymtab_snd_hda_codec_amp_update", i1 false, i1 false}
!93 = !{!"../sound/pci/hda/hda_codec.c", i32 1327, i32 1}
!94 = !{ptr @__ksymtab_snd_hda_codec_amp_stereo, !95, !"__ksymtab_snd_hda_codec_amp_stereo", i1 false, i1 false}
!95 = !{!"../sound/pci/hda/hda_codec.c", i32 1353, i32 1}
!96 = !{ptr @__ksymtab_snd_hda_codec_amp_init, !97, !"__ksymtab_snd_hda_codec_amp_init", i1 false, i1 false}
!97 = !{!"../sound/pci/hda/hda_codec.c", i32 1378, i32 1}
!98 = !{ptr @__ksymtab_snd_hda_codec_amp_init_stereo, !99, !"__ksymtab_snd_hda_codec_amp_init_stereo", i1 false, i1 false}
!99 = !{!"../sound/pci/hda/hda_codec.c", i32 1403, i32 1}
!100 = !{ptr @.str.24, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../sound/pci/hda/hda_codec.c", i32 1438, i32 3}
!102 = !{ptr @.str.25, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @.str.26, !101, !"<string literal>", i1 false, i1 false}
!104 = !{ptr @snd_hda_mixer_amp_volume_info._entry, !101, !"_entry", i1 false, i1 false}
!105 = !{ptr @snd_hda_mixer_amp_volume_info._entry_ptr, !101, !"_entry_ptr", i1 false, i1 false}
!106 = !{ptr @__ksymtab_snd_hda_mixer_amp_volume_info, !107, !"__ksymtab_snd_hda_mixer_amp_volume_info", i1 false, i1 false}
!107 = !{!"../sound/pci/hda/hda_codec.c", i32 1445, i32 1}
!108 = !{ptr @__ksymtab_snd_hda_mixer_amp_volume_get, !109, !"__ksymtab_snd_hda_mixer_amp_volume_get", i1 false, i1 false}
!109 = !{!"../sound/pci/hda/hda_codec.c", i32 1504, i32 1}
!110 = !{ptr @__ksymtab_snd_hda_mixer_amp_volume_put, !111, !"__ksymtab_snd_hda_mixer_amp_volume_put", i1 false, i1 false}
!111 = !{!"../sound/pci/hda/hda_codec.c", i32 1534, i32 1}
!112 = !{ptr @__ksymtab_snd_hda_mixer_amp_tlv, !113, !"__ksymtab_snd_hda_mixer_amp_tlv", i1 false, i1 false}
!113 = !{!"../sound/pci/hda/hda_codec.c", i32 1582, i32 1}
!114 = !{ptr @__ksymtab_snd_hda_set_vmaster_tlv, !115, !"__ksymtab_snd_hda_set_vmaster_tlv", i1 false, i1 false}
!115 = !{!"../sound/pci/hda/hda_codec.c", i32 1610, i32 1}
!116 = !{ptr @__ksymtab_snd_hda_find_mixer_ctl, !117, !"__ksymtab_snd_hda_find_mixer_ctl", i1 false, i1 false}
!117 = !{!"../sound/pci/hda/hda_codec.c", i32 1639, i32 1}
!118 = !{ptr @__ksymtab_snd_hda_ctl_add, !119, !"__ksymtab_snd_hda_ctl_add", i1 false, i1 false}
!119 = !{!"../sound/pci/hda/hda_codec.c", i32 1699, i32 1}
!120 = !{ptr @.str.27, !121, !"<string literal>", i1 false, i1 false}
!121 = !{!"../sound/pci/hda/hda_codec.c", i32 1726, i32 2}
!122 = !{ptr @.str.28, !121, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @snd_hda_add_nid._entry, !121, !"_entry", i1 false, i1 false}
!124 = !{ptr @snd_hda_add_nid._entry_ptr, !121, !"_entry_ptr", i1 false, i1 false}
!125 = !{ptr @__ksymtab_snd_hda_add_nid, !126, !"__ksymtab_snd_hda_add_nid", i1 false, i1 false}
!126 = !{!"../sound/pci/hda/hda_codec.c", i32 1730, i32 1}
!127 = !{ptr @__ksymtab_snd_hda_lock_devices, !128, !"__ksymtab_snd_hda_lock_devices", i1 false, i1 false}
!128 = !{!"../sound/pci/hda/hda_codec.c", i32 1786, i32 1}
!129 = !{ptr @__ksymtab_snd_hda_unlock_devices, !130, !"__ksymtab_snd_hda_unlock_devices", i1 false, i1 false}
!130 = !{!"../sound/pci/hda/hda_codec.c", i32 1800, i32 1}
!131 = !{ptr @.str.29, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../sound/pci/hda/hda_codec.c", i32 1980, i32 3}
!133 = !{ptr @.str.30, !132, !"<string literal>", i1 false, i1 false}
!134 = !{ptr @__snd_hda_add_vmaster.__UNIQUE_ID_ddebug245, !132, !"__UNIQUE_ID_ddebug245", i1 false, i1 false}
!135 = !{ptr @__ksymtab___snd_hda_add_vmaster, !136, !"__ksymtab___snd_hda_add_vmaster", i1 false, i1 false}
!136 = !{!"../sound/pci/hda/hda_codec.c", i32 2011, i32 1}
!137 = !{ptr @__ksymtab_snd_hda_add_vmaster_hook, !138, !"__ksymtab_snd_hda_add_vmaster_hook", i1 false, i1 false}
!138 = !{!"../sound/pci/hda/hda_codec.c", i32 2037, i32 1}
!139 = !{ptr @__ksymtab_snd_hda_sync_vmaster_hook, !140, !"__ksymtab_snd_hda_sync_vmaster_hook", i1 false, i1 false}
!140 = !{!"../sound/pci/hda/hda_codec.c", i32 2057, i32 1}
!141 = !{ptr @__ksymtab_snd_hda_mixer_amp_switch_info, !142, !"__ksymtab_snd_hda_mixer_amp_switch_info", i1 false, i1 false}
!142 = !{!"../sound/pci/hda/hda_codec.c", i32 2079, i32 1}
!143 = !{ptr @__ksymtab_snd_hda_mixer_amp_switch_get, !144, !"__ksymtab_snd_hda_mixer_amp_switch_get", i1 false, i1 false}
!144 = !{!"../sound/pci/hda/hda_codec.c", i32 2107, i32 1}
!145 = !{ptr @__ksymtab_snd_hda_mixer_amp_switch_put, !146, !"__ksymtab_snd_hda_mixer_amp_switch_put", i1 false, i1 false}
!146 = !{!"../sound/pci/hda/hda_codec.c", i32 2141, i32 1}
!147 = !{ptr @.str.31, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../sound/pci/hda/hda_codec.c", i32 2440, i32 40}
!149 = !{ptr @.str.32, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../sound/pci/hda/hda_codec.c", i32 2442, i32 3}
!151 = !{ptr @.str.33, !150, !"<string literal>", i1 false, i1 false}
!152 = !{ptr @snd_hda_create_dig_out_ctls._entry, !150, !"_entry", i1 false, i1 false}
!153 = !{ptr @snd_hda_create_dig_out_ctls._entry_ptr, !150, !"_entry_ptr", i1 false, i1 false}
!154 = !{ptr @__ksymtab_snd_hda_create_dig_out_ctls, !155, !"__ksymtab_snd_hda_create_dig_out_ctls", i1 false, i1 false}
!155 = !{!"../sound/pci/hda/hda_codec.c", i32 2465, i32 1}
!156 = !{ptr @__ksymtab_snd_hda_spdif_out_of_nid, !157, !"__ksymtab_snd_hda_spdif_out_of_nid", i1 false, i1 false}
!157 = !{!"../sound/pci/hda/hda_codec.c", i32 2486, i32 1}
!158 = !{ptr @__ksymtab_snd_hda_spdif_ctls_unassign, !159, !"__ksymtab_snd_hda_spdif_ctls_unassign", i1 false, i1 false}
!159 = !{!"../sound/pci/hda/hda_codec.c", i32 2506, i32 1}
!160 = !{ptr @__ksymtab_snd_hda_spdif_ctls_assign, !161, !"__ksymtab_snd_hda_spdif_ctls_assign", i1 false, i1 false}
!161 = !{!"../sound/pci/hda/hda_codec.c", i32 2532, i32 1}
!162 = !{ptr @__ksymtab_snd_hda_create_spdif_share_sw, !163, !"__ksymtab_snd_hda_create_spdif_share_sw", i1 false, i1 false}
!163 = !{!"../sound/pci/hda/hda_codec.c", i32 2580, i32 1}
!164 = !{ptr @.str.34, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../sound/pci/hda/hda_codec.c", i32 2669, i32 40}
!166 = !{ptr @.str.35, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../sound/pci/hda/hda_codec.c", i32 2671, i32 3}
!168 = !{ptr @.str.36, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @snd_hda_create_spdif_in_ctls._entry, !167, !"_entry", i1 false, i1 false}
!170 = !{ptr @snd_hda_create_spdif_in_ctls._entry_ptr, !167, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @__ksymtab_snd_hda_create_spdif_in_ctls, !172, !"__ksymtab_snd_hda_create_spdif_in_ctls", i1 false, i1 false}
!172 = !{!"../sound/pci/hda/hda_codec.c", i32 2689, i32 1}
!173 = !{ptr @__ksymtab_snd_hda_codec_set_power_to_all, !174, !"__ksymtab_snd_hda_codec_set_power_to_all", i1 false, i1 false}
!174 = !{!"../sound/pci/hda/hda_codec.c", i32 2720, i32 1}
!175 = !{ptr @__ksymtab_snd_hda_codec_eapd_power_filter, !176, !"__ksymtab_snd_hda_codec_eapd_power_filter", i1 false, i1 false}
!176 = !{!"../sound/pci/hda/hda_codec.c", i32 2747, i32 1}
!177 = !{ptr @hda_codec_driver_pm, !178, !"hda_codec_driver_pm", i1 false, i1 false}
!178 = !{!"../sound/pci/hda/hda_codec.c", i32 2983, i32 25}
!179 = !{ptr @snd_pcm_2_1_chmaps, !180, !"snd_pcm_2_1_chmaps", i1 false, i1 false}
!180 = !{!"../sound/pci/hda/hda_codec.c", i32 3045, i32 33}
!181 = !{ptr @__ksymtab_snd_pcm_2_1_chmaps, !182, !"__ksymtab_snd_pcm_2_1_chmaps", i1 false, i1 false}
!182 = !{!"../sound/pci/hda/hda_codec.c", i32 3053, i32 1}
!183 = !{ptr @__ksymtab_snd_hda_codec_build_controls, !184, !"__ksymtab_snd_hda_codec_build_controls", i1 false, i1 false}
!184 = !{!"../sound/pci/hda/hda_codec.c", i32 3079, i32 1}
!185 = !{ptr @__ksymtab_snd_hda_codec_prepare, !186, !"__ksymtab_snd_hda_codec_prepare", i1 false, i1 false}
!186 = !{!"../sound/pci/hda/hda_codec.c", i32 3172, i32 1}
!187 = !{ptr @__ksymtab_snd_hda_codec_cleanup, !188, !"__ksymtab_snd_hda_codec_cleanup", i1 false, i1 false}
!188 = !{!"../sound/pci/hda/hda_codec.c", i32 3191, i32 1}
!189 = !{ptr @.str.37, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../sound/pci/hda/hda_codec.c", i32 3195, i32 2}
!191 = !{ptr @.str.38, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../sound/pci/hda/hda_codec.c", i32 3195, i32 11}
!193 = !{ptr @.str.39, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../sound/pci/hda/hda_codec.c", i32 3195, i32 20}
!195 = !{ptr @.str.40, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../sound/pci/hda/hda_codec.c", i32 3195, i32 28}
!197 = !{ptr @snd_hda_pcm_type_name, !198, !"snd_hda_pcm_type_name", i1 false, i1 false}
!198 = !{!"../sound/pci/hda/hda_codec.c", i32 3194, i32 13}
!199 = !{ptr @.str.41, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../sound/pci/hda/hda_codec.c", i32 3260, i32 3}
!201 = !{ptr @.str.42, !200, !"<string literal>", i1 false, i1 false}
!202 = !{ptr @snd_hda_codec_parse_pcms._entry, !200, !"_entry", i1 false, i1 false}
!203 = !{ptr @snd_hda_codec_parse_pcms._entry_ptr, !200, !"_entry_ptr", i1 false, i1 false}
!204 = !{ptr @.str.44, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../sound/pci/hda/hda_codec.c", i32 3275, i32 5}
!206 = !{ptr @snd_hda_codec_parse_pcms._entry.43, !205, !"_entry", i1 false, i1 false}
!207 = !{ptr @snd_hda_codec_parse_pcms._entry_ptr.45, !205, !"_entry_ptr", i1 false, i1 false}
!208 = !{ptr @__ksymtab_snd_hda_codec_parse_pcms, !209, !"__ksymtab_snd_hda_codec_parse_pcms", i1 false, i1 false}
!209 = !{!"../sound/pci/hda/hda_codec.c", i32 3285, i32 1}
!210 = !{ptr @.str.46, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../sound/pci/hda/hda_codec.c", i32 3313, i32 4}
!212 = !{ptr @.str.47, !211, !"<string literal>", i1 false, i1 false}
!213 = !{ptr @snd_hda_codec_build_pcms._entry, !211, !"_entry", i1 false, i1 false}
!214 = !{ptr @snd_hda_codec_build_pcms._entry_ptr, !211, !"_entry_ptr", i1 false, i1 false}
!215 = !{ptr @__ksymtab_snd_hda_add_new_ctls, !216, !"__ksymtab_snd_hda_add_new_ctls", i1 false, i1 false}
!216 = !{!"../sound/pci/hda/hda_codec.c", i32 3371, i32 1}
!217 = !{ptr @__ksymtab_snd_hda_set_power_save, !218, !"__ksymtab_snd_hda_set_power_save", i1 false, i1 false}
!218 = !{!"../sound/pci/hda/hda_codec.c", i32 3407, i32 1}
!219 = !{ptr @__ksymtab_snd_hda_check_amp_list_power, !220, !"__ksymtab_snd_hda_check_amp_list_power", i1 false, i1 false}
!220 = !{!"../sound/pci/hda/hda_codec.c", i32 3457, i32 1}
!221 = !{ptr @__ksymtab_snd_hda_input_mux_info, !222, !"__ksymtab_snd_hda_input_mux_info", i1 false, i1 false}
!222 = !{!"../sound/pci/hda/hda_codec.c", i32 3485, i32 1}
!223 = !{ptr @__ksymtab_snd_hda_input_mux_put, !224, !"__ksymtab_snd_hda_input_mux_put", i1 false, i1 false}
!224 = !{!"../sound/pci/hda/hda_codec.c", i32 3515, i32 1}
!225 = !{ptr @.str.48, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../sound/pci/hda/hda_codec.c", i32 3533, i32 3}
!227 = !{ptr @.str.49, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../sound/pci/hda/hda_codec.c", i32 3533, i32 15}
!229 = !{ptr @snd_hda_enum_helper_info.texts_default, !230, !"texts_default", i1 false, i1 false}
!230 = !{!"../sound/pci/hda/hda_codec.c", i32 3532, i32 28}
!231 = !{ptr @__ksymtab_snd_hda_enum_helper_info, !232, !"__ksymtab_snd_hda_enum_helper_info", i1 false, i1 false}
!232 = !{!"../sound/pci/hda/hda_codec.c", i32 3543, i32 1}
!233 = !{ptr @__ksymtab_snd_hda_multi_out_dig_open, !234, !"__ksymtab_snd_hda_multi_out_dig_open", i1 false, i1 false}
!234 = !{!"../sound/pci/hda/hda_codec.c", i32 3615, i32 1}
!235 = !{ptr @__ksymtab_snd_hda_multi_out_dig_prepare, !236, !"__ksymtab_snd_hda_multi_out_dig_prepare", i1 false, i1 false}
!236 = !{!"../sound/pci/hda/hda_codec.c", i32 3636, i32 1}
!237 = !{ptr @__ksymtab_snd_hda_multi_out_dig_cleanup, !238, !"__ksymtab_snd_hda_multi_out_dig_cleanup", i1 false, i1 false}
!238 = !{!"../sound/pci/hda/hda_codec.c", i32 3651, i32 1}
!239 = !{ptr @__ksymtab_snd_hda_multi_out_dig_close, !240, !"__ksymtab_snd_hda_multi_out_dig_close", i1 false, i1 false}
!240 = !{!"../sound/pci/hda/hda_codec.c", i32 3666, i32 1}
!241 = !{ptr @__ksymtab_snd_hda_multi_out_analog_open, !242, !"__ksymtab_snd_hda_multi_out_analog_open", i1 false, i1 false}
!242 = !{!"../sound/pci/hda/hda_codec.c", i32 3720, i32 1}
!243 = !{ptr @__ksymtab_snd_hda_multi_out_analog_prepare, !244, !"__ksymtab_snd_hda_multi_out_analog_prepare", i1 false, i1 false}
!244 = !{!"../sound/pci/hda/hda_codec.c", i32 3802, i32 1}
!245 = !{ptr @__ksymtab_snd_hda_multi_out_analog_cleanup, !246, !"__ksymtab_snd_hda_multi_out_analog_cleanup", i1 false, i1 false}
!246 = !{!"../sound/pci/hda/hda_codec.c", i32 3835, i32 1}
!247 = !{ptr @__ksymtab_snd_hda_get_default_vref, !248, !"__ksymtab_snd_hda_get_default_vref", i1 false, i1 false}
!248 = !{!"../sound/pci/hda/hda_codec.c", i32 3864, i32 1}
!249 = distinct !{null, !250, !"cap_lists", i1 false, i1 false}
!250 = !{!"../sound/pci/hda/hda_codec.c", i32 3875, i32 28}
!251 = !{ptr @__ksymtab_snd_hda_correct_pin_ctl, !252, !"__ksymtab_snd_hda_correct_pin_ctl", i1 false, i1 false}
!252 = !{!"../sound/pci/hda/hda_codec.c", i32 3920, i32 1}
!253 = !{ptr @__ksymtab__snd_hda_set_pin_ctl, !254, !"__ksymtab__snd_hda_set_pin_ctl", i1 false, i1 false}
!254 = !{!"../sound/pci/hda/hda_codec.c", i32 3947, i32 1}
!255 = !{ptr @.str.50, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../sound/pci/hda/hda_codec.c", i32 3967, i32 3}
!257 = !{ptr @.str.51, !256, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @snd_hda_add_imux_item._entry, !256, !"_entry", i1 false, i1 false}
!259 = !{ptr @snd_hda_add_imux_item._entry_ptr, !256, !"_entry_ptr", i1 false, i1 false}
!260 = !{ptr @.str.52, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../sound/pci/hda/hda_codec.c", i32 3979, i32 5}
!262 = !{ptr @__ksymtab_snd_hda_add_imux_item, !263, !"__ksymtab_snd_hda_add_imux_item", i1 false, i1 false}
!263 = !{!"../sound/pci/hda/hda_codec.c", i32 3987, i32 1}
!264 = distinct !{null, !265, !"bits", i1 false, i1 false}
!265 = !{!"../sound/pci/hda/hda_codec.c", i32 4020, i32 28}
!266 = !{ptr @.str.53, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../sound/pci/hda/hda_codec.c", i32 4025, i32 41}
!268 = !{ptr @__ksymtab_snd_print_pcm_bits, !269, !"__ksymtab_snd_print_pcm_bits", i1 false, i1 false}
!269 = !{!"../sound/pci/hda/hda_codec.c", i32 4029, i32 1}
!270 = !{ptr @__UNIQUE_ID_description246, !271, !"__UNIQUE_ID_description246", i1 false, i1 false}
!271 = !{!"../sound/pci/hda/hda_codec.c", i32 4031, i32 1}
!272 = !{ptr @__UNIQUE_ID_file247, !273, !"__UNIQUE_ID_file247", i1 false, i1 false}
!273 = !{!"../sound/pci/hda/hda_codec.c", i32 4032, i32 1}
!274 = !{ptr @__UNIQUE_ID_license248, !273, !"__UNIQUE_ID_license248", i1 false, i1 false}
!275 = !{ptr @.str.54, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../sound/pci/hda/hda_codec.c", i32 887, i32 2}
!277 = !{ptr @snd_hda_codec_device_init.__UNIQUE_ID_ddebug241, !276, !"__UNIQUE_ID_ddebug241", i1 false, i1 false}
!278 = !{ptr @.str.55, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../sound/pci/hda/hda_codec.c", i32 898, i32 16}
!280 = !{ptr @.str.56, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../sound/pci/hda/hda_codec.c", i32 59, i32 4}
!282 = !{ptr @.str.57, !281, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @codec_exec_verb.__UNIQUE_ID_ddebug239, !281, !"__UNIQUE_ID_ddebug239", i1 false, i1 false}
!284 = distinct !{null, !285, !"__already_done", i1 false, i1 false}
!285 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!286 = distinct !{null, !285, !"<string literal>", i1 false, i1 false}
!287 = distinct !{null, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!289 = !{ptr @.str.60, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!291 = !{ptr @.str.61, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../sound/pci/hda/hda_codec.c", i32 1846, i32 40}
!293 = !{ptr @.str.62, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../sound/pci/hda/hda_codec.c", i32 1899, i32 4}
!295 = !{ptr @.str.63, !294, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @init_follower_0dB._entry, !294, !"_entry", i1 false, i1 false}
!297 = !{ptr @init_follower_0dB._entry_ptr, !294, !"_entry_ptr", i1 false, i1 false}
!298 = !{ptr @.str.65, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../sound/pci/hda/hda_codec.c", i32 1917, i32 3}
!300 = !{ptr @init_follower_0dB._entry.64, !299, !"_entry", i1 false, i1 false}
!301 = !{ptr @init_follower_0dB._entry_ptr.66, !299, !"_entry_ptr", i1 false, i1 false}
!302 = !{ptr @.str.67, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../sound/pci/hda/hda_codec.c", i32 2370, i32 11}
!304 = !{ptr @.str.68, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../sound/pci/hda/hda_codec.c", i32 2377, i32 11}
!306 = !{ptr @.str.69, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../sound/pci/hda/hda_codec.c", i32 2383, i32 11}
!308 = !{ptr @dig_mixes, !309, !"dig_mixes", i1 false, i1 false}
!309 = !{!"../sound/pci/hda/hda_codec.c", i32 2366, i32 38}
!310 = !{ptr @.str.70, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../sound/pci/hda/hda_codec.c", i32 2555, i32 10}
!312 = !{ptr @spdif_share_sw, !313, !"spdif_share_sw", i1 false, i1 false}
!313 = !{!"../sound/pci/hda/hda_codec.c", i32 2553, i32 38}
!314 = !{ptr @.str.71, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../sound/pci/hda/hda_codec.c", i32 2645, i32 11}
!316 = !{ptr @dig_in_ctls, !317, !"dig_in_ctls", i1 false, i1 false}
!317 = !{!"../sound/pci/hda/hda_codec.c", i32 2634, i32 38}
!318 = !{ptr @get_empty_pcm_device.audio_idx, !319, !"audio_idx", i1 false, i1 false}
!319 = !{!"../sound/pci/hda/hda_codec.c", i32 3207, i32 19}
!320 = !{ptr @.str.72, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../sound/pci/hda/hda_codec.c", i32 3216, i32 3}
!322 = !{ptr @.str.73, !321, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @get_empty_pcm_device._entry, !321, !"_entry", i1 false, i1 false}
!324 = !{ptr @get_empty_pcm_device._entry_ptr, !321, !"_entry_ptr", i1 false, i1 false}
!325 = !{ptr @.str.75, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../sound/pci/hda/hda_codec.c", i32 3237, i32 2}
!327 = !{ptr @get_empty_pcm_device._entry.74, !326, !"_entry", i1 false, i1 false}
!328 = !{ptr @get_empty_pcm_device._entry_ptr.76, !326, !"_entry_ptr", i1 false, i1 false}
!329 = !{i32 1, !"wchar_size", i32 2}
!330 = !{i32 1, !"min_enum_size", i32 4}
!331 = !{i32 8, !"branch-target-enforcement", i32 0}
!332 = !{i32 8, !"sign-return-address", i32 0}
!333 = !{i32 8, !"sign-return-address-all", i32 0}
!334 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!335 = !{i32 7, !"uwtable", i32 1}
!336 = !{i32 7, !"frame-pointer", i32 2}
!337 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!338 = !{!"branch_weights", i32 1, i32 2000}
!339 = !{!"auto-init"}
!340 = !{i64 2148865594, i64 2148865599, i64 2148865612, i64 2148865656, i64 2148865690, i64 2148865711}
!341 = !{i64 2148399944}
!342 = !{i64 2148314408, i64 2148314440, i64 2148314469, i64 2148314503, i64 2148314534, i64 2148314557}
!343 = !{!"branch_weights", i32 2000, i32 1}
!344 = !{i64 2149666178}
!345 = !{i64 2148311943, i64 2148311975, i64 2148312004, i64 2148312038, i64 2148312069, i64 2148312092}
!346 = !{i64 2148310413, i64 2148310439, i64 2148310468, i64 2148310502, i64 2148310533, i64 2148310556}
!347 = !{i64 2153269716, i64 2153269741}
!348 = !{i8 0, i8 2}
!349 = !{i64 2148312878, i64 2148312904, i64 2148312933, i64 2148312967, i64 2148312998, i64 2148313021}
