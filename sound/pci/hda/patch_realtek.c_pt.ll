; ModuleID = '/llk/IR_all_yes/sound/pci/hda/patch_realtek.c_pt.bc'
source_filename = "../sound/pci/hda/patch_realtek.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.hda_codec_driver = type { %struct.hdac_driver, ptr }
%struct.hdac_driver = type { %struct.device_driver, i32, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.hda_device_id = type { i32, i32, i8, ptr, i32 }
%struct.hda_model_fixup = type { i32, ptr }
%struct.snd_pci_quirk = type { i16, i16, i16, i32, ptr }
%struct.hda_fixup = type { i32, i8, i32, %union.anon.74 }
%union.anon.74 = type { ptr }
%struct.atomic_t = type { i32 }
%struct.snd_hda_pin_quirk = type { i32, i16, ptr, ptr, i32 }
%struct.hda_codec_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.alc_codec_rename_table = type { i32, i16, i16, ptr }
%struct.alc_codec_rename_pci_table = type { i32, i16, i16, ptr }
%struct.coef_fw = type { i8, i8, i16, i16 }
%struct.hda_pintbl = type { i16, i32 }
%struct.hda_verb = type { i16, i32, i32 }
%struct.hda_pcm_stream = type { i32, i32, i32, i16, i32, i64, i32, ptr, %struct.hda_pcm_ops }
%struct.hda_pcm_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.hda_alc298_mbxinit = type { i8, i8 }
%struct.hda_jack_keymap = type { i32, i32 }
%struct.component_master_ops = type { ptr, ptr }
%struct.snd_kcontrol_new = type { i32, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, %union.anon.87, i32 }
%union.anon.87 = type { ptr }
%struct.snd_pcm_chmap_elem = type { i8, [15 x i8] }
%struct.hda_codec = type { %struct.hdac_device, ptr, ptr, i32, i32, ptr, ptr, %struct.hda_codec_ops, %struct.list_head, %struct.refcount_struct, %struct.wait_queue_head, ptr, ptr, i32, ptr, %struct.snd_array, %struct.snd_array, %struct.list_head, %struct.mutex, %struct.mutex, %struct.snd_array, i32, ptr, %struct.snd_array, %struct.snd_array, %struct.snd_array, %struct.mutex, %struct.snd_array, %struct.snd_array, %struct.snd_array, ptr, i24, i32, i32, i32, ptr, ptr, %struct.snd_array, i32, %struct.delayed_work, i32, i32, ptr, ptr, %struct.snd_array }
%struct.hdac_device = type { %struct.device, i32, ptr, i32, %struct.list_head, i16, i16, i32, i32, i32, i32, i32, i8, i32, ptr, ptr, ptr, i32, i16, i16, %struct.atomic_t, %struct.mutex, ptr, ptr, %struct.mutex, %struct.snd_array, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.snd_array = type { i32, i32, i32, i32, ptr }
%struct.hda_gen_spec = type <{ [32 x i8], ptr, ptr, [32 x i8], ptr, ptr, [32 x i8], ptr, ptr, i32, %struct.mutex, %struct.hda_multi_out, i16, [3 x i16], i32, i32, [18 x i16], i16, i16, i16, [2 x i8], [36 x ptr], [36 x i32], i16, [2 x i8], i32, i32, %struct.hda_input_mux, [3 x i32], i32, i32, i32, [3 x ptr], %struct.auto_pin_cfg, %struct.snd_array, [5 x i16], [36 x i16], [2 x i8], [36 x i32], i16, i16, i32, i32, [16 x i16], i32, [18 x i16], %struct.snd_array, [5 x i32], [5 x i32], [5 x i32], [3 x i32], [5 x i32], [36 x [18 x i32]], [36 x i32], i32, i32, i32, [3 x %struct.automic_entry], i48, [4 x i8], i64, i64, ptr, ptr, ptr, i8, i8, i16, i16, [2 x i8], [4 x i32], %struct.hda_vmaster_mute_hook, %struct.hda_loopback_check, %struct.snd_array, i32, [4 x %struct.hda_multi_io], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [2 x ptr] }>
%struct.hda_multi_out = type { i32, ptr, i16, [5 x i16], [5 x i16], i16, ptr, i32, i32, i32, i32, i32, i32, i64, i32, i32, i64 }
%struct.hda_input_mux = type { i32, [36 x %struct.hda_input_mux_item] }
%struct.hda_input_mux_item = type { [32 x i8], i32 }
%struct.auto_pin_cfg = type { i32, [5 x i16], i32, [5 x i16], i32, i32, [5 x i16], i32, [18 x %struct.auto_pin_cfg_item], i32, [2 x i16], i16, i16, [2 x i32], i32 }
%struct.auto_pin_cfg_item = type { i16, i32, i8 }
%struct.automic_entry = type { i16, i32, i32 }
%struct.hda_vmaster_mute_hook = type { ptr, ptr, ptr }
%struct.hda_loopback_check = type { ptr, i32 }
%struct.hda_multi_io = type { i16, i16, i32 }
%struct.alc_spec = type { %struct.hda_gen_spec, %struct.alc_customize_define, i32, i32, i32, i32, i8, i32, i32, i16, i16, i32, i32, %struct.alc_coef_led, %struct.alc_coef_led, %struct.mutex, i16, i16, i32, i32, ptr, ptr, ptr, i32, i32, i8, i16, i32, i32, i32, ptr, [1 x i8], ptr, [4 x %struct.hda_component], [4 x i8] }
%struct.alc_customize_define = type { i32, i8, i8, i8, i8, i8 }
%struct.alc_coef_led = type { i32, i32, i32, i32 }
%struct.hda_component = type { ptr, [50 x i8], ptr, ptr }
%struct.hda_bus = type { %struct.hdac_bus, ptr, ptr, ptr, %struct.mutex, [8 x i32], i8, i32, i32 }
%struct.hdac_bus = type { ptr, ptr, ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, [16 x ptr], [128 x i32], i32, i32, %struct.work_struct, i32, i32, %struct.hdac_rb, %struct.hdac_rb, [8 x i32], %struct.wait_queue_head, %struct.snd_dma_buffer, %struct.snd_dma_buffer, i32, %struct.list_head, i16, i32, i32, i32, %struct.spinlock, %struct.mutex, %struct.mutex, ptr, i32, i32, i32, i32, %struct.list_head, i8, i32 }
%struct.hdac_rb = type { ptr, i32, i16, i16, [8 x i32], [8 x i32] }
%struct.snd_dma_buffer = type { %struct.snd_dma_device, ptr, i32, i32, ptr }
%struct.snd_dma_device = type { i32, i32, i8, ptr }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.73, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.hlist_head = type { ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.73 = type { ptr }
%struct.snd_kcontrol = type { %struct.list_head, %struct.snd_ctl_elem_id, i32, ptr, ptr, ptr, %union.anon.84, i32, ptr, ptr, [0 x %struct.snd_kcontrol_volatile] }
%struct.snd_ctl_elem_id = type { i32, i32, i32, i32, [44 x i8], i32 }
%union.anon.84 = type { ptr }
%struct.snd_kcontrol_volatile = type { ptr, i32 }
%struct.snd_card = type { i32, [16 x i8], [16 x i8], [32 x i8], [80 x i8], [32 x i8], [80 x i8], [128 x i8], ptr, ptr, ptr, %struct.list_head, %struct.device, i32, %struct.rw_semaphore, %struct.rwlock_t, i32, i32, %struct.list_head, %struct.list_head, ptr, ptr, %struct.list_head, ptr, %struct.spinlock, i32, ptr, ptr, %struct.device, [4 x ptr], i8, i8, i8, i32, %struct.wait_queue_head, i32, %struct.mutex, ptr, i32, %struct.atomic_t, %struct.wait_queue_head, %struct.wait_queue_head, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.led_classdev = type { ptr, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, i32, i32, %struct.timer_list, i32, i32, ptr, %struct.work_struct, i32, %struct.rw_semaphore, ptr, %struct.list_head, ptr, i8, ptr, i32, ptr, %struct.mutex }
%struct.input_dev = type { ptr, ptr, ptr, %struct.input_id, [1 x i32], [1 x i32], [24 x i32], [1 x i32], [2 x i32], [1 x i32], [1 x i32], [1 x i32], [4 x i32], [1 x i32], i32, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, %struct.timer_list, [2 x i32], ptr, ptr, [24 x i32], [1 x i32], [1 x i32], [1 x i32], ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, ptr, i8, [3 x i64], i8 }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.hda_jack_callback = type { i16, i32, ptr, i32, i32, ptr, ptr }
%struct.hda_pcm = type { ptr, [2 x %struct.hda_pcm_stream], i32, i32, ptr, i8, ptr, %struct.list_head, i8 }
%struct.snd_ctl_elem_value = type { %struct.snd_ctl_elem_id, i8, %union.anon.79, [128 x i8] }
%union.anon.79 = type { %union.anon.81 }
%union.anon.81 = type { [64 x i64] }

@__UNIQUE_ID_file263 = internal constant [63 x i8] c"snd_hda_codec_realtek.file=sound/pci/hda/snd-hda-codec-realtek\00", section ".modinfo", align 1
@__UNIQUE_ID_license264 = internal constant [34 x i8] c"snd_hda_codec_realtek.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_description265 = internal constant [57 x i8] c"snd_hda_codec_realtek.description=Realtek HD-audio codec\00", section ".modinfo", align 1
@__initcall__kmod_snd_hda_codec_realtek__266_11457_realtek_driver_init6 = internal global ptr @realtek_driver_init, section ".initcall6.init", align 4
@realtek_driver = internal global { %struct.hda_codec_driver, [52 x i8] } { %struct.hda_codec_driver { %struct.hdac_driver zeroinitializer, ptr @snd_hda_id_realtek }, [52 x i8] zeroinitializer }, align 32
@__exitcall_realtek_driver_exit = internal global ptr @realtek_driver_exit, section ".exitcall.exit", align 4
@.str = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"snd_hda_codec_realtek\00", [42 x i8] zeroinitializer }, align 32
@snd_hda_id_realtek = internal constant { [79 x %struct.hda_device_id], [404 x i8] } { [79 x %struct.hda_device_id] [%struct.hda_device_id { i32 283902485, i32 0, i8 1, ptr @.str.1, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902497, i32 0, i8 1, ptr @.str.2, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902498, i32 0, i8 1, ptr @.str.3, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902501, i32 0, i8 1, ptr @.str.4, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902512, i32 0, i8 1, ptr @.str.5, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902513, i32 0, i8 1, ptr @.str.6, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902515, i32 0, i8 1, ptr @.str.7, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902516, i32 0, i8 1, ptr @.str.8, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902517, i32 0, i8 1, ptr @.str.7, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902518, i32 0, i8 1, ptr @.str.5, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902533, i32 0, i8 1, ptr @.str.9, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902549, i32 0, i8 1, ptr @.str.10, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902550, i32 0, i8 1, ptr @.str.11, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902551, i32 0, i8 1, ptr @.str.12, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902560, i32 0, i8 1, ptr @.str.13, i32 ptrtoint (ptr @patch_alc260 to i32) }, %struct.hda_device_id { i32 283902562, i32 0, i8 1, ptr @.str.14, i32 ptrtoint (ptr @patch_alc262 to i32) }, %struct.hda_device_id { i32 283902567, i32 0, i8 1, ptr @.str.15, i32 ptrtoint (ptr @patch_alc268 to i32) }, %struct.hda_device_id { i32 283902568, i32 0, i8 1, ptr @.str.16, i32 ptrtoint (ptr @patch_alc268 to i32) }, %struct.hda_device_id { i32 283902569, i32 0, i8 1, ptr @.str.17, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902576, i32 0, i8 1, ptr @.str.18, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902578, i32 0, i8 1, ptr @.str.19, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283902580, i32 0, i8 1, ptr @.str.20, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902581, i32 0, i8 1, ptr @.str.21, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902582, i32 0, i8 1, ptr @.str.22, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902592, i32 0, i8 1, ptr @.str.23, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902594, i32 0, i8 1, ptr @.str.24, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902595, i32 0, i8 1, ptr @.str.25, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902596, i32 0, i8 1, ptr @.str.26, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902597, i32 0, i8 1, ptr @.str.27, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902598, i32 0, i8 1, ptr @.str.28, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902599, i32 0, i8 1, ptr @.str.29, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902600, i32 0, i8 1, ptr @.str.30, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902601, i32 0, i8 1, ptr @.str.31, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902608, i32 0, i8 1, ptr @.str.32, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902610, i32 0, i8 1, ptr @.str.33, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902611, i32 0, i8 1, ptr @.str.34, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902612, i32 0, i8 1, ptr @.str.35, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902613, i32 0, i8 1, ptr @.str.36, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902616, i32 0, i8 1, ptr @.str.37, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902617, i32 0, i8 1, ptr @.str.38, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283902720, i32 0, i8 1, ptr @.str.39, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283903523, i32 0, i8 1, ptr @.str.40, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283904097, i32 1049408, i8 1, ptr @.str.41, i32 ptrtoint (ptr @patch_alc861 to i32) }, %struct.hda_device_id { i32 283903584, i32 0, i8 1, ptr @.str.42, i32 ptrtoint (ptr @patch_alc861vd to i32) }, %struct.hda_device_id { i32 283904097, i32 0, i8 1, ptr @.str.43, i32 ptrtoint (ptr @patch_alc861 to i32) }, %struct.hda_device_id { i32 283904098, i32 0, i8 1, ptr @.str.44, i32 ptrtoint (ptr @patch_alc861vd to i32) }, %struct.hda_device_id { i32 283903586, i32 1048578, i8 1, ptr @.str.45, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283903586, i32 1048833, i8 1, ptr @.str.46, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903586, i32 1049344, i8 1, ptr @.str.47, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903587, i32 0, i8 1, ptr @.str.48, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903589, i32 0, i8 1, ptr @.str.49, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903591, i32 0, i8 1, ptr @.str.50, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903592, i32 0, i8 1, ptr @.str.51, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903600, i32 0, i8 1, ptr @.str.52, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903601, i32 0, i8 1, ptr @.str.53, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283903616, i32 0, i8 1, ptr @.str.54, i32 ptrtoint (ptr @patch_alc680 to i32) }, %struct.hda_device_id { i32 283903744, i32 0, i8 1, ptr @.str.55, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283903745, i32 0, i8 1, ptr @.str.56, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283903747, i32 0, i8 1, ptr @.str.57, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283903761, i32 0, i8 1, ptr @.str.58, i32 ptrtoint (ptr @patch_alc269 to i32) }, %struct.hda_device_id { i32 283904103, i32 0, i8 1, ptr @.str.59, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283904128, i32 0, i8 1, ptr @.str.60, i32 ptrtoint (ptr @patch_alc880 to i32) }, %struct.hda_device_id { i32 283904130, i32 0, i8 1, ptr @.str.61, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904131, i32 0, i8 1, ptr @.str.62, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904133, i32 1048833, i8 1, ptr @.str.63, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904133, i32 1048835, i8 1, ptr @.str.63, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904133, i32 0, i8 1, ptr @.str.64, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904135, i32 0, i8 1, ptr @.str.65, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904136, i32 1048833, i8 1, ptr @.str.66, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904136, i32 0, i8 1, ptr @.str.67, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904137, i32 0, i8 1, ptr @.str.68, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904146, i32 0, i8 1, ptr @.str.69, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283904151, i32 0, i8 1, ptr @.str.70, i32 ptrtoint (ptr @patch_alc662 to i32) }, %struct.hda_device_id { i32 283904153, i32 0, i8 1, ptr @.str.71, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904256, i32 0, i8 1, ptr @.str.72, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283904768, i32 0, i8 1, ptr @.str.73, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283906408, i32 0, i8 1, ptr @.str.74, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id { i32 283906592, i32 0, i8 1, ptr @.str.74, i32 ptrtoint (ptr @patch_alc882 to i32) }, %struct.hda_device_id zeroinitializer], [404 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC215\00", [25 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC221\00", [25 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC222\00", [25 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC225\00", [25 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC236\00", [25 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC231\00", [25 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC233\00", [25 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC234\00", [25 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC245\00", [25 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC255\00", [25 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC256\00", [25 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC257\00", [25 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC260\00", [25 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC262\00", [25 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC267\00", [25 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC268\00", [25 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC269\00", [25 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC270\00", [25 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC272\00", [25 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC274\00", [25 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC275\00", [25 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC276\00", [25 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC280\00", [25 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC282\00", [25 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC283\00", [25 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC284\00", [25 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC285\00", [25 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC286\00", [25 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC287\00", [25 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC288\00", [25 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC289\00", [25 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC290\00", [25 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC292\00", [25 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC293\00", [25 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC294\00", [25 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC295\00", [25 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC298\00", [25 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC299\00", [25 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC300\00", [25 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC623\00", [25 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC660\00", [25 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ALC660-VD\00", [22 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC861\00", [25 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ALC861-VD\00", [22 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ALC662 rev2\00", [20 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ALC662 rev1\00", [20 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ALC662 rev3\00", [20 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC663\00", [25 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC665\00", [25 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC667\00", [25 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC668\00", [25 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC670\00", [25 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC671\00", [25 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC680\00", [25 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC700\00", [25 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC701\00", [25 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC703\00", [25 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC711\00", [25 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC891\00", [25 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC880\00", [25 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC882\00", [25 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC883\00", [25 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC889A\00", [24 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC885\00", [25 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC887\00", [25 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC1200\00", [24 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC888\00", [25 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC889\00", [25 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC892\00", [25 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC897\00", [25 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC898\00", [25 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC1150\00", [24 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ALCS1200A\00", [22 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC1220\00", [24 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC271X\00", [24 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3202\00", [24 x i8] zeroinitializer }, align 32
@alc269_fixup_models = internal constant { [122 x %struct.hda_model_fixup], [240 x i8] } { [122 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 19, ptr @.str.122 }, %struct.hda_model_fixup { i32 20, ptr @.str.123 }, %struct.hda_model_fixup { i32 11, ptr @.str.124 }, %struct.hda_model_fixup { i32 9, ptr @.str.125 }, %struct.hda_model_fixup { i32 30, ptr @.str.126 }, %struct.hda_model_fixup { i32 12, ptr @.str.127 }, %struct.hda_model_fixup { i32 40, ptr @.str.128 }, %struct.hda_model_fixup { i32 41, ptr @.str.129 }, %struct.hda_model_fixup { i32 31, ptr @.str.130 }, %struct.hda_model_fixup { i32 32, ptr @.str.131 }, %struct.hda_model_fixup { i32 27, ptr @.str.132 }, %struct.hda_model_fixup { i32 82, ptr @.str.133 }, %struct.hda_model_fixup { i32 36, ptr @.str.134 }, %struct.hda_model_fixup { i32 37, ptr @.str.135 }, %struct.hda_model_fixup { i32 38, ptr @.str.136 }, %struct.hda_model_fixup { i32 39, ptr @.str.137 }, %struct.hda_model_fixup { i32 55, ptr @.str.138 }, %struct.hda_model_fixup { i32 56, ptr @.str.139 }, %struct.hda_model_fixup { i32 72, ptr @.str.140 }, %struct.hda_model_fixup { i32 73, ptr @.str.141 }, %struct.hda_model_fixup { i32 107, ptr @.str.142 }, %struct.hda_model_fixup { i32 126, ptr @.str.143 }, %struct.hda_model_fixup { i32 127, ptr @.str.144 }, %struct.hda_model_fixup { i32 118, ptr @.str.145 }, %struct.hda_model_fixup { i32 123, ptr @.str.146 }, %struct.hda_model_fixup { i32 1, ptr @.str.147 }, %struct.hda_model_fixup { i32 3, ptr @.str.148 }, %struct.hda_model_fixup { i32 5, ptr @.str.149 }, %struct.hda_model_fixup { i32 6, ptr @.str.150 }, %struct.hda_model_fixup { i32 7, ptr @.str.151 }, %struct.hda_model_fixup { i32 10, ptr @.str.152 }, %struct.hda_model_fixup { i32 14, ptr @.str.153 }, %struct.hda_model_fixup { i32 15, ptr @.str.154 }, %struct.hda_model_fixup { i32 16, ptr @.str.155 }, %struct.hda_model_fixup { i32 18, ptr @.str.156 }, %struct.hda_model_fixup { i32 21, ptr @.str.157 }, %struct.hda_model_fixup { i32 22, ptr @.str.158 }, %struct.hda_model_fixup { i32 24, ptr @.str.159 }, %struct.hda_model_fixup { i32 25, ptr @.str.160 }, %struct.hda_model_fixup { i32 26, ptr @.str.161 }, %struct.hda_model_fixup { i32 28, ptr @.str.162 }, %struct.hda_model_fixup { i32 29, ptr @.str.163 }, %struct.hda_model_fixup { i32 33, ptr @.str.164 }, %struct.hda_model_fixup { i32 34, ptr @.str.165 }, %struct.hda_model_fixup { i32 42, ptr @.str.166 }, %struct.hda_model_fixup { i32 45, ptr @.str.167 }, %struct.hda_model_fixup { i32 47, ptr @.str.168 }, %struct.hda_model_fixup { i32 48, ptr @.str.169 }, %struct.hda_model_fixup { i32 49, ptr @.str.170 }, %struct.hda_model_fixup { i32 50, ptr @.str.171 }, %struct.hda_model_fixup { i32 51, ptr @.str.172 }, %struct.hda_model_fixup { i32 52, ptr @.str.173 }, %struct.hda_model_fixup { i32 54, ptr @.str.174 }, %struct.hda_model_fixup { i32 57, ptr @.str.175 }, %struct.hda_model_fixup { i32 58, ptr @.str.176 }, %struct.hda_model_fixup { i32 60, ptr @.str.177 }, %struct.hda_model_fixup { i32 62, ptr @.str.178 }, %struct.hda_model_fixup { i32 63, ptr @.str.179 }, %struct.hda_model_fixup { i32 64, ptr @.str.180 }, %struct.hda_model_fixup { i32 65, ptr @.str.181 }, %struct.hda_model_fixup { i32 66, ptr @.str.182 }, %struct.hda_model_fixup { i32 67, ptr @.str.183 }, %struct.hda_model_fixup { i32 68, ptr @.str.184 }, %struct.hda_model_fixup { i32 71, ptr @.str.185 }, %struct.hda_model_fixup { i32 74, ptr @.str.186 }, %struct.hda_model_fixup { i32 75, ptr @.str.187 }, %struct.hda_model_fixup { i32 76, ptr @.str.188 }, %struct.hda_model_fixup { i32 77, ptr @.str.189 }, %struct.hda_model_fixup { i32 78, ptr @.str.190 }, %struct.hda_model_fixup { i32 79, ptr @.str.132 }, %struct.hda_model_fixup { i32 80, ptr @.str.191 }, %struct.hda_model_fixup { i32 81, ptr @.str.192 }, %struct.hda_model_fixup { i32 82, ptr @.str.193 }, %struct.hda_model_fixup { i32 83, ptr @.str.194 }, %struct.hda_model_fixup { i32 86, ptr @.str.195 }, %struct.hda_model_fixup { i32 87, ptr @.str.196 }, %struct.hda_model_fixup { i32 88, ptr @.str.197 }, %struct.hda_model_fixup { i32 91, ptr @.str.198 }, %struct.hda_model_fixup { i32 93, ptr @.str.199 }, %struct.hda_model_fixup { i32 95, ptr @.str.200 }, %struct.hda_model_fixup { i32 96, ptr @.str.201 }, %struct.hda_model_fixup { i32 97, ptr @.str.202 }, %struct.hda_model_fixup { i32 98, ptr @.str.203 }, %struct.hda_model_fixup { i32 99, ptr @.str.204 }, %struct.hda_model_fixup { i32 100, ptr @.str.205 }, %struct.hda_model_fixup { i32 102, ptr @.str.206 }, %struct.hda_model_fixup { i32 103, ptr @.str.207 }, %struct.hda_model_fixup { i32 104, ptr @.str.208 }, %struct.hda_model_fixup { i32 105, ptr @.str.209 }, %struct.hda_model_fixup { i32 106, ptr @.str.210 }, %struct.hda_model_fixup { i32 108, ptr @.str.211 }, %struct.hda_model_fixup { i32 110, ptr @.str.212 }, %struct.hda_model_fixup { i32 111, ptr @.str.213 }, %struct.hda_model_fixup { i32 112, ptr @.str.210 }, %struct.hda_model_fixup { i32 113, ptr @.str.214 }, %struct.hda_model_fixup { i32 114, ptr @.str.215 }, %struct.hda_model_fixup { i32 115, ptr @.str.216 }, %struct.hda_model_fixup { i32 116, ptr @.str.217 }, %struct.hda_model_fixup { i32 117, ptr @.str.218 }, %struct.hda_model_fixup { i32 120, ptr @.str.219 }, %struct.hda_model_fixup { i32 121, ptr @.str.220 }, %struct.hda_model_fixup { i32 125, ptr @.str.221 }, %struct.hda_model_fixup { i32 128, ptr @.str.222 }, %struct.hda_model_fixup { i32 129, ptr @.str.223 }, %struct.hda_model_fixup { i32 132, ptr @.str.224 }, %struct.hda_model_fixup { i32 144, ptr @.str.225 }, %struct.hda_model_fixup { i32 143, ptr @.str.226 }, %struct.hda_model_fixup { i32 151, ptr @.str.227 }, %struct.hda_model_fixup { i32 131, ptr @.str.228 }, %struct.hda_model_fixup { i32 152, ptr @.str.229 }, %struct.hda_model_fixup { i32 172, ptr @.str.230 }, %struct.hda_model_fixup { i32 190, ptr @.str.231 }, %struct.hda_model_fixup { i32 191, ptr @.str.232 }, %struct.hda_model_fixup { i32 84, ptr @.str.233 }, %struct.hda_model_fixup { i32 206, ptr @.str.234 }, %struct.hda_model_fixup { i32 207, ptr @.str.235 }, %struct.hda_model_fixup { i32 85, ptr @.str.236 }, %struct.hda_model_fixup { i32 208, ptr @.str.237 }, %struct.hda_model_fixup { i32 209, ptr @.str.238 }, %struct.hda_model_fixup { i32 210, ptr @.str.239 }, %struct.hda_model_fixup { i32 180, ptr @.str.240 }, %struct.hda_model_fixup zeroinitializer], [240 x i8] zeroinitializer }, align 32
@alc269_fixup_tbl = internal constant { [460 x %struct.snd_pci_quirk], [1824 x i8] } { [460 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4133, i16 643, i16 -1, i32 30, ptr @.str.241 }, %struct.snd_pci_quirk { i16 4133, i16 667, i16 -1, i32 30, ptr @.str.242 }, %struct.snd_pci_quirk { i16 4133, i16 841, i16 -1, i32 30, ptr @.str.243 }, %struct.snd_pci_quirk { i16 4133, i16 1148, i16 -1, i32 49, ptr @.str.244 }, %struct.snd_pci_quirk { i16 4133, i16 1837, i16 -1, i32 42, ptr @.str.245 }, %struct.snd_pci_quirk { i16 4133, i16 1856, i16 -1, i32 47, ptr @.str.246 }, %struct.snd_pci_quirk { i16 4133, i16 1858, i16 -1, i32 47, ptr @.str.247 }, %struct.snd_pci_quirk { i16 4133, i16 1890, i16 -1, i32 48, ptr @.str.248 }, %struct.snd_pci_quirk { i16 4133, i16 1909, i16 -1, i32 48, ptr @.str.249 }, %struct.snd_pci_quirk { i16 4133, i16 1947, i16 -1, i32 76, ptr @.str.250 }, %struct.snd_pci_quirk { i16 4133, i16 2061, i16 -1, i32 42, ptr @.str.251 }, %struct.snd_pci_quirk { i16 4133, i16 2112, i16 -1, i32 77, ptr @.str.252 }, %struct.snd_pci_quirk { i16 4133, i16 4124, i16 -1, i32 14, ptr @.str.253 }, %struct.snd_pci_quirk { i16 4133, i16 4139, i16 -1, i32 136, ptr @.str.254 }, %struct.snd_pci_quirk { i16 4133, i16 4197, i16 -1, i32 175, ptr @.str.255 }, %struct.snd_pci_quirk { i16 4133, i16 4205, i16 -1, i32 55, ptr @.str.256 }, %struct.snd_pci_quirk { i16 4133, i16 4244, i16 -1, i32 201, ptr @.str.257 }, %struct.snd_pci_quirk { i16 4133, i16 4249, i16 -1, i32 65, ptr @.str.258 }, %struct.snd_pci_quirk { i16 4133, i16 4366, i16 -1, i32 65, ptr @.str.259 }, %struct.snd_pci_quirk { i16 4133, i16 4454, i16 -1, i32 14, ptr @.str.260 }, %struct.snd_pci_quirk { i16 4133, i16 4455, i16 -1, i32 14, ptr @.str.261 }, %struct.snd_pci_quirk { i16 4133, i16 4678, i16 -1, i32 151, ptr @.str.262 }, %struct.snd_pci_quirk { i16 4133, i16 4679, i16 -1, i32 174, ptr @.str.263 }, %struct.snd_pci_quirk { i16 4133, i16 4680, i16 -1, i32 176, ptr @.str.264 }, %struct.snd_pci_quirk { i16 4133, i16 4713, i16 -1, i32 202, ptr @.str.265 }, %struct.snd_pci_quirk { i16 4133, i16 4751, i16 -1, i32 148, ptr @.str.266 }, %struct.snd_pci_quirk { i16 4133, i16 4752, i16 -1, i32 148, ptr @.str.267 }, %struct.snd_pci_quirk { i16 4133, i16 4753, i16 -1, i32 148, ptr @.str.268 }, %struct.snd_pci_quirk { i16 4133, i16 4764, i16 -1, i32 202, ptr @.str.269 }, %struct.snd_pci_quirk { i16 4133, i16 4864, i16 -1, i32 179, ptr @.str.270 }, %struct.snd_pci_quirk { i16 4133, i16 4872, i16 -1, i32 148, ptr @.str.271 }, %struct.snd_pci_quirk { i16 4133, i16 4906, i16 -1, i32 119, ptr @.str.272 }, %struct.snd_pci_quirk { i16 4133, i16 4912, i16 -1, i32 142, ptr @.str.273 }, %struct.snd_pci_quirk { i16 4133, i16 5151, i16 -1, i32 65, ptr @.str.274 }, %struct.snd_pci_quirk { i16 4133, i16 5163, i16 -1, i32 65, ptr @.str.275 }, %struct.snd_pci_quirk { i16 4133, i16 5168, i16 -1, i32 179, ptr @.str.276 }, %struct.snd_pci_quirk { i16 4133, i16 5222, i16 -1, i32 210, ptr @.str.277 }, %struct.snd_pci_quirk { i16 4136, i16 1136, i16 -1, i32 3, ptr @.str.278 }, %struct.snd_pci_quirk { i16 4136, i16 1355, i16 -1, i32 97, ptr @.str.279 }, %struct.snd_pci_quirk { i16 4136, i16 1469, i16 -1, i32 91, ptr @.str.280 }, %struct.snd_pci_quirk { i16 4136, i16 1470, i16 -1, i32 91, ptr @.str.281 }, %struct.snd_pci_quirk { i16 4136, i16 1482, i16 -1, i32 91, ptr @.str.282 }, %struct.snd_pci_quirk { i16 4136, i16 1483, i16 -1, i32 91, ptr @.str.283 }, %struct.snd_pci_quirk { i16 4136, i16 1498, i16 -1, i32 61, ptr @.str.284 }, %struct.snd_pci_quirk { i16 4136, i16 1524, i16 -1, i32 36, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1525, i16 -1, i32 36, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1526, i16 -1, i32 36, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1557, i16 -1, i32 62, ptr @.str.286 }, %struct.snd_pci_quirk { i16 4136, i16 1558, i16 -1, i32 62, ptr @.str.286 }, %struct.snd_pci_quirk { i16 4136, i16 1580, i16 -1, i32 91, ptr @.str.287 }, %struct.snd_pci_quirk { i16 4136, i16 1582, i16 -1, i32 91, ptr @.str.288 }, %struct.snd_pci_quirk { i16 4136, i16 1592, i16 -1, i32 60, ptr @.str.289 }, %struct.snd_pci_quirk { i16 4136, i16 1610, i16 -1, i32 71, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1611, i16 -1, i32 71, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1637, i16 -1, i32 88, ptr @.str.290 }, %struct.snd_pci_quirk { i16 4136, i16 1641, i16 -1, i32 67, ptr @.str.291 }, %struct.snd_pci_quirk { i16 4136, i16 1690, i16 -1, i32 62, ptr @.str.292 }, %struct.snd_pci_quirk { i16 4136, i16 1735, i16 -1, i32 67, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1753, i16 -1, i32 71, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1754, i16 -1, i32 71, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1755, i16 -1, i32 93, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1757, i16 -1, i32 93, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1758, i16 -1, i32 93, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1759, i16 -1, i32 93, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1760, i16 -1, i32 93, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1798, i16 -1, i32 110, ptr @.str.293 }, %struct.snd_pci_quirk { i16 4136, i16 1829, i16 -1, i32 100, ptr @.str.294 }, %struct.snd_pci_quirk { i16 4136, i16 1848, i16 -1, i32 33, ptr @.str.295 }, %struct.snd_pci_quirk { i16 4136, i16 1884, i16 -1, i32 108, ptr @.str.296 }, %struct.snd_pci_quirk { i16 4136, i16 1885, i16 -1, i32 108, ptr @.str.297 }, %struct.snd_pci_quirk { i16 4136, i16 1944, i16 -1, i32 110, ptr @.str.298 }, %struct.snd_pci_quirk { i16 4136, i16 1968, i16 -1, i32 103, ptr @.str.299 }, %struct.snd_pci_quirk { i16 4136, i16 2060, i16 -1, i32 121, ptr @.str.300 }, %struct.snd_pci_quirk { i16 4136, i16 2123, i16 -1, i32 125, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 2126, i16 -1, i32 125, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 2161, i16 -1, i32 129, ptr @.str.301 }, %struct.snd_pci_quirk { i16 4136, i16 2162, i16 -1, i32 129, ptr @.str.301 }, %struct.snd_pci_quirk { i16 4136, i16 2163, i16 -1, i32 128, ptr @.str.302 }, %struct.snd_pci_quirk { i16 4136, i16 2221, i16 -1, i32 145, ptr @.str.303 }, %struct.snd_pci_quirk { i16 4136, i16 2222, i16 -1, i32 102, ptr @.str.304 }, %struct.snd_pci_quirk { i16 4136, i16 2357, i16 -1, i32 125, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 2429, i16 -1, i32 154, ptr @.str.305 }, %struct.snd_pci_quirk { i16 4136, i16 2430, i16 -1, i32 154, ptr @.str.305 }, %struct.snd_pci_quirk { i16 4136, i16 2445, i16 -1, i32 116, ptr @.str.305 }, %struct.snd_pci_quirk { i16 4136, i16 2495, i16 -1, i32 116, ptr @.str.305 }, %struct.snd_pci_quirk { i16 4136, i16 2606, i16 -1, i32 199, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 2608, i16 -1, i32 199, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 2648, i16 -1, i32 129, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 2657, i16 -1, i32 154, ptr @.str.306 }, %struct.snd_pci_quirk { i16 4136, i16 2658, i16 -1, i32 154, ptr @.str.307 }, %struct.snd_pci_quirk { i16 4136, i16 2717, i16 -1, i32 39, ptr @.str.308 }, %struct.snd_pci_quirk { i16 4136, i16 2718, i16 -1, i32 39, ptr @.str.308 }, %struct.snd_pci_quirk { i16 4136, i16 5706, i16 -1, i32 71, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 5707, i16 -1, i32 71, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4156, i16 5510, i16 -1, i32 25, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 6374, i16 -1, i32 27, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8587, i16 -1, i32 53, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8697, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8720, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8724, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8731, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8732, i16 -1, i32 105, ptr @.str.310 }, %struct.snd_pci_quirk { i16 4156, i16 8737, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8741, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8758, i16 -1, i32 29, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8759, i16 -1, i32 29, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8760, i16 -1, i32 29, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8761, i16 -1, i32 29, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8779, i16 -1, i32 29, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8787, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8788, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8789, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8790, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8791, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8793, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8794, i16 -1, i32 82, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8799, i16 -1, i32 80, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8800, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8803, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8804, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8805, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8808, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8810, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8811, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8814, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8817, i16 -1, i32 79, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8818, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8818, i16 -1, i32 81, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8819, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8819, i16 -1, i32 81, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8824, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8831, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8834, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8843, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8846, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8862, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8882, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8887, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8895, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8900, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8901, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8903, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8904, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8911, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8923, i16 -1, i32 83, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8924, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 8955, i16 -1, i32 28, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 9012, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 9013, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 9014, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 9015, i16 -1, i32 24, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -32722, i16 -1, i32 112, ptr @.str.311 }, %struct.snd_pci_quirk { i16 4156, i16 -32721, i16 -1, i32 112, ptr @.str.312 }, %struct.snd_pci_quirk { i16 4156, i16 -32649, i16 -1, i32 197, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -32424, i16 -1, i32 197, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -32243, i16 -1, i32 26, ptr @.str.313 }, %struct.snd_pci_quirk { i16 4156, i16 -32170, i16 -1, i32 106, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -32130, i16 -1, i32 132, ptr @.str.314 }, %struct.snd_pci_quirk { i16 4156, i16 -32129, i16 -1, i32 26, ptr @.str.314 }, %struct.snd_pci_quirk { i16 4156, i16 -32065, i16 -1, i32 112, ptr @.str.315 }, %struct.snd_pci_quirk { i16 4156, i16 -32064, i16 -1, i32 112, ptr @.str.316 }, %struct.snd_pci_quirk { i16 4156, i16 -31815, i16 -1, i32 26, ptr @.str.317 }, %struct.snd_pci_quirk { i16 4156, i16 -31716, i16 -1, i32 26, ptr @.str.318 }, %struct.snd_pci_quirk { i16 4156, i16 -31593, i16 -1, i32 26, ptr @.str.319 }, %struct.snd_pci_quirk { i16 4156, i16 -31526, i16 -1, i32 206, ptr @.str.320 }, %struct.snd_pci_quirk { i16 4156, i16 -31513, i16 -1, i32 26, ptr @.str.313 }, %struct.snd_pci_quirk { i16 4156, i16 -31463, i16 -1, i32 207, ptr @.str.321 }, %struct.snd_pci_quirk { i16 4156, i16 -31217, i16 -1, i32 180, ptr @.str.322 }, %struct.snd_pci_quirk { i16 4156, i16 -31201, i16 -1, i32 180, ptr @.str.323 }, %struct.snd_pci_quirk { i16 4156, i16 -31075, i16 -1, i32 170, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -31033, i16 -1, i32 193, ptr @.str.324 }, %struct.snd_pci_quirk { i16 4156, i16 -30954, i16 -1, i32 180, ptr @.str.325 }, %struct.snd_pci_quirk { i16 4156, i16 -30944, i16 -1, i32 180, ptr @.str.326 }, %struct.snd_pci_quirk { i16 4156, i16 -30940, i16 -1, i32 167, ptr @.str.327 }, %struct.snd_pci_quirk { i16 4156, i16 -30936, i16 -1, i32 167, ptr @.str.328 }, %struct.snd_pci_quirk { i16 4156, i16 -30935, i16 -1, i32 167, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30928, i16 -1, i32 171, ptr @.str.329 }, %struct.snd_pci_quirk { i16 4156, i16 -30923, i16 -1, i32 171, ptr @.str.330 }, %struct.snd_pci_quirk { i16 4156, i16 -30922, i16 -1, i32 180, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30880, i16 -1, i32 168, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30854, i16 -1, i32 168, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30851, i16 -1, i32 170, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30848, i16 -1, i32 180, ptr @.str.331 }, %struct.snd_pci_quirk { i16 4156, i16 -30845, i16 -1, i32 180, ptr @.str.332 }, %struct.snd_pci_quirk { i16 4156, i16 -30840, i16 -1, i32 168, ptr @.str.333 }, %struct.snd_pci_quirk { i16 4156, i16 -30776, i16 -1, i32 196, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30747, i16 -1, i32 169, ptr @.str.334 }, %struct.snd_pci_quirk { i16 4156, i16 -30745, i16 -1, i32 169, ptr @.str.335 }, %struct.snd_pci_quirk { i16 4156, i16 -30735, i16 -1, i32 169, ptr @.str.336 }, %struct.snd_pci_quirk { i16 4156, i16 -30734, i16 -1, i32 169, ptr @.str.337 }, %struct.snd_pci_quirk { i16 4156, i16 -30732, i16 -1, i32 196, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30731, i16 -1, i32 196, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30730, i16 -1, i32 84, ptr @.str.338 }, %struct.snd_pci_quirk { i16 4156, i16 -30729, i16 -1, i32 84, ptr @.str.338 }, %struct.snd_pci_quirk { i16 4156, i16 -30715, i16 -1, i32 169, ptr @.str.339 }, %struct.snd_pci_quirk { i16 4156, i16 -30707, i16 -1, i32 167, ptr @.str.340 }, %struct.snd_pci_quirk { i16 4156, i16 -30703, i16 -1, i32 85, ptr @.str.341 }, %struct.snd_pci_quirk { i16 4156, i16 -30702, i16 -1, i32 85, ptr @.str.341 }, %struct.snd_pci_quirk { i16 4156, i16 -30650, i16 -1, i32 167, ptr @.str.342 }, %struct.snd_pci_quirk { i16 4156, i16 -30649, i16 -1, i32 167, ptr @.str.343 }, %struct.snd_pci_quirk { i16 4156, i16 -30645, i16 -1, i32 167, ptr @.str.344 }, %struct.snd_pci_quirk { i16 4156, i16 -30644, i16 -1, i32 167, ptr @.str.345 }, %struct.snd_pci_quirk { i16 4156, i16 -30622, i16 -1, i32 211, ptr @.str.346 }, %struct.snd_pci_quirk { i16 4156, i16 -30621, i16 -1, i32 211, ptr @.str.346 }, %struct.snd_pci_quirk { i16 4156, i16 -30611, i16 -1, i32 180, ptr @.str.347 }, %struct.snd_pci_quirk { i16 4156, i16 -30608, i16 -1, i32 180, ptr @.str.348 }, %struct.snd_pci_quirk { i16 4156, i16 -30605, i16 -1, i32 180, ptr @.str.349 }, %struct.snd_pci_quirk { i16 4156, i16 -30579, i16 -1, i32 169, ptr @.str.350 }, %struct.snd_pci_quirk { i16 4156, i16 -30571, i16 -1, i32 224, ptr @.str.351 }, %struct.snd_pci_quirk { i16 4156, i16 -30570, i16 -1, i32 168, ptr @.str.351 }, %struct.snd_pci_quirk { i16 4156, i16 -30568, i16 -1, i32 204, ptr @.str.352 }, %struct.snd_pci_quirk { i16 4156, i16 -30512, i16 -1, i32 196, ptr @.str.353 }, %struct.snd_pci_quirk { i16 4156, i16 -30269, i16 -1, i32 167, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4156, i16 -30262, i16 -1, i32 171, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4163, i16 4158, i16 -1, i32 114, ptr @.str.354 }, %struct.snd_pci_quirk { i16 4163, i16 4159, i16 -1, i32 57, ptr @.str.355 }, %struct.snd_pci_quirk { i16 4163, i16 4205, i16 -1, i32 50, ptr @.str.356 }, %struct.snd_pci_quirk { i16 4163, i16 4257, i16 -1, i32 139, ptr @.str.357 }, %struct.snd_pci_quirk { i16 4163, i16 4288, i16 -1, i32 114, ptr @.str.354 }, %struct.snd_pci_quirk { i16 4163, i16 4304, i16 -1, i32 66, ptr @.str.358 }, %struct.snd_pci_quirk { i16 4163, i16 4445, i16 -1, i32 50, ptr @.str.359 }, %struct.snd_pci_quirk { i16 4163, i16 4544, i16 -1, i32 66, ptr @.str.360 }, %struct.snd_pci_quirk { i16 4163, i16 4702, i16 -1, i32 66, ptr @.str.361 }, %struct.snd_pci_quirk { i16 4163, i16 4721, i16 -1, i32 150, ptr @.str.362 }, %struct.snd_pci_quirk { i16 4163, i16 4752, i16 -1, i32 117, ptr @.str.363 }, %struct.snd_pci_quirk { i16 4163, i16 4768, i16 -1, i32 117, ptr @.str.364 }, %struct.snd_pci_quirk { i16 4163, i16 4832, i16 -1, i32 114, ptr @.str.365 }, %struct.snd_pci_quirk { i16 4163, i16 4848, i16 -1, i32 114, ptr @.str.366 }, %struct.snd_pci_quirk { i16 4163, i16 5040, i16 -1, i32 114, ptr @.str.367 }, %struct.snd_pci_quirk { i16 4163, i16 5159, i16 -1, i32 51, ptr @.str.368 }, %struct.snd_pci_quirk { i16 4163, i16 5399, i16 -1, i32 52, ptr @.str.369 }, %struct.snd_pci_quirk { i16 4163, i16 5859, i16 -1, i32 11, ptr @.str.370 }, %struct.snd_pci_quirk { i16 4163, i16 5952, i16 -1, i32 205, ptr @.str.371 }, %struct.snd_pci_quirk { i16 4163, i16 6097, i16 -1, i32 156, ptr @.str.372 }, %struct.snd_pci_quirk { i16 4163, i16 5730, i16 -1, i32 156, ptr @.str.373 }, %struct.snd_pci_quirk { i16 4163, i16 6273, i16 -1, i32 162, ptr @.str.374 }, %struct.snd_pci_quirk { i16 4163, i16 6321, i16 -1, i32 149, ptr @.str.375 }, %struct.snd_pci_quirk { i16 4163, i16 6385, i16 -1, i32 149, ptr @.str.376 }, %struct.snd_pci_quirk { i16 4163, i16 6478, i16 -1, i32 159, ptr @.str.377 }, %struct.snd_pci_quirk { i16 4163, i16 6512, i16 -1, i32 177, ptr @.str.378 }, %struct.snd_pci_quirk { i16 4163, i16 6530, i16 -1, i32 194, ptr @.str.379 }, %struct.snd_pci_quirk { i16 4163, i16 6606, i16 -1, i32 159, ptr @.str.380 }, %struct.snd_pci_quirk { i16 4163, i16 6625, i16 -1, i32 173, ptr @.str.381 }, %struct.snd_pci_quirk { i16 4163, i16 6675, i16 -1, i32 5, ptr @.str.382 }, %struct.snd_pci_quirk { i16 4163, i16 6704, i16 -1, i32 114, ptr @.str.383 }, %struct.snd_pci_quirk { i16 4163, i16 6929, i16 -1, i32 160, ptr @.str.384 }, %struct.snd_pci_quirk { i16 4163, i16 6931, i16 -1, i32 30, ptr @.str.385 }, %struct.snd_pci_quirk { i16 4163, i16 7101, i16 -1, i32 66, ptr @.str.386 }, %struct.snd_pci_quirk { i16 4163, i16 7203, i16 -1, i32 50, ptr @.str.387 }, %struct.snd_pci_quirk { i16 4163, i16 7373, i16 -1, i32 114, ptr @.str.388 }, %struct.snd_pci_quirk { i16 4163, i16 7502, i16 -1, i32 194, ptr @.str.389 }, %struct.snd_pci_quirk { i16 4163, i16 7697, i16 -1, i32 178, ptr @.str.390 }, %struct.snd_pci_quirk { i16 4163, i16 7761, i16 -1, i32 165, ptr @.str.391 }, %struct.snd_pci_quirk { i16 4163, i16 7822, i16 -1, i32 177, ptr @.str.390 }, %struct.snd_pci_quirk { i16 4163, i16 7953, i16 -1, i32 177, ptr @.str.392 }, %struct.snd_pci_quirk { i16 4163, i16 5810, i16 -1, i32 177, ptr @.str.393 }, %struct.snd_pci_quirk { i16 4163, i16 12336, i16 -1, i32 115, ptr @.str.394 }, %struct.snd_pci_quirk { i16 4163, i16 -31974, i16 -1, i32 11, ptr @.str.395 }, %struct.snd_pci_quirk { i16 4163, i16 -31926, i16 -1, i32 11, ptr @.str.396 }, %struct.snd_pci_quirk { i16 4163, i16 -31848, i16 -1, i32 11, ptr @.str.397 }, %struct.snd_pci_quirk { i16 4163, i16 -31794, i16 -1, i32 11, ptr @.str.397 }, %struct.snd_pci_quirk { i16 4163, i16 -31466, i16 -1, i32 45, ptr @.str.398 }, %struct.snd_pci_quirk { i16 4173, i16 -28557, i16 -1, i32 2, ptr @.str.399 }, %struct.snd_pci_quirk { i16 4173, i16 -28549, i16 -1, i32 7, ptr @.str.399 }, %struct.snd_pci_quirk { i16 4173, i16 -28540, i16 -1, i32 7, ptr @.str.399 }, %struct.snd_pci_quirk { i16 4173, i16 -28519, i16 -1, i32 8, ptr @.str.400 }, %struct.snd_pci_quirk { i16 4173, i16 -28491, i16 -1, i32 34, ptr @.str.401 }, %struct.snd_pci_quirk { i16 4173, i16 -28490, i16 -1, i32 34, ptr @.str.402 }, %struct.snd_pci_quirk { i16 4303, i16 5237, i16 -1, i32 14, ptr @.str.403 }, %struct.snd_pci_quirk { i16 4303, i16 5535, i16 -1, i32 17, ptr @.str.404 }, %struct.snd_pci_quirk { i16 4303, i16 5596, i16 -1, i32 16, ptr @.str.405 }, %struct.snd_pci_quirk { i16 4303, i16 5673, i16 -1, i32 18, ptr @.str.406 }, %struct.snd_pci_quirk { i16 4303, i16 5975, i16 -1, i32 16, ptr @.str.407 }, %struct.snd_pci_quirk { i16 4303, i16 6213, i16 -1, i32 15, ptr @.str.408 }, %struct.snd_pci_quirk { i16 4332, i16 4338, i16 -1, i32 123, ptr @.str.409 }, %struct.snd_pci_quirk { i16 4332, i16 4492, i16 -1, i32 152, ptr @.str.410 }, %struct.snd_pci_quirk { i16 4332, i16 4656, i16 -1, i32 143, ptr @.str.409 }, %struct.snd_pci_quirk { i16 4332, i16 4690, i16 -1, i32 143, ptr @.str.409 }, %struct.snd_pci_quirk { i16 4332, i16 4692, i16 -1, i32 143, ptr @.str.409 }, %struct.snd_pci_quirk { i16 4343, i16 -31944, i16 -1, i32 40, ptr @.str.411 }, %struct.snd_pci_quirk { i16 5197, i16 -16119, i16 -1, i32 30, ptr @.str.412 }, %struct.snd_pci_quirk { i16 5197, i16 -16023, i16 -1, i32 172, ptr @.str.413 }, %struct.snd_pci_quirk { i16 5197, i16 -16010, i16 -1, i32 172, ptr @.str.414 }, %struct.snd_pci_quirk { i16 5197, i16 -15991, i16 -1, i32 172, ptr @.str.415 }, %struct.snd_pci_quirk { i16 5197, i16 -15990, i16 -1, i32 172, ptr @.str.416 }, %struct.snd_pci_quirk { i16 5197, i16 -14528, i16 -1, i32 111, ptr @.str.417 }, %struct.snd_pci_quirk { i16 5197, i16 -14318, i16 -1, i32 172, ptr @.str.418 }, %struct.snd_pci_quirk { i16 5197, i16 -14288, i16 -1, i32 172, ptr @.str.419 }, %struct.snd_pci_quirk { i16 5208, i16 -1453, i16 -1, i32 74, ptr @.str.420 }, %struct.snd_pci_quirk { i16 5218, i16 -20192, i16 -1, i32 74, ptr @.str.421 }, %struct.snd_pci_quirk { i16 5218, i16 -20111, i16 -1, i32 74, ptr @.str.422 }, %struct.snd_pci_quirk { i16 5421, i16 4226, i16 -1, i32 14, ptr @.str.423 }, %struct.snd_pci_quirk { i16 5464, i16 4899, i16 -1, i32 140, ptr @.str.424 }, %struct.snd_pci_quirk { i16 5464, i16 4901, i16 -1, i32 140, ptr @.str.425 }, %struct.snd_pci_quirk { i16 5464, i16 5121, i16 -1, i32 140, ptr @.str.426 }, %struct.snd_pci_quirk { i16 5464, i16 5123, i16 -1, i32 140, ptr @.str.427 }, %struct.snd_pci_quirk { i16 5464, i16 5124, i16 -1, i32 140, ptr @.str.428 }, %struct.snd_pci_quirk { i16 5464, i16 5281, i16 -1, i32 140, ptr @.str.429 }, %struct.snd_pci_quirk { i16 5464, i16 16408, i16 -1, i32 140, ptr @.str.430 }, %struct.snd_pci_quirk { i16 5464, i16 16409, i16 -1, i32 140, ptr @.str.431 }, %struct.snd_pci_quirk { i16 5464, i16 16416, i16 -1, i32 140, ptr @.str.432 }, %struct.snd_pci_quirk { i16 5464, i16 16545, i16 -1, i32 140, ptr @.str.433 }, %struct.snd_pci_quirk { i16 5464, i16 16577, i16 -1, i32 140, ptr @.str.434 }, %struct.snd_pci_quirk { i16 5464, i16 16593, i16 -1, i32 140, ptr @.str.435 }, %struct.snd_pci_quirk { i16 5464, i16 20501, i16 -1, i32 217, ptr @.str.436 }, %struct.snd_pci_quirk { i16 5464, i16 20503, i16 -1, i32 217, ptr @.str.437 }, %struct.snd_pci_quirk { i16 5464, i16 20643, i16 -1, i32 140, ptr @.str.438 }, %struct.snd_pci_quirk { i16 5464, i16 20659, i16 -1, i32 140, ptr @.str.439 }, %struct.snd_pci_quirk { i16 5464, i16 20662, i16 -1, i32 140, ptr @.str.440 }, %struct.snd_pci_quirk { i16 5464, i16 20664, i16 -1, i32 140, ptr @.str.441 }, %struct.snd_pci_quirk { i16 5464, i16 20693, i16 -1, i32 140, ptr @.str.442 }, %struct.snd_pci_quirk { i16 5464, i16 20705, i16 -1, i32 217, ptr @.str.443 }, %struct.snd_pci_quirk { i16 5464, i16 20706, i16 -1, i32 217, ptr @.str.444 }, %struct.snd_pci_quirk { i16 5464, i16 20720, i16 -1, i32 140, ptr @.str.445 }, %struct.snd_pci_quirk { i16 5464, i16 20722, i16 -1, i32 140, ptr @.str.446 }, %struct.snd_pci_quirk { i16 5464, i16 20723, i16 -1, i32 140, ptr @.str.447 }, %struct.snd_pci_quirk { i16 5464, i16 20725, i16 -1, i32 140, ptr @.str.448 }, %struct.snd_pci_quirk { i16 5464, i16 20726, i16 -1, i32 140, ptr @.str.449 }, %struct.snd_pci_quirk { i16 5464, i16 20737, i16 -1, i32 140, ptr @.str.450 }, %struct.snd_pci_quirk { i16 5464, i16 20823, i16 -1, i32 140, ptr @.str.451 }, %struct.snd_pci_quirk { i16 5464, i16 20897, i16 -1, i32 140, ptr @.str.452 }, %struct.snd_pci_quirk { i16 5464, i16 28833, i16 -1, i32 140, ptr @.str.453 }, %struct.snd_pci_quirk { i16 5464, i16 28851, i16 -1, i32 140, ptr @.str.454 }, %struct.snd_pci_quirk { i16 5464, i16 28914, i16 -1, i32 140, ptr @.str.455 }, %struct.snd_pci_quirk { i16 5464, i16 28915, i16 -1, i32 140, ptr @.str.456 }, %struct.snd_pci_quirk { i16 5464, i16 28916, i16 -1, i32 140, ptr @.str.457 }, %struct.snd_pci_quirk { i16 5464, i16 28918, i16 -1, i32 140, ptr @.str.458 }, %struct.snd_pci_quirk { i16 5464, i16 -32216, i16 -1, i32 140, ptr @.str.459 }, %struct.snd_pci_quirk { i16 5464, i16 -31456, i16 -1, i32 140, ptr @.str.460 }, %struct.snd_pci_quirk { i16 5464, i16 -31455, i16 -1, i32 140, ptr @.str.461 }, %struct.snd_pci_quirk { i16 5464, i16 -31435, i16 -1, i32 140, ptr @.str.462 }, %struct.snd_pci_quirk { i16 5464, i16 -31434, i16 -1, i32 140, ptr @.str.463 }, %struct.snd_pci_quirk { i16 5464, i16 -31408, i16 -1, i32 140, ptr @.str.464 }, %struct.snd_pci_quirk { i16 5464, i16 -31407, i16 -1, i32 140, ptr @.str.464 }, %struct.snd_pci_quirk { i16 5464, i16 -31392, i16 -1, i32 12, ptr @.str.464 }, %struct.snd_pci_quirk { i16 5464, i16 -31391, i16 -1, i32 12, ptr @.str.464 }, %struct.snd_pci_quirk { i16 5464, i16 -31390, i16 -1, i32 20, ptr @.str.465 }, %struct.snd_pci_quirk { i16 5464, i16 -31128, i16 -1, i32 140, ptr @.str.466 }, %struct.snd_pci_quirk { i16 5464, i16 -31104, i16 -1, i32 140, ptr @.str.467 }, %struct.snd_pci_quirk { i16 5464, i16 -31098, i16 -1, i32 219, ptr @.str.468 }, %struct.snd_pci_quirk { i16 5464, i16 -30176, i16 -1, i32 140, ptr @.str.469 }, %struct.snd_pci_quirk { i16 5464, i16 -30127, i16 -1, i32 140, ptr @.str.470 }, %struct.snd_pci_quirk { i16 5464, i16 -29360, i16 -1, i32 140, ptr @.str.471 }, %struct.snd_pci_quirk { i16 5464, i16 -27363, i16 -1, i32 140, ptr @.str.472 }, %struct.snd_pci_quirk { i16 5464, i16 -27136, i16 -1, i32 140, ptr @.str.473 }, %struct.snd_pci_quirk { i16 5464, i16 -27107, i16 -1, i32 140, ptr @.str.474 }, %struct.snd_pci_quirk { i16 5464, i16 -26851, i16 -1, i32 140, ptr @.str.475 }, %struct.snd_pci_quirk { i16 5464, i16 -23296, i16 -1, i32 140, ptr @.str.476 }, %struct.snd_pci_quirk { i16 5464, i16 -23040, i16 -1, i32 140, ptr @.str.477 }, %struct.snd_pci_quirk { i16 5464, i16 -20456, i16 -1, i32 140, ptr @.str.478 }, %struct.snd_pci_quirk { i16 5464, i16 -20455, i16 -1, i32 140, ptr @.str.479 }, %struct.snd_pci_quirk { i16 5464, i16 -20446, i16 -1, i32 140, ptr @.str.480 }, %struct.snd_pci_quirk { i16 5464, i16 -16360, i16 -1, i32 140, ptr @.str.478 }, %struct.snd_pci_quirk { i16 5464, i16 -16359, i16 -1, i32 140, ptr @.str.479 }, %struct.snd_pci_quirk { i16 5464, i16 -16350, i16 -1, i32 140, ptr @.str.481 }, %struct.snd_pci_quirk { i16 6058, i16 4150, i16 -1, i32 118, ptr @.str.482 }, %struct.snd_pci_quirk { i16 6058, i16 4168, i16 -1, i32 209, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 8434, i16 -1, i32 4, ptr @.str.484 }, %struct.snd_pci_quirk { i16 6058, i16 8542, i16 -1, i32 4, ptr @.str.485 }, %struct.snd_pci_quirk { i16 6058, i16 8632, i16 -1, i32 4, ptr @.str.486 }, %struct.snd_pci_quirk { i16 6058, i16 8650, i16 -1, i32 4, ptr @.str.487 }, %struct.snd_pci_quirk { i16 6058, i16 8681, i16 -1, i32 4, ptr @.str.488 }, %struct.snd_pci_quirk { i16 6058, i16 8691, i16 -1, i32 31, ptr @.str.489 }, %struct.snd_pci_quirk { i16 6058, i16 8694, i16 -1, i32 32, ptr @.str.490 }, %struct.snd_pci_quirk { i16 6058, i16 8698, i16 -1, i32 31, ptr @.str.491 }, %struct.snd_pci_quirk { i16 6058, i16 8699, i16 -1, i32 31, ptr @.str.492 }, %struct.snd_pci_quirk { i16 6058, i16 8707, i16 -1, i32 31, ptr @.str.493 }, %struct.snd_pci_quirk { i16 6058, i16 8712, i16 -1, i32 31, ptr @.str.494 }, %struct.snd_pci_quirk { i16 6058, i16 8716, i16 -1, i32 73, ptr @.str.495 }, %struct.snd_pci_quirk { i16 6058, i16 8718, i16 -1, i32 72, ptr @.str.496 }, %struct.snd_pci_quirk { i16 6058, i16 8720, i16 -1, i32 72, ptr @.str.497 }, %struct.snd_pci_quirk { i16 6058, i16 8721, i16 -1, i32 72, ptr @.str.498 }, %struct.snd_pci_quirk { i16 6058, i16 8722, i16 -1, i32 72, ptr @.str.499 }, %struct.snd_pci_quirk { i16 6058, i16 8724, i16 -1, i32 72, ptr @.str.500 }, %struct.snd_pci_quirk { i16 6058, i16 8725, i16 -1, i32 50, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8728, i16 -1, i32 72, ptr @.str.502 }, %struct.snd_pci_quirk { i16 6058, i16 8739, i16 -1, i32 72, ptr @.str.503 }, %struct.snd_pci_quirk { i16 6058, i16 8742, i16 -1, i32 72, ptr @.str.504 }, %struct.snd_pci_quirk { i16 6058, i16 8749, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8750, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8753, i16 -1, i32 107, ptr @.str.505 }, %struct.snd_pci_quirk { i16 6058, i16 8755, i16 -1, i32 107, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8773, i16 -1, i32 127, ptr @.str.506 }, %struct.snd_pci_quirk { i16 6058, i16 8774, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8775, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8777, i16 -1, i32 107, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8779, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8780, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8781, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8797, i16 -1, i32 50, ptr @.str.507 }, %struct.snd_pci_quirk { i16 6058, i16 8850, i16 -1, i32 158, ptr @.str.508 }, %struct.snd_pci_quirk { i16 6058, i16 8894, i16 -1, i32 158, ptr @.str.509 }, %struct.snd_pci_quirk { i16 6058, i16 8897, i16 -1, i32 195, ptr @.str.510 }, %struct.snd_pci_quirk { i16 6058, i16 8898, i16 -1, i32 195, ptr @.str.511 }, %struct.snd_pci_quirk { i16 6058, i16 8945, i16 -1, i32 223, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8946, i16 -1, i32 223, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 8947, i16 -1, i32 223, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 12475, i16 -1, i32 99, ptr @.str.512 }, %struct.snd_pci_quirk { i16 6058, i16 12514, i16 -1, i32 99, ptr @.str.512 }, %struct.snd_pci_quirk { i16 6058, i16 12556, i16 -1, i32 120, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12561, i16 -1, i32 120, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12586, i16 -1, i32 120, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12591, i16 -1, i32 120, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12604, i16 -1, i32 120, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12625, i16 -1, i32 74, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12662, i16 -1, i32 74, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12664, i16 -1, i32 74, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 12719, i16 -1, i32 209, ptr @.str.483 }, %struct.snd_pci_quirk { i16 6058, i16 14355, i16 -1, i32 212, ptr @.str.513 }, %struct.snd_pci_quirk { i16 6058, i16 14360, i16 -1, i32 109, ptr @.str.514 }, %struct.snd_pci_quirk { i16 6058, i16 14361, i16 -1, i32 215, ptr @.str.515 }, %struct.snd_pci_quirk { i16 6058, i16 14372, i16 -1, i32 220, ptr @.str.516 }, %struct.snd_pci_quirk { i16 6058, i16 14375, i16 -1, i32 203, ptr @.str.517 }, %struct.snd_pci_quirk { i16 6058, i16 14388, i16 -1, i32 214, ptr @.str.518 }, %struct.snd_pci_quirk { i16 6058, i16 14397, i16 -1, i32 220, ptr @.str.519 }, %struct.snd_pci_quirk { i16 6058, i16 14403, i16 -1, i32 208, ptr @.str.520 }, %struct.snd_pci_quirk { i16 6058, i16 14407, i16 -1, i32 222, ptr @.str.521 }, %struct.snd_pci_quirk { i16 6058, i16 14410, i16 -1, i32 214, ptr @.str.522 }, %struct.snd_pci_quirk { i16 6058, i16 14418, i16 -1, i32 214, ptr @.str.523 }, %struct.snd_pci_quirk { i16 6058, i16 14419, i16 -1, i32 214, ptr @.str.522 }, %struct.snd_pci_quirk { i16 6058, i16 14594, i16 -1, i32 64, ptr @.str.524 }, %struct.snd_pci_quirk { i16 6058, i16 14711, i16 -1, i32 58, ptr @.str.525 }, %struct.snd_pci_quirk { i16 6058, i16 14712, i16 -1, i32 64, ptr @.str.526 }, %struct.snd_pci_quirk { i16 6058, i16 15352, i16 -1, i32 10, ptr @.str.527 }, %struct.snd_pci_quirk { i16 6058, i16 20499, i16 -1, i32 50, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20506, i16 -1, i32 58, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20510, i16 -1, i32 72, ptr @.str.528 }, %struct.snd_pci_quirk { i16 6058, i16 20518, i16 -1, i32 50, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20532, i16 -1, i32 72, ptr @.str.529 }, %struct.snd_pci_quirk { i16 6058, i16 20534, i16 -1, i32 72, ptr @.str.530 }, %struct.snd_pci_quirk { i16 6058, i16 20540, i16 -1, i32 72, ptr @.str.531 }, %struct.snd_pci_quirk { i16 6058, i16 20554, i16 -1, i32 72, ptr @.str.532 }, %struct.snd_pci_quirk { i16 6058, i16 20555, i16 -1, i32 98, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20560, i16 -1, i32 107, ptr @.str.533 }, %struct.snd_pci_quirk { i16 6058, i16 20561, i16 -1, i32 107, ptr @.str.534 }, %struct.snd_pci_quirk { i16 6058, i16 20563, i16 -1, i32 107, ptr @.str.535 }, %struct.snd_pci_quirk { i16 6058, i16 20573, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20575, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20578, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20745, i16 -1, i32 50, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20766, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 20767, i16 -1, i32 127, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6058, i16 -25004, i16 -1, i32 6, ptr @.str.536 }, %struct.snd_pci_quirk { i16 6217, i16 4659, i16 -1, i32 218, ptr @.str.537 }, %struct.snd_pci_quirk { i16 6629, i16 12804, i16 -1, i32 130, ptr @.str.538 }, %struct.snd_pci_quirk { i16 6965, i16 4661, i16 -1, i32 181, ptr @.str.539 }, %struct.snd_pci_quirk { i16 6965, i16 4662, i16 -1, i32 182, ptr @.str.540 }, %struct.snd_pci_quirk { i16 6965, i16 4663, i16 -1, i32 183, ptr @.str.541 }, %struct.snd_pci_quirk { i16 7037, i16 -22479, i16 -1, i32 54, ptr @.str.542 }, %struct.snd_pci_quirk { i16 7174, i16 8211, i16 -1, i32 184, ptr @.str.543 }, %struct.snd_pci_quirk { i16 7174, i16 8213, i16 -1, i32 185, ptr @.str.544 }, %struct.snd_pci_quirk { i16 7429, i16 4402, i16 -1, i32 216, ptr @.str.545 }, %struct.snd_pci_quirk { i16 7538, i16 5634, i16 -1, i32 190, ptr @.str.546 }, %struct.snd_pci_quirk { i16 7538, i16 5889, i16 -1, i32 95, ptr @.str.547 }, %struct.snd_pci_quirk { i16 7538, i16 6401, i16 -1, i32 149, ptr @.str.548 }, %struct.snd_pci_quirk { i16 7538, i16 6471, i16 -1, i32 190, ptr @.str.549 }, %struct.snd_pci_quirk { i16 -32634, i16 8308, i16 -1, i32 187, ptr @.str.550 }, %struct.snd_pci_quirk { i16 -32634, i16 8320, i16 -1, i32 186, ptr @.str.551 }, %struct.snd_pci_quirk { i16 -32634, i16 8321, i16 -1, i32 189, ptr @.str.552 }, %struct.snd_pci_quirk zeroinitializer], [1824 x i8] zeroinitializer }, align 32
@alc269_fixups = internal constant { [225 x %struct.hda_fixup], [912 x i8] } { [225 x %struct.hda_fixup] [%struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio2 } }, %struct.hda_fixup { i32 4, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral } }, %struct.hda_fixup { i32 3, i8 -128, i32 1, %union.anon.74 { ptr @alc275_fixup_gpio4_off } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.553 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_sku_ignore } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.554 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.555 } }, %struct.hda_fixup { i32 3, i8 -128, i32 2, %union.anon.74 { ptr @alc269_fixup_hweq } }, %struct.hda_fixup { i32 3, i8 -128, i32 1, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc271_fixup_dmic } }, %struct.hda_fixup { i32 3, i8 -128, i32 13, %union.anon.74 { ptr @alc269_fixup_pcm_44k } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_stereo_dmic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_headset_mic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_quanta_mute } }, %struct.hda_fixup { i32 1, i8 -128, i32 13, %union.anon.74 { ptr @.compoundliteral.556 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.557 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.558 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_pincfg_no_hp_to_lineout } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_pincfg_U7x7_headset_mic } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.559 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.560 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.561 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.562 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_hp_mute_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_hp_mute_led_mic1 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_hp_mute_led_mic2 } }, %struct.hda_fixup { i32 3, i8 -128, i32 135, %union.anon.74 { ptr @alc269_fixup_hp_mute_led_mic3 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_hp_gpio_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_hp_gpio_mic1_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_hp_line1_mic1_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 1, i8 -128, i32 35, %union.anon.74 { ptr @.compoundliteral.563 } }, %struct.hda_fixup { i32 3, i8 -128, i32 31, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_no_shutup } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.564 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc269_fixup_pincfg_no_hp_to_lineout } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.565 } }, %struct.hda_fixup { i32 1, i8 -128, i32 41, %union.anon.74 { ptr @.compoundliteral.566 } }, %struct.hda_fixup { i32 1, i8 -128, i32 41, %union.anon.74 { ptr @.compoundliteral.567 } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.568 } }, %struct.hda_fixup { i32 3, i8 -128, i32 75, %union.anon.74 { ptr @alc_fixup_headset_mode } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_mode_no_hp_mic } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.569 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_x101_headset_mic } }, %struct.hda_fixup { i32 2, i8 -128, i32 43, %union.anon.74 { ptr @.compoundliteral.570 } }, %struct.hda_fixup { i32 1, i8 -128, i32 44, %union.anon.74 { ptr @.compoundliteral.571 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.572 } }, %struct.hda_fixup { i32 3, i8 -128, i32 46, %union.anon.74 { ptr @alc271_hp_gate_mic_jack } }, %struct.hda_fixup { i32 3, i8 -128, i32 47, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 1, i8 -128, i32 9, %union.anon.74 { ptr @.compoundliteral.573 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 3, i8 -128, i32 22, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 2, i8 -128, i32 51, %union.anon.74 { ptr @.compoundliteral.574 } }, %struct.hda_fixup { i32 3, i8 -128, i32 24, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.575 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc283_fixup_chromebook } }, %struct.hda_fixup { i32 3, i8 -128, i32 55, %union.anon.74 { ptr @alc283_fixup_sense_combo_jack } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc282_fixup_asus_tx300 } }, %struct.hda_fixup { i32 2, i8 -128, i32 50, %union.anon.74 { ptr @.compoundliteral.576 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc290_fixup_mono_speakers } }, %struct.hda_fixup { i32 3, i8 -128, i32 38, %union.anon.74 { ptr @alc290_fixup_mono_speakers } }, %struct.hda_fixup { i32 1, i8 -128, i32 59, %union.anon.74 { ptr @.compoundliteral.577 } }, %struct.hda_fixup { i32 1, i8 -128, i32 60, %union.anon.74 { ptr @.compoundliteral.578 } }, %struct.hda_fixup { i32 3, i8 -128, i32 4, %union.anon.74 { ptr @alc_fixup_thinkpad_acpi } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 1, i8 -128, i32 69, %union.anon.74 { ptr @.compoundliteral.579 } }, %struct.hda_fixup { i32 1, i8 -128, i32 69, %union.anon.74 { ptr @.compoundliteral.580 } }, %struct.hda_fixup { i32 1, i8 -128, i32 69, %union.anon.74 { ptr @.compoundliteral.581 } }, %struct.hda_fixup { i32 1, i8 -128, i32 70, %union.anon.74 { ptr @.compoundliteral.582 } }, %struct.hda_fixup { i32 3, i8 -128, i32 75, %union.anon.74 { ptr @alc_fixup_headset_mode_alc255 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_mode_alc255_no_hp_mic } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.583 } }, %struct.hda_fixup { i32 3, i8 -128, i32 50, %union.anon.74 { ptr @alc_fixup_tpt440_dock } }, %struct.hda_fixup { i32 3, i8 -128, i32 72, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.584 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_micmute_led } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.585 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269vb_fixup_aspire_e1_coef } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc280_fixup_hp_gpio4 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc286_fixup_hp_gpio_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc280_fixup_hp_gpio2_mic_hotkey } }, %struct.hda_fixup { i32 1, i8 -128, i32 78, %union.anon.74 { ptr @.compoundliteral.586 } }, %struct.hda_fixup { i32 1, i8 -128, i32 28, %union.anon.74 { ptr @.compoundliteral.587 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc280_fixup_hp_9480m } }, %struct.hda_fixup { i32 3, i8 -128, i32 198, %union.anon.74 { ptr @alc245_fixup_hp_x360_amp } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc285_fixup_hp_spectre_x360_eb1 } }, %struct.hda_fixup { i32 3, i8 -128, i32 75, %union.anon.74 { ptr @alc_fixup_headset_mode_dell_alc288 } }, %struct.hda_fixup { i32 1, i8 -128, i32 86, %union.anon.74 { ptr @.compoundliteral.588 } }, %struct.hda_fixup { i32 3, i8 -128, i32 89, %union.anon.74 { ptr @alc_fixup_dell_xps13 } }, %struct.hda_fixup { i32 3, i8 -128, i32 87, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 3, i8 -128, i32 92, %union.anon.74 { ptr @alc_fixup_dell_xps13 } }, %struct.hda_fixup { i32 3, i8 64, i32 90, %union.anon.74 { ptr @alc_fixup_micmute_led } }, %struct.hda_fixup { i32 3, i8 -128, i32 37, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 3, i8 -128, i32 71, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 1, i8 64, i32 40, %union.anon.74 { ptr @.compoundliteral.589 } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.590 } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.591 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.592 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc233_fixup_lenovo_line2_mic_hotkey } }, %struct.hda_fixup { i32 3, i8 -128, i32 67, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 3, i8 -128, i32 36, %union.anon.74 { ptr @alc_fixup_disable_mic_vref } }, %struct.hda_fixup { i32 2, i8 -128, i32 101, %union.anon.74 { ptr @.compoundliteral.593 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc295_fixup_disable_dac3 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc285_fixup_speaker2_to_dac1 } }, %struct.hda_fixup { i32 3, i8 -128, i32 12, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.594 } }, %struct.hda_fixup { i32 3, i8 -128, i32 98, %union.anon.74 { ptr @alc_fixup_tpt440_dock } }, %struct.hda_fixup { i32 3, i8 -128, i32 96, %union.anon.74 { ptr @alc298_fixup_speaker_volume } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc298_fixup_speaker_volume } }, %struct.hda_fixup { i32 1, i8 -128, i32 67, %union.anon.74 { ptr @.compoundliteral.595 } }, %struct.hda_fixup { i32 3, i8 -128, i32 33, %union.anon.74 { ptr @alc_fixup_auto_mute_via_amp } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.596 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_mode } }, %struct.hda_fixup { i32 1, i8 -128, i32 113, %union.anon.74 { ptr @.compoundliteral.597 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio4 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.598 } }, %struct.hda_fixup { i32 2, i8 -128, i32 116, %union.anon.74 { ptr @.compoundliteral.599 } }, %struct.hda_fixup { i32 3, i8 -128, i32 0, %union.anon.74 { ptr @alc233_alc662_fixup_lenovo_dual_codecs } }, %struct.hda_fixup { i32 2, i8 -128, i32 116, %union.anon.74 { ptr @.compoundliteral.600 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.601 } }, %struct.hda_fixup { i32 1, i8 -128, i32 122, %union.anon.74 { ptr @.compoundliteral.602 } }, %struct.hda_fixup { i32 3, i8 -128, i32 41, %union.anon.74 { ptr @alc225_fixup_s3_pop_noise } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.603 } }, %struct.hda_fixup { i32 3, i8 -128, i32 36, %union.anon.74 { ptr @alc274_fixup_bind_dacs } }, %struct.hda_fixup { i32 1, i8 -128, i32 124, %union.anon.74 { ptr @.compoundliteral.604 } }, %struct.hda_fixup { i32 3, i8 -128, i32 98, %union.anon.74 { ptr @alc_fixup_tpt470_dock } }, %struct.hda_fixup { i32 3, i8 -128, i32 126, %union.anon.74 { ptr @alc_fixup_tpt470_dacs } }, %struct.hda_fixup { i32 1, i8 -128, i32 67, %union.anon.74 { ptr @.compoundliteral.605 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.606 } }, %struct.hda_fixup { i32 1, i8 -128, i32 75, %union.anon.74 { ptr @.compoundliteral.607 } }, %struct.hda_fixup { i32 3, i8 -128, i32 75, %union.anon.74 { ptr @alc298_fixup_huawei_mbx_stereo } }, %struct.hda_fixup { i32 3, i8 -128, i32 26, %union.anon.74 { ptr @alc295_fixup_hp_top_speakers } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.608 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc285_fixup_invalidate_dacs } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_auto_mute_via_amp } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.609 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.610 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.611 } }, %struct.hda_fixup { i32 2, i8 -128, i32 138, %union.anon.74 { ptr @.compoundliteral.612 } }, %struct.hda_fixup { i32 1, i8 -128, i32 41, %union.anon.74 { ptr @.compoundliteral.613 } }, %struct.hda_fixup { i32 2, i8 -128, i32 134, %union.anon.74 { ptr @.compoundliteral.614 } }, %struct.hda_fixup { i32 1, i8 -128, i32 70, %union.anon.74 { ptr @.compoundliteral.615 } }, %struct.hda_fixup { i32 3, i8 -128, i32 144, %union.anon.74 { ptr @alc295_fixup_chromebook } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_jack } }, %struct.hda_fixup { i32 1, i8 -128, i32 146, %union.anon.74 { ptr @.compoundliteral.616 } }, %struct.hda_fixup { i32 3, i8 -128, i32 147, %union.anon.74 { ptr @alc_fixup_auto_mute_via_amp } }, %struct.hda_fixup { i32 3, i8 -128, i32 41, %union.anon.74 { ptr @alc_fixup_disable_mic_vref } }, %struct.hda_fixup { i32 2, i8 -128, i32 136, %union.anon.74 { ptr @.compoundliteral.617 } }, %struct.hda_fixup { i32 1, i8 -128, i32 113, %union.anon.74 { ptr @.compoundliteral.618 } }, %struct.hda_fixup { i32 1, i8 -128, i32 113, %union.anon.74 { ptr @.compoundliteral.619 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.620 } }, %struct.hda_fixup { i32 1, i8 -128, i32 113, %union.anon.74 { ptr @.compoundliteral.621 } }, %struct.hda_fixup { i32 1, i8 -128, i32 39, %union.anon.74 { ptr @.compoundliteral.622 } }, %struct.hda_fixup { i32 3, i8 -128, i32 153, %union.anon.74 { ptr @alc285_fixup_speaker2_to_dac1 } }, %struct.hda_fixup { i32 3, i8 -128, i32 138, %union.anon.74 { ptr @alc285_fixup_speaker2_to_dac1 } }, %struct.hda_fixup { i32 3, i8 -128, i32 155, %union.anon.74 { ptr @alc_fixup_gpio4 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc285_fixup_thinkpad_x1_gen7 } }, %struct.hda_fixup { i32 3, i8 -128, i32 157, %union.anon.74 { ptr @alc_fixup_headset_jack } }, %struct.hda_fixup { i32 2, i8 -128, i32 138, %union.anon.74 { ptr @.compoundliteral.623 } }, %struct.hda_fixup { i32 2, i8 -128, i32 177, %union.anon.74 { ptr @.compoundliteral.624 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc294_fixup_gx502_hp } }, %struct.hda_fixup { i32 1, i8 -128, i32 163, %union.anon.74 { ptr @.compoundliteral.625 } }, %struct.hda_fixup { i32 2, i8 -128, i32 161, %union.anon.74 { ptr @.compoundliteral.626 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc294_fixup_gu502_hp } }, %struct.hda_fixup { i32 1, i8 -128, i32 166, %union.anon.74 { ptr @.compoundliteral.627 } }, %struct.hda_fixup { i32 2, i8 -128, i32 164, %union.anon.74 { ptr @.compoundliteral.628 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc285_fixup_hp_gpio_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc285_fixup_hp_mute_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc236_fixup_hp_gpio_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc236_fixup_hp_mute_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc236_fixup_hp_mute_led_micmute_vref } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.629 } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.630 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.631 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.632 } }, %struct.hda_fixup { i32 1, i8 -128, i32 12, %union.anon.74 { ptr @.compoundliteral.633 } }, %struct.hda_fixup { i32 3, i8 -128, i32 178, %union.anon.74 { ptr @alc289_fixup_asus_ga401 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.634 } }, %struct.hda_fixup { i32 1, i8 -128, i32 113, %union.anon.74 { ptr @.compoundliteral.635 } }, %struct.hda_fixup { i32 3, i8 -128, i32 167, %union.anon.74 { ptr @alc285_fixup_hp_gpio_amp_init } }, %struct.hda_fixup { i32 1, i8 0, i32 20, %union.anon.74 { ptr @.compoundliteral.636 } }, %struct.hda_fixup { i32 1, i8 0, i32 20, %union.anon.74 { ptr @.compoundliteral.637 } }, %struct.hda_fixup { i32 1, i8 0, i32 20, %union.anon.74 { ptr @.compoundliteral.638 } }, %struct.hda_fixup { i32 1, i8 0, i32 20, %union.anon.74 { ptr @.compoundliteral.639 } }, %struct.hda_fixup { i32 1, i8 0, i32 20, %union.anon.74 { ptr @.compoundliteral.640 } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.641 } }, %struct.hda_fixup { i32 3, i8 -128, i32 188, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.642 } }, %struct.hda_fixup { i32 2, i8 -128, i32 178, %union.anon.74 { ptr @.compoundliteral.643 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.644 } }, %struct.hda_fixup { i32 3, i8 -128, i32 191, %union.anon.74 { ptr @alc274_fixup_hp_headset_mic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc274_fixup_hp_envy_gpio } }, %struct.hda_fixup { i32 2, i8 -128, i32 138, %union.anon.74 { ptr @.compoundliteral.645 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc_fixup_headset_jack } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc287_fixup_hp_gpio_led } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc274_fixup_hp_headset_mic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc245_fixup_hp_gpio_led } }, %struct.hda_fixup { i32 3, i8 -128, i32 67, %union.anon.74 { ptr @alc_fixup_no_int_mic } }, %struct.hda_fixup { i32 1, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.646 } }, %struct.hda_fixup { i32 3, i8 -128, i32 65, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 1, i8 -128, i32 41, %union.anon.74 { ptr @.compoundliteral.647 } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc285_fixup_ideapad_s740_coef } }, %struct.hda_fixup { i32 3, i8 -128, i32 168, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc295_fixup_asus_dacs } }, %struct.hda_fixup { i32 1, i8 -128, i32 29, %union.anon.74 { ptr @.compoundliteral.648 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc285_fixup_hp_spectre_x360 } }, %struct.hda_fixup { i32 3, i8 -128, i32 158, %union.anon.74 { ptr @alc285_fixup_ideapad_s740_coef } }, %struct.hda_fixup { i32 3, i8 -128, i32 74, %union.anon.74 { ptr @alc_fixup_no_shutup } }, %struct.hda_fixup { i32 1, i8 -128, i32 190, %union.anon.74 { ptr @.compoundliteral.649 } }, %struct.hda_fixup { i32 3, i8 -128, i32 171, %union.anon.74 { ptr @alc269_fixup_limit_int_mic_boost } }, %struct.hda_fixup { i32 2, i8 -128, i32 213, %union.anon.74 { ptr @.compoundliteral.650 } }, %struct.hda_fixup { i32 3, i8 -128, i32 40, %union.anon.74 { ptr @alc287_fixup_legion_15imhg05_speakers } }, %struct.hda_fixup { i32 2, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.651 } }, %struct.hda_fixup { i32 2, i8 -128, i32 40, %union.anon.74 { ptr @.compoundliteral.652 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc256_fixup_set_coef_defaults } }, %struct.hda_fixup { i32 1, i8 -128, i32 41, %union.anon.74 { ptr @.compoundliteral.653 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc233_fixup_no_audio_jack } }, %struct.hda_fixup { i32 3, i8 -128, i32 41, %union.anon.74 { ptr @alc256_fixup_mic_no_presence_and_resume } }, %struct.hda_fixup { i32 3, i8 -128, i32 221, %union.anon.74 { ptr @alc285_fixup_ideapad_s740_coef } }, %struct.hda_fixup { i32 3, i8 -128, i32 63, %union.anon.74 { ptr @alc287_fixup_legion_15imhg05_speakers } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc287_fixup_legion_16achg6_speakers } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @cs35l41_fixup_i2c_two } }, %struct.hda_fixup { i32 2, i8 -128, i32 168, %union.anon.74 { ptr @.compoundliteral.654 } }], [912 x i8] zeroinitializer }, align 32
@patch_alc269.__UNIQUE_ID_ddebug262 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.77, ptr @.str.78, ptr @.str.79, i8 9, i8 -41, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.77 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"patch_alc269\00", [19 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"sound/pci/hda/patch_realtek.c\00", [34 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Clear wrong fixup for ASUS ROG Strix G17\0A\00", [54 x i8] zeroinitializer }, align 32
@alc269_pin_fixup_tbl = internal constant { [95 x %struct.snd_hda_pin_quirk], [468 x i8] } { [95 x %struct.snd_hda_pin_quirk] [%struct.snd_hda_pin_quirk { i32 283902497, i16 4156, ptr @.compoundliteral.703, ptr @.str.704, i32 133 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4133, ptr @.compoundliteral.705, ptr @.str.706, i32 65 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4163, ptr @.compoundliteral.707, ptr @.str.708, i32 66 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4163, ptr @.compoundliteral.709, ptr @.str.708, i32 66 }, %struct.snd_hda_pin_quirk { i32 283902501, i16 4136, ptr @.compoundliteral.710, ptr @.str.285, i32 102 }, %struct.snd_hda_pin_quirk { i32 283902501, i16 4136, ptr @.compoundliteral.711, ptr @.str.285, i32 102 }, %struct.snd_hda_pin_quirk { i32 283902501, i16 4136, ptr @.compoundliteral.712, ptr @.str.285, i32 102 }, %struct.snd_hda_pin_quirk { i32 283902501, i16 4136, ptr @.compoundliteral.713, ptr @.str.285, i32 102 }, %struct.snd_hda_pin_quirk { i32 283902501, i16 4136, ptr @.compoundliteral.714, ptr @.str.285, i32 102 }, %struct.snd_hda_pin_quirk { i32 283902515, i16 -32634, ptr @.compoundliteral.715, ptr @.str.716, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902517, i16 6058, ptr @.compoundliteral.717, ptr @.str.718, i32 99 }, %struct.snd_hda_pin_quirk { i32 283902517, i16 6058, ptr @.compoundliteral.719, ptr @.str.718, i32 120 }, %struct.snd_hda_pin_quirk { i32 283902517, i16 6058, ptr @.compoundliteral.720, ptr @.str.718, i32 120 }, %struct.snd_hda_pin_quirk { i32 283902517, i16 6058, ptr @.compoundliteral.721, ptr @.str.718, i32 120 }, %struct.snd_hda_pin_quirk { i32 283902518, i16 4136, ptr @.compoundliteral.722, ptr @.str.285, i32 199 }, %struct.snd_hda_pin_quirk { i32 283902518, i16 4156, ptr @.compoundliteral.723, ptr @.str.309, i32 197 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.724, ptr @.str.285, i32 68 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.725, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.726, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.727, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.728, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.729, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.730, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.731, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.732, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.733, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.734, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.735, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.736, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.737, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.738, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.739, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.740, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.741, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.742, ptr @.str.743, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.744, ptr @.str.745, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902549, i16 4136, ptr @.compoundliteral.746, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4163, ptr @.compoundliteral.747, ptr @.str.708, i32 114 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4163, ptr @.compoundliteral.748, ptr @.str.708, i32 114 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4163, ptr @.compoundliteral.749, ptr @.str.708, i32 150 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4163, ptr @.compoundliteral.750, ptr @.str.708, i32 150 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4163, ptr @.compoundliteral.751, ptr @.str.708, i32 150 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4156, ptr @.compoundliteral.752, ptr @.str.309, i32 197 }, %struct.snd_hda_pin_quirk { i32 283902580, i16 4156, ptr @.compoundliteral.753, ptr @.str.309, i32 192 }, %struct.snd_hda_pin_quirk { i32 283902592, i16 4156, ptr @.compoundliteral.754, ptr @.str.309, i32 78 }, %struct.snd_hda_pin_quirk { i32 283902592, i16 4156, ptr @.compoundliteral.755, ptr @.str.309, i32 28 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4156, ptr @.compoundliteral.756, ptr @.str.757, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4156, ptr @.compoundliteral.758, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4156, ptr @.compoundliteral.759, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4156, ptr @.compoundliteral.760, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4156, ptr @.compoundliteral.761, ptr @.str.309, i32 29 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4133, ptr @.compoundliteral.762, ptr @.str.706, i32 200 }, %struct.snd_hda_pin_quirk { i32 283902594, i16 4133, ptr @.compoundliteral.763, ptr @.str.706, i32 200 }, %struct.snd_hda_pin_quirk { i32 283902595, i16 4136, ptr @.compoundliteral.764, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902595, i16 4136, ptr @.compoundliteral.765, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902595, i16 4136, ptr @.compoundliteral.766, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902597, i16 6058, ptr @.compoundliteral.767, ptr @.str.718, i32 141 }, %struct.snd_hda_pin_quirk { i32 283902597, i16 6058, ptr @.compoundliteral.768, ptr @.str.718, i32 141 }, %struct.snd_hda_pin_quirk { i32 283902597, i16 6058, ptr @.compoundliteral.769, ptr @.str.718, i32 195 }, %struct.snd_hda_pin_quirk { i32 283902599, i16 6058, ptr @.compoundliteral.770, ptr @.str.718, i32 158 }, %struct.snd_hda_pin_quirk { i32 283902598, i16 4133, ptr @.compoundliteral.771, ptr @.str.706, i32 136 }, %struct.snd_hda_pin_quirk { i32 283902600, i16 4136, ptr @.compoundliteral.772, ptr @.str.285, i32 87 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.773, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.774, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.775, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.776, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.777, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.778, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902608, i16 4156, ptr @.compoundliteral.779, ptr @.str.309, i32 24 }, %struct.snd_hda_pin_quirk { i32 283902610, i16 4136, ptr @.compoundliteral.780, ptr @.str.285, i32 37 }, %struct.snd_hda_pin_quirk { i32 283902610, i16 4136, ptr @.compoundliteral.781, ptr @.str.285, i32 37 }, %struct.snd_hda_pin_quirk { i32 283902610, i16 4136, ptr @.compoundliteral.782, ptr @.str.285, i32 38 }, %struct.snd_hda_pin_quirk { i32 283902611, i16 4136, ptr @.compoundliteral.783, ptr @.str.285, i32 71 }, %struct.snd_hda_pin_quirk { i32 283902611, i16 4136, ptr @.compoundliteral.784, ptr @.str.285, i32 71 }, %struct.snd_hda_pin_quirk { i32 283902612, i16 4163, ptr @.compoundliteral.785, ptr @.str.708, i32 159 }, %struct.snd_hda_pin_quirk { i32 283902612, i16 4163, ptr @.compoundliteral.786, ptr @.str.708, i32 137 }, %struct.snd_hda_pin_quirk { i32 283902612, i16 4163, ptr @.compoundliteral.787, ptr @.str.708, i32 139 }, %struct.snd_hda_pin_quirk { i32 283902612, i16 4163, ptr @.compoundliteral.788, ptr @.str.708, i32 139 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4163, ptr @.compoundliteral.789, ptr @.str.708, i32 139 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4163, ptr @.compoundliteral.790, ptr @.str.708, i32 173 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4163, ptr @.compoundliteral.791, ptr @.str.708, i32 173 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4163, ptr @.compoundliteral.792, ptr @.str.708, i32 173 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4136, ptr @.compoundliteral.793, ptr @.str.285, i32 39 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4136, ptr @.compoundliteral.794, ptr @.str.285, i32 39 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4136, ptr @.compoundliteral.795, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4136, ptr @.compoundliteral.796, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902613, i16 4136, ptr @.compoundliteral.797, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283902616, i16 4136, ptr @.compoundliteral.798, ptr @.str.285, i32 95 }, %struct.snd_hda_pin_quirk { i32 283902616, i16 4136, ptr @.compoundliteral.799, ptr @.str.285, i32 95 }, %struct.snd_hda_pin_quirk { i32 283902616, i16 4136, ptr @.compoundliteral.800, ptr @.str.285, i32 95 }, %struct.snd_hda_pin_quirk { i32 283902616, i16 4136, ptr @.compoundliteral.801, ptr @.str.285, i32 108 }, %struct.snd_hda_pin_quirk { i32 283902616, i16 4136, ptr @.compoundliteral.802, ptr @.str.285, i32 94 }, %struct.snd_hda_pin_quirk { i32 283902617, i16 4136, ptr @.compoundliteral.803, ptr @.str.285, i32 39 }, %struct.snd_hda_pin_quirk { i32 283903523, i16 6058, ptr @.compoundliteral.804, ptr @.str.718, i32 74 }, %struct.snd_hda_pin_quirk zeroinitializer], [468 x i8] zeroinitializer }, align 32
@alc269_fallback_pin_fixup_tbl = internal constant { [5 x %struct.snd_hda_pin_quirk], [60 x i8] } { [5 x %struct.snd_hda_pin_quirk] [%struct.snd_hda_pin_quirk { i32 283902601, i16 4136, ptr @.compoundliteral.805, ptr @.str.285, i32 39 }, %struct.snd_hda_pin_quirk { i32 283902550, i16 4136, ptr @.compoundliteral.806, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902518, i16 4136, ptr @.compoundliteral.807, ptr @.str.285, i32 67 }, %struct.snd_hda_pin_quirk { i32 283902580, i16 4136, ptr @.compoundliteral.808, ptr @.str.285, i32 125 }, %struct.snd_hda_pin_quirk zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc269_fixup_vendor_tbl = internal constant { [6 x %struct.snd_pci_quirk], [32 x i8] } { [6 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4133, i16 0, i16 0, i32 9, ptr @.str.809 }, %struct.snd_pci_quirk { i16 4156, i16 0, i16 0, i32 23, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4173, i16 0, i16 0, i32 1, ptr @.str.399 }, %struct.snd_pci_quirk { i16 6058, i16 0, i16 0, i32 63, ptr @.str.501 }, %struct.snd_pci_quirk { i16 6629, i16 0, i16 0, i32 75, ptr @.str.810 }, %struct.snd_pci_quirk zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc_patch_ops = internal constant { %struct.hda_codec_ops, [56 x i8] } { %struct.hda_codec_ops { ptr @alc_build_controls, ptr @snd_hda_gen_build_pcms, ptr @alc_init, ptr @snd_hda_gen_free, ptr @snd_hda_jack_unsol_event, ptr null, ptr @alc_suspend, ptr @alc_resume, ptr @snd_hda_gen_check_power_status, ptr null }, [56 x i8] zeroinitializer }, align 32
@alc_alloc_spec.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.80 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&spec->coef_mutex\00", [46 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@alc_auto_setup_eapd.pins = internal constant { [6 x i16], [20 x i8] } { [6 x i16] [i16 15, i16 16, i16 20, i16 21, i16 23, i16 0], [20 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"shutup\00", [25 x i8] zeroinitializer }, align 32
@rename_tbl = internal constant { [18 x %struct.alc_codec_rename_table], [40 x i8] } { [18 x %struct.alc_codec_rename_table] [%struct.alc_codec_rename_table { i32 283902497, i16 -4081, i16 4099, ptr @.str.6 }, %struct.alc_codec_rename_table { i32 283902569, i16 -16, i16 12304, ptr @.str.82 }, %struct.alc_codec_rename_table { i32 283902569, i16 -3856, i16 8208, ptr @.str.83 }, %struct.alc_codec_rename_table { i32 283902569, i16 -3856, i16 12304, ptr @.str.84 }, %struct.alc_codec_rename_table { i32 283902569, i16 240, i16 16, ptr @.str.85 }, %struct.alc_codec_rename_table { i32 283902569, i16 -1, i16 -24541, ptr @.str.83 }, %struct.alc_codec_rename_table { i32 283902569, i16 -1, i16 24611, ptr @.str.86 }, %struct.alc_codec_rename_table { i32 283902569, i16 240, i16 32, ptr @.str.87 }, %struct.alc_codec_rename_table { i32 283902569, i16 240, i16 48, ptr @.str.88 }, %struct.alc_codec_rename_table { i32 283903586, i16 -1, i16 16416, ptr @.str.89 }, %struct.alc_codec_rename_table { i32 283904135, i16 240, i16 48, ptr @.str.90 }, %struct.alc_codec_rename_table { i32 283904136, i16 240, i16 48, ptr @.str.91 }, %struct.alc_codec_rename_table { i32 283904136, i16 -3856, i16 12320, ptr @.str.92 }, %struct.alc_codec_rename_table { i32 283904153, i16 8192, i16 8192, ptr @.str.93 }, %struct.alc_codec_rename_table { i32 283904146, i16 -1, i16 -32736, ptr @.str.94 }, %struct.alc_codec_rename_table { i32 283904146, i16 -1, i16 -32751, ptr @.str.94 }, %struct.alc_codec_rename_table { i32 283904146, i16 -1, i16 16401, ptr @.str.89 }, %struct.alc_codec_rename_table zeroinitializer], [40 x i8] zeroinitializer }, align 32
@rename_pci_tbl = internal constant { [28 x %struct.alc_codec_rename_pci_table], [80 x i8] } { [28 x %struct.alc_codec_rename_pci_table] [%struct.alc_codec_rename_pci_table { i32 283902592, i16 4136, i16 0, ptr @.str.95 }, %struct.alc_codec_rename_pci_table { i32 283902594, i16 4136, i16 0, ptr @.str.96 }, %struct.alc_codec_rename_pci_table { i32 283902595, i16 4136, i16 0, ptr @.str.97 }, %struct.alc_codec_rename_pci_table { i32 283902600, i16 4136, i16 0, ptr @.str.98 }, %struct.alc_codec_rename_pci_table { i32 283902610, i16 4136, i16 0, ptr @.str.99 }, %struct.alc_codec_rename_pci_table { i32 283902611, i16 4136, i16 0, ptr @.str.100 }, %struct.alc_codec_rename_pci_table { i32 283902549, i16 4136, i16 0, ptr @.str.101 }, %struct.alc_codec_rename_pci_table { i32 283903592, i16 4136, i16 0, ptr @.str.102 }, %struct.alc_codec_rename_pci_table { i32 283902581, i16 4136, i16 0, ptr @.str.103 }, %struct.alc_codec_rename_pci_table { i32 283904153, i16 4136, i16 0, ptr @.str.104 }, %struct.alc_codec_rename_pci_table { i32 283902616, i16 4136, i16 0, ptr @.str.105 }, %struct.alc_codec_rename_pci_table { i32 283902518, i16 4136, i16 0, ptr @.str.106 }, %struct.alc_codec_rename_pci_table { i32 283902550, i16 4136, i16 0, ptr @.str.107 }, %struct.alc_codec_rename_pci_table { i32 283902501, i16 4136, i16 0, ptr @.str.108 }, %struct.alc_codec_rename_pci_table { i32 283902613, i16 4136, i16 0, ptr @.str.109 }, %struct.alc_codec_rename_pci_table { i32 283902617, i16 4136, i16 0, ptr @.str.110 }, %struct.alc_codec_rename_pci_table { i32 283903600, i16 4133, i16 0, ptr @.str.111 }, %struct.alc_codec_rename_pci_table { i32 283903606, i16 4133, i16 0, ptr @.str.112 }, %struct.alc_codec_rename_pci_table { i32 283902594, i16 4163, i16 0, ptr @.str.113 }, %struct.alc_codec_rename_pci_table { i32 283902515, i16 4163, i16 0, ptr @.str.114 }, %struct.alc_codec_rename_pci_table { i32 283902592, i16 4156, i16 0, ptr @.str.115 }, %struct.alc_codec_rename_pci_table { i32 283902594, i16 4156, i16 0, ptr @.str.116 }, %struct.alc_codec_rename_pci_table { i32 283902598, i16 4156, i16 0, ptr @.str.117 }, %struct.alc_codec_rename_pci_table { i32 283902608, i16 4156, i16 0, ptr @.str.118 }, %struct.alc_codec_rename_pci_table { i32 283903592, i16 4156, i16 0, ptr @.str.119 }, %struct.alc_codec_rename_pci_table { i32 283902595, i16 6058, i16 0, ptr @.str.120 }, %struct.alc_codec_rename_pci_table { i32 283902610, i16 6058, i16 0, ptr @.str.121 }, %struct.alc_codec_rename_pci_table zeroinitializer], [80 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC277\00", [25 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC259\00", [25 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC258\00", [25 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ALC269VB\00", [23 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC281X\00", [24 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ALC269VC\00", [23 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ALC269VD\00", [23 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC656\00", [25 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ALC887-VD\00", [22 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ALC888-VD\00", [22 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC886\00", [25 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC899\00", [25 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ALC661\00", [25 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3220\00", [24 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3221\00", [24 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3223\00", [24 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3263\00", [24 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3226\00", [24 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3235\00", [24 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3234\00", [24 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3661\00", [24 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3260\00", [24 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3861\00", [24 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3266\00", [24 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3204\00", [24 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3246\00", [24 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3253\00", [24 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3254\00", [24 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3271\00", [24 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC669X\00", [24 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC679X\00", [24 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3229\00", [24 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3236\00", [24 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3228\00", [24 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3227\00", [24 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3242\00", [24 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3241\00", [24 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3662\00", [24 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3239\00", [24 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC3232\00", [24 x i8] zeroinitializer }, align 32
@alc282_coefs = internal constant { [30 x %struct.coef_fw], [44 x i8] } { [30 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 3, i16 -1, i16 2 }, %struct.coef_fw { i8 32, i8 5, i16 -193, i16 1792 }, %struct.coef_fw { i8 32, i8 7, i16 -1, i16 512 }, %struct.coef_fw { i8 32, i8 6, i16 240, i16 0 }, %struct.coef_fw { i8 32, i8 8, i16 -4, i16 3116 }, %struct.coef_fw { i8 32, i8 10, i16 -1, i16 -13108 }, %struct.coef_fw { i8 32, i8 11, i16 -1, i16 -13108 }, %struct.coef_fw { i8 32, i8 14, i16 -1, i16 28160 }, %struct.coef_fw { i8 32, i8 15, i16 -2048, i16 4096 }, %struct.coef_fw { i8 32, i8 16, i16 -1024, i16 3072 }, %struct.coef_fw { i8 32, i8 111, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 12, i16 -512, i16 0 }, %struct.coef_fw { i8 32, i8 52, i16 -1, i16 -24384 }, %struct.coef_fw { i8 32, i8 22, i16 8, i16 0 }, %struct.coef_fw { i8 32, i8 29, i16 224, i16 0 }, %struct.coef_fw { i8 32, i8 31, i16 224, i16 0 }, %struct.coef_fw { i8 32, i8 33, i16 -1, i16 -30716 }, %struct.coef_fw { i8 32, i8 99, i16 -1, i16 10498 }, %struct.coef_fw { i8 32, i8 104, i16 -1, i16 -24448 }, %struct.coef_fw { i8 32, i8 105, i16 -1, i16 13312 }, %struct.coef_fw { i8 32, i8 106, i16 -1, i16 12094 }, %struct.coef_fw { i8 32, i8 107, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 109, i16 4095, i16 2304 }, %struct.coef_fw { i8 32, i8 110, i16 -1, i16 4362 }, %struct.coef_fw { i8 32, i8 112, i16 248, i16 216 }, %struct.coef_fw { i8 32, i8 113, i16 -1, i16 20 }, %struct.coef_fw { i8 32, i8 114, i16 -1, i16 -15686 }, %struct.coef_fw { i8 32, i8 119, i16 3968, i16 0 }, %struct.coef_fw { i8 32, i8 108, i16 -1, i16 -1018 }, %struct.coef_fw zeroinitializer], [44 x i8] zeroinitializer }, align 32
@alc283_coefs = internal constant { [34 x %struct.coef_fw], [52 x i8] } { [34 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 3, i16 -1, i16 2 }, %struct.coef_fw { i8 32, i8 5, i16 -193, i16 1792 }, %struct.coef_fw { i8 32, i8 7, i16 -1, i16 512 }, %struct.coef_fw { i8 32, i8 6, i16 240, i16 0 }, %struct.coef_fw { i8 32, i8 8, i16 -4, i16 3116 }, %struct.coef_fw { i8 32, i8 10, i16 -1, i16 -13108 }, %struct.coef_fw { i8 32, i8 11, i16 -1, i16 -13108 }, %struct.coef_fw { i8 32, i8 14, i16 -1, i16 28608 }, %struct.coef_fw { i8 32, i8 15, i16 -2048, i16 4096 }, %struct.coef_fw { i8 32, i8 16, i16 -1024, i16 3072 }, %struct.coef_fw { i8 32, i8 58, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 12, i16 -512, i16 0 }, %struct.coef_fw { i8 32, i8 34, i16 -1, i16 -24384 }, %struct.coef_fw { i8 83, i8 1, i16 15, i16 8 }, %struct.coef_fw { i8 32, i8 29, i16 224, i16 0 }, %struct.coef_fw { i8 32, i8 31, i16 224, i16 0 }, %struct.coef_fw { i8 32, i8 33, i16 -1, i16 -30716 }, %struct.coef_fw { i8 32, i8 46, i16 -1, i16 10498 }, %struct.coef_fw { i8 32, i8 51, i16 -1, i16 -24448 }, %struct.coef_fw { i8 32, i8 52, i16 -1, i16 13312 }, %struct.coef_fw { i8 32, i8 53, i16 -1, i16 12094 }, %struct.coef_fw { i8 32, i8 54, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 56, i16 4095, i16 2304 }, %struct.coef_fw { i8 32, i8 57, i16 -1, i16 4362 }, %struct.coef_fw { i8 32, i8 59, i16 248, i16 216 }, %struct.coef_fw { i8 32, i8 60, i16 -1, i16 20 }, %struct.coef_fw { i8 32, i8 61, i16 -1, i16 -15686 }, %struct.coef_fw { i8 32, i8 66, i16 3968, i16 0 }, %struct.coef_fw { i8 32, i8 73, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 64, i16 -2048, i16 -26624 }, %struct.coef_fw { i8 32, i8 66, i16 -4096, i16 8192 }, %struct.coef_fw { i8 32, i8 55, i16 -1, i16 -1018 }, %struct.coef_fw { i8 32, i8 27, i16 -32768, i16 0 }, %struct.coef_fw zeroinitializer], [52 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"laptop-amic\00", [20 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"laptop-dmic\00", [20 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc269-dmic\00", [20 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc271-dmic\00", [20 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"inv-dmic\00", [23 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"headset-mic\00", [20 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"headset-mode\00", [19 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"headset-mode-no-hp-mic\00", [41 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"lenovo-dock\00", [20 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"lenovo-dock-limit-boost\00", [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"hp-gpio-led\00", [20 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hp-dock-gpio-mic1-led\00", [42 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"dell-headset-multi\00", [45 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"dell-headset-dock\00", [46 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dell-headset3\00", [18 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dell-headset4\00", [18 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"alc283-dac-wcaps\00", [47 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"alc283-sense-combo\00", [45 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"tpt440-dock\00", [20 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tpt440\00", [25 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tpt460\00", [25 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"tpt470-dock-fix\00", [16 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"tpt470-dock\00", [20 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"dual-codecs\00", [20 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"alc700-ref\00", [21 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"vaio\00", [27 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"dell-m101z\00", [21 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-g73jw\00", [21 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"lenovo-eapd\00", [20 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sony-hweq\00", [22 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"pcm44k\00", [25 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"lifebook\00", [23 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"lifebook-extmic\00", [16 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"lifebook-hp-pin\00", [16 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"lifebook-u7x7\00", [18 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"alc269vb-amic\00", [18 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"alc269vb-dmic\00", [18 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hp-mute-led-mic1\00", [47 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hp-mute-led-mic2\00", [47 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hp-mute-led-mic3\00", [47 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"hp-gpio-mic1\00", [19 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hp-line1-mic1\00", [18 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"noshutup\00", [23 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sony-nomic\00", [21 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"aspire-headset-mic\00", [45 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-x101\00", [22 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"acer-ao7xx\00", [21 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"acer-aspire-e1\00", [17 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"acer-ac700\00", [21 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"limit-mic-boost\00", [16 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"asus-zenbook\00", [19 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"asus-zenbook-ux31a\00", [45 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ordissimo\00", [22 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-tx300\00", [21 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc283-int-mic\00", [17 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mono-speakers\00", [18 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"alc290-subwoofer\00", [47 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"thinkpad\00", [23 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dmic-thinkpad\00", [18 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc255-acer\00", [20 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc255-asus\00", [20 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"alc255-dell1\00", [19 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"alc255-dell2\00", [19 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"alc293-dell1\00", [19 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc283-headset\00", [17 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"alc255-dell-mute\00", [47 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"aspire-v5\00", [22 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"aspire-e1-coef\00", [17 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hp-gpio4\00", [23 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hp-gpio2-hotkey\00", [16 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"hp-dock-pins\00", [19 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hp-dock-gpio-mic\00", [47 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hp-9480m\00", [23 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"alc288-dell-headset\00", [44 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"alc288-dell1\00", [19 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"alc288-dell-xps13\00", [46 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dell-e7x\00", [23 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc293-dell\00", [20 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"alc298-dell1\00", [19 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alc298-dell-aio\00", [16 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alc275-dell-xps\00", [16 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"lenovo-spk-noise\00", [47 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"lenovo-hotkey\00", [18 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"dell-spk-noise\00", [17 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"alc225-dell1\00", [19 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"alc295-disable-dac3\00", [44 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"alc285-speaker2-to-dac1\00", [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"alc280-hp-headset\00", [46 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"alc221-hp-mic\00", [18 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"alc298-spk-volume\00", [46 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"dell-inspiron-7559\00", [45 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ativ-book\00", [22 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"alc256-asus-headset\00", [44 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alc256-asus-mic\00", [16 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alc256-asus-aio\00", [16 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc233-asus\00", [20 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc233-eapd\00", [20 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"alc294-lenovo-mic\00", [46 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc225-wyse\00", [20 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alc274-dell-aio\00", [16 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"alc255-dummy-lineout\00", [43 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"alc255-dell-headset\00", [44 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc295-hp-x360\00", [17 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"alc-headset-jack\00", [47 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alc-chrome-book\00", [16 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"predator-spk\00", [19 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"huawei-mbx-stereo\00", [46 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"alc256-medion-headset\00", [42 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"alc298-samsung-headphone\00", [39 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"alc255-xiaomi-headset\00", [42 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"alc274-hp-mic-detect\00", [43 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"alc245-hp-x360-amp\00", [45 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc295-hp-omen\00", [17 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"alc285-hp-spectre-x360\00", [41 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"alc285-hp-spectre-x360-eb1\00", [37 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"alc287-ideapad-bass-spk-amp\00", [36 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"alc623-lenovo-thinkstation-p340\00", [32 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"alc255-acer-headphone-and-mic\00", [34 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"alc285-hp-amp-init\00", [45 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Acer TravelMate 8371\00", [43 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Acer 1810TZ\00", [20 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Acer AOD260\00", [20 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Acer AC700\00", [21 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire V5-571G\00", [44 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Acer AO725\00", [21 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Acer AO756\00", [21 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Acer Aspire E1-472\00", [45 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Acer Aspire E1-572\00", [45 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire V5-573G\00", [44 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire V5-122P\00", [44 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Acer Aspire E1\00", [17 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton N2510G\00", [44 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire C24-860\00", [44 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire C20-820\00", [44 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Cloudbook 14\00", [46 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire E5-575T\00", [44 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire E5-523G\00", [44 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire ES1-432\00", [44 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton N4640G\00", [44 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton N6640G\00", [44 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Acer Predator Helios 500\00", [39 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Acer vCopperbox\00", [16 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton N4660G\00", [44 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer SWIFT SF314-54\00", [44 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton Z6860G\00", [44 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton Z4860G\00", [44 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Veriton Z4660G\00", [44 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer SWIFT SF314-55\00", [44 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer SWIFT SF314-56\00", [44 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire Z24-890\00", [44 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Acer TravelMate B114-21\00", [40 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Acer TravelMate X514-51T\00", [39 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Spin SP513-54N\00", [44 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Swift SF314-42\00", [44 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Acer TravelMate B311R-31\00", [39 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Acer Aspire A515-56\00", [44 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Dell M101z\00", [21 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Dell XPS one 2710\00", [46 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Latitude E6440\00", [44 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Latitude E6540\00", [44 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Latitude E7240\00", [44 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Latitude E7440\00", [44 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Dell Vostro 5460\00", [47 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Dell\00", [27 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Dell Vostro 5470\00", [47 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Latitude E5550\00", [44 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Latitude E7450\00", [44 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Dell Inspiron 5439\00", [45 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Dell XPS 13\00", [20 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Optiplex 9020m\00", [44 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Dell Vostro 5480\00", [47 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Dell Inspiron 7559\00", [45 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Dell Inspiron 3162\00", [45 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Precision 5820\00", [44 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Dell XPS 27 7760\00", [47 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Dell AIO\00", [23 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Dell Inspiron 17 7000 Gaming\00", [35 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Precision 7520\00", [44 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Dell WYSE\00", [22 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Precision 3630\00", [44 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Precision 3930\00", [44 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Dell WYSE AIO\00", [18 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dell WYSE NB\00", [19 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Dell Precision\00", [17 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Dell XPS 15 9510\00", [47 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Dell Precision 5560\00", [44 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Dell Latitude 5430\00", [45 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"HP\00", [29 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"HP EliteBook 755 G2\00", [44 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"HP Z240 SFF\00", [20 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HP Z240\00", [24 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"HP Pavilion 15\00", [17 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HP x360\00", [24 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"HP G3 mini\00", [21 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"HP G3 mini premium\00", [45 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"HP Spectre x360\00", [16 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"HP Pavilion 15-CK0xx\00", [43 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"HP Envy x360\00", [19 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"HP OMEN dc0019-ur\00", [46 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"HP Spectre x360 15-df0xxx\00", [38 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"HP ZBook 15 G6\00", [17 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"HP Elite Dragonfly G1\00", [42 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"HP Envy AiO 32\00", [17 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"HP Elite Dragonfly G2 Notebook PC\00", [62 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"HP EliteBook x360 1040 G8 Notebook PC\00", [58 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"HP EliteBook 850 G7\00", [44 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"HP EliteBook 840 G7\00", [44 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"HP ProBook 445 G7\00", [46 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"HP ProBook 435 G7\00", [46 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"HP ZBook Fury 17 G7 Mobile Workstation\00", [57 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"HP ZBook Fury 15 G7 Mobile Workstation\00", [57 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"HP OMEN 15\00", [21 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"HP ProBook 440 G8 Notebook PC\00", [34 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"HP ProBook 450 G8 Notebook PC\00", [34 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"HP ProBook 630 G8 Notebook PC\00", [34 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"HP ProBook 640 G8 Notebook PC\00", [34 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"HP Spectre x360 14\00", [45 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"HP ProBook 650 G8 Notebook PC\00", [34 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"HP EliteBook 830 G8 Notebook PC\00", [32 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"HP Spectre x360 15-eb1xxx\00", [38 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"HP EliteBook 850 G8 Notebook PC\00", [32 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"HP EliteBook x360 830 G8 Notebook PC\00", [59 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"HP EliteBook 840 Aero G8 Notebook PC\00", [59 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"HP EliteBook 840 G8 Notebook PC\00", [32 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"HP ProBook 445 G8 Notebook PC\00", [34 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"HP ZBook Fury 17.3 Inch G8 Mobile Workstation PC\00", [47 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"HP ZBook Fury 15.6 Inch G8 Mobile Workstation PC\00", [47 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"HP ZBook Studio 15.6 Inch G8 Mobile Workstation PC\00", [45 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"HP ZBook Power 15.6 inch G8 Mobile Workstation PC\00", [46 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"HP EliteBook 855 G8 Notebook PC\00", [32 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"HP EliteBook 845 G8 Notebook PC\00", [32 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"HP Pavilion 15-eh1xxx (mainboard 88D0)\00", [57 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X540SA\00", [20 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS TX300\00", [21 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Asus K53BE\00", [21 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX391UA\00", [19 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ASUS X540LA/X540LJ\00", [45 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Asus 1015E\00", [21 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X556UR\00", [20 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS Q524UQK\00", [19 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X430UN\00", [20 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X441SA\00", [20 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X441UV\00", [20 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X541SA\00", [20 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X541UV\00", [20 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS Z550SA\00", [20 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Asus Zenbook UX31E\00", [45 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Asus Zenbook UX31A\00", [45 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS UX50\00", [22 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX430UA\00", [19 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX431FL\00", [19 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS GV301QH\00", [19 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ASUS Zephyrus S/M\00", [46 x i8] zeroinitializer }, align 32
@.str.375 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Asus MJ401TA\00", [19 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Asus FX505DT\00", [19 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX563FD\00", [19 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX550VE\00", [19 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ASUS B1400CEPE\00", [17 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS B9450FA\00", [19 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX581LV\00", [19 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Asus G73Jw\00", [21 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X705UD\00", [20 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX431DA\00", [19 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Asus U41SV\00", [21 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS Z550MA\00", [20 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Asus X55U\00", [22 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X555UB\00", [20 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS TM420\00", [21 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ASUS Zephyrus G15\00", [46 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ASUS Zephyrus M15\00", [46 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ASUS Zephyrus G14\00", [46 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS GU603\00", [21 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS ZN270IE\00", [19 x i8] zeroinitializer }, align 32
@.str.395 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS P901\00", [22 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS S101\00", [22 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS P1005\00", [21 x i8] zeroinitializer }, align 32
@.str.398 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS X101CH\00", [20 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Sony VAIO\00", [22 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Sony VAIO S13\00", [18 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Sony VAIO Pro 11\00", [47 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Sony VAIO Pro 13\00", [47 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Lifebook\00", [23 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lifebook E780\00", [18 x i8] zeroinitializer }, align 32
@.str.405 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lifebook T731\00", [18 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lifebook U7x7\00", [18 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lifebook E752\00", [18 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lifebook U904\00", [18 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Intel Reference board\00", [42 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Medion EE4254 MD62100\00", [42 x i8] zeroinitializer }, align 32
@.str.411 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Panasonic CF-SZ6\00", [47 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Samsung Ativ book 9 (NP900X3G)\00", [33 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Samsung Notebook 9 Pen (NP930SBE-K01US)\00", [56 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Samsung Notebook 9 Pro (NP930MBE-K04US)\00", [56 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Samsung Galaxy Flex Book (NT950QCG-X716)\00", [55 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Samsung Galaxy Book Ion (NP930XCJ-K01US)\00", [55 x i8] zeroinitializer }, align 32
@.str.417 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Samsung Ativ book 8 (NP870Z5G)\00", [33 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Samsung Notebook Pen S (NT950SBE-X58)\00", [58 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Samsung Galaxy Book Ion (NT950XCJ-X716A)\00", [55 x i8] zeroinitializer }, align 32
@.str.420 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Gigabyte BXBT-2807\00", [45 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"MSI Cubi MS-B120\00", [47 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Cubi N 8GL (MS-B171)\00", [43 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Quanta NL3\00", [21 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo N130ZU\00", [19 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Clevo N15[01][CW]U\00", [45 x i8] zeroinitializer }, align 32
@.str.426 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo L140[CZ]U\00", [16 x i8] zeroinitializer }, align 32
@.str.427 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo N140CU\00", [19 x i8] zeroinitializer }, align 32
@.str.428 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo N150CU\00", [19 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo L141MU\00", [19 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NV40M[BE]\00", [16 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NV40MZ\00", [19 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NV40MB\00", [19 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NL40GU\00", [19 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NL40[CZ]U\00", [16 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NL41DU\00", [19 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Clevo NH5[58]H[HJK]Q\00", [43 x i8] zeroinitializer }, align 32
@.str.437 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Clevo NH7[79]H[HJK]Q\00", [43 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NJ51GU\00", [19 x i8] zeroinitializer }, align 32
@.str.439 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo NK50S[BEZ]\00", [47 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NK50S5\00", [19 x i8] zeroinitializer }, align 32
@.str.441 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NK50SZ\00", [19 x i8] zeroinitializer }, align 32
@.str.442 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NP50D5\00", [19 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo NH5[58]HPQ\00", [47 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo NH7[79]HPQ\00", [47 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo NH50A[CDF]\00", [47 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH50E[PR]\00", [16 x i8] zeroinitializer }, align 32
@.str.447 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo NH58DPQ\00", [18 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo NH55EPY\00", [18 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo NH55DPQ\00", [18 x i8] zeroinitializer }, align 32
@.str.450 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo S510WU\00", [19 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo W517GU1\00", [18 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NS50MU\00", [19 x i8] zeroinitializer }, align 32
@.str.453 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo NB70T[HJK]\00", [47 x i8] zeroinitializer }, align 32
@.str.454 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NK70SB\00", [19 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo NH79EPY\00", [18 x i8] zeroinitializer }, align 32
@.str.456 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo NH77DPQ\00", [18 x i8] zeroinitializer }, align 32
@.str.457 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo NH77EPY\00", [18 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH77DPQ-Y\00", [16 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NR40BU\00", [19 x i8] zeroinitializer }, align 32
@.str.460 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH50D[CD]\00", [16 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH77D[CD]\00", [16 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH50D[BE]\00", [16 x i8] zeroinitializer }, align 32
@.str.463 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH79D[BE]\00", [16 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Clevo NH[57][0-9][ER][ACDH]Q\00", [35 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Clevo NH[57][0-9]RZ[Q]\00", [41 x i8] zeroinitializer }, align 32
@.str.466 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NP50B[BE]\00", [16 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NJ50LU\00", [19 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH50[CZ]U\00", [16 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH55DCQ-Y\00", [16 x i8] zeroinitializer }, align 32
@.str.470 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH70RCQ-Y\00", [16 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NH55RCQ-M\00", [16 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo N950T[CDF]\00", [47 x i8] zeroinitializer }, align 32
@.str.473 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo N960K[PR]\00", [16 x i8] zeroinitializer }, align 32
@.str.474 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo N960S[CDF]\00", [47 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo N970T[CDF]\00", [47 x i8] zeroinitializer }, align 32
@.str.476 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NL5[03]RU\00", [16 x i8] zeroinitializer }, align 32
@.str.477 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo NL50NU\00", [19 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo NP50D[BE]\00", [16 x i8] zeroinitializer }, align 32
@.str.479 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo NH77D[BE]Q\00", [47 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clevo NH77D[DC][QW]\00", [44 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Clevo NH77[DC][QW]\00", [45 x i8] zeroinitializer }, align 32
@.str.482 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Lenovo P520\00", [20 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"ThinkCentre Station\00", [44 x i8] zeroinitializer }, align 32
@.str.484 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Thinkpad SL410/510\00", [45 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad L512\00", [18 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Thinkpad Edge 14\00", [47 x i8] zeroinitializer }, align 32
@.str.487 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad L412\00", [18 x i8] zeroinitializer }, align 32
@.str.488 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Thinkpad Edge 15\00", [47 x i8] zeroinitializer }, align 32
@.str.489 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T430\00", [18 x i8] zeroinitializer }, align 32
@.str.490 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T530\00", [18 x i8] zeroinitializer }, align 32
@.str.491 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad X230\00", [18 x i8] zeroinitializer }, align 32
@.str.492 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T430s\00", [17 x i8] zeroinitializer }, align 32
@.str.493 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Thinkpad X230 Tablet\00", [43 x i8] zeroinitializer }, align 32
@.str.494 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T431s\00", [17 x i8] zeroinitializer }, align 32
@.str.495 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T440s\00", [17 x i8] zeroinitializer }, align 32
@.str.496 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T440p\00", [17 x i8] zeroinitializer }, align 32
@.str.497 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T540p\00", [17 x i8] zeroinitializer }, align 32
@.str.498 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad W541\00", [18 x i8] zeroinitializer }, align 32
@.str.499 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T440\00", [18 x i8] zeroinitializer }, align 32
@.str.500 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad X240\00", [18 x i8] zeroinitializer }, align 32
@.str.501 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Thinkpad\00", [23 x i8] zeroinitializer }, align 32
@.str.502 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Thinkpad X1 Carbon 2nd\00", [41 x i8] zeroinitializer }, align 32
@.str.503 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ThinkPad T550\00", [18 x i8] zeroinitializer }, align 32
@.str.504 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ThinkPad X250\00", [18 x i8] zeroinitializer }, align 32
@.str.505 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T560\00", [18 x i8] zeroinitializer }, align 32
@.str.506 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T470\00", [18 x i8] zeroinitializer }, align 32
@.str.507 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T480\00", [18 x i8] zeroinitializer }, align 32
@.str.508 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Thinkpad X1 Carbon 7th\00", [41 x i8] zeroinitializer }, align 32
@.str.509 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Thinkpad X1 Carbon 8th\00", [41 x i8] zeroinitializer }, align 32
@.str.510 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Thinkpad P1 Gen 3\00", [46 x i8] zeroinitializer }, align 32
@.str.511 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Thinkpad X1 Extreme Gen 3\00", [38 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ThinkCentre AIO\00", [16 x i8] zeroinitializer }, align 32
@.str.513 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Legion 7i 15IMHG05\00", [45 x i8] zeroinitializer }, align 32
@.str.514 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Lenovo C940\00", [20 x i8] zeroinitializer }, align 32
@.str.515 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Lenovo 13s Gen2 ITL\00", [44 x i8] zeroinitializer }, align 32
@.str.516 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Legion Y9000X 2020\00", [45 x i8] zeroinitializer }, align 32
@.str.517 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Ideapad S740\00", [19 x i8] zeroinitializer }, align 32
@.str.518 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Lenovo IdeaPad Slim 9i 14ITL5\00", [34 x i8] zeroinitializer }, align 32
@.str.519 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Legion Y9000X 2019\00", [45 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Yoga 9i\00", [24 x i8] zeroinitializer }, align 32
@.str.521 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Legion 7 16ACHG6\00", [47 x i8] zeroinitializer }, align 32
@.str.522 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Lenovo Yoga 7 15ITL5\00", [43 x i8] zeroinitializer }, align 32
@.str.523 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Lenovo Yoga 7 14ITL5\00", [43 x i8] zeroinitializer }, align 32
@.str.524 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lenovo E50-80\00", [18 x i8] zeroinitializer }, align 32
@.str.525 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IdeaPad S210\00", [19 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Lenovo B50-70\00", [18 x i8] zeroinitializer }, align 32
@.str.527 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Quanta FL1\00", [21 x i8] zeroinitializer }, align 32
@.str.528 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad L440\00", [18 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T450\00", [18 x i8] zeroinitializer }, align 32
@.str.530 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T450s\00", [17 x i8] zeroinitializer }, align 32
@.str.531 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad L450\00", [18 x i8] zeroinitializer }, align 32
@.str.532 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ThinkPad X260\00", [18 x i8] zeroinitializer }, align 32
@.str.533 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Thinkpad T560p\00", [17 x i8] zeroinitializer }, align 32
@.str.534 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad L460\00", [18 x i8] zeroinitializer }, align 32
@.str.535 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thinkpad T460\00", [18 x i8] zeroinitializer }, align 32
@.str.536 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"LENOVO NB\00", [22 x i8] zeroinitializer }, align 32
@.str.537 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"ASRock NUC Box 1100\00", [44 x i8] zeroinitializer }, align 32
@.str.538 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Huawei MACH-WX9\00", [16 x i8] zeroinitializer }, align 32
@.str.539 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CZC B20\00", [24 x i8] zeroinitializer }, align 32
@.str.540 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CZC TMI\00", [24 x i8] zeroinitializer }, align 32
@.str.541 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CZC L101\00", [23 x i8] zeroinitializer }, align 32
@.str.542 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Ordissimo EVE2 \00", [16 x i8] zeroinitializer }, align 32
@.str.543 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Lemote A1802\00", [19 x i8] zeroinitializer }, align 32
@.str.544 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Lemote A190X\00", [19 x i8] zeroinitializer }, align 32
@.str.545 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TongFang PHxTxX1\00", [47 x i8] zeroinitializer }, align 32
@.str.546 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RedmiBook\00", [22 x i8] zeroinitializer }, align 32
@.str.547 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"XiaomiNotebook Pro\00", [45 x i8] zeroinitializer }, align 32
@.str.548 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RedmiBook 14\00", [19 x i8] zeroinitializer }, align 32
@.str.549 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"RedmiBook Air\00", [18 x i8] zeroinitializer }, align 32
@.str.550 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Intel NUC 8\00", [20 x i8] zeroinitializer }, align 32
@.str.551 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Intel NUC 8 Rugged\00", [45 x i8] zeroinitializer }, align 32
@.str.552 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Intel NUC 10\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 34 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.553 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 13 }, %struct.hda_verb { i16 32, i32 1024, i32 16448 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.554 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1726807791 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.555 = internal constant { [2 x %struct.hda_verb], [40 x i8] } { [2 x %struct.hda_verb] [%struct.hda_verb { i16 20, i32 1804, i32 0 }, %struct.hda_verb zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.556 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 553717823 }, %struct.hda_pintbl { i16 27, i32 597758016 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.557 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365436 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.558 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 35721263 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.559 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 18956319 }, %struct.hda_pintbl { i16 24, i32 27368480 }, %struct.hda_pintbl { i16 25, i32 -1717368529 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.560 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717368529 }, %struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 18956319 }, %struct.hda_pintbl { i16 24, i32 27368480 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.561 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 24, i32 27368480 }, %struct.hda_pintbl { i16 25, i32 -1717368529 }, %struct.hda_pintbl { i16 33, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.562 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717368529 }, %struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 24, i32 27368480 }, %struct.hda_pintbl { i16 33, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.563 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 597758016 }, %struct.hda_pintbl { i16 27, i32 555814975 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.564 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.565 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl { i16 26, i32 27365693 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.566 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 553730080 }, %struct.hda_pintbl { i16 25, i32 564236336 }, %struct.hda_pintbl { i16 26, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.567 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.568 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl { i16 27, i32 27365693 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.569 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.570 = internal constant { [4 x %struct.hda_verb], [48 x i8] } { [4 x %struct.hda_verb] [%struct.hda_verb { i16 24, i32 1799, i32 0 }, %struct.hda_verb { i16 32, i32 1280, i32 8 }, %struct.hda_verb { i16 32, i32 1024, i32 784 }, %struct.hda_verb zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.571 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 77666348 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.572 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 25, i32 27368480 }, %struct.hda_pintbl { i16 27, i32 -1717108433 }, %struct.hda_pintbl { i16 33, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.573 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717368529 }, %struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 24, i32 60890144 }, %struct.hda_pintbl { i16 30, i32 54923294 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.574 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 18 }, %struct.hda_verb { i16 32, i32 1024, i32 10240 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.575 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717368529 }, %struct.hda_pintbl { i16 24, i32 60890400 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.576 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 17 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.577 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540590 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.578 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540590 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.579 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.580 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.581 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl { i16 26, i32 27365693 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.582 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.583 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365693 }, %struct.hda_pintbl { i16 26, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.584 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 77664496 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.585 = internal constant { [11 x %struct.hda_pintbl], [40 x i8] } { [11 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 23, i32 1073741832 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1090034477 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.586 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 553717792 }, %struct.hda_pintbl { i16 26, i32 27365436 }, %struct.hda_pintbl { i16 24, i32 562106431 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.587 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 553717792 }, %struct.hda_pintbl { i16 24, i32 562106431 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.588 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl { i16 26, i32 27365693 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.589 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.590 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl { i16 26, i32 27365693 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.591 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.592 = internal constant { [5 x %struct.hda_verb], [36 x i8] } { [5 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 31 }, %struct.hda_verb { i16 32, i32 1024, i32 192 }, %struct.hda_verb { i16 32, i32 1280, i32 48 }, %struct.hda_verb { i16 32, i32 1024, i32 177 }, %struct.hda_verb zeroinitializer], [36 x i8] zeroinitializer }, align 32
@.compoundliteral.593 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 54 }, %struct.hda_verb { i16 32, i32 1024, i32 22487 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.594 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 44142624 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.595 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 -1877540527 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.596 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl { i16 26, i32 27365693 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.597 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 19, i32 -1868168864 }, %struct.hda_pintbl { i16 25, i32 77664544 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.598 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.599 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 34816 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.600 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 69 }, %struct.hda_verb { i16 32, i32 1024, i32 20617 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.601 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 77697088 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.602 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 16846895 }, %struct.hda_pintbl { i16 25, i32 44142908 }, %struct.hda_pintbl { i16 26, i32 27365424 }, %struct.hda_pintbl { i16 27, i32 33624096 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.603 = internal constant { [9 x %struct.hda_verb], [52 x i8] } { [9 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 69 }, %struct.hda_verb { i16 32, i32 1024, i32 21129 }, %struct.hda_verb { i16 32, i32 1280, i32 74 }, %struct.hda_verb { i16 32, i32 1024, i32 27 }, %struct.hda_verb { i16 88, i32 1280, i32 0 }, %struct.hda_verb { i16 88, i32 1024, i32 14472 }, %struct.hda_verb { i16 32, i32 1280, i32 111 }, %struct.hda_verb { i16 32, i32 1024, i32 11275 }, %struct.hda_verb zeroinitializer], [52 x i8] zeroinitializer }, align 32
@.compoundliteral.604 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 67178543 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.605 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 33624095 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.606 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.607 = internal constant { [11 x %struct.hda_pintbl], [40 x i8] } { [11 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 19, i32 1073741824 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 77664320 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 -1877540590 }, %struct.hda_pintbl { i16 29, i32 1081448965 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.608 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 25243967 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.609 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.610 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 19, i32 -1868168864 }, %struct.hda_pintbl { i16 25, i32 77664544 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.611 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27332668 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.612 = internal constant { [5 x %struct.hda_verb], [36 x i8] } { [5 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 34816 }, %struct.hda_verb { i16 32, i32 1280, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 30580 }, %struct.hda_verb zeroinitializer], [36 x i8] zeroinitializer }, align 32
@.compoundliteral.613 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.614 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 54 }, %struct.hda_verb { i16 32, i32 1024, i32 22487 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.615 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60887344 }, %struct.hda_pintbl { i16 26, i32 -1868168896 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.616 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 16846880 }, %struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.617 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 79 }, %struct.hda_verb { i16 32, i32 1024, i32 20521 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.618 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60887072 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.619 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 77664544 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.620 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 -1877540528 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.621 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 77664320 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.622 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540560 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.623 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 30580 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.624 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 27 }, %struct.hda_verb { i16 32, i32 1024, i32 20043 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.625 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60887120 }, %struct.hda_pintbl { i16 26, i32 27334704 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.626 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 21, i32 1799, i32 192 }, %struct.hda_verb { i16 21, i32 768, i32 45056 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.627 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27332688 }, %struct.hda_pintbl { i16 26, i32 27334704 }, %struct.hda_pintbl { i16 33, i32 18944240 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.628 = internal constant { [4 x %struct.hda_verb], [48 x i8] } { [4 x %struct.hda_verb] [%struct.hda_verb { i16 21, i32 1799, i32 192 }, %struct.hda_verb { i16 21, i32 768, i32 45056 }, %struct.hda_verb { i16 27, i32 1799, i32 36 }, %struct.hda_verb zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.629 = internal constant { [2 x %struct.hda_verb], [40 x i8] } { [2 x %struct.hda_verb] [%struct.hda_verb { i16 26, i32 1799, i32 197 }, %struct.hda_verb zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.630 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.631 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877999328 }, %struct.hda_pintbl { i16 24, i32 44110320 }, %struct.hda_pintbl { i16 26, i32 16846880 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.632 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 44109872 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.633 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 24, i32 27332912 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.634 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60887072 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.635 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 44110112 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.636 = internal constant { [11 x %struct.hda_pintbl], [40 x i8] } { [11 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 1091637744 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 53415968 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 61542464 }, %struct.hda_pintbl { i16 25, i32 -1213791937 }, %struct.hda_pintbl { i16 26, i32 25243743 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.637 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 1073790976 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 69287967 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 77697056 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1078232325 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl { i16 32, i32 -2147418113 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.638 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 1073741824 }, %struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 27365408 }, %struct.hda_pintbl { i16 25, i32 44142625 }, %struct.hda_pintbl { i16 26, i32 25243695 }, %struct.hda_pintbl { i16 27, i32 35733535 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1078248961 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.639 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 1073741824 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 60919872 }, %struct.hda_pintbl { i16 25, i32 -1868103376 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1078500653 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl { i16 32, i32 262143 }, %struct.hda_pintbl { i16 33, i32 52510752 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.640 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 18956319 }, %struct.hda_pintbl { i16 24, i32 27368480 }, %struct.hda_pintbl { i16 25, i32 -1717368529 }, %struct.hda_pintbl { i16 27, i32 33636383 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.641 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.642 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.643 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 69 }, %struct.hda_verb { i16 32, i32 1024, i32 20617 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.644 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 69 }, %struct.hda_verb { i16 32, i32 1024, i32 20617 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.645 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 30584 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.646 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.647 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 44110140 }, %struct.hda_pintbl { i16 26, i32 -1868494545 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.648 = internal constant { [13 x %struct.hda_pintbl], [56 x i8] } { [13 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 19, i32 1073741824 }, %struct.hda_pintbl { i16 20, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 44109872 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 77697072 }, %struct.hda_pintbl { i16 29, i32 1080033281 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.649 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 52498480 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.650 = internal constant { [25 x %struct.hda_verb], [84 x i8] } { [25 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 65 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 66 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 42 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb zeroinitializer], [84 x i8] zeroinitializer }, align 32
@.compoundliteral.651 = internal constant { [25 x %struct.hda_verb], [84 x i8] } { [25 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 65 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 70 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 42 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb zeroinitializer], [84 x i8] zeroinitializer }, align 32
@.compoundliteral.652 = internal constant { [15 x %struct.hda_verb], [44 x i8] } { [15 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 65 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 66 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb zeroinitializer], [44 x i8] zeroinitializer }, align 32
@.compoundliteral.653 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60887328 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.654 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 25 }, %struct.hda_verb { i16 32, i32 1024, i32 36369 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc271_fixup_dmic.verbs = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 13 }, %struct.hda_verb { i16 32, i32 1024, i32 16384 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc269_44k_pcm_analog_playback = internal constant { %struct.hda_pcm_stream, [32 x i8] } { %struct.hda_pcm_stream { i32 0, i32 0, i32 0, i16 0, i32 64, i64 0, i32 0, ptr null, %struct.hda_pcm_ops zeroinitializer }, [32 x i8] zeroinitializer }, align 32
@alc269_44k_pcm_analog_capture = internal constant { %struct.hda_pcm_stream, [32 x i8] } { %struct.hda_pcm_stream { i32 0, i32 0, i32 0, i16 0, i32 64, i64 0, i32 0, ptr null, %struct.hda_pcm_ops zeroinitializer }, [32 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0255 = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 27, i16 -1, i16 3083 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -12151 }, %struct.coef_fw { i8 87, i8 5, i16 16384, i16 0 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 24836 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 -30042 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0256 = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 27, i16 -1, i16 3147 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -12151 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 24836 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 2467 }, %struct.coef_fw { i8 87, i8 5, i16 16384, i16 0 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0233 = internal constant { [8 x %struct.coef_fw], [48 x i8] } { [8 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 27, i16 -1, i16 3083 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -15319 }, %struct.coef_fw { i8 32, i8 53, i16 16384, i16 0 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 8452 }, %struct.coef_fw { i8 32, i8 26, i16 -1, i16 1 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 4 }, %struct.coef_fw { i8 32, i8 50, i16 -1, i16 17059 }, %struct.coef_fw zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0288 = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 79, i16 -832, i16 -15360 }, %struct.coef_fw { i8 32, i8 80, i16 8192, i16 8192 }, %struct.coef_fw { i8 32, i8 86, i16 6, i16 6 }, %struct.coef_fw { i8 32, i8 102, i16 8, i16 0 }, %struct.coef_fw { i8 32, i8 103, i16 8192, i16 0 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0298 = internal constant { [2 x %struct.coef_fw], [20 x i8] } { [2 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 25, i16 4864, i16 768 }, %struct.coef_fw zeroinitializer], [20 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0292 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 118, i16 -1, i16 14 }, %struct.coef_fw { i8 32, i8 108, i16 -1, i16 9216 }, %struct.coef_fw { i8 32, i8 24, i16 -1, i16 29448 }, %struct.coef_fw { i8 32, i8 107, i16 -1, i16 -15319 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0293 = internal constant { [7 x %struct.coef_fw], [54 x i8] } { [7 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 16, i16 1792, i16 1536 }, %struct.coef_fw { i8 87, i8 5, i16 -24576, i16 0 }, %struct.coef_fw { i8 87, i8 3, i16 1024, i16 1024 }, %struct.coef_fw { i8 32, i8 26, i16 8, i16 8 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -15319 }, %struct.coef_fw { i8 32, i8 74, i16 15, i16 14 }, %struct.coef_fw zeroinitializer], [54 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0668 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 21, i16 -1, i16 3392 }, %struct.coef_fw { i8 32, i8 -73, i16 -1, i16 -32725 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0225 = internal constant { [2 x %struct.coef_fw], [20 x i8] } { [2 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 99, i16 -16384, i16 0 }, %struct.coef_fw zeroinitializer], [20 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.coef0274 = internal constant { [8 x %struct.coef_fw], [48 x i8] } { [8 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 74, i16 256, i16 0 }, %struct.coef_fw { i8 87, i8 5, i16 16384, i16 0 }, %struct.coef_fw { i8 32, i8 107, i16 -4096, i16 20480 }, %struct.coef_fw { i8 32, i8 74, i16 16, i16 0 }, %struct.coef_fw { i8 32, i8 74, i16 3072, i16 3072 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 21129 }, %struct.coef_fw { i8 32, i8 74, i16 3072, i16 0 }, %struct.coef_fw zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc225_pre_hsmode = internal constant { [8 x %struct.coef_fw], [48 x i8] } { [8 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 74, i16 256, i16 0 }, %struct.coef_fw { i8 87, i8 5, i16 16384, i16 0 }, %struct.coef_fw { i8 32, i8 99, i16 -16384, i16 -16384 }, %struct.coef_fw { i8 32, i8 74, i16 48, i16 32 }, %struct.coef_fw { i8 32, i8 74, i16 3072, i16 3072 }, %struct.coef_fw { i8 32, i8 69, i16 -1024, i16 -12288 }, %struct.coef_fw { i8 32, i8 74, i16 3072, i16 0 }, %struct.coef_fw zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc_headset_mode_unplugged.__UNIQUE_ID_ddebug256 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.658, ptr @.str.78, ptr @.str.659, i8 4, i8 -45, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.658 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"alc_headset_mode_unplugged\00", [37 x i8] zeroinitializer }, align 32
@.str.659 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Headset jack set to unplugged mode.\0A\00", [59 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.coef0255 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -12151 }, %struct.coef_fw { i8 32, i8 73, i16 -1, i16 329 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.coef0288 = internal constant { [2 x %struct.coef_fw], [20 x i8] } { [2 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 79, i16 -832, i16 -11264 }, %struct.coef_fw zeroinitializer], [20 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.coef0298 = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 80, i16 8192, i16 8192 }, %struct.coef_fw { i8 32, i8 86, i16 6, i16 6 }, %struct.coef_fw { i8 32, i8 102, i16 8, i16 0 }, %struct.coef_fw { i8 32, i8 103, i16 8192, i16 0 }, %struct.coef_fw { i8 32, i8 25, i16 4864, i16 4864 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.coef0293 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 74, i16 15, i16 8 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11223 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.coef0688 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 17, i16 -1, i16 1 }, %struct.coef_fw { i8 32, i8 -73, i16 -1, i16 -32725 }, %struct.coef_fw { i8 32, i8 21, i16 -1, i16 3424 }, %struct.coef_fw { i8 32, i8 -61, i16 -1, i16 3072 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.coef0274 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 74, i16 16, i16 0 }, %struct.coef_fw { i8 32, i8 74, i16 -32768, i16 0 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11639 }, %struct.coef_fw { i8 32, i8 73, i16 768, i16 768 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_determine_headset_type.__UNIQUE_ID_ddebug261 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.660, ptr @.str.78, ptr @.str.661, i8 5, i8 124, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.660 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"alc_determine_headset_type\00", [37 x i8] zeroinitializer }, align 32
@.str.661 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Headset jack detected iPhone-style headset: %s\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.662 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"yes\00", [28 x i8] zeroinitializer }, align 32
@.str.663 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"no\00", [29 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0255 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11127 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3115 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 -29018 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0256 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11127 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3691 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0233 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11223 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3115 }, %struct.coef_fw { i8 32, i8 50, i16 -1, i16 20131 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0288 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 80, i16 8192, i16 8192 }, %struct.coef_fw { i8 32, i8 86, i16 6, i16 6 }, %struct.coef_fw { i8 32, i8 102, i16 8, i16 0 }, %struct.coef_fw { i8 32, i8 103, i16 8192, i16 0 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0292 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 107, i16 -1, i16 -11223 }, %struct.coef_fw { i8 32, i8 118, i16 -1, i16 8 }, %struct.coef_fw { i8 32, i8 24, i16 -1, i16 29576 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0293 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11223 }, %struct.coef_fw { i8 32, i8 16, i16 1792, i16 1792 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0688 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 17, i16 -1, i16 1 }, %struct.coef_fw { i8 32, i8 21, i16 -1, i16 3424 }, %struct.coef_fw { i8 32, i8 -61, i16 -1, i16 0 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0225_1 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1024, i16 -11264 }, %struct.coef_fw { i8 32, i8 99, i16 -16384, i16 -32768 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.coef0225_2 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1024, i16 -11264 }, %struct.coef_fw { i8 32, i8 99, i16 -16384, i16 16384 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_ctia.__UNIQUE_ID_ddebug259 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.664, ptr @.str.78, ptr @.str.665, i8 5, i8 49, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.664 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"alc_headset_mode_ctia\00", [42 x i8] zeroinitializer }, align 32
@.str.665 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Headset jack set to iPhone-style headset mode.\0A\00", [48 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0255 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -7031 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3115 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 -29018 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0256 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -7031 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3691 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0233 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -7127 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3115 }, %struct.coef_fw { i8 32, i8 50, i16 -1, i16 20131 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0288 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 80, i16 8192, i16 8192 }, %struct.coef_fw { i8 32, i8 86, i16 6, i16 6 }, %struct.coef_fw { i8 32, i8 102, i16 8, i16 0 }, %struct.coef_fw { i8 32, i8 103, i16 8192, i16 0 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0292 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 107, i16 -1, i16 -7127 }, %struct.coef_fw { i8 32, i8 118, i16 -1, i16 8 }, %struct.coef_fw { i8 32, i8 24, i16 -1, i16 29576 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0293 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -7127 }, %struct.coef_fw { i8 32, i8 16, i16 1792, i16 1792 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0688 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 17, i16 -1, i16 1 }, %struct.coef_fw { i8 32, i8 21, i16 -1, i16 3408 }, %struct.coef_fw { i8 32, i8 -61, i16 -1, i16 0 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.coef0225 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1024, i16 -7168 }, %struct.coef_fw { i8 32, i8 99, i16 -16384, i16 -32768 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_omtp.__UNIQUE_ID_ddebug260 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.666, ptr @.str.78, ptr @.str.667, i8 5, i8 74, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.666 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"alc_headset_mode_omtp\00", [42 x i8] zeroinitializer }, align 32
@.str.667 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Headset jack set to Nokia-style headset mode.\0A\00", [49 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0255 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 87, i8 3, i16 -1, i16 -30042 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 24832 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0256 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 87, i8 5, i16 16384, i16 16384 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 2467 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 24832 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0233 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 53, i16 0, i16 16384 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 8448 }, %struct.coef_fw { i8 32, i8 26, i16 -1, i16 33 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 140 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0288 = internal constant { [7 x %struct.coef_fw], [54 x i8] } { [7 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 79, i16 192, i16 0 }, %struct.coef_fw { i8 32, i8 80, i16 8192, i16 0 }, %struct.coef_fw { i8 32, i8 86, i16 6, i16 0 }, %struct.coef_fw { i8 32, i8 79, i16 -832, i16 -15360 }, %struct.coef_fw { i8 32, i8 102, i16 8, i16 8 }, %struct.coef_fw { i8 32, i8 103, i16 8192, i16 8192 }, %struct.coef_fw zeroinitializer], [54 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0292 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 25, i16 -1, i16 -24056 }, %struct.coef_fw { i8 32, i8 46, i16 -1, i16 -21264 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0293 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 87, i8 5, i16 0, i16 -24576 }, %struct.coef_fw { i8 87, i8 3, i16 1024, i16 0 }, %struct.coef_fw { i8 32, i8 26, i16 8, i16 0 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0688 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 -73, i16 -1, i16 -32725 }, %struct.coef_fw { i8 32, i8 -75, i16 -1, i16 4160 }, %struct.coef_fw { i8 32, i8 -61, i16 0, i16 4096 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0225 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 87, i8 5, i16 16384, i16 16384 }, %struct.coef_fw { i8 32, i8 74, i16 48, i16 32 }, %struct.coef_fw { i8 32, i8 99, i16 -16384, i16 0 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.coef0274 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 87, i8 5, i16 16384, i16 16384 }, %struct.coef_fw { i8 32, i8 74, i16 16, i16 0 }, %struct.coef_fw { i8 32, i8 107, i16 -4096, i16 0 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_mic_in.__UNIQUE_ID_ddebug257 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.668, ptr @.str.78, ptr @.str.669, i8 4, i8 -10, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.668 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"alc_headset_mode_mic_in\00", [40 x i8] zeroinitializer }, align 32
@.str.669 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Headset jack set to mic-in mode.\0A\00", [62 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0225 = internal constant { [7 x %struct.coef_fw], [54 x i8] } { [7 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1024, i16 -16384 }, %struct.coef_fw { i8 32, i8 69, i16 -1024, i16 -15360 }, %struct.coef_fw { i8 32, i8 73, i16 768, i16 0 }, %struct.coef_fw { i8 32, i8 74, i16 48, i16 48 }, %struct.coef_fw { i8 32, i8 99, i16 -16384, i16 0 }, %struct.coef_fw { i8 32, i8 103, i16 -4096, i16 12288 }, %struct.coef_fw zeroinitializer], [54 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0255 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -16247 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -15223 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 -29018 }, %struct.coef_fw { i8 32, i8 73, i16 -1, i16 73 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0256 = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 -15223 }, %struct.coef_fw { i8 87, i8 3, i16 -1, i16 3491 }, %struct.coef_fw { i8 32, i8 73, i16 -1, i16 73 }, %struct.coef_fw { i8 87, i8 5, i16 16384, i16 0 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 24832 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0233 = internal constant { [3 x %struct.coef_fw], [46 x i8] } { [3 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 6, i16 -1, i16 8448 }, %struct.coef_fw { i8 32, i8 50, i16 -1, i16 20131 }, %struct.coef_fw zeroinitializer], [46 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0288 = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 79, i16 -832, i16 -15360 }, %struct.coef_fw { i8 32, i8 80, i16 8192, i16 8192 }, %struct.coef_fw { i8 32, i8 86, i16 6, i16 6 }, %struct.coef_fw { i8 32, i8 102, i16 8, i16 0 }, %struct.coef_fw { i8 32, i8 103, i16 8192, i16 0 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0292 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 118, i16 -1, i16 14 }, %struct.coef_fw { i8 32, i8 108, i16 -1, i16 9216 }, %struct.coef_fw { i8 32, i8 107, i16 -1, i16 -15319 }, %struct.coef_fw { i8 32, i8 24, i16 -1, i16 29448 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0293 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 74, i16 15, i16 14 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -15319 }, %struct.coef_fw { i8 32, i8 26, i16 8, i16 0 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0688 = internal constant { [4 x %struct.coef_fw], [40 x i8] } { [4 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 17, i16 -1, i16 65 }, %struct.coef_fw { i8 32, i8 21, i16 -1, i16 3392 }, %struct.coef_fw { i8 32, i8 -73, i16 -1, i16 -32725 }, %struct.coef_fw zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.coef0274 = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 69, i16 -1, i16 17033 }, %struct.coef_fw { i8 32, i8 74, i16 16, i16 16 }, %struct.coef_fw { i8 32, i8 107, i16 3840, i16 0 }, %struct.coef_fw { i8 32, i8 73, i16 768, i16 768 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc_headset_mode_default.__UNIQUE_ID_ddebug258 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.670, ptr @.str.78, ptr @.str.671, i8 5, i8 19, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.670 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"alc_headset_mode_default\00", [39 x i8] zeroinitializer }, align 32
@.str.671 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Headset jack set to headphone (default) mode.\0A\00", [49 x i8] zeroinitializer }, align 32
@alc282_fixup_asus_tx300.dock_pins = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 554778624 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.str.672 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Speaker Playback Switch\00", [40 x i8] zeroinitializer }, align 32
@.str.673 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Dock Speaker Playback Switch\00", [35 x i8] zeroinitializer }, align 32
@.str.674 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Bass Speaker Playback Switch\00", [35 x i8] zeroinitializer }, align 32
@alc290_fixup_mono_speakers.conn1 = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 12], [30 x i8] zeroinitializer }, align 32
@alc255_set_default_jack_type.alc255fw = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 27, i16 -1, i16 -30709 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -12151 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 2059 }, %struct.coef_fw { i8 32, i8 70, i16 -1, i16 4 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3083 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc255_set_default_jack_type.alc256fw = internal constant { [6 x %struct.coef_fw], [60 x i8] } { [6 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 27, i16 -1, i16 -30645 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -12151 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 2123 }, %struct.coef_fw { i8 32, i8 70, i16 -1, i16 4 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3147 }, %struct.coef_fw zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc_fixup_tpt440_dock.pincfgs = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 555814928 }, %struct.hda_pintbl { i16 25, i32 564203536 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_register_micmute_input_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.675, ptr @.str.676, ptr @.str.78, i32 4696, ptr @.str.677, ptr @.str.678 }, [40 x i8] zeroinitializer }, align 32
@.str.675 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Out of memory (input_allocate_device)\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.676 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"alc_register_micmute_input_device\00", [62 x i8] zeroinitializer }, align 32
@.str.677 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.678 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@alc_register_micmute_input_device._entry_ptr = internal global ptr @alc_register_micmute_input_device._entry, section ".printk_index", align 4
@.str.679 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Microphone Mute Button\00", [41 x i8] zeroinitializer }, align 32
@alc_register_micmute_input_device._entry.680 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.681, ptr @.str.676, ptr @.str.78, i32 4711, ptr @.str.677, ptr @.str.678 }, [40 x i8] zeroinitializer }, align 32
@.str.681 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"input_register_device failed\0A\00", [34 x i8] zeroinitializer }, align 32
@alc_register_micmute_input_device._entry_ptr.682 = internal global ptr @alc_register_micmute_input_device._entry.680, section ".printk_index", align 4
@alc285_fixup_hp_spectre_x360_eb1.conn = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 2], [30 x i8] zeroinitializer }, align 32
@alc285_fixup_hp_spectre_x360_eb1.pincfgs = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 23, i32 -1877540560 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc295_fixup_disable_dac3.conn = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 2, i16 3], [28 x i8] zeroinitializer }, align 32
@alc285_fixup_speaker2_to_dac1.conn = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 2], [30 x i8] zeroinitializer }, align 32
@alc298_fixup_speaker_volume.conn1 = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 12], [30 x i8] zeroinitializer }, align 32
@.str.683 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"HDAudio-Lenovo-DualCodecs\00", [38 x i8] zeroinitializer }, align 32
@.str.684 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Capture Volume\00", [17 x i8] zeroinitializer }, align 32
@.str.685 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Rear-Panel Capture Volume\00", [38 x i8] zeroinitializer }, align 32
@.str.686 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Front-Panel Capture Volume\00", [37 x i8] zeroinitializer }, align 32
@.str.687 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Capture Switch\00", [17 x i8] zeroinitializer }, align 32
@.str.688 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Rear-Panel Capture Switch\00", [38 x i8] zeroinitializer }, align 32
@.str.689 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Front-Panel Capture Switch\00", [37 x i8] zeroinitializer }, align 32
@alc274_fixup_bind_dacs.preferred_pairs = internal constant { [7 x i16], [18 x i8] } { [7 x i16] [i16 33, i16 3, i16 27, i16 3, i16 22, i16 2, i16 0], [18 x i8] zeroinitializer }, align 32
@alc_fixup_tpt470_dock.pincfgs = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 555814928 }, %struct.hda_pintbl { i16 25, i32 564203536 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc_fixup_tpt470_dacs.preferred_pairs = internal constant { [7 x i16], [18 x i8] } { [7 x i16] [i16 20, i16 3, i16 23, i16 2, i16 33, i16 2, i16 0], [18 x i8] zeroinitializer }, align 32
@alc298_fixup_huawei_mbx_stereo.dac_init = internal constant { [37 x %struct.hda_alc298_mbxinit], [54 x i8] } { [37 x %struct.hda_alc298_mbxinit] [%struct.hda_alc298_mbxinit { i8 12, i8 0 }, %struct.hda_alc298_mbxinit { i8 13, i8 0 }, %struct.hda_alc298_mbxinit { i8 14, i8 0 }, %struct.hda_alc298_mbxinit { i8 15, i8 0 }, %struct.hda_alc298_mbxinit { i8 16, i8 0 }, %struct.hda_alc298_mbxinit { i8 26, i8 64 }, %struct.hda_alc298_mbxinit { i8 27, i8 -126 }, %struct.hda_alc298_mbxinit { i8 28, i8 0 }, %struct.hda_alc298_mbxinit { i8 29, i8 0 }, %struct.hda_alc298_mbxinit { i8 30, i8 0 }, %struct.hda_alc298_mbxinit { i8 31, i8 0 }, %struct.hda_alc298_mbxinit { i8 32, i8 -62 }, %struct.hda_alc298_mbxinit { i8 33, i8 -56 }, %struct.hda_alc298_mbxinit { i8 34, i8 38 }, %struct.hda_alc298_mbxinit { i8 35, i8 36 }, %struct.hda_alc298_mbxinit { i8 39, i8 -1 }, %struct.hda_alc298_mbxinit { i8 40, i8 -1 }, %struct.hda_alc298_mbxinit { i8 41, i8 -1 }, %struct.hda_alc298_mbxinit { i8 42, i8 -113 }, %struct.hda_alc298_mbxinit { i8 43, i8 2 }, %struct.hda_alc298_mbxinit { i8 44, i8 72 }, %struct.hda_alc298_mbxinit { i8 45, i8 52 }, %struct.hda_alc298_mbxinit { i8 46, i8 0 }, %struct.hda_alc298_mbxinit { i8 47, i8 0 }, %struct.hda_alc298_mbxinit { i8 48, i8 0 }, %struct.hda_alc298_mbxinit { i8 49, i8 0 }, %struct.hda_alc298_mbxinit { i8 50, i8 0 }, %struct.hda_alc298_mbxinit { i8 51, i8 0 }, %struct.hda_alc298_mbxinit { i8 52, i8 0 }, %struct.hda_alc298_mbxinit { i8 53, i8 1 }, %struct.hda_alc298_mbxinit { i8 54, i8 -109 }, %struct.hda_alc298_mbxinit { i8 55, i8 12 }, %struct.hda_alc298_mbxinit { i8 56, i8 0 }, %struct.hda_alc298_mbxinit { i8 57, i8 0 }, %struct.hda_alc298_mbxinit { i8 58, i8 -8 }, %struct.hda_alc298_mbxinit { i8 56, i8 -128 }, %struct.hda_alc298_mbxinit zeroinitializer], [54 x i8] zeroinitializer }, align 32
@alc295_fixup_hp_top_speakers.pincfgs = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@alc295_fixup_hp_top_speakers.alc295_hp_speakers_coefs = internal constant { [280 x %struct.coef_fw], [432 x i8] } { [280 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 63 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 4096 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 4 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 1536 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 106 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 6 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 108 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -16192 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 8 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -20480 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 46 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 2048 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 106 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 193 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 108 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 800 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 57 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 59 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -1 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 60 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -48 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 58 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 7678 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 128 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 2176 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 58 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 3582 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 24 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 537 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 106 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 93 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 108 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -28350 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 192 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 462 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 193 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -4852 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 194 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 7168 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 195 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 196 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 512 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 197 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 198 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 921 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 199 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 9008 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 200 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 7773 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 201 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 28415 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 202 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 448 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 203 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -4852 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 204 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 7168 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 205 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 206 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 512 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 207 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 208 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 921 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 209 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 9008 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 210 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 7773 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 211 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 28415 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 98 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -32768 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 99 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 24415 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 100 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 4096 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 101 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 102 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 16388 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 103 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 2050 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 104 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -30449 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 105 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -8159 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 112 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -32750 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 113 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 13392 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 114 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 291 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 115 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 17731 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 116 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 8448 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 117 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 17185 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 118 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 80 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -32256 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 58 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 7678 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 81 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 1799 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 82 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 16528 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 106 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 144 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 108 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 29215 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -5141 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 158 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 96 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 8723 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 106 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 6 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 108 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 63 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 12288 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 4 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 1280 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 64 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -32756 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 70 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -15826 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 75 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 18 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 80 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -32020 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 -20444 }], [432 x i8] zeroinitializer }, align 32
@alc_headset_btn_keymap = internal constant { [5 x %struct.hda_jack_keymap], [56 x i8] } { [5 x %struct.hda_jack_keymap] [%struct.hda_jack_keymap { i32 16384, i32 164 }, %struct.hda_jack_keymap { i32 8192, i32 582 }, %struct.hda_jack_keymap { i32 4096, i32 115 }, %struct.hda_jack_keymap { i32 2048, i32 114 }, %struct.hda_jack_keymap zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.690 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Headset Jack\00", [19 x i8] zeroinitializer }, align 32
@alc285_fixup_thinkpad_x1_gen7.conn = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 2, i16 3], [28 x i8] zeroinitializer }, align 32
@alc285_fixup_thinkpad_x1_gen7.preferred_pairs = internal constant { [7 x i16], [18 x i8] } { [7 x i16] [i16 20, i16 2, i16 23, i16 3, i16 33, i16 3, i16 0], [18 x i8] zeroinitializer }, align 32
@.str.691 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Front Playback Volume\00", [42 x i8] zeroinitializer }, align 32
@.str.692 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"DAC1 Playback Volume\00", [43 x i8] zeroinitializer }, align 32
@.str.693 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Bass Speaker Playback Volume\00", [35 x i8] zeroinitializer }, align 32
@.str.694 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"DAC2 Playback Volume\00", [43 x i8] zeroinitializer }, align 32
@alc289_fixup_asus_ga401.preferred_pairs = internal constant { [7 x i16], [18 x i8] } { [7 x i16] [i16 20, i16 2, i16 23, i16 2, i16 33, i16 3, i16 0], [18 x i8] zeroinitializer }, align 32
@alc285_ideapad_s740_coefs = internal constant { [476 x %struct.hda_verb], [1424 x i8] } { [476 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 800 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 65 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 65 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 127 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 127 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 60 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 17 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 60 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 17 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 66 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 66 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 3 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 9 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 3 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 9 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 28 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 76 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 28 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 76 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 29 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 78 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 29 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 78 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 27 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 27 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 25 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 37 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 25 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 37 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 24 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 55 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 24 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 55 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 22 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 118 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 22 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 118 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 23 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 23 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 134 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 134 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 66 }, %struct.hda_verb { i16 32, i32 1280, i32 36 }, %struct.hda_verb { i16 32, i32 1024, i32 66 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 127 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 127 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 60 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 17 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 60 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 17 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 42 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 12 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 42 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 70 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 15 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 70 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 68 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 68 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 3 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 9 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 3 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 9 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 28 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 76 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 28 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 76 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 27 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 27 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 25 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 37 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 25 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 37 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 24 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 55 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 24 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 55 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 26 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 64 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 22 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 118 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 22 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 118 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 23 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 23 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 16 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 134 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 134 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 1 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 41 }, %struct.hda_verb { i16 32, i32 1280, i32 38 }, %struct.hda_verb { i16 32, i32 1024, i32 2 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1024, i32 45088 }, %struct.hda_verb zeroinitializer], [1424 x i8] zeroinitializer }, align 32
@alc295_fixup_asus_dacs.preferred_pairs = internal constant { [5 x i16], [22 x i8] } { [5 x i16] [i16 23, i16 2, i16 33, i16 3, i16 0], [22 x i8] zeroinitializer }, align 32
@alc285_fixup_hp_spectre_x360.conn = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 2], [30 x i8] zeroinitializer }, align 32
@alc285_fixup_hp_spectre_x360.pincfgs = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@alc256_fixup_set_coef_defaults_coefs = internal constant { [7 x %struct.coef_fw], [54 x i8] } { [7 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 16, i16 -1, i16 32 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 38, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 41, i16 -1, i16 12288 }, %struct.coef_fw { i8 32, i8 55, i16 -1, i16 -507 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 20617 }, %struct.coef_fw zeroinitializer], [54 x i8] zeroinitializer }, align 32
@alc233_fixup_no_audio_jack_coefs = internal constant { [8 x %struct.coef_fw], [48 x i8] } { [8 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 26, i16 -1, i16 -28669 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 3627 }, %struct.coef_fw { i8 32, i8 55, i16 -1, i16 -506 }, %struct.coef_fw { i8 32, i8 56, i16 -1, i16 18817 }, %struct.coef_fw { i8 32, i8 69, i16 -1, i16 -11127 }, %struct.coef_fw { i8 32, i8 70, i16 -1, i16 116 }, %struct.coef_fw { i8 32, i8 73, i16 -1, i16 329 }, %struct.coef_fw zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.695 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"i2c-CLSA0100:00-cs35l41-hda.0\00", [34 x i8] zeroinitializer }, align 32
@.str.696 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"i2c-CLSA0100:00-cs35l41-hda.1\00", [34 x i8] zeroinitializer }, align 32
@comp_master_ops = internal constant { %struct.component_master_ops, [24 x i8] } { %struct.component_master_ops { ptr @comp_bind, ptr @comp_unbind }, [24 x i8] zeroinitializer }, align 32
@alc287_fixup_legion_16achg6_speakers._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.697, ptr @.str.698, ptr @.str.78, i32 6704, ptr @.str.677, ptr @.str.678 }, [40 x i8] zeroinitializer }, align 32
@.str.697 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Fail to register component aggregator %d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.698 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"alc287_fixup_legion_16achg6_speakers\00", [59 x i8] zeroinitializer }, align 32
@alc287_fixup_legion_16achg6_speakers._entry_ptr = internal global ptr @alc287_fixup_legion_16achg6_speakers._entry, section ".printk_index", align 4
@.str.699 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"i2c\00", [28 x i8] zeroinitializer }, align 32
@.str.700 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CSC3551\00", [24 x i8] zeroinitializer }, align 32
@.str.701 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s-%s:00-cs35l41-hda.%d\00", [40 x i8] zeroinitializer }, align 32
@cs35l41_generic_fixup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.697, ptr @.str.702, ptr @.str.78, i32 6653, ptr @.str.677, ptr @.str.678 }, [40 x i8] zeroinitializer }, align 32
@.str.702 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"cs35l41_generic_fixup\00", [42 x i8] zeroinitializer }, align 32
@cs35l41_generic_fixup._entry_ptr = internal global ptr @cs35l41_generic_fixup._entry, section ".printk_index", align 4
@.compoundliteral.703 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859168 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 24, i32 44109872 }, %struct.hda_pintbl { i16 25, i32 25243711 }, %struct.hda_pintbl { i16 33, i32 35721263 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.704 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"HP Workstation\00", [17 x i8] zeroinitializer }, align 32
@.compoundliteral.705 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168768 }, %struct.hda_pintbl { i16 20, i32 -1877536480 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.706 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Acer\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.707 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 -1868103376 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.708 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"ASUS\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.709 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 -1868103376 }, %struct.hda_pintbl { i16 27, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.710 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 20, i32 -1877540448 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.711 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 20, i32 -1877540432 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.712 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 18, i32 -1213857456 }, %struct.hda_pintbl { i16 20, i32 -1877540448 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.713 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 18, i32 -1213857456 }, %struct.hda_pintbl { i16 20, i32 -1877540432 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.714 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 27, i32 -1877540592 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.715 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 17895440 }, %struct.hda_pintbl { i16 30, i32 21303600 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.716 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Intel NUC Skull Canyon\00", [41 x i8] zeroinitializer }, align 32
@.compoundliteral.717 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 44109872 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.718 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Lenovo\00", [25 x i8] zeroinitializer }, align 32
@.compoundliteral.719 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 44109872 }, %struct.hda_pintbl { i16 26, i32 44109888 }, %struct.hda_pintbl { i16 27, i32 16859168 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.720 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 44109872 }, %struct.hda_pintbl { i16 26, i32 44109888 }, %struct.hda_pintbl { i16 27, i32 16846880 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.721 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 44109856 }, %struct.hda_pintbl { i16 26, i32 44109872 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.722 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 35721232 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.723 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 44109856 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.724 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.725 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 33, i32 35721280 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.726 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.727 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168864 }, %struct.hda_pintbl { i16 20, i32 -1877540576 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.728 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 33624096 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.729 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 16846880 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.730 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 27, i32 16859168 }, %struct.hda_pintbl { i16 33, i32 35721279 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.731 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 27, i32 16846880 }, %struct.hda_pintbl { i16 33, i32 35721279 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.732 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 27, i32 33624096 }, %struct.hda_pintbl { i16 33, i32 35721279 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.733 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540528 }, %struct.hda_pintbl { i16 27, i32 33624096 }, %struct.hda_pintbl { i16 33, i32 35721311 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.734 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 16859168 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.735 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168864 }, %struct.hda_pintbl { i16 20, i32 -1877540576 }, %struct.hda_pintbl { i16 23, i32 -1877540544 }, %struct.hda_pintbl { i16 33, i32 52498479 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.736 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168864 }, %struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 33, i32 35721280 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.737 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168864 }, %struct.hda_pintbl { i16 20, i32 -1877540544 }, %struct.hda_pintbl { i16 33, i32 35721296 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.738 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168848 }, %struct.hda_pintbl { i16 20, i32 -1877540576 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.739 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168848 }, %struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 33, i32 35721280 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.740 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168848 }, %struct.hda_pintbl { i16 20, i32 -1877536464 }, %struct.hda_pintbl { i16 33, i32 35721280 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.741 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168848 }, %struct.hda_pintbl { i16 20, i32 -1877540544 }, %struct.hda_pintbl { i16 33, i32 35721296 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.742 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168832 }, %struct.hda_pintbl { i16 20, i32 -1877540560 }, %struct.hda_pintbl { i16 33, i32 35721280 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.743 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Dell Inspiron 5548\00", [45 x i8] zeroinitializer }, align 32
@.compoundliteral.744 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168832 }, %struct.hda_pintbl { i16 20, i32 -1877540576 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.745 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Dell Inspiron 5565\00", [45 x i8] zeroinitializer }, align 32
@.compoundliteral.746 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 16846880 }, %struct.hda_pintbl { i16 33, i32 35721232 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.747 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 -1868103376 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.748 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 -1868103376 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.749 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.750 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.751 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 -1868103376 }, %struct.hda_pintbl { i16 27, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.752 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 44109856 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.753 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 60887088 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.754 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 69275679 }, %struct.hda_pintbl { i16 26, i32 77664288 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.755 = internal constant { [7 x %struct.hda_pintbl], [40 x i8] } { [7 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 69275679 }, %struct.hda_pintbl { i16 24, i32 42012720 }, %struct.hda_pintbl { i16 26, i32 77664319 }, %struct.hda_pintbl { i16 27, i32 33624096 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.756 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 25, i32 60887072 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.757 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"HP 15 Touchsmart\00", [47 x i8] zeroinitializer }, align 32
@.compoundliteral.758 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 25, i32 60887072 }, %struct.hda_pintbl { i16 33, i32 52498496 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.759 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 25, i32 60887088 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.760 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 25, i32 77664288 }, %struct.hda_pintbl { i16 33, i32 69275679 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.761 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl { i16 25, i32 77664304 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.762 = internal constant { [8 x %struct.hda_pintbl], [32 x i8] } { [8 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1868166720 }, %struct.hda_pintbl { i16 24, i32 60889136 }, %struct.hda_pintbl { i16 25, i32 77699121 }, %struct.hda_pintbl { i16 26, i32 75575359 }, %struct.hda_pintbl { i16 27, i32 69275680 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.763 = internal constant { [8 x %struct.hda_pintbl], [32 x i8] } { [8 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1868166848 }, %struct.hda_pintbl { i16 24, i32 60889136 }, %struct.hda_pintbl { i16 25, i32 77699121 }, %struct.hda_pintbl { i16 26, i32 75575359 }, %struct.hda_pintbl { i16 27, i32 69275680 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.764 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.765 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168864 }, %struct.hda_pintbl { i16 20, i32 -1877540576 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.766 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 25, i32 60887072 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.767 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 77664320 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.768 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 77664320 }, %struct.hda_pintbl { i16 29, i32 1080033281 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.769 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 25, i32 77664320 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.770 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 23, i32 -1877540591 }, %struct.hda_pintbl { i16 25, i32 60887088 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.771 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.772 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168928 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.773 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 21, i32 69275712 }, %struct.hda_pintbl { i16 24, i32 -1877540590 }, %struct.hda_pintbl { i16 26, i32 77664288 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.774 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 21, i32 69275712 }, %struct.hda_pintbl { i16 24, i32 -1877540592 }, %struct.hda_pintbl { i16 26, i32 77664288 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.775 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 21, i32 69275679 }, %struct.hda_pintbl { i16 26, i32 77664288 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.776 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 21, i32 69275680 }, %struct.hda_pintbl { i16 26, i32 77664320 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.777 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 69275680 }, %struct.hda_pintbl { i16 26, i32 77664320 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.778 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 69275680 }, %struct.hda_pintbl { i16 26, i32 77664288 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.779 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 69275679 }, %struct.hda_pintbl { i16 26, i32 77664288 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.780 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 35733535 }, %struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl { i16 22, i32 16859168 }, %struct.hda_pintbl { i16 25, i32 27365424 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.781 = internal constant { [7 x %struct.hda_pintbl], [40 x i8] } { [7 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 35733535 }, %struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl { i16 22, i32 16859168 }, %struct.hda_pintbl { i16 24, i32 44142641 }, %struct.hda_pintbl { i16 25, i32 27365438 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.782 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 35733535 }, %struct.hda_pintbl { i16 18, i32 -1868168896 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.783 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 35733535 }, %struct.hda_pintbl { i16 19, i32 -1868168896 }, %struct.hda_pintbl { i16 22, i32 553730080 }, %struct.hda_pintbl { i16 25, i32 564236336 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.784 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 35733535 }, %struct.hda_pintbl { i16 19, i32 -1868168896 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.785 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.786 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 27, i32 -1868103376 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.787 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.788 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.789 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.790 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168928 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275696 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.791 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.792 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.793 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.794 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275696 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.795 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 23, i32 553730080 }, %struct.hda_pintbl { i16 24, i32 564236336 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.796 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 23, i32 553730112 }, %struct.hda_pintbl { i16 24, i32 564236368 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.797 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.798 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.799 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl { i16 23, i32 -1877540544 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.800 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl { i16 23, i32 -1877540528 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.801 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1213857472 }, %struct.hda_pintbl { i16 19, i32 -1213857456 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 26, i32 50401312 }, %struct.hda_pintbl { i16 33, i32 52498480 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.802 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1213857472 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 26, i32 60887088 }, %struct.hda_pintbl { i16 33, i32 52498464 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.803 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 33, i32 69275680 }, %struct.hda_pintbl { i16 18, i32 -1213857488 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.804 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 23, i32 -1877540576 }, %struct.hda_pintbl { i16 24, i32 44109872 }, %struct.hda_pintbl { i16 25, i32 44109887 }, %struct.hda_pintbl { i16 33, i32 35721247 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.805 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 1073741824 }, %struct.hda_pintbl { i16 27, i32 1073741824 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.806 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 1073741824 }, %struct.hda_pintbl { i16 26, i32 1073741824 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.807 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 1073741824 }, %struct.hda_pintbl { i16 26, i32 1073741824 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.808 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 1073741824 }, %struct.hda_pintbl { i16 26, i32 1073741824 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.str.809 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Acer Aspire\00", [20 x i8] zeroinitializer }, align 32
@.str.810 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Huawei Matebook\00", [16 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.811, ptr @.str.812, ptr @.str.78, i32 702, ptr @.str.813, ptr @.str.678 }, [40 x i8] zeroinitializer }, align 32
@.str.811 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: SKU not ready 0x%08x\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.812 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"alc_auto_parse_customize_define\00", [32 x i8] zeroinitializer }, align 32
@.str.813 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define._entry_ptr = internal global ptr @alc_auto_parse_customize_define._entry, section ".printk_index", align 4
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.814, i8 0, i8 -75, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.814 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"SKU: Nid=0x%x sku_cfg=0x%08x\0A\00", [34 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug244 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.815, i8 0, i8 -74, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.815 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"SKU: port_connectivity=0x%x\0A\00", [35 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug245 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.816, i8 0, i8 -74, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.816 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SKU: enable_pcbeep=0x%x\0A\00", [39 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug246 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.817, i8 0, i8 -74, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.817 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"SKU: check_sum=0x%08x\0A\00", [41 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug247 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.818, i8 0, i8 -73, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.818 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"SKU: customization=0x%08x\0A\00", [37 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug248 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.819, i8 0, i8 -73, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.819 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SKU: external_amp=0x%x\0A\00", [40 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug249 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.820, i8 0, i8 -73, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.820 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SKU: platform_type=0x%x\0A\00", [39 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug250 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.821, i8 0, i8 -73, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.821 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"SKU: swap=0x%x\0A\00", [16 x i8] zeroinitializer }, align 32
@alc_auto_parse_customize_define.__UNIQUE_ID_ddebug251 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.812, ptr @.str.78, ptr @.str.822, i8 0, i8 -72, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.822 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"SKU: override=0x%x\0A\00", [44 x i8] zeroinitializer }, align 32
@beep_allow_list = internal constant { [12 x %struct.snd_pci_quirk], [32 x i8] } { [12 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4163, i16 4156, i16 -1, i32 1, ptr @.str.708 }, %struct.snd_pci_quirk { i16 4163, i16 4445, i16 -1, i32 1, ptr @.str.708 }, %struct.snd_pci_quirk { i16 4163, i16 -32097, i16 -1, i32 1, ptr @.str.708 }, %struct.snd_pci_quirk { i16 4163, i16 -31882, i16 -1, i32 1, ptr @.str.823 }, %struct.snd_pci_quirk { i16 4163, i16 -31794, i16 -1, i32 1, ptr @.str.823 }, %struct.snd_pci_quirk { i16 4163, i16 -31974, i16 -1, i32 1, ptr @.str.823 }, %struct.snd_pci_quirk { i16 4163, i16 -31926, i16 -1, i32 1, ptr @.str.823 }, %struct.snd_pci_quirk { i16 5208, i16 -24574, i16 -1, i32 1, ptr @.str.824 }, %struct.snd_pci_quirk { i16 -32634, i16 -10733, i16 -1, i32 1, ptr @.str.825 }, %struct.snd_pci_quirk { i16 6058, i16 12446, i16 -1, i32 0, ptr @.str.826 }, %struct.snd_pci_quirk { i16 6058, i16 12451, i16 -1, i32 0, ptr @.str.827 }, %struct.snd_pci_quirk zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.823 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"EeePC\00", [26 x i8] zeroinitializer }, align 32
@.str.824 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"GA-MA790X\00", [22 x i8] zeroinitializer }, align 32
@.str.825 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Intel\00", [26 x i8] zeroinitializer }, align 32
@.str.826 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Lenovo ThinkCentre M73\00", [41 x i8] zeroinitializer }, align 32
@.str.827 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Lenovo ThinkCentre M93\00", [41 x i8] zeroinitializer }, align 32
@alc269_parse_auto_config.alc269_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc269_parse_auto_config.alc269_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 0, i16 27, i16 20, i16 33], [24 x i8] zeroinitializer }, align 32
@alc269_parse_auto_config.alc269va_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@alc_ssid_check.__UNIQUE_ID_ddebug254 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.828, ptr @.str.78, ptr @.str.829, i8 0, i8 -38, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.828 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc_ssid_check\00", [17 x i8] zeroinitializer }, align 32
@.str.829 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"realtek: Enable default setup for auto mode as fallback\0A\00", [39 x i8] zeroinitializer }, align 32
@alc_subsystem_id.__UNIQUE_ID_ddebug252 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.830, ptr @.str.78, ptr @.str.831, i8 0, i8 -57, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.830 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"alc_subsystem_id\00", [47 x i8] zeroinitializer }, align 32
@.str.831 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"realtek: No valid SSID, checking pincfg 0x%08x for NID 0x%x\0A\00", [35 x i8] zeroinitializer }, align 32
@alc_subsystem_id.__UNIQUE_ID_ddebug253 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.830, ptr @.str.78, ptr @.str.832, i8 0, i8 -53, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.832 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"realtek: Enabling init ASM_ID=0x%04x CODEC_ID=%08x\0A\00", [44 x i8] zeroinitializer }, align 32
@alc_beep_mixer = internal constant { [2 x %struct.snd_kcontrol_new], [32 x i8] } { [2 x %struct.snd_kcontrol_new] [%struct.snd_kcontrol_new { i32 2, i32 0, i32 1073741824, ptr @.str.833, i32 0, i32 268435475, i32 0, ptr @snd_hda_mixer_amp_volume_info, ptr @snd_hda_mixer_amp_volume_get, ptr @snd_hda_mixer_amp_volume_put, %union.anon.87 { ptr @snd_hda_mixer_amp_tlv }, i32 196608 }, %struct.snd_kcontrol_new { i32 2, i32 0, i32 1073741824, ptr @.str.834, i32 0, i32 0, i32 0, ptr @snd_hda_mixer_amp_switch_info, ptr @snd_hda_mixer_amp_switch_get_beep, ptr @snd_hda_mixer_amp_switch_put_beep, %union.anon.87 zeroinitializer, i32 196608 }], [32 x i8] zeroinitializer }, align 32
@.str.833 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Beep Playback Volume\00", [43 x i8] zeroinitializer }, align 32
@.str.834 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Beep Playback Switch\00", [43 x i8] zeroinitializer }, align 32
@alc260_fixup_models = internal constant { [5 x %struct.hda_model_fixup], [56 x i8] } { [5 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 3, ptr @.str.835 }, %struct.hda_model_fixup { i32 2, ptr @.str.836 }, %struct.hda_model_fixup { i32 8, ptr @.str.837 }, %struct.hda_model_fixup { i32 9, ptr @.str.838 }, %struct.hda_model_fixup zeroinitializer], [56 x i8] zeroinitializer }, align 32
@alc260_fixup_tbl = internal constant { [13 x %struct.snd_pci_quirk], [48 x i8] } { [13 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4133, i16 123, i16 -1, i32 3, ptr @.str.839 }, %struct.snd_pci_quirk { i16 4133, i16 127, i16 -1, i32 2, ptr @.str.840 }, %struct.snd_pci_quirk { i16 4133, i16 143, i16 -1, i32 3, ptr @.str.706 }, %struct.snd_pci_quirk { i16 4156, i16 10250, i16 -1, i32 0, ptr @.str.841 }, %struct.snd_pci_quirk { i16 4156, i16 12474, i16 -1, i32 6, ptr @.str.842 }, %struct.snd_pci_quirk { i16 4173, i16 -32325, i16 -1, i32 10, ptr @.str.399 }, %struct.snd_pci_quirk { i16 4173, i16 -32286, i16 -1, i32 1, ptr @.str.843 }, %struct.snd_pci_quirk { i16 4303, i16 4902, i16 -1, i32 8, ptr @.str.844 }, %struct.snd_pci_quirk { i16 5385, i16 17728, i16 -1, i32 3, ptr @.str.845 }, %struct.snd_pci_quirk { i16 5421, i16 1833, i16 -1, i32 7, ptr @.str.846 }, %struct.snd_pci_quirk { i16 5663, i16 8279, i16 -1, i32 5, ptr @.str.847 }, %struct.snd_pci_quirk { i16 5681, i16 -16361, i16 -1, i32 2, ptr @.str.848 }, %struct.snd_pci_quirk zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc260_fixups = internal constant { [11 x %struct.hda_fixup], [48 x i8] } { [11 x %struct.hda_fixup] [%struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.849 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.850 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.851 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio1 } }, %struct.hda_fixup { i32 3, i8 -128, i32 1, %union.anon.74 { ptr @alc260_fixup_gpio1_toggle } }, %struct.hda_fixup { i32 2, i8 -128, i32 4, %union.anon.74 { ptr @.compoundliteral.852 } }, %struct.hda_fixup { i32 3, i8 -128, i32 2, %union.anon.74 { ptr @alc260_fixup_gpio1_toggle } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc260_fixup_kn1 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc260_fixup_fsc_s7020 } }, %struct.hda_fixup { i32 3, i8 -128, i32 8, %union.anon.74 { ptr @alc260_fixup_fsc_s7020_jwse } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.853 } }], [48 x i8] zeroinitializer }, align 32
@.str.835 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gpio1\00", [26 x i8] zeroinitializer }, align 32
@.str.836 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"coef\00", [27 x i8] zeroinitializer }, align 32
@.str.837 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"fujitsu\00", [24 x i8] zeroinitializer }, align 32
@.str.838 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"fujitsu-jwse\00", [19 x i8] zeroinitializer }, align 32
@.str.839 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Acer C20x\00", [22 x i8] zeroinitializer }, align 32
@.str.840 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Acer Aspire 9500\00", [47 x i8] zeroinitializer }, align 32
@.str.841 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"HP dc5750\00", [22 x i8] zeroinitializer }, align 32
@.str.842 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"HP Presario B1900\00", [46 x i8] zeroinitializer }, align 32
@.str.843 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Sony VAIO TX\00", [19 x i8] zeroinitializer }, align 32
@.str.844 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"FSC LifeBook S7020\00", [45 x i8] zeroinitializer }, align 32
@.str.845 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Favorit 100XS\00", [18 x i8] zeroinitializer }, align 32
@.str.846 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Quanta KN1\00", [21 x i8] zeroinitializer }, align 32
@.str.847 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Replacer 672V\00", [18 x i8] zeroinitializer }, align 32
@.str.848 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"PB V7900\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.849 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 17, i32 -1877802736 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.850 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 15, i32 18956288 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.851 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 26, i32 1280, i32 7 }, %struct.hda_verb { i16 26, i32 1024, i32 12352 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.852 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 26, i32 1280, i32 7 }, %struct.hda_verb { i16 26, i32 1024, i32 12368 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.853 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 15, i32 18944032 }, %struct.hda_pintbl { i16 16, i32 65599 }, %struct.hda_pintbl { i16 17, i32 1091637744 }, %struct.hda_pintbl { i16 18, i32 27351344 }, %struct.hda_pintbl { i16 19, i32 1091637744 }, %struct.hda_pintbl { i16 20, i32 1091637744 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc260_fixup_kn1.pincfgs = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 15, i32 35733504 }, %struct.hda_pintbl { i16 18, i32 -1868168864 }, %struct.hda_pintbl { i16 19, i32 44142592 }, %struct.hda_pintbl { i16 24, i32 21258240 }, %struct.hda_pintbl { i16 16, i32 1091637744 }, %struct.hda_pintbl { i16 17, i32 1091637744 }, %struct.hda_pintbl { i16 20, i32 1091637744 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc260_parse_auto_config.alc260_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 23, i16 0], [28 x i8] zeroinitializer }, align 32
@alc260_parse_auto_config.alc260_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 16, i16 21, i16 15, i16 0], [24 x i8] zeroinitializer }, align 32
@alc262_fixup_models = internal constant { [10 x %struct.hda_model_fixup], [48 x i8] } { [10 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 7, ptr @.str.126 }, %struct.hda_model_fixup { i32 0, ptr @.str.854 }, %struct.hda_model_fixup { i32 1, ptr @.str.855 }, %struct.hda_model_fixup { i32 2, ptr @.str.856 }, %struct.hda_model_fixup { i32 3, ptr @.str.857 }, %struct.hda_model_fixup { i32 4, ptr @.str.858 }, %struct.hda_model_fixup { i32 5, ptr @.str.859 }, %struct.hda_model_fixup { i32 6, ptr @.str.860 }, %struct.hda_model_fixup { i32 8, ptr @.str.861 }, %struct.hda_model_fixup zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc262_fixup_tbl = internal constant { [11 x %struct.snd_pci_quirk], [48 x i8] } { [11 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4156, i16 5899, i16 -1, i32 2, ptr @.str.862 }, %struct.snd_pci_quirk { i16 4303, i16 5015, i16 -1, i32 1, ptr @.str.863 }, %struct.snd_pci_quirk { i16 4303, i16 5165, i16 -1, i32 5, ptr @.str.864 }, %struct.snd_pci_quirk { i16 4337, i16 10517, i16 -1, i32 3, ptr @.str.865 }, %struct.snd_pci_quirk { i16 5940, i16 4417, i16 -1, i32 0, ptr @.str.866 }, %struct.snd_pci_quirk { i16 5940, i16 4423, i16 -1, i32 0, ptr @.str.867 }, %struct.snd_pci_quirk { i16 6058, i16 14414, i16 -1, i32 4, ptr @.str.868 }, %struct.snd_pci_quirk { i16 6143, i16 1376, i16 -1, i32 5, ptr @.str.869 }, %struct.snd_pci_quirk { i16 6143, i16 1421, i16 -1, i32 6, ptr @.str.870 }, %struct.snd_pci_quirk { i16 -32634, i16 29296, i16 -1, i32 8, ptr @.str.871 }, %struct.snd_pci_quirk zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc262_fixups = internal constant { [9 x %struct.hda_fixup], [48 x i8] } { [9 x %struct.hda_fixup] [%struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.872 } }, %struct.hda_fixup { i32 1, i8 -128, i32 5, %union.anon.74 { ptr @.compoundliteral.873 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.874 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.875 } }, %struct.hda_fixup { i32 4, i8 -128, i32 5, %union.anon.74 { ptr @.compoundliteral.876 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.877 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.878 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_no_depop_delay } }], [48 x i8] zeroinitializer }, align 32
@.str.854 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fsc-h270\00", [23 x i8] zeroinitializer }, align 32
@.str.855 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"fsc-s7110\00", [22 x i8] zeroinitializer }, align 32
@.str.856 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"hp-z200\00", [24 x i8] zeroinitializer }, align 32
@.str.857 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"tyan\00", [27 x i8] zeroinitializer }, align 32
@.str.858 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"lenovo-3000\00", [20 x i8] zeroinitializer }, align 32
@.str.859 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"benq\00", [27 x i8] zeroinitializer }, align 32
@.str.860 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"benq-t31\00", [23 x i8] zeroinitializer }, align 32
@.str.861 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"bayleybay\00", [22 x i8] zeroinitializer }, align 32
@.str.862 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HP Z200\00", [24 x i8] zeroinitializer }, align 32
@.str.863 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Fujitsu Lifebook S7110\00", [41 x i8] zeroinitializer }, align 32
@.str.864 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Fujitsu Lifebook E8410\00", [41 x i8] zeroinitializer }, align 32
@.str.865 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Tyan Thunder n6650W\00", [44 x i8] zeroinitializer }, align 32
@.str.866 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"FSC ESPRIMO U9210\00", [46 x i8] zeroinitializer }, align 32
@.str.867 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"FSC Celsius H270\00", [47 x i8] zeroinitializer }, align 32
@.str.868 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Lenovo 3000\00", [20 x i8] zeroinitializer }, align 32
@.str.869 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Benq ED8\00", [23 x i8] zeroinitializer }, align 32
@.str.870 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Benq T31-16\00", [20 x i8] zeroinitializer }, align 32
@.str.871 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"BayleyBay\00", [22 x i8] zeroinitializer }, align 32
@.compoundliteral.872 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 35722287 }, %struct.hda_pintbl { i16 27, i32 18945055 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.873 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 -1877540592 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.874 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 -1726807776 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.875 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 429122032 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.876 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 33 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.877 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12400 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.878 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12368 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@alc262_parse_auto_config.alc262_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc262_parse_auto_config.alc262_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@alc268_fixup_models = internal constant { [4 x %struct.hda_model_fixup], [32 x i8] } { [4 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 0, ptr @.str.126 }, %struct.hda_model_fixup { i32 1, ptr @.str.879 }, %struct.hda_model_fixup { i32 2, ptr @.str.880 }, %struct.hda_model_fixup zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc268_fixup_tbl = internal constant { [4 x %struct.snd_pci_quirk], [32 x i8] } { [4 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4133, i16 313, i16 -1, i32 2, ptr @.str.881 }, %struct.snd_pci_quirk { i16 4133, i16 347, i16 -1, i32 0, ptr @.str.882 }, %struct.snd_pci_quirk { i16 4473, i16 -250, i16 -1, i32 1, ptr @.str.883 }, %struct.snd_pci_quirk zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc268_fixups = internal constant { [3 x %struct.hda_fixup], [48 x i8] } { [3 x %struct.hda_fixup] [%struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.884 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.885 } }], [48 x i8] zeroinitializer }, align 32
@alc268_beep_mixer = internal constant { [2 x %struct.snd_kcontrol_new], [32 x i8] } { [2 x %struct.snd_kcontrol_new] [%struct.snd_kcontrol_new { i32 2, i32 0, i32 1073741824, ptr @.str.833, i32 0, i32 268435475, i32 0, ptr @snd_hda_mixer_amp_volume_info, ptr @snd_hda_mixer_amp_volume_get, ptr @snd_hda_mixer_amp_volume_put, %union.anon.87 { ptr @snd_hda_mixer_amp_tlv }, i32 196637 }, %struct.snd_kcontrol_new { i32 2, i32 0, i32 1073741824, ptr @.str.834, i32 0, i32 0, i32 0, ptr @snd_hda_mixer_amp_switch_info, ptr @snd_hda_mixer_amp_switch_get, ptr @alc268_beep_switch_put, %union.anon.87 zeroinitializer, i32 720911 }], [32 x i8] zeroinitializer }, align 32
@alc268_beep_init_verbs = internal constant { [4 x %struct.hda_verb], [48 x i8] } { [4 x %struct.hda_verb] [%struct.hda_verb { i16 29, i32 768, i32 28672 }, %struct.hda_verb { i16 15, i32 768, i32 29056 }, %struct.hda_verb { i16 16, i32 768, i32 29056 }, %struct.hda_verb zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.879 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"hp-eapd\00", [24 x i8] zeroinitializer }, align 32
@.str.880 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"spdif\00", [26 x i8] zeroinitializer }, align 32
@.str.881 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Acer TravelMate 6293\00", [43 x i8] zeroinitializer }, align 32
@.str.882 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Acer AOA 150 (ZG5)\00", [45 x i8] zeroinitializer }, align 32
@.str.883 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Toshiba P200\00", [19 x i8] zeroinitializer }, align 32
@.compoundliteral.884 = internal constant { [2 x %struct.hda_verb], [40 x i8] } { [2 x %struct.hda_verb] [%struct.hda_verb { i16 21, i32 1804, i32 0 }, %struct.hda_verb zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.885 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 21696896 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@alc268_parse_auto_config.alc268_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@alc662_fixup_models = internal constant { [33 x %struct.hda_model_fixup], [88 x i8] } { [33 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 0, ptr @.str.887 }, %struct.hda_model_fixup { i32 2, ptr @.str.888 }, %struct.hda_model_fixup { i32 3, ptr @.str.889 }, %struct.hda_model_fixup { i32 7, ptr @.str.890 }, %struct.hda_model_fixup { i32 8, ptr @.str.891 }, %struct.hda_model_fixup { i32 9, ptr @.str.892 }, %struct.hda_model_fixup { i32 10, ptr @.str.893 }, %struct.hda_model_fixup { i32 11, ptr @.str.894 }, %struct.hda_model_fixup { i32 12, ptr @.str.895 }, %struct.hda_model_fixup { i32 13, ptr @.str.896 }, %struct.hda_model_fixup { i32 14, ptr @.str.897 }, %struct.hda_model_fixup { i32 15, ptr @.str.898 }, %struct.hda_model_fixup { i32 17, ptr @.str.899 }, %struct.hda_model_fixup { i32 18, ptr @.str.126 }, %struct.hda_model_fixup { i32 19, ptr @.str.900 }, %struct.hda_model_fixup { i32 20, ptr @.str.134 }, %struct.hda_model_fixup { i32 21, ptr @.str.901 }, %struct.hda_model_fixup { i32 22, ptr @.str.902 }, %struct.hda_model_fixup { i32 24, ptr @.str.903 }, %struct.hda_model_fixup { i32 25, ptr @.str.904 }, %struct.hda_model_fixup { i32 27, ptr @.str.905 }, %struct.hda_model_fixup { i32 29, ptr @.str.906 }, %struct.hda_model_fixup { i32 30, ptr @.str.907 }, %struct.hda_model_fixup { i32 32, ptr @.str.908 }, %struct.hda_model_fixup { i32 34, ptr @.str.909 }, %struct.hda_model_fixup { i32 35, ptr @.str.910 }, %struct.hda_model_fixup { i32 36, ptr @.str.911 }, %struct.hda_model_fixup { i32 37, ptr @.str.912 }, %struct.hda_model_fixup { i32 38, ptr @.str.913 }, %struct.hda_model_fixup { i32 40, ptr @.str.914 }, %struct.hda_model_fixup { i32 41, ptr @.str.145 }, %struct.hda_model_fixup { i32 42, ptr @.str.915 }, %struct.hda_model_fixup zeroinitializer], [88 x i8] zeroinitializer }, align 32
@alc662_fixup_tbl = internal constant { [53 x %struct.snd_pci_quirk], [208 x i8] } { [53 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4121, i16 -28537, i16 -1, i32 9, ptr @.str.916 }, %struct.snd_pci_quirk { i16 4133, i16 559, i16 -1, i32 18, ptr @.str.917 }, %struct.snd_pci_quirk { i16 4133, i16 577, i16 -1, i32 18, ptr @.str.918 }, %struct.snd_pci_quirk { i16 4133, i16 776, i16 -1, i32 0, ptr @.str.919 }, %struct.snd_pci_quirk { i16 4133, i16 796, i16 -1, i32 6, ptr @.str.920 }, %struct.snd_pci_quirk { i16 4133, i16 841, i16 -1, i32 18, ptr @.str.921 }, %struct.snd_pci_quirk { i16 4133, i16 842, i16 -1, i32 18, ptr @.str.922 }, %struct.snd_pci_quirk { i16 4133, i16 907, i16 -1, i32 0, ptr @.str.923 }, %struct.snd_pci_quirk { i16 4133, i16 1382, i16 -1, i32 42, ptr @.str.924 }, %struct.snd_pci_quirk { i16 4133, i16 4668, i16 -1, i32 46, ptr @.str.925 }, %struct.snd_pci_quirk { i16 4133, i16 4686, i16 -1, i32 45, ptr @.str.926 }, %struct.snd_pci_quirk { i16 4136, i16 1496, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1499, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1534, i16 -1, i32 29, ptr @.str.927 }, %struct.snd_pci_quirk { i16 4136, i16 1546, i16 -1, i32 29, ptr @.str.290 }, %struct.snd_pci_quirk { i16 4136, i16 1549, i16 -1, i32 29, ptr @.str.928 }, %struct.snd_pci_quirk { i16 4136, i16 1573, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1574, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1686, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1688, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4136, i16 1695, i16 -1, i32 20, ptr @.str.285 }, %struct.snd_pci_quirk { i16 4156, i16 5682, i16 -1, i32 7, ptr @.str.929 }, %struct.snd_pci_quirk { i16 4156, i16 -30914, i16 -1, i32 44, ptr @.str.309 }, %struct.snd_pci_quirk { i16 4163, i16 4224, i16 -1, i32 22, ptr @.str.930 }, %struct.snd_pci_quirk { i16 4163, i16 4557, i16 -1, i32 30, ptr @.str.931 }, %struct.snd_pci_quirk { i16 4163, i16 4765, i16 -1, i32 30, ptr @.str.932 }, %struct.snd_pci_quirk { i16 4163, i16 4863, i16 -1, i32 34, ptr @.str.933 }, %struct.snd_pci_quirk { i16 4163, i16 5087, i16 -1, i32 25, ptr @.str.934 }, %struct.snd_pci_quirk { i16 4163, i16 5239, i16 -1, i32 23, ptr @.str.935 }, %struct.snd_pci_quirk { i16 4163, i16 5543, i16 -1, i32 24, ptr @.str.936 }, %struct.snd_pci_quirk { i16 4163, i16 6013, i16 -1, i32 32, ptr @.str.937 }, %struct.snd_pci_quirk { i16 4163, i16 6077, i16 -1, i32 32, ptr @.str.938 }, %struct.snd_pci_quirk { i16 4163, i16 6237, i16 -1, i32 47, ptr @.str.939 }, %struct.snd_pci_quirk { i16 4163, i16 6499, i16 -1, i32 15, ptr @.str.940 }, %struct.snd_pci_quirk { i16 4163, i16 7027, i16 -1, i32 24, ptr @.str.941 }, %struct.snd_pci_quirk { i16 4163, i16 7155, i16 -1, i32 23, ptr @.str.942 }, %struct.snd_pci_quirk { i16 4163, i16 -31639, i16 -1, i32 16, ptr @.str.943 }, %struct.snd_pci_quirk { i16 4187, i16 3286, i16 -1, i32 9, ptr @.str.944 }, %struct.snd_pci_quirk { i16 5197, i16 -16303, i16 -1, i32 2, ptr @.str.945 }, %struct.snd_pci_quirk { i16 5325, i16 20483, i16 -1, i32 40, ptr @.str.946 }, %struct.snd_pci_quirk { i16 6058, i16 4150, i16 -1, i32 41, ptr @.str.482 }, %struct.snd_pci_quirk { i16 6058, i16 13002, i16 -1, i32 51, ptr @.str.947 }, %struct.snd_pci_quirk { i16 6058, i16 13003, i16 -1, i32 51, ptr @.str.948 }, %struct.snd_pci_quirk { i16 6058, i16 13007, i16 -1, i32 51, ptr @.str.949 }, %struct.snd_pci_quirk { i16 6058, i16 13047, i16 -1, i32 51, ptr @.str.950 }, %struct.snd_pci_quirk { i16 6058, i16 14511, i16 -1, i32 2, ptr @.str.951 }, %struct.snd_pci_quirk { i16 6058, i16 14861, i16 -1, i32 2, ptr @.str.952 }, %struct.snd_pci_quirk { i16 6217, i16 22674, i16 -1, i32 38, ptr @.str.953 }, %struct.snd_pci_quirk { i16 6618, i16 -24272, i16 -1, i32 17, ptr @.str.954 }, %struct.snd_pci_quirk { i16 6922, i16 440, i16 -1, i32 37, ptr @.str.955 }, %struct.snd_pci_quirk { i16 6965, i16 4660, i16 -1, i32 4, ptr @.str.956 }, %struct.snd_pci_quirk { i16 6965, i16 8710, i16 -1, i32 5, ptr @.str.957 }, %struct.snd_pci_quirk zeroinitializer], [208 x i8] zeroinitializer }, align 32
@alc662_fixups = internal constant { [52 x %struct.hda_fixup], [192 x i8] } { [52 x %struct.hda_fixup] [%struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.958 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc662_fixup_led_gpio1 } }, %struct.hda_fixup { i32 1, i8 -128, i32 1, %union.anon.74 { ptr @.compoundliteral.959 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc272_fixup_mario } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.960 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.961 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_sku_ignore } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.962 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.963 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.964 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.965 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.966 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.967 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.968 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.969 } }, %struct.hda_fixup { i32 1, i8 -128, i32 6, %union.anon.74 { ptr @.compoundliteral.970 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_no_jack_detect } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.971 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 1, i8 -128, i32 21, %union.anon.74 { ptr @.compoundliteral.972 } }, %struct.hda_fixup { i32 1, i8 -128, i32 22, %union.anon.74 { ptr @.compoundliteral.973 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_mode_alc662 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_mode_alc668 } }, %struct.hda_fixup { i32 3, i8 -128, i32 11, %union.anon.74 { ptr @alc_fixup_bass_chmap } }, %struct.hda_fixup { i32 1, i8 -128, i32 26, %union.anon.74 { ptr @.compoundliteral.974 } }, %struct.hda_fixup { i32 1, i8 -128, i32 26, %union.anon.74 { ptr @.compoundliteral.975 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_bass_chmap } }, %struct.hda_fixup { i32 3, i8 -128, i32 20, %union.anon.74 { ptr @alc_fixup_auto_mute_via_amp } }, %struct.hda_fixup { i32 3, i8 -128, i32 20, %union.anon.74 { ptr @alc_fixup_disable_aamix } }, %struct.hda_fixup { i32 3, i8 -128, i32 28, %union.anon.74 { ptr @alc_fixup_dell_xps13 } }, %struct.hda_fixup { i32 3, i8 -128, i32 25, %union.anon.74 { ptr @alc_fixup_auto_mute_via_amp } }, %struct.hda_fixup { i32 3, i8 0, i32 26, %union.anon.74 { ptr @alc_fixup_headset_mode_alc668 } }, %struct.hda_fixup { i32 1, i8 -128, i32 31, %union.anon.74 { ptr @.compoundliteral.976 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.977 } }, %struct.hda_fixup { i32 1, i8 -128, i32 33, %union.anon.74 { ptr @.compoundliteral.978 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_headset_mode } }, %struct.hda_fixup { i32 1, i8 -128, i32 35, %union.anon.74 { ptr @.compoundliteral.979 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.980 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.981 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc662_fixup_usi_headset_mic } }, %struct.hda_fixup { i32 1, i8 -128, i32 39, %union.anon.74 { ptr @.compoundliteral.982 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc233_alc662_fixup_lenovo_dual_codecs } }, %struct.hda_fixup { i32 1, i8 -128, i32 43, %union.anon.74 { ptr @.compoundliteral.983 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc662_fixup_aspire_ethos_hp } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc671_fixup_hp_headset_mic2 } }, %struct.hda_fixup { i32 1, i8 -128, i32 39, %union.anon.74 { ptr @.compoundliteral.984 } }, %struct.hda_fixup { i32 1, i8 -128, i32 39, %union.anon.74 { ptr @.compoundliteral.985 } }, %struct.hda_fixup { i32 1, i8 -128, i32 48, %union.anon.74 { ptr @.compoundliteral.986 } }, %struct.hda_fixup { i32 3, i8 -128, i32 49, %union.anon.74 { ptr @alc269_fixup_headset_mic } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.987 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc897_fixup_lenovo_headset_mic } }, %struct.hda_fixup { i32 1, i8 -128, i32 50, %union.anon.74 { ptr @.compoundliteral.988 } }], [192 x i8] zeroinitializer }, align 32
@alc662_pin_fixup_tbl = internal constant { [12 x %struct.snd_hda_pin_quirk], [48 x i8] } { [12 x %struct.snd_hda_pin_quirk] [%struct.snd_hda_pin_quirk { i32 283904103, i16 4136, ptr @.compoundliteral.993, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283904103, i16 4136, ptr @.compoundliteral.994, ptr @.str.285, i32 36 }, %struct.snd_hda_pin_quirk { i32 283903586, i16 4136, ptr @.compoundliteral.995, ptr @.str.285, i32 19 }, %struct.snd_hda_pin_quirk { i32 283903592, i16 4136, ptr @.compoundliteral.996, ptr @.str.285, i32 27 }, %struct.snd_hda_pin_quirk { i32 283903592, i16 4136, ptr @.compoundliteral.997, ptr @.str.285, i32 27 }, %struct.snd_hda_pin_quirk { i32 283903592, i16 4136, ptr @.compoundliteral.998, ptr @.str.285, i32 27 }, %struct.snd_hda_pin_quirk { i32 283903592, i16 4136, ptr @.compoundliteral.999, ptr @.str.285, i32 27 }, %struct.snd_hda_pin_quirk { i32 283903592, i16 4136, ptr @.compoundliteral.1000, ptr @.str.927, i32 27 }, %struct.snd_hda_pin_quirk { i32 283903601, i16 4156, ptr @.compoundliteral.1001, ptr @.str.1002, i32 44 }, %struct.snd_hda_pin_quirk { i32 283903601, i16 4156, ptr @.compoundliteral.1003, ptr @.str.1002, i32 44 }, %struct.snd_hda_pin_quirk { i32 283903601, i16 4156, ptr @.compoundliteral.1004, ptr @.str.1002, i32 44 }, %struct.snd_hda_pin_quirk zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.886 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ALC272X\00", [24 x i8] zeroinitializer }, align 32
@alc668_coefs = internal constant { [60 x %struct.coef_fw], [88 x i8] } { [60 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 1, i16 -1, i16 -16706 }, %struct.coef_fw { i8 32, i8 2, i16 -1, i16 -21846 }, %struct.coef_fw { i8 32, i8 3, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 4, i16 -1, i16 384 }, %struct.coef_fw { i8 32, i8 6, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 7, i16 -1, i16 3968 }, %struct.coef_fw { i8 32, i8 8, i16 -1, i16 49 }, %struct.coef_fw { i8 32, i8 10, i16 -1, i16 96 }, %struct.coef_fw { i8 32, i8 11, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 12, i16 -1, i16 31991 }, %struct.coef_fw { i8 32, i8 13, i16 -1, i16 4224 }, %struct.coef_fw { i8 32, i8 14, i16 -1, i16 32639 }, %struct.coef_fw { i8 32, i8 15, i16 -1, i16 -13108 }, %struct.coef_fw { i8 32, i8 16, i16 -1, i16 -8756 }, %struct.coef_fw { i8 32, i8 17, i16 -1, i16 1 }, %struct.coef_fw { i8 32, i8 19, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 20, i16 -1, i16 10912 }, %struct.coef_fw { i8 32, i8 23, i16 -1, i16 -22208 }, %struct.coef_fw { i8 32, i8 25, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 26, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 28, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 29, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 30, i16 -1, i16 29720 }, %struct.coef_fw { i8 32, i8 31, i16 -1, i16 2052 }, %struct.coef_fw { i8 32, i8 32, i16 -1, i16 16896 }, %struct.coef_fw { i8 32, i8 33, i16 -1, i16 1128 }, %struct.coef_fw { i8 32, i8 34, i16 -1, i16 -29492 }, %struct.coef_fw { i8 32, i8 35, i16 -1, i16 592 }, %struct.coef_fw { i8 32, i8 36, i16 -1, i16 29720 }, %struct.coef_fw { i8 32, i8 39, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 40, i16 -1, i16 -29492 }, %struct.coef_fw { i8 32, i8 42, i16 -1, i16 -256 }, %struct.coef_fw { i8 32, i8 43, i16 -1, i16 -32768 }, %struct.coef_fw { i8 32, i8 -89, i16 -1, i16 -256 }, %struct.coef_fw { i8 32, i8 -88, i16 -1, i16 -32768 }, %struct.coef_fw { i8 32, i8 -86, i16 -1, i16 11799 }, %struct.coef_fw { i8 32, i8 -85, i16 -1, i16 -24384 }, %struct.coef_fw { i8 32, i8 -84, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -83, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -82, i16 -1, i16 10950 }, %struct.coef_fw { i8 32, i8 -81, i16 -1, i16 -23424 }, %struct.coef_fw { i8 32, i8 -80, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -79, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -78, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -77, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -76, i16 -1, i16 0 }, %struct.coef_fw { i8 32, i8 -75, i16 -1, i16 4160 }, %struct.coef_fw { i8 32, i8 -74, i16 -1, i16 -10601 }, %struct.coef_fw { i8 32, i8 -73, i16 -1, i16 -28629 }, %struct.coef_fw { i8 32, i8 -72, i16 -1, i16 -10601 }, %struct.coef_fw { i8 32, i8 -71, i16 -1, i16 -28629 }, %struct.coef_fw { i8 32, i8 -70, i16 -1, i16 -18246 }, %struct.coef_fw { i8 32, i8 -69, i16 -1, i16 -21845 }, %struct.coef_fw { i8 32, i8 -68, i16 -1, i16 -21841 }, %struct.coef_fw { i8 32, i8 -67, i16 -1, i16 27306 }, %struct.coef_fw { i8 32, i8 -66, i16 -1, i16 7170 }, %struct.coef_fw { i8 32, i8 -64, i16 -1, i16 255 }, %struct.coef_fw { i8 32, i8 -63, i16 -1, i16 4006 }, %struct.coef_fw zeroinitializer], [88 x i8] zeroinitializer }, align 32
@.str.887 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"aspire\00", [25 x i8] zeroinitializer }, align 32
@.str.888 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ideapad\00", [24 x i8] zeroinitializer }, align 32
@.str.889 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"mario\00", [26 x i8] zeroinitializer }, align 32
@.str.890 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"hp-rp5800\00", [22 x i8] zeroinitializer }, align 32
@.str.891 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode1\00", [21 x i8] zeroinitializer }, align 32
@.str.892 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode2\00", [21 x i8] zeroinitializer }, align 32
@.str.893 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode3\00", [21 x i8] zeroinitializer }, align 32
@.str.894 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode4\00", [21 x i8] zeroinitializer }, align 32
@.str.895 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode5\00", [21 x i8] zeroinitializer }, align 32
@.str.896 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode6\00", [21 x i8] zeroinitializer }, align 32
@.str.897 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode7\00", [21 x i8] zeroinitializer }, align 32
@.str.898 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"asus-mode8\00", [21 x i8] zeroinitializer }, align 32
@.str.899 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"zotac-z68\00", [22 x i8] zeroinitializer }, align 32
@.str.900 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"alc662-headset-multi\00", [43 x i8] zeroinitializer }, align 32
@.str.901 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc662-headset\00", [17 x i8] zeroinitializer }, align 32
@.str.902 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc668-headset\00", [17 x i8] zeroinitializer }, align 32
@.str.903 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bass16\00", [25 x i8] zeroinitializer }, align 32
@.str.904 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bass1a\00", [25 x i8] zeroinitializer }, align 32
@.str.905 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"automute\00", [23 x i8] zeroinitializer }, align 32
@.str.906 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"dell-xps13\00", [21 x i8] zeroinitializer }, align 32
@.str.907 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-nx50\00", [22 x i8] zeroinitializer }, align 32
@.str.908 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-nx51\00", [22 x i8] zeroinitializer }, align 32
@.str.909 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-g751\00", [22 x i8] zeroinitializer }, align 32
@.str.910 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"alc891-headset\00", [17 x i8] zeroinitializer }, align 32
@.str.911 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"alc891-headset-multi\00", [43 x i8] zeroinitializer }, align 32
@.str.912 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"acer-veriton\00", [19 x i8] zeroinitializer }, align 32
@.str.913 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"asrock-mobo\00", [20 x i8] zeroinitializer }, align 32
@.str.914 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"usi-headset\00", [20 x i8] zeroinitializer }, align 32
@.str.915 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"aspire-ethos\00", [19 x i8] zeroinitializer }, align 32
@.str.916 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ECS\00", [28 x i8] zeroinitializer }, align 32
@.str.917 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Acer Aspire One\00", [16 x i8] zeroinitializer }, align 32
@.str.918 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Packard Bell DOTS\00", [46 x i8] zeroinitializer }, align 32
@.str.919 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 8942G\00", [46 x i8] zeroinitializer }, align 32
@.str.920 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Gateway NV79\00", [19 x i8] zeroinitializer }, align 32
@.str.921 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"eMachines eM250\00", [16 x i8] zeroinitializer }, align 32
@.str.922 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Gateway LT27\00", [19 x i8] zeroinitializer }, align 32
@.str.923 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 8943G\00", [46 x i8] zeroinitializer }, align 32
@.str.924 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Acer Aspire Ethos 8951G\00", [40 x i8] zeroinitializer }, align 32
@.str.925 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Acer Nitro N50-600\00", [45 x i8] zeroinitializer }, align 32
@.str.926 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Acer 2660G\00", [21 x i8] zeroinitializer }, align 32
@.str.927 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Dell XPS 15\00", [20 x i8] zeroinitializer }, align 32
@.str.928 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Dell M3800\00", [21 x i8] zeroinitializer }, align 32
@.str.929 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"HP RP5800\00", [22 x i8] zeroinitializer }, align 32
@.str.930 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Asus UX501VW\00", [19 x i8] zeroinitializer }, align 32
@.str.931 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Asus N550\00", [22 x i8] zeroinitializer }, align 32
@.str.932 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Asus N750\00", [22 x i8] zeroinitializer }, align 32
@.str.933 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS G751\00", [22 x i8] zeroinitializer }, align 32
@.str.934 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Asus N550JX\00", [20 x i8] zeroinitializer }, align 32
@.str.935 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS N56VZ\00", [21 x i8] zeroinitializer }, align 32
@.str.936 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASUS UX51VZH\00", [19 x i8] zeroinitializer }, align 32
@.str.937 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS N551\00", [22 x i8] zeroinitializer }, align 32
@.str.938 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS N751\00", [22 x i8] zeroinitializer }, align 32
@.str.939 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS G551JW\00", [20 x i8] zeroinitializer }, align 32
@.str.940 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS X71SL\00", [21 x i8] zeroinitializer }, align 32
@.str.941 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS N55SF\00", [21 x i8] zeroinitializer }, align 32
@.str.942 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS N76VZ\00", [21 x i8] zeroinitializer }, align 32
@.str.943 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS mobo\00", [22 x i8] zeroinitializer }, align 32
@.str.944 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Foxconn\00", [24 x i8] zeroinitializer }, align 32
@.str.945 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Samsung R720\00", [19 x i8] zeroinitializer }, align 32
@.str.946 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"USI\00", [28 x i8] zeroinitializer }, align 32
@.str.947 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Lenovo ThinkCentre M80\00", [41 x i8] zeroinitializer }, align 32
@.str.948 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Lenovo ThinkCentre M70\00", [41 x i8] zeroinitializer }, align 32
@.str.949 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Lenovo ThinkCentre M950\00", [40 x i8] zeroinitializer }, align 32
@.str.950 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Lenovo ThinkCentre M90\00", [41 x i8] zeroinitializer }, align 32
@.str.951 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Lenovo Ideapad Y550P\00", [43 x i8] zeroinitializer }, align 32
@.str.952 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Lenovo Ideapad Y550\00", [44 x i8] zeroinitializer }, align 32
@.str.953 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ASRock B150M\00", [19 x i8] zeroinitializer }, align 32
@.str.954 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Zotac Z68\00", [22 x i8] zeroinitializer }, align 32
@.str.955 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ACER Veriton\00", [19 x i8] zeroinitializer }, align 32
@.str.956 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CZC ET26\00", [23 x i8] zeroinitializer }, align 32
@.str.957 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CZC P10T\00", [23 x i8] zeroinitializer }, align 32
@.compoundliteral.958 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 -1726807790 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.959 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1726807790 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.960 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 1077723136 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 27365424 }, %struct.hda_pintbl { i16 25, i32 -1868103361 }, %struct.hda_pintbl { i16 26, i32 16859168 }, %struct.hda_pintbl { i16 27, i32 18956319 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 30, i32 1078431285 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.961 = internal constant { [2 x %struct.hda_verb], [40 x i8] } { [2 x %struct.hda_verb] [%struct.hda_verb { i16 20, i32 1804, i32 0 }, %struct.hda_verb zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.962 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 35725343 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.963 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 24, i32 27368480 }, %struct.hda_pintbl { i16 25, i32 -1717368529 }, %struct.hda_pintbl { i16 33, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.964 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 24, i32 27367456 }, %struct.hda_pintbl { i16 25, i32 -1717368529 }, %struct.hda_pintbl { i16 27, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.965 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 18957343 }, %struct.hda_pintbl { i16 24, i32 27367488 }, %struct.hda_pintbl { i16 25, i32 -1717368497 }, %struct.hda_pintbl { i16 33, i32 18945056 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.966 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 22, i32 -1726807791 }, %struct.hda_pintbl { i16 24, i32 27367488 }, %struct.hda_pintbl { i16 25, i32 -1717368497 }, %struct.hda_pintbl { i16 33, i32 18957343 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.967 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 18957343 }, %struct.hda_pintbl { i16 22, i32 -1726807791 }, %struct.hda_pintbl { i16 24, i32 27367488 }, %struct.hda_pintbl { i16 25, i32 -1717368497 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.968 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 21, i32 18945056 }, %struct.hda_pintbl { i16 24, i32 27367488 }, %struct.hda_pintbl { i16 25, i32 -1717368497 }, %struct.hda_pintbl { i16 27, i32 18957343 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.969 = internal constant { [7 x %struct.hda_pintbl], [40 x i8] } { [7 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 23, i32 -1726807791 }, %struct.hda_pintbl { i16 24, i32 27367488 }, %struct.hda_pintbl { i16 25, i32 -1717368497 }, %struct.hda_pintbl { i16 27, i32 18956320 }, %struct.hda_pintbl { i16 33, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.970 = internal constant { [7 x %struct.hda_pintbl], [40 x i8] } { [7 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1726807792 }, %struct.hda_pintbl { i16 18, i32 -1717368464 }, %struct.hda_pintbl { i16 21, i32 18956320 }, %struct.hda_pintbl { i16 23, i32 -1726807791 }, %struct.hda_pintbl { i16 24, i32 27367488 }, %struct.hda_pintbl { i16 33, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.971 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 35733536 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.972 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60887356 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.973 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60920125 }, %struct.hda_pintbl { i16 27, i32 60887356 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.974 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 -2146410223 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.975 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 -2146410223 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.976 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60920125 }, %struct.hda_pintbl { i16 26, i32 -1877540527 }, %struct.hda_pintbl { i16 27, i32 60887356 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.977 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 195 }, %struct.hda_verb { i16 32, i32 1024, i32 16384 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.978 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 69275679 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.979 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 60920125 }, %struct.hda_pintbl { i16 27, i32 60887356 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.980 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 1343684896 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.981 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 1089470704 }, %struct.hda_pintbl { i16 22, i32 1089470704 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.982 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 44142908 }, %struct.hda_pintbl { i16 24, i32 27365437 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.983 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 -1844248304 }, %struct.hda_pintbl { i16 24, i32 -1726807791 }, %struct.hda_pintbl { i16 27, i32 286457874 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.984 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 44110140 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.985 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 27332928 }, %struct.hda_pintbl { i16 27, i32 35722319 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.986 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 77664556 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.987 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 21 }, %struct.hda_verb { i16 32, i32 1024, i32 3424 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.988 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 60887120 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@alc272_fixup_mario._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.989, ptr @.str.990, ptr @.str.78, i32 10389, ptr @.str.991, ptr @.str.678 }, [40 x i8] zeroinitializer }, align 32
@.str.989 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to override amp caps for NID 0x2\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.990 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"alc272_fixup_mario\00", [45 x i8] zeroinitializer }, align 32
@.str.991 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@alc272_fixup_mario._entry_ptr = internal global ptr @alc272_fixup_mario._entry, section ".printk_index", align 4
@asus_pcm_2_1_chmaps = internal constant { <{ { i8, <{ i8, i8, [13 x i8] }> }, { i8, <{ i8, i8, i8, i8, [11 x i8] }> }, %struct.snd_pcm_chmap_elem }>, [48 x i8] } { <{ { i8, <{ i8, i8, [13 x i8] }> }, { i8, <{ i8, i8, i8, i8, [11 x i8] }> }, %struct.snd_pcm_chmap_elem }> <{ { i8, <{ i8, i8, [13 x i8] }> } { i8 2, <{ i8, i8, [13 x i8] }> <{ i8 3, i8 4, [13 x i8] zeroinitializer }> }, { i8, <{ i8, i8, i8, i8, [11 x i8] }> } { i8 4, <{ i8, i8, i8, i8, [11 x i8] }> <{ i8 3, i8 4, i8 1, i8 8, [11 x i8] zeroinitializer }> }, %struct.snd_pcm_chmap_elem zeroinitializer }>, [48 x i8] zeroinitializer }, align 32
@alc671_fixup_hp_headset_mic2.pincfgs = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 44109888 }, %struct.hda_pintbl { i16 27, i32 25243727 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.993 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 35721232 }, %struct.hda_pintbl { i16 24, i32 27365424 }, %struct.hda_pintbl { i16 26, i32 25243712 }, %struct.hda_pintbl { i16 33, i32 16859168 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.994 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 25243696 }, %struct.hda_pintbl { i16 23, i32 35721232 }, %struct.hda_pintbl { i16 24, i32 27365440 }, %struct.hda_pintbl { i16 33, i32 16859168 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.995 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 24, i32 27365408 }, %struct.hda_pintbl { i16 26, i32 25243695 }, %struct.hda_pintbl { i16 27, i32 35733535 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.996 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370576 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 52498463 }, %struct.hda_pintbl { i16 22, i32 50401312 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.997 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370560 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 52498463 }, %struct.hda_pintbl { i16 22, i32 50401312 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.998 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1717370544 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 52498463 }, %struct.hda_pintbl { i16 22, i32 50401312 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.999 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 52498463 }, %struct.hda_pintbl { i16 22, i32 50401312 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1000 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 18, i32 -1868168912 }, %struct.hda_pintbl { i16 20, i32 -1877540592 }, %struct.hda_pintbl { i16 21, i32 52498463 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1001 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 23, i32 -1877540528 }, %struct.hda_pintbl { i16 25, i32 44109920 }, %struct.hda_pintbl { i16 27, i32 25243696 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.1002 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"HP cPC\00", [25 x i8] zeroinitializer }, align 32
@.compoundliteral.1003 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 24, i32 27365440 }, %struct.hda_pintbl { i16 27, i32 25243696 }, %struct.hda_pintbl { i16 33, i32 35721248 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.1004 = internal constant { [6 x %struct.hda_pintbl], [48 x i8] } { [6 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859168 }, %struct.hda_pintbl { i16 23, i32 -1877540592 }, %struct.hda_pintbl { i16 24, i32 27365456 }, %struct.hda_pintbl { i16 27, i32 25243712 }, %struct.hda_pintbl { i16 33, i32 35721264 }, %struct.hda_pintbl zeroinitializer], [48 x i8] zeroinitializer }, align 32
@alc662_parse_auto_config.alc662_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc662_parse_auto_config.alc663_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 33], [24 x i8] zeroinitializer }, align 32
@alc662_parse_auto_config.alc662_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@alc861_fixup_tbl = internal constant { [8 x %struct.snd_pci_quirk], [32 x i8] } { [8 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4163, i16 4691, i16 -1, i32 4, ptr @.str.1005 }, %struct.snd_pci_quirk { i16 4163, i16 4707, i16 -1, i32 4, ptr @.str.1006 }, %struct.snd_pci_quirk { i16 4163, i16 5011, i16 -1, i32 3, ptr @.str.1007 }, %struct.snd_pci_quirk { i16 4163, i16 0, i16 0, i32 1, ptr @.str.1008 }, %struct.snd_pci_quirk { i16 5218, i16 29268, i16 -1, i32 2, ptr @.str.1009 }, %struct.snd_pci_quirk { i16 5508, i16 0, i16 0, i32 1, ptr @.str.1010 }, %struct.snd_pci_quirk { i16 5940, i16 4295, i16 -1, i32 0, ptr @.str.1011 }, %struct.snd_pci_quirk zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc861_fixups = internal constant { [5 x %struct.hda_fixup], [48 x i8] } { [5 x %struct.hda_fixup] [%struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1012 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc861_fixup_asus_amp_vref_0f } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_no_jack_detect } }, %struct.hda_fixup { i32 3, i8 -128, i32 2, %union.anon.74 { ptr @alc861_fixup_asus_amp_vref_0f } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1013 } }], [48 x i8] zeroinitializer }, align 32
@.str.1005 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ASUS W7J\00", [23 x i8] zeroinitializer }, align 32
@.str.1006 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ASUS Z35HL\00", [21 x i8] zeroinitializer }, align 32
@.str.1007 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS A6Rp\00", [22 x i8] zeroinitializer }, align 32
@.str.1008 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS laptop\00", [20 x i8] zeroinitializer }, align 32
@.str.1009 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"HP DX2200\00", [22 x i8] zeroinitializer }, align 32
@.str.1010 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Haier/Uniwill\00", [18 x i8] zeroinitializer }, align 32
@.str.1011 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"FSC Amilo Pi1505\00", [47 x i8] zeroinitializer }, align 32
@.compoundliteral.1012 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 11, i32 35721247 }, %struct.hda_pintbl { i16 15, i32 -1877540080 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.1013 = internal constant { [2 x %struct.hda_verb], [40 x i8] } { [2 x %struct.hda_verb] [%struct.hda_verb { i16 16, i32 1799, i32 36 }, %struct.hda_verb zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc861_parse_auto_config.alc861_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc861_parse_auto_config.alc861_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 14, i16 15, i16 11, i16 0], [24 x i8] zeroinitializer }, align 32
@alc861vd_fixup_tbl = internal constant { [4 x %struct.snd_pci_quirk], [32 x i8] } { [4 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4156, i16 12479, i16 -1, i32 1, ptr @.str.1014 }, %struct.snd_pci_quirk { i16 4163, i16 4921, i16 -1, i32 0, ptr @.str.1015 }, %struct.snd_pci_quirk { i16 4473, i16 -207, i16 -1, i32 1, ptr @.str.1016 }, %struct.snd_pci_quirk zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc861vd_fixups = internal constant { [2 x %struct.hda_fixup], [32 x i8] } { [2 x %struct.hda_fixup] [%struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc660vd_fixup_asus_gpio1 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc861vd_fixup_dallas } }], [32 x i8] zeroinitializer }, align 32
@.str.1014 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"HP TX1000\00", [22 x i8] zeroinitializer }, align 32
@.str.1015 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS A7-K\00", [22 x i8] zeroinitializer }, align 32
@.str.1016 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Toshiba L30-149\00", [16 x i8] zeroinitializer }, align 32
@alc861vd_parse_auto_config.alc861vd_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc861vd_parse_auto_config.alc861vd_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@alc882_fixup_models = internal constant { [33 x %struct.hda_model_fixup], [88 x i8] } { [33 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 0, ptr @.str.1017 }, %struct.hda_model_fixup { i32 1, ptr @.str.1018 }, %struct.hda_model_fixup { i32 3, ptr @.str.1019 }, %struct.hda_model_fixup { i32 4, ptr @.str.1020 }, %struct.hda_model_fixup { i32 5, ptr @.str.1021 }, %struct.hda_model_fixup { i32 6, ptr @.str.1022 }, %struct.hda_model_fixup { i32 7, ptr @.str.1023 }, %struct.hda_model_fixup { i32 8, ptr @.str.1024 }, %struct.hda_model_fixup { i32 10, ptr @.str.1025 }, %struct.hda_model_fixup { i32 11, ptr @.str.1026 }, %struct.hda_model_fixup { i32 13, ptr @.str.835 }, %struct.hda_model_fixup { i32 14, ptr @.str.1027 }, %struct.hda_model_fixup { i32 15, ptr @.str.1028 }, %struct.hda_model_fixup { i32 16, ptr @.str.1029 }, %struct.hda_model_fixup { i32 17, ptr @.str.1030 }, %struct.hda_model_fixup { i32 18, ptr @.str.1031 }, %struct.hda_model_fixup { i32 19, ptr @.str.1032 }, %struct.hda_model_fixup { i32 12, ptr @.str.1033 }, %struct.hda_model_fixup { i32 21, ptr @.str.1034 }, %struct.hda_model_fixup { i32 22, ptr @.str.1035 }, %struct.hda_model_fixup { i32 23, ptr @.str.1036 }, %struct.hda_model_fixup { i32 24, ptr @.str.1037 }, %struct.hda_model_fixup { i32 25, ptr @.str.1038 }, %struct.hda_model_fixup { i32 26, ptr @.str.1039 }, %struct.hda_model_fixup { i32 27, ptr @.str.1040 }, %struct.hda_model_fixup { i32 28, ptr @.str.1041 }, %struct.hda_model_fixup { i32 29, ptr @.str.126 }, %struct.hda_model_fixup { i32 30, ptr @.str.1042 }, %struct.hda_model_fixup { i32 31, ptr @.str.1043 }, %struct.hda_model_fixup { i32 33, ptr @.str.145 }, %struct.hda_model_fixup { i32 34, ptr @.str.1044 }, %struct.hda_model_fixup { i32 35, ptr @.str.1045 }, %struct.hda_model_fixup zeroinitializer], [88 x i8] zeroinitializer }, align 32
@alc882_fixup_tbl = internal constant { [101 x %struct.snd_pci_quirk], [400 x i8] } { [101 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4133, i16 108, i16 -1, i32 12, ptr @.str.1046 }, %struct.snd_pci_quirk { i16 4133, i16 144, i16 -1, i32 12, ptr @.str.809 }, %struct.snd_pci_quirk { i16 4133, i16 263, i16 -1, i32 12, ptr @.str.809 }, %struct.snd_pci_quirk { i16 4133, i16 266, i16 -1, i32 12, ptr @.str.1047 }, %struct.snd_pci_quirk { i16 4133, i16 272, i16 -1, i32 12, ptr @.str.809 }, %struct.snd_pci_quirk { i16 4133, i16 274, i16 -1, i32 12, ptr @.str.1048 }, %struct.snd_pci_quirk { i16 4133, i16 289, i16 -1, i32 12, ptr @.str.1049 }, %struct.snd_pci_quirk { i16 4133, i16 318, i16 -1, i32 18, ptr @.str.1050 }, %struct.snd_pci_quirk { i16 4133, i16 319, i16 -1, i32 18, ptr @.str.1051 }, %struct.snd_pci_quirk { i16 4133, i16 325, i16 -1, i32 19, ptr @.str.1052 }, %struct.snd_pci_quirk { i16 4133, i16 326, i16 -1, i32 19, ptr @.str.1053 }, %struct.snd_pci_quirk { i16 4133, i16 322, i16 -1, i32 18, ptr @.str.1054 }, %struct.snd_pci_quirk { i16 4133, i16 341, i16 -1, i32 2, ptr @.str.1055 }, %struct.snd_pci_quirk { i16 4133, i16 350, i16 -1, i32 18, ptr @.str.1056 }, %struct.snd_pci_quirk { i16 4133, i16 358, i16 -1, i32 18, ptr @.str.1057 }, %struct.snd_pci_quirk { i16 4133, i16 542, i16 -1, i32 18, ptr @.str.1058 }, %struct.snd_pci_quirk { i16 4133, i16 601, i16 -1, i32 22, ptr @.str.1059 }, %struct.snd_pci_quirk { i16 4133, i16 619, i16 -1, i32 19, ptr @.str.1060 }, %struct.snd_pci_quirk { i16 4133, i16 662, i16 -1, i32 3, ptr @.str.1061 }, %struct.snd_pci_quirk { i16 4163, i16 5058, i16 -1, i32 10, ptr @.str.1062 }, %struct.snd_pci_quirk { i16 4163, i16 6259, i16 -1, i32 4, ptr @.str.1063 }, %struct.snd_pci_quirk { i16 4163, i16 6513, i16 -1, i32 17, ptr @.str.1064 }, %struct.snd_pci_quirk { i16 4163, i16 9104, i16 -1, i32 39, ptr @.str.1065 }, %struct.snd_pci_quirk { i16 4163, i16 -31905, i16 -1, i32 8, ptr @.str.1066 }, %struct.snd_pci_quirk { i16 4163, i16 -31556, i16 -1, i32 31, ptr @.str.1067 }, %struct.snd_pci_quirk { i16 4163, i16 -31087, i16 -1, i32 15, ptr @.str.1068 }, %struct.snd_pci_quirk { i16 4173, i16 -28605, i16 -1, i32 30, ptr @.str.1069 }, %struct.snd_pci_quirk { i16 4173, i16 -28604, i16 -1, i32 30, ptr @.str.1070 }, %struct.snd_pci_quirk { i16 4173, i16 -28601, i16 -1, i32 7, ptr @.str.1071 }, %struct.snd_pci_quirk { i16 4173, i16 -28582, i16 -1, i32 30, ptr @.str.1072 }, %struct.snd_pci_quirk { i16 4173, i16 -28576, i16 -1, i32 30, ptr @.str.1073 }, %struct.snd_pci_quirk { i16 4203, i16 160, i16 -1, i32 23, ptr @.str.1074 }, %struct.snd_pci_quirk { i16 4203, i16 161, i16 -1, i32 23, ptr @.str.1075 }, %struct.snd_pci_quirk { i16 4203, i16 164, i16 -1, i32 23, ptr @.str.1076 }, %struct.snd_pci_quirk { i16 4203, i16 3072, i16 -1, i32 27, ptr @.str.1077 }, %struct.snd_pci_quirk { i16 4203, i16 4096, i16 -1, i32 21, ptr @.str.1078 }, %struct.snd_pci_quirk { i16 4203, i16 10240, i16 -1, i32 21, ptr @.str.1079 }, %struct.snd_pci_quirk { i16 4203, i16 11264, i16 -1, i32 23, ptr @.str.1080 }, %struct.snd_pci_quirk { i16 4203, i16 12288, i16 -1, i32 23, ptr @.str.1081 }, %struct.snd_pci_quirk { i16 4203, i16 12800, i16 -1, i32 10, ptr @.str.1082 }, %struct.snd_pci_quirk { i16 4203, i16 13312, i16 -1, i32 25, ptr @.str.1083 }, %struct.snd_pci_quirk { i16 4203, i16 13568, i16 -1, i32 26, ptr @.str.1084 }, %struct.snd_pci_quirk { i16 4203, i16 13824, i16 -1, i32 23, ptr @.str.1085 }, %struct.snd_pci_quirk { i16 4203, i16 14336, i16 -1, i32 23, ptr @.str.1076 }, %struct.snd_pci_quirk { i16 4203, i16 15872, i16 -1, i32 21, ptr @.str.1086 }, %struct.snd_pci_quirk { i16 4203, i16 16128, i16 -1, i32 24, ptr @.str.1087 }, %struct.snd_pci_quirk { i16 4203, i16 16384, i16 -1, i32 24, ptr @.str.1088 }, %struct.snd_pci_quirk { i16 4203, i16 16640, i16 -1, i32 24, ptr @.str.1089 }, %struct.snd_pci_quirk { i16 4203, i16 16896, i16 -1, i32 28, ptr @.str.1090 }, %struct.snd_pci_quirk { i16 4203, i16 17152, i16 -1, i32 24, ptr @.str.1091 }, %struct.snd_pci_quirk { i16 4203, i16 17920, i16 -1, i32 24, ptr @.str.1092 }, %struct.snd_pci_quirk { i16 4203, i16 18688, i16 -1, i32 24, ptr @.str.1093 }, %struct.snd_pci_quirk { i16 4203, i16 18944, i16 -1, i32 25, ptr @.str.1094 }, %struct.snd_pci_quirk { i16 4209, i16 -32168, i16 -1, i32 10, ptr @.str.1095 }, %struct.snd_pci_quirk { i16 5118, i16 4105, i16 -1, i32 9, ptr @.str.1096 }, %struct.snd_pci_quirk { i16 5208, i16 -24574, i16 -1, i32 6, ptr @.str.1097 }, %struct.snd_pci_quirk { i16 5208, i16 -24392, i16 -1, i32 33, ptr @.str.1098 }, %struct.snd_pci_quirk { i16 5208, i16 -24371, i16 -1, i32 34, ptr @.str.1099 }, %struct.snd_pci_quirk { i16 5208, i16 -24370, i16 -1, i32 34, ptr @.str.1100 }, %struct.snd_pci_quirk { i16 5208, i16 -24363, i16 -1, i32 34, ptr @.str.1101 }, %struct.snd_pci_quirk { i16 5218, i16 4599, i16 -1, i32 35, ptr @.str.1102 }, %struct.snd_pci_quirk { i16 5218, i16 4648, i16 -1, i32 35, ptr @.str.1103 }, %struct.snd_pci_quirk { i16 5218, i16 4649, i16 -1, i32 35, ptr @.str.1104 }, %struct.snd_pci_quirk { i16 5218, i16 4725, i16 -1, i32 35, ptr @.str.1105 }, %struct.snd_pci_quirk { i16 5218, i16 4726, i16 -1, i32 35, ptr @.str.1106 }, %struct.snd_pci_quirk { i16 5218, i16 4755, i16 -1, i32 35, ptr @.str.1107 }, %struct.snd_pci_quirk { i16 5218, i16 29520, i16 -1, i32 5, ptr @.str.1108 }, %struct.snd_pci_quirk { i16 5218, i16 -13260, i16 -1, i32 33, ptr @.str.1109 }, %struct.snd_pci_quirk { i16 5218, i16 -9641, i16 -1, i32 33, ptr @.str.1110 }, %struct.snd_pci_quirk { i16 5218, i16 0, i16 0, i32 15, ptr @.str.1111 }, %struct.snd_pci_quirk { i16 5243, i16 4218, i16 -1, i32 0, ptr @.str.1112 }, %struct.snd_pci_quirk { i16 5464, i16 20691, i16 -1, i32 37, ptr @.str.1113 }, %struct.snd_pci_quirk { i16 5464, i16 26065, i16 -1, i32 37, ptr @.str.1114 }, %struct.snd_pci_quirk { i16 5464, i16 26066, i16 -1, i32 37, ptr @.str.1115 }, %struct.snd_pci_quirk { i16 5464, i16 26081, i16 -1, i32 37, ptr @.str.1116 }, %struct.snd_pci_quirk { i16 5464, i16 26085, i16 -1, i32 37, ptr @.str.1117 }, %struct.snd_pci_quirk { i16 5464, i16 26097, i16 -1, i32 37, ptr @.str.1118 }, %struct.snd_pci_quirk { i16 5464, i16 26577, i16 -1, i32 37, ptr @.str.1119 }, %struct.snd_pci_quirk { i16 5464, i16 26593, i16 -1, i32 37, ptr @.str.1120 }, %struct.snd_pci_quirk { i16 5464, i16 26597, i16 -1, i32 37, ptr @.str.1121 }, %struct.snd_pci_quirk { i16 5464, i16 26609, i16 -1, i32 37, ptr @.str.1122 }, %struct.snd_pci_quirk { i16 5464, i16 28881, i16 -1, i32 37, ptr @.str.1123 }, %struct.snd_pci_quirk { i16 5464, i16 30484, i16 -1, i32 37, ptr @.str.1124 }, %struct.snd_pci_quirk { i16 5464, i16 30485, i16 -1, i32 36, ptr @.str.1125 }, %struct.snd_pci_quirk { i16 5464, i16 -27391, i16 -1, i32 35, ptr @.str.1126 }, %struct.snd_pci_quirk { i16 5464, i16 -27386, i16 -1, i32 35, ptr @.str.1127 }, %struct.snd_pci_quirk { i16 5464, i16 -27382, i16 -1, i32 35, ptr @.str.1128 }, %struct.snd_pci_quirk { i16 5464, i16 -27167, i16 -1, i32 35, ptr @.str.1129 }, %struct.snd_pci_quirk { i16 5464, i16 -27166, i16 -1, i32 35, ptr @.str.1130 }, %struct.snd_pci_quirk { i16 5464, i16 -27165, i16 -1, i32 35, ptr @.str.1131 }, %struct.snd_pci_quirk { i16 5464, i16 -27164, i16 -1, i32 35, ptr @.str.1132 }, %struct.snd_pci_quirk { i16 5464, i16 -27163, i16 -1, i32 35, ptr @.str.1133 }, %struct.snd_pci_quirk { i16 5464, i16 -27162, i16 -1, i32 35, ptr @.str.1134 }, %struct.snd_pci_quirk { i16 5464, i16 -26911, i16 -1, i32 35, ptr @.str.1135 }, %struct.snd_pci_quirk { i16 5464, i16 -26655, i16 -1, i32 35, ptr @.str.1136 }, %struct.snd_pci_quirk { i16 5464, i16 -26654, i16 -1, i32 35, ptr @.str.1137 }, %struct.snd_pci_quirk { i16 5464, i16 0, i16 0, i32 10, ptr @.str.1138 }, %struct.snd_pci_quirk { i16 5663, i16 8276, i16 -1, i32 11, ptr @.str.1139 }, %struct.snd_pci_quirk { i16 6058, i16 14861, i16 -1, i32 1, ptr @.str.1140 }, %struct.snd_pci_quirk { i16 -32634, i16 34, i16 -1, i32 16, ptr @.str.1141 }, %struct.snd_pci_quirk zeroinitializer], [400 x i8] zeroinitializer }, align 32
@alc882_fixups = internal constant { [40 x %struct.hda_fixup], [160 x i8] } { [40 x %struct.hda_fixup] [%struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1142 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1143 } }, %struct.hda_fixup { i32 4, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1144 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_sku_ignore } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1145 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1146 } }, %struct.hda_fixup { i32 1, i8 -128, i32 5, %union.anon.74 { ptr @.compoundliteral.1147 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1148 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1149 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1150 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1151 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1152 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1153 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio1 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio2 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio3 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc889_fixup_coef } }, %struct.hda_fixup { i32 3, i8 -128, i32 10, %union.anon.74 { ptr @alc_fixup_gpio1 } }, %struct.hda_fixup { i32 1, i8 -128, i32 13, %union.anon.74 { ptr @.compoundliteral.1154 } }, %struct.hda_fixup { i32 1, i8 -128, i32 20, %union.anon.74 { ptr @.compoundliteral.1155 } }, %struct.hda_fixup { i32 2, i8 -128, i32 13, %union.anon.74 { ptr @.compoundliteral.1156 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc885_fixup_macpro_gpio } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc889_fixup_dac_route } }, %struct.hda_fixup { i32 3, i8 -128, i32 13, %union.anon.74 { ptr @alc889_fixup_mbp_vref } }, %struct.hda_fixup { i32 3, i8 -128, i32 13, %union.anon.74 { ptr @alc889_fixup_imac91_vref } }, %struct.hda_fixup { i32 3, i8 -128, i32 23, %union.anon.74 { ptr @alc889_fixup_mba11_vref } }, %struct.hda_fixup { i32 3, i8 -128, i32 23, %union.anon.74 { ptr @alc889_fixup_mba21_vref } }, %struct.hda_fixup { i32 3, i8 -128, i32 21, %union.anon.74 { ptr @alc889_fixup_mba11_vref } }, %struct.hda_fixup { i32 3, i8 -128, i32 21, %union.anon.74 { ptr @alc889_fixup_mbp_vref } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_inv_dmic } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc882_fixup_no_primary_hp } }, %struct.hda_fixup { i32 1, i8 -128, i32 32, %union.anon.74 { ptr @.compoundliteral.1157 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_bass_chmap } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc1220_fixup_gb_dual_codecs } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc1220_fixup_gb_x570 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc1220_fixup_clevo_p950 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc1220_fixup_clevo_pb51ed } }, %struct.hda_fixup { i32 1, i8 -128, i32 36, %union.anon.74 { ptr @.compoundliteral.1158 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1159 } }, %struct.hda_fixup { i32 3, i8 -128, i32 38, %union.anon.74 { ptr @alc887_fixup_asus_jack } }], [160 x i8] zeroinitializer }, align 32
@alc882_pin_fixup_tbl = internal constant { [3 x %struct.snd_hda_pin_quirk], [36 x i8] } { [3 x %struct.snd_hda_pin_quirk] [%struct.snd_hda_pin_quirk { i32 283906592, i16 4163, ptr @.compoundliteral.1161, ptr @.str.708, i32 35 }, %struct.snd_hda_pin_quirk { i32 283906592, i16 5218, ptr @.compoundliteral.1162, ptr @.str.1163, i32 35 }, %struct.snd_hda_pin_quirk zeroinitializer], [36 x i8] zeroinitializer }, align 32
@.str.1017 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"abit-aw9d\00", [22 x i8] zeroinitializer }, align 32
@.str.1018 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"lenovo-y530\00", [20 x i8] zeroinitializer }, align 32
@.str.1019 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"acer-aspire-7736\00", [47 x i8] zeroinitializer }, align 32
@.str.1020 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-w90v\00", [22 x i8] zeroinitializer }, align 32
@.str.1021 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"cd\00", [29 x i8] zeroinitializer }, align 32
@.str.1022 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"no-front-hp\00", [20 x i8] zeroinitializer }, align 32
@.str.1023 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vaio-tt\00", [24 x i8] zeroinitializer }, align 32
@.str.1024 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"eee1601\00", [24 x i8] zeroinitializer }, align 32
@.str.1025 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc882-eapd\00", [20 x i8] zeroinitializer }, align 32
@.str.1026 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc883-eapd\00", [20 x i8] zeroinitializer }, align 32
@.str.1027 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gpio2\00", [26 x i8] zeroinitializer }, align 32
@.str.1028 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gpio3\00", [26 x i8] zeroinitializer }, align 32
@.str.1029 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"alc889-coef\00", [20 x i8] zeroinitializer }, align 32
@.str.1030 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-w2jc\00", [22 x i8] zeroinitializer }, align 32
@.str.1031 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"acer-aspire-4930g\00", [46 x i8] zeroinitializer }, align 32
@.str.1032 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"acer-aspire-8930g\00", [46 x i8] zeroinitializer }, align 32
@.str.1033 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"acer-aspire\00", [20 x i8] zeroinitializer }, align 32
@.str.1034 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"macpro-gpio\00", [20 x i8] zeroinitializer }, align 32
@.str.1035 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"dac-route\00", [22 x i8] zeroinitializer }, align 32
@.str.1036 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"mbp-vref\00", [23 x i8] zeroinitializer }, align 32
@.str.1037 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"imac91-vref\00", [20 x i8] zeroinitializer }, align 32
@.str.1038 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"mba11-vref\00", [21 x i8] zeroinitializer }, align 32
@.str.1039 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"mba21-vref\00", [21 x i8] zeroinitializer }, align 32
@.str.1040 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mp11-vref\00", [22 x i8] zeroinitializer }, align 32
@.str.1041 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mp41-vref\00", [22 x i8] zeroinitializer }, align 32
@.str.1042 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"no-primary-hp\00", [18 x i8] zeroinitializer }, align 32
@.str.1043 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"asus-bass\00", [22 x i8] zeroinitializer }, align 32
@.str.1044 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"gb-x570\00", [24 x i8] zeroinitializer }, align 32
@.str.1045 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"clevo-p950\00", [21 x i8] zeroinitializer }, align 32
@.str.1046 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Acer Aspire 9810\00", [47 x i8] zeroinitializer }, align 32
@.str.1047 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Ferrari 5000\00", [46 x i8] zeroinitializer }, align 32
@.str.1048 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Acer Aspire 9303\00", [47 x i8] zeroinitializer }, align 32
@.str.1049 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 5920G\00", [46 x i8] zeroinitializer }, align 32
@.str.1050 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 4930G\00", [46 x i8] zeroinitializer }, align 32
@.str.1051 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 5930G\00", [46 x i8] zeroinitializer }, align 32
@.str.1052 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 8930G\00", [46 x i8] zeroinitializer }, align 32
@.str.1053 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 6935G\00", [46 x i8] zeroinitializer }, align 32
@.str.1054 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 7730G\00", [46 x i8] zeroinitializer }, align 32
@.str.1055 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Packard-Bell M5120\00", [45 x i8] zeroinitializer }, align 32
@.str.1056 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 6930G\00", [46 x i8] zeroinitializer }, align 32
@.str.1057 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 6530G\00", [46 x i8] zeroinitializer }, align 32
@.str.1058 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 5739G\00", [46 x i8] zeroinitializer }, align 32
@.str.1059 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Acer Aspire 5935\00", [47 x i8] zeroinitializer }, align 32
@.str.1060 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 8940G\00", [46 x i8] zeroinitializer }, align 32
@.str.1061 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Acer Aspire 7736z\00", [46 x i8] zeroinitializer }, align 32
@.str.1062 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Asus A7M\00", [23 x i8] zeroinitializer }, align 32
@.str.1063 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS W90V\00", [22 x i8] zeroinitializer }, align 32
@.str.1064 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Asus W2JC\00", [22 x i8] zeroinitializer }, align 32
@.str.1065 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Asus D700SA\00", [20 x i8] zeroinitializer }, align 32
@.str.1066 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Asus Eee 1601\00", [18 x i8] zeroinitializer }, align 32
@.str.1067 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ASUS ET2700\00", [20 x i8] zeroinitializer }, align 32
@.str.1068 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ASUS ROG Ranger VIII\00", [43 x i8] zeroinitializer }, align 32
@.str.1069 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Sony Vaio VGC-LN51JGB\00", [42 x i8] zeroinitializer }, align 32
@.str.1070 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Sony VAIO AiO\00", [18 x i8] zeroinitializer }, align 32
@.str.1071 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Sony Vaio TT\00", [19 x i8] zeroinitializer }, align 32
@.str.1072 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Sony Vaio Z\00", [20 x i8] zeroinitializer }, align 32
@.str.1073 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Sony Vaio VPCL14M1R\00", [44 x i8] zeroinitializer }, align 32
@.str.1074 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MacBookPro 3,1\00", [17 x i8] zeroinitializer }, align 32
@.str.1075 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Macbook\00", [24 x i8] zeroinitializer }, align 32
@.str.1076 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MacbookPro 4,1\00", [17 x i8] zeroinitializer }, align 32
@.str.1077 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Mac Pro\00", [24 x i8] zeroinitializer }, align 32
@.str.1078 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"iMac 24\00", [24 x i8] zeroinitializer }, align 32
@.str.1079 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"AppleTV\00", [24 x i8] zeroinitializer }, align 32
@.str.1080 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"MacbookPro rev3\00", [16 x i8] zeroinitializer }, align 32
@.str.1081 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"iMac\00", [27 x i8] zeroinitializer }, align 32
@.str.1082 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"iMac 7,1 Aluminum\00", [46 x i8] zeroinitializer }, align 32
@.str.1083 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MacBookAir 1,1\00", [17 x i8] zeroinitializer }, align 32
@.str.1084 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MacBookAir 2,1\00", [17 x i8] zeroinitializer }, align 32
@.str.1085 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Macbook 3,1\00", [20 x i8] zeroinitializer }, align 32
@.str.1086 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"iMac 24 Aluminum\00", [47 x i8] zeroinitializer }, align 32
@.str.1087 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Macbook 5,1\00", [20 x i8] zeroinitializer }, align 32
@.str.1088 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MacbookPro 5,1\00", [17 x i8] zeroinitializer }, align 32
@.str.1089 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Macmini 3,1\00", [20 x i8] zeroinitializer }, align 32
@.str.1090 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Mac Pro 4,1/5,1\00", [16 x i8] zeroinitializer }, align 32
@.str.1091 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"iMac 9,1\00", [23 x i8] zeroinitializer }, align 32
@.str.1092 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MacbookPro 5,2\00", [17 x i8] zeroinitializer }, align 32
@.str.1093 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"iMac 9,1 Aluminum\00", [46 x i8] zeroinitializer }, align 32
@.str.1094 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Macbook 5,2\00", [20 x i8] zeroinitializer }, align 32
@.str.1095 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Evesham Voyaeger\00", [47 x i8] zeroinitializer }, align 32
@.str.1096 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Advantech MIT-W101\00", [45 x i8] zeroinitializer }, align 32
@.str.1097 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Gigabyte EP45-DS3/Z87X-UD3H\00", [36 x i8] zeroinitializer }, align 32
@.str.1098 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Gigabyte AZ370-Gaming\00", [42 x i8] zeroinitializer }, align 32
@.str.1099 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Gigabyte X570 Aorus Master\00", [37 x i8] zeroinitializer }, align 32
@.str.1100 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Gigabyte X570 Aorus Xtreme\00", [37 x i8] zeroinitializer }, align 32
@.str.1101 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Gigabyte X570S Aorus Master\00", [36 x i8] zeroinitializer }, align 32
@.str.1102 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-GE63\00", [23 x i8] zeroinitializer }, align 32
@.str.1103 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-GP63\00", [23 x i8] zeroinitializer }, align 32
@.str.1104 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-GP73\00", [23 x i8] zeroinitializer }, align 32
@.str.1105 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-GL63\00", [23 x i8] zeroinitializer }, align 32
@.str.1106 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-GL73\00", [23 x i8] zeroinitializer }, align 32
@.str.1107 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-GP65\00", [23 x i8] zeroinitializer }, align 32
@.str.1108 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MSI-7350\00", [23 x i8] zeroinitializer }, align 32
@.str.1109 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"MSI Godlike X570\00", [47 x i8] zeroinitializer }, align 32
@.str.1110 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"MSI Z270-Gaming\00", [16 x i8] zeroinitializer }, align 32
@.str.1111 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"MSI\00", [28 x i8] zeroinitializer }, align 32
@.str.1112 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Abit AW9D-MAX\00", [18 x i8] zeroinitializer }, align 32
@.str.1113 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clevo PC50[ER][CDF]\00", [44 x i8] zeroinitializer }, align 32
@.str.1114 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clevo PB51[ER][CDF]\00", [44 x i8] zeroinitializer }, align 32
@.str.1115 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo PB51R[CDF]\00", [47 x i8] zeroinitializer }, align 32
@.str.1116 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Clevo PB51[ED][DF]\00", [45 x i8] zeroinitializer }, align 32
@.str.1117 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Clevo PC50D[PRS](?:-D|-G)?\00", [37 x i8] zeroinitializer }, align 32
@.str.1118 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo PC50HS\00", [19 x i8] zeroinitializer }, align 32
@.str.1119 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clevo PB71[ER][CDF]\00", [44 x i8] zeroinitializer }, align 32
@.str.1120 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clevo PB71[DE][CDF]\00", [44 x i8] zeroinitializer }, align 32
@.str.1121 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Clevo PC70D[PRS](?:-D|-G)?\00", [37 x i8] zeroinitializer }, align 32
@.str.1122 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo PC70H[PRS]\00", [47 x i8] zeroinitializer }, align 32
@.str.1123 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clevo PC70[ER][CDF]\00", [44 x i8] zeroinitializer }, align 32
@.str.1124 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo X170SM\00", [19 x i8] zeroinitializer }, align 32
@.str.1125 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Clevo X170KM-G\00", [17 x i8] zeroinitializer }, align 32
@.str.1126 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo P950HR\00", [19 x i8] zeroinitializer }, align 32
@.str.1127 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo P955HQ\00", [19 x i8] zeroinitializer }, align 32
@.str.1128 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo P955H[PR]\00", [16 x i8] zeroinitializer }, align 32
@.str.1129 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo P95xER\00", [19 x i8] zeroinitializer }, align 32
@.str.1130 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo P950ER\00", [19 x i8] zeroinitializer }, align 32
@.str.1131 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Clevo P955[ER]T\00", [16 x i8] zeroinitializer }, align 32
@.str.1132 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo P955ER\00", [19 x i8] zeroinitializer }, align 32
@.str.1133 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Clevo P955EE6\00", [18 x i8] zeroinitializer }, align 32
@.str.1134 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Clevo P950R[CDF]\00", [47 x i8] zeroinitializer }, align 32
@.str.1135 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Clevo P960[ER][CDFN]-K\00", [41 x i8] zeroinitializer }, align 32
@.str.1136 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Clevo P970[ER][CDFN]\00", [43 x i8] zeroinitializer }, align 32
@.str.1137 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Clevo P970RC-M\00", [17 x i8] zeroinitializer }, align 32
@.str.1138 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Clevo laptop\00", [19 x i8] zeroinitializer }, align 32
@.str.1139 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Medion laptop\00", [18 x i8] zeroinitializer }, align 32
@.str.1140 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Lenovo Y530\00", [20 x i8] zeroinitializer }, align 32
@.str.1141 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"DX58SO\00", [25 x i8] zeroinitializer }, align 32
@.compoundliteral.1142 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 17301764 }, %struct.hda_pintbl { i16 22, i32 16846866 }, %struct.hda_pintbl { i16 23, i32 16867345 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1143 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 -1726807790 }, %struct.hda_pintbl { i16 22, i32 -1726807791 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.1144 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 33 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1145 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 -1726807792 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1146 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 28, i32 -1724710416 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1147 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 35733792 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1148 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 -1877540591 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1149 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 11 }, %struct.hda_verb { i16 32, i32 1024, i32 2104 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1150 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 104 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1151 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12384 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1152 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12400 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1153 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12368 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1154 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 -1726807791 }, %struct.hda_pintbl { i16 23, i32 -1726807790 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.1155 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 -1726807791 }, %struct.hda_pintbl { i16 27, i32 -1726807790 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.1156 = internal constant { [9 x %struct.hda_verb], [52 x i8] } { [9 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 3 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1280, i32 8 }, %struct.hda_verb { i16 32, i32 1024, i32 0 }, %struct.hda_verb { i16 32, i32 1280, i32 11 }, %struct.hda_verb { i16 32, i32 1024, i32 3 }, %struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12368 }, %struct.hda_verb zeroinitializer], [52 x i8] zeroinitializer }, align 32
@.compoundliteral.1157 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 -1726807760 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1158 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 25, i32 27365692 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1159 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 21, i32 44122448 }, %struct.hda_pintbl { i16 25, i32 572625952 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@alc889_fixup_dac_route.conn1 = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 12, i16 13], [28 x i8] zeroinitializer }, align 32
@alc889_fixup_dac_route.conn2 = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 14, i16 15], [28 x i8] zeroinitializer }, align 32
@alc889_fixup_dac_route.conn = internal constant { [5 x i16], [22 x i8] } { [5 x i16] [i16 12, i16 13, i16 14, i16 15, i16 38], [22 x i8] zeroinitializer }, align 32
@.str.1160 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"HDAudio-Gigabyte-ALC1220DualCodecs\00", [61 x i8] zeroinitializer }, align 32
@alc1220_fixup_gb_x570.conn1 = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 12], [30 x i8] zeroinitializer }, align 32
@alc1220_fixup_gb_x570.gb_x570_coefs = internal constant { [5 x %struct.coef_fw], [34 x i8] } { [5 x %struct.coef_fw] [%struct.coef_fw { i8 32, i8 7, i16 -1, i16 960 }, %struct.coef_fw { i8 32, i8 26, i16 -1, i16 449 }, %struct.coef_fw { i8 32, i8 27, i16 -1, i16 514 }, %struct.coef_fw { i8 32, i8 67, i16 -1, i16 12293 }, %struct.coef_fw zeroinitializer], [34 x i8] zeroinitializer }, align 32
@alc1220_fixup_clevo_p950.conn1 = internal constant { [1 x i16], [30 x i8] } { [1 x i16] [i16 12], [30 x i8] zeroinitializer }, align 32
@.compoundliteral.1161 = internal constant { [9 x %struct.hda_pintbl], [56 x i8] } { [9 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 21, i32 16846866 }, %struct.hda_pintbl { i16 22, i32 16867345 }, %struct.hda_pintbl { i16 24, i32 27365440 }, %struct.hda_pintbl { i16 25, i32 44142672 }, %struct.hda_pintbl { i16 26, i32 25243727 }, %struct.hda_pintbl { i16 27, i32 35733535 }, %struct.hda_pintbl { i16 30, i32 21324080 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.1162 = internal constant { [9 x %struct.hda_pintbl], [56 x i8] } { [9 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16863248 }, %struct.hda_pintbl { i16 21, i32 16846866 }, %struct.hda_pintbl { i16 22, i32 16846865 }, %struct.hda_pintbl { i16 24, i32 27332672 }, %struct.hda_pintbl { i16 25, i32 44142672 }, %struct.hda_pintbl { i16 26, i32 25235535 }, %struct.hda_pintbl { i16 27, i32 35733535 }, %struct.hda_pintbl { i16 30, i32 21303600 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.1163 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"MS-7C35\00", [24 x i8] zeroinitializer }, align 32
@alc882_parse_auto_config.alc882_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc882_parse_auto_config.alc882_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@alc880_fixup_models = internal constant { [8 x %struct.hda_model_fixup], [32 x i8] } { [8 x %struct.hda_model_fixup] [%struct.hda_model_fixup { i32 16, ptr @.str.1164 }, %struct.hda_model_fixup { i32 17, ptr @.str.1165 }, %struct.hda_model_fixup { i32 19, ptr @.str.1166 }, %struct.hda_model_fixup { i32 20, ptr @.str.1167 }, %struct.hda_model_fixup { i32 22, ptr @.str.1168 }, %struct.hda_model_fixup { i32 23, ptr @.str.1169 }, %struct.hda_model_fixup { i32 24, ptr @.str.1170 }, %struct.hda_model_fixup zeroinitializer], [32 x i8] zeroinitializer }, align 32
@alc880_fixup_tbl = internal constant { [60 x %struct.snd_pci_quirk], [224 x i8] } { [60 x %struct.snd_pci_quirk] [%struct.snd_pci_quirk { i16 4121, i16 3945, i16 -1, i32 5, ptr @.str.1171 }, %struct.snd_pci_quirk { i16 4163, i16 4291, i16 -1, i32 14, ptr @.str.1172 }, %struct.snd_pci_quirk { i16 4163, i16 6500, i16 -1, i32 13, ptr @.str.1173 }, %struct.snd_pci_quirk { i16 4163, i16 0, i16 0, i32 0, ptr @.str.708 }, %struct.snd_pci_quirk { i16 5243, i16 4165, i16 -1, i32 24, ptr @.str.1174 }, %struct.snd_pci_quirk { i16 5464, i16 21505, i16 -1, i32 1, ptr @.str.1175 }, %struct.snd_pci_quirk { i16 5464, i16 0, i16 0, i32 6, ptr @.str.1176 }, %struct.snd_pci_quirk { i16 5508, i16 -28592, i16 -1, i32 12, ptr @.str.1177 }, %struct.snd_pci_quirk { i16 5508, i16 -28588, i16 -1, i32 10, ptr @.str.1177 }, %struct.snd_pci_quirk { i16 5508, i16 -28560, i16 -1, i32 11, ptr @.str.1177 }, %struct.snd_pci_quirk { i16 5508, i16 -28553, i16 -1, i32 8, ptr @.str.1178 }, %struct.snd_pci_quirk { i16 5663, i16 8253, i16 -1, i32 5, ptr @.str.1179 }, %struct.snd_pci_quirk { i16 5663, i16 8285, i16 -1, i32 2, ptr @.str.1180 }, %struct.snd_pci_quirk { i16 5681, i16 -8175, i16 -1, i32 24, ptr @.str.1181 }, %struct.snd_pci_quirk { i16 5940, i16 4220, i16 -1, i32 9, ptr @.str.1182 }, %struct.snd_pci_quirk { i16 5940, i16 4244, i16 -1, i32 9, ptr @.str.1183 }, %struct.snd_pci_quirk { i16 5940, i16 4268, i16 -1, i32 10, ptr @.str.1184 }, %struct.snd_pci_quirk { i16 5940, i16 4272, i16 -1, i32 9, ptr @.str.1185 }, %struct.snd_pci_quirk { i16 6228, i16 59, i16 -1, i32 3, ptr @.str.1186 }, %struct.snd_pci_quirk { i16 6228, i16 95, i16 -1, i32 3, ptr @.str.1187 }, %struct.snd_pci_quirk { i16 6228, i16 104, i16 -1, i32 3, ptr @.str.1188 }, %struct.snd_pci_quirk { i16 6228, i16 119, i16 -1, i32 4, ptr @.str.1189 }, %struct.snd_pci_quirk { i16 6619, i16 16776, i16 -1, i32 7, ptr @.str.1190 }, %struct.snd_pci_quirk { i16 4121, i16 -22400, i16 -1, i32 20, ptr @.str.916 }, %struct.snd_pci_quirk { i16 4121, i16 -22396, i16 -1, i32 22, ptr @.str.1191 }, %struct.snd_pci_quirk { i16 4133, i16 112, i16 -1, i32 17, ptr @.str.1192 }, %struct.snd_pci_quirk { i16 4133, i16 119, i16 -1, i32 23, ptr @.str.1192 }, %struct.snd_pci_quirk { i16 4133, i16 120, i16 -1, i32 23, ptr @.str.1192 }, %struct.snd_pci_quirk { i16 4133, i16 135, i16 -1, i32 23, ptr @.str.1192 }, %struct.snd_pci_quirk { i16 4133, i16 -7415, i16 -1, i32 17, ptr @.str.1192 }, %struct.snd_pci_quirk { i16 4133, i16 -7408, i16 -1, i32 16, ptr @.str.1192 }, %struct.snd_pci_quirk { i16 4153, i16 4660, i16 -1, i32 23, ptr null }, %struct.snd_pci_quirk { i16 4173, i16 -32352, i16 -1, i32 16, ptr @.str.1193 }, %struct.snd_pci_quirk { i16 4173, i16 -32298, i16 -1, i32 16, ptr @.str.1193 }, %struct.snd_pci_quirk { i16 4219, i16 12338, i16 -1, i32 19, ptr @.str.1194 }, %struct.snd_pci_quirk { i16 4219, i16 12339, i16 -1, i32 19, ptr @.str.1194 }, %struct.snd_pci_quirk { i16 4219, i16 16441, i16 -1, i32 19, ptr @.str.1194 }, %struct.snd_pci_quirk { i16 4759, i16 -14448, i16 -1, i32 23, ptr @.str.1195 }, %struct.snd_pci_quirk { i16 5208, i16 -24318, i16 -1, i32 23, ptr @.str.1196 }, %struct.snd_pci_quirk { i16 5218, i16 4432, i16 -1, i32 23, ptr @.str.1111 }, %struct.snd_pci_quirk { i16 5385, i16 -28067, i16 -1, i32 23, ptr @.str.1197 }, %struct.snd_pci_quirk { i16 5477, i16 -32254, i16 -1, i32 20, ptr @.str.1198 }, %struct.snd_pci_quirk { i16 5781, i16 16397, i16 -1, i32 20, ptr @.str.1199 }, %struct.snd_pci_quirk { i16 5781, i16 16402, i16 -1, i32 20, ptr @.str.1200 }, %struct.snd_pci_quirk { i16 9832, i16 -32634, i16 -1, i32 23, ptr null }, %struct.snd_pci_quirk { i16 -32634, i16 9832, i16 -1, i32 23, ptr null }, %struct.snd_pci_quirk { i16 -32634, i16 -24320, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -11264, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -11263, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -11262, i16 -1, i32 17, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -7644, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -7419, i16 -1, i32 17, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -7416, i16 -1, i32 17, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -7168, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -7167, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 -7166, i16 -1, i32 20, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -32634, i16 0, i16 0, i32 16, ptr @.str.1201 }, %struct.snd_pci_quirk { i16 -24416, i16 1376, i16 -1, i32 20, ptr @.str.1202 }, %struct.snd_pci_quirk { i16 -6141, i16 4121, i16 -1, i32 23, ptr null }, %struct.snd_pci_quirk zeroinitializer], [224 x i8] zeroinitializer }, align 32
@alc880_fixups = internal constant { [25 x %struct.hda_fixup], [112 x i8] } { [25 x %struct.hda_fixup] [%struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio1 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc_fixup_gpio2 } }, %struct.hda_fixup { i32 2, i8 -128, i32 1, %union.anon.74 { ptr @.compoundliteral.1203 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1204 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1205 } }, %struct.hda_fixup { i32 1, i8 -128, i32 1, %union.anon.74 { ptr @.compoundliteral.1206 } }, %struct.hda_fixup { i32 2, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1207 } }, %struct.hda_fixup { i32 2, i8 -128, i32 1, %union.anon.74 { ptr @.compoundliteral.1208 } }, %struct.hda_fixup { i32 3, i8 0, i32 0, %union.anon.74 { ptr @alc880_fixup_vol_knob } }, %struct.hda_fixup { i32 1, i8 -128, i32 8, %union.anon.74 { ptr @.compoundliteral.1209 } }, %struct.hda_fixup { i32 1, i8 -128, i32 8, %union.anon.74 { ptr @.compoundliteral.1210 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1211 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1212 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1213 } }, %struct.hda_fixup { i32 1, i8 -128, i32 0, %union.anon.74 { ptr @.compoundliteral.1214 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1215 } }, %struct.hda_fixup { i32 1, i8 -128, i32 15, %union.anon.74 { ptr @.compoundliteral.1216 } }, %struct.hda_fixup { i32 1, i8 -128, i32 15, %union.anon.74 { ptr @.compoundliteral.1217 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1218 } }, %struct.hda_fixup { i32 1, i8 -128, i32 18, %union.anon.74 { ptr @.compoundliteral.1219 } }, %struct.hda_fixup { i32 1, i8 -128, i32 18, %union.anon.74 { ptr @.compoundliteral.1220 } }, %struct.hda_fixup { i32 1, i8 0, i32 0, %union.anon.74 { ptr @.compoundliteral.1221 } }, %struct.hda_fixup { i32 1, i8 -128, i32 21, %union.anon.74 { ptr @.compoundliteral.1222 } }, %struct.hda_fixup { i32 1, i8 -128, i32 21, %union.anon.74 { ptr @.compoundliteral.1223 } }, %struct.hda_fixup { i32 1, i8 64, i32 21, %union.anon.74 { ptr @.compoundliteral.1224 } }], [112 x i8] zeroinitializer }, align 32
@.str.1164 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"3stack\00", [25 x i8] zeroinitializer }, align 32
@.str.1165 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"3stack-digout\00", [18 x i8] zeroinitializer }, align 32
@.str.1166 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"5stack\00", [25 x i8] zeroinitializer }, align 32
@.str.1167 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"5stack-digout\00", [18 x i8] zeroinitializer }, align 32
@.str.1168 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"6stack\00", [25 x i8] zeroinitializer }, align 32
@.str.1169 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"6stack-digout\00", [18 x i8] zeroinitializer }, align 32
@.str.1170 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"6stack-automute\00", [16 x i8] zeroinitializer }, align 32
@.str.1171 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Coeus G610P\00", [20 x i8] zeroinitializer }, align 32
@.str.1172 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ASUS W5A\00", [23 x i8] zeroinitializer }, align 32
@.str.1173 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ASUS Z71V\00", [22 x i8] zeroinitializer }, align 32
@.str.1174 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ABit AA8XE\00", [21 x i8] zeroinitializer }, align 32
@.str.1175 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Clevo GPIO2\00", [20 x i8] zeroinitializer }, align 32
@.str.1176 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Clevo\00", [26 x i8] zeroinitializer }, align 32
@.str.1177 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Uniwill\00", [24 x i8] zeroinitializer }, align 32
@.str.1178 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Uniwill P53\00", [20 x i8] zeroinitializer }, align 32
@.str.1179 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"W810\00", [27 x i8] zeroinitializer }, align 32
@.str.1180 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Medion Rim 2150\00", [16 x i8] zeroinitializer }, align 32
@.str.1181 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"PB 13201056\00", [20 x i8] zeroinitializer }, align 32
@.str.1182 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"FSC Amilo M1437\00", [16 x i8] zeroinitializer }, align 32
@.str.1183 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"FSC Amilo M1451G\00", [47 x i8] zeroinitializer }, align 32
@.str.1184 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"FSC AMILO Xi 1526\00", [46 x i8] zeroinitializer }, align 32
@.str.1185 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"FSC Amilo Pi1556\00", [47 x i8] zeroinitializer }, align 32
@.str.1186 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"LG\00", [29 x i8] zeroinitializer }, align 32
@.str.1187 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"LG P1 Express\00", [18 x i8] zeroinitializer }, align 32
@.str.1188 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"LG w1\00", [26 x i8] zeroinitializer }, align 32
@.str.1189 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"LG LW25\00", [24 x i8] zeroinitializer }, align 32
@.str.1190 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"TCL S700\00", [23 x i8] zeroinitializer }, align 32
@.str.1191 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Acer APFV\00", [22 x i8] zeroinitializer }, align 32
@.str.1192 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ULI\00", [28 x i8] zeroinitializer }, align 32
@.str.1193 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Sony\00", [27 x i8] zeroinitializer }, align 32
@.str.1194 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Gateway\00", [24 x i8] zeroinitializer }, align 32
@.str.1195 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Shuttle ST20G5\00", [17 x i8] zeroinitializer }, align 32
@.str.1196 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Gigabyte K8\00", [20 x i8] zeroinitializer }, align 32
@.str.1197 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"FIC P4M\00", [24 x i8] zeroinitializer }, align 32
@.str.1198 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Biostar\00", [24 x i8] zeroinitializer }, align 32
@.str.1199 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"EPoX\00", [27 x i8] zeroinitializer }, align 32
@.str.1200 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"EPox EP-5LDA\00", [19 x i8] zeroinitializer }, align 32
@.str.1201 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Intel mobo\00", [21 x i8] zeroinitializer }, align 32
@.str.1202 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"AOpen i915GMm-HFS\00", [46 x i8] zeroinitializer }, align 32
@.compoundliteral.1203 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12384 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1204 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1205 = internal constant { [3 x %struct.hda_pintbl], [40 x i8] } { [3 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 26, i32 25244751 }, %struct.hda_pintbl { i16 27, i32 52510783 }, %struct.hda_pintbl zeroinitializer], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.1206 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1207 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12384 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1208 = internal constant { [3 x %struct.hda_verb], [60 x i8] } { [3 x %struct.hda_verb] [%struct.hda_verb { i16 32, i32 1280, i32 7 }, %struct.hda_verb { i16 32, i32 1024, i32 12400 }, %struct.hda_verb zeroinitializer], [60 x i8] zeroinitializer }, align 32
@.compoundliteral.1209 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 18956319 }, %struct.hda_pintbl { i16 21, i32 -1727856352 }, %struct.hda_pintbl { i16 22, i32 -1727856336 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 27367760 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 30, i32 21315904 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1210 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 18956319 }, %struct.hda_pintbl { i16 21, i32 -1727856352 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 27367760 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1211 = internal constant { [4 x %struct.hda_pintbl], [32 x i8] } { [4 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 18956575 }, %struct.hda_pintbl { i16 21, i32 -1727856352 }, %struct.hda_pintbl { i16 22, i32 -1727856336 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1212 = internal constant { [5 x %struct.hda_pintbl], [56 x i8] } { [5 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 31, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.1213 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 -1727856352 }, %struct.hda_pintbl { i16 21, i32 18956575 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 27367760 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl { i16 26, i32 25243697 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 30, i32 21238046 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1214 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 18956575 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 -1868168864 }, %struct.hda_pintbl { i16 25, i32 1091637744 }, %struct.hda_pintbl { i16 26, i32 1091637744 }, %struct.hda_pintbl { i16 27, i32 1091637744 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 30, i32 -1220341474 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1215 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 1091637744 }, %struct.hda_pintbl { i16 23, i32 1091637744 }, %struct.hda_pintbl { i16 24, i32 27368496 }, %struct.hda_pintbl { i16 25, i32 18956575 }, %struct.hda_pintbl { i16 26, i32 25243697 }, %struct.hda_pintbl { i16 27, i32 44145728 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 31, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1216 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1217 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 21238046 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1218 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 21, i32 1091637744 }, %struct.hda_pintbl { i16 22, i32 16847889 }, %struct.hda_pintbl { i16 23, i32 16868370 }, %struct.hda_pintbl { i16 24, i32 27368496 }, %struct.hda_pintbl { i16 25, i32 18956575 }, %struct.hda_pintbl { i16 26, i32 25243697 }, %struct.hda_pintbl { i16 27, i32 44145728 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 31, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1219 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1220 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 21238046 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1221 = internal constant { [12 x %struct.hda_pintbl], [32 x i8] } { [12 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 20, i32 16859152 }, %struct.hda_pintbl { i16 21, i32 16868370 }, %struct.hda_pintbl { i16 22, i32 16847889 }, %struct.hda_pintbl { i16 23, i32 16851988 }, %struct.hda_pintbl { i16 24, i32 27368496 }, %struct.hda_pintbl { i16 25, i32 44145728 }, %struct.hda_pintbl { i16 26, i32 25243697 }, %struct.hda_pintbl { i16 27, i32 18956575 }, %struct.hda_pintbl { i16 28, i32 1091637744 }, %struct.hda_pintbl { i16 29, i32 1091637744 }, %struct.hda_pintbl { i16 31, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.compoundliteral.1222 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 1091637744 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1223 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 30, i32 21238046 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.1224 = internal constant { [2 x %struct.hda_pintbl], [16 x i8] } { [2 x %struct.hda_pintbl] [%struct.hda_pintbl { i16 27, i32 18956319 }, %struct.hda_pintbl zeroinitializer], [16 x i8] zeroinitializer }, align 32
@.str.1225 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Master Playback Volume\00", [41 x i8] zeroinitializer }, align 32
@alc880_parse_auto_config.alc880_ignore = internal constant { [2 x i16], [28 x i8] } { [2 x i16] [i16 29, i16 0], [28 x i8] zeroinitializer }, align 32
@alc880_parse_auto_config.alc880_ssids = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 21, i16 27, i16 20, i16 0], [24 x i8] zeroinitializer }, align 32
@switch.table.alc269_parse_auto_config = internal constant { [21 x ptr], [44 x i8] } { [21 x ptr] [ptr @alc269_parse_auto_config.alc269va_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269va_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269va_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269va_ssids, ptr @alc269_parse_auto_config.alc269va_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269_ssids], [44 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [37 x i64] [i64 35, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902517, i64 283902518, i64 283902533, i64 283902549, i64 283902550, i64 283902551, i64 283902569, i64 283902580, i64 283902592, i64 283902594, i64 283902595, i64 283902596, i64 283902597, i64 283902598, i64 283902599, i64 283902600, i64 283902601, i64 283902608, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283902720, i64 283903523, i64 283903744, i64 283903745, i64 283903747, i64 283903761]
@__sancov_gen_cov_switch_values.1226 = internal global [5 x i64] [i64 3, i64 8, i64 16, i64 32, i64 48]
@__sancov_gen_cov_switch_values.1227 = internal global [8 x i64] [i64 6, i64 32, i64 283902578, i64 283902579, i64 283903586, i64 283903587, i64 283903589, i64 283903592]
@__sancov_gen_cov_switch_values.1228 = internal global [7 x i64] [i64 5, i64 32, i64 283904130, i64 283904133, i64 283904256, i64 283904768, i64 283906592]
@__sancov_gen_cov_switch_values.1229 = internal global [12 x i64] [i64 10, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902518, i64 283902550, i64 283902597, i64 283902599, i64 283902601, i64 283902613, i64 283902617]
@__sancov_gen_cov_switch_values.1230 = internal global [4 x i64] [i64 2, i64 32, i64 16, i64 64]
@__sancov_gen_cov_switch_values.1231 = internal global [60 x i64] [i64 58, i64 32, i64 283902485, i64 283902498, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902517, i64 283902518, i64 283902533, i64 283902549, i64 283902550, i64 283902551, i64 283902562, i64 283902567, i64 283902568, i64 283902569, i64 283902578, i64 283902579, i64 283902580, i64 283902581, i64 283902592, i64 283902594, i64 283902595, i64 283902596, i64 283902597, i64 283902598, i64 283902599, i64 283902600, i64 283902601, i64 283902608, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283902720, i64 283903523, i64 283903586, i64 283903587, i64 283903589, i64 283903592, i64 283903600, i64 283903601, i64 283903602, i64 283903744, i64 283903745, i64 283903747, i64 283903761, i64 283904103, i64 283904136, i64 283904146, i64 283904151, i64 283904153, i64 283904256, i64 283904768, i64 283906408, i64 283906592]
@__sancov_gen_cov_switch_values.1232 = internal global [5 x i64] [i64 3, i64 8, i64 16, i64 32, i64 48]
@__sancov_gen_cov_switch_values.1233 = internal global [4 x i64] [i64 2, i64 8, i64 32, i64 48]
@__sancov_gen_cov_switch_values.1234 = internal global [8 x i64] [i64 6, i64 32, i64 283902560, i64 283904128, i64 283904130, i64 283904131, i64 283904133, i64 283904136]
@__sancov_gen_cov_switch_values.1235 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 16]
@__sancov_gen_cov_switch_values.1236 = internal global [8 x i64] [i64 6, i64 32, i64 283902518, i64 283902550, i64 283902595, i64 283902598, i64 283902600, i64 283902616]
@__sancov_gen_cov_switch_values.1237 = internal global [12 x i64] [i64 10, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902518, i64 283902550, i64 283902597, i64 283902599, i64 283902601, i64 283902613, i64 283902617]
@__sancov_gen_cov_switch_values.1238 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.1239 = internal global [4 x i64] [i64 2, i64 32, i64 16, i64 64]
@__sancov_gen_cov_switch_values.1240 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1241 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1242 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 3]
@__sancov_gen_cov_switch_values.1243 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1244 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1245 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.1246 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.1247 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1248 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1249 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1250 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.1251 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.1252 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1253 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1254 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1255 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.1256 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.1257 = internal global [24 x i64] [i64 22, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902595, i64 283902597, i64 283902598, i64 283902600, i64 283902601, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283903592, i64 283904103]
@__sancov_gen_cov_switch_values.1258 = internal global [24 x i64] [i64 22, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902595, i64 283902597, i64 283902598, i64 283902600, i64 283902601, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283903592, i64 283904103]
@__sancov_gen_cov_switch_values.1259 = internal global [24 x i64] [i64 22, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902595, i64 283902597, i64 283902598, i64 283902600, i64 283902601, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283903592, i64 283904103]
@__sancov_gen_cov_switch_values.1260 = internal global [23 x i64] [i64 21, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902595, i64 283902597, i64 283902598, i64 283902600, i64 283902601, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283903592]
@__sancov_gen_cov_switch_values.1261 = internal global [26 x i64] [i64 24, i64 32, i64 283902485, i64 283902497, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902595, i64 283902597, i64 283902598, i64 283902600, i64 283902601, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283903586, i64 283903592, i64 283904103]
@__sancov_gen_cov_switch_values.1262 = internal global [24 x i64] [i64 22, i64 32, i64 283902485, i64 283902501, i64 283902512, i64 283902515, i64 283902516, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902595, i64 283902597, i64 283902598, i64 283902600, i64 283902601, i64 283902610, i64 283902611, i64 283902612, i64 283902613, i64 283902616, i64 283902617, i64 283903592, i64 283904103]
@__sancov_gen_cov_switch_values.1263 = internal global [6 x i64] [i64 4, i64 32, i64 283902512, i64 283902518, i64 283902549, i64 283902550]
@__sancov_gen_cov_switch_values.1264 = internal global [12 x i64] [i64 10, i64 32, i64 283902501, i64 283902512, i64 283902517, i64 283902518, i64 283902549, i64 283902550, i64 283902580, i64 283902612, i64 283902613, i64 283902617]
@__sancov_gen_cov_switch_values.1265 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.1266 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 3, i64 7]
@__sancov_gen_cov_switch_values.1267 = internal global [7 x i64] [i64 5, i64 32, i64 283902578, i64 283903587, i64 283903589, i64 283903600, i64 283903601]
@__sancov_gen_cov_switch_values.1268 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1269 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.1270 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.1271 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.1272 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@___asan_gen_.1273 = private unnamed_addr constant [15 x i8] c"realtek_driver\00", align 1
@___asan_gen_.1275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11453, i32 32 }
@___asan_gen_.1278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11457, i32 1 }
@___asan_gen_.1279 = private unnamed_addr constant [19 x i8] c"snd_hda_id_realtek\00", align 1
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11367, i32 35 }
@___asan_gen_.1284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11368, i32 2 }
@___asan_gen_.1287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11369, i32 2 }
@___asan_gen_.1290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11370, i32 2 }
@___asan_gen_.1293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11371, i32 2 }
@___asan_gen_.1296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11372, i32 2 }
@___asan_gen_.1299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11373, i32 2 }
@___asan_gen_.1302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11374, i32 2 }
@___asan_gen_.1305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11375, i32 2 }
@___asan_gen_.1308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11378, i32 2 }
@___asan_gen_.1311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11379, i32 2 }
@___asan_gen_.1314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11380, i32 2 }
@___asan_gen_.1317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11381, i32 2 }
@___asan_gen_.1320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11382, i32 2 }
@___asan_gen_.1323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11383, i32 2 }
@___asan_gen_.1326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11384, i32 2 }
@___asan_gen_.1329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11385, i32 2 }
@___asan_gen_.1332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11386, i32 2 }
@___asan_gen_.1335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11387, i32 2 }
@___asan_gen_.1338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11388, i32 2 }
@___asan_gen_.1341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11389, i32 2 }
@___asan_gen_.1344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11390, i32 2 }
@___asan_gen_.1347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11391, i32 2 }
@___asan_gen_.1350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11392, i32 2 }
@___asan_gen_.1353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11393, i32 2 }
@___asan_gen_.1356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11394, i32 2 }
@___asan_gen_.1359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11395, i32 2 }
@___asan_gen_.1362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11396, i32 2 }
@___asan_gen_.1365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11397, i32 2 }
@___asan_gen_.1368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11398, i32 2 }
@___asan_gen_.1371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11399, i32 2 }
@___asan_gen_.1374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11400, i32 2 }
@___asan_gen_.1377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11401, i32 2 }
@___asan_gen_.1380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11402, i32 2 }
@___asan_gen_.1383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11403, i32 2 }
@___asan_gen_.1386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11404, i32 2 }
@___asan_gen_.1389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11405, i32 2 }
@___asan_gen_.1392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11406, i32 2 }
@___asan_gen_.1395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11407, i32 2 }
@___asan_gen_.1398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11408, i32 2 }
@___asan_gen_.1401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11409, i32 2 }
@___asan_gen_.1404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11410, i32 2 }
@___asan_gen_.1407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11411, i32 2 }
@___asan_gen_.1410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11412, i32 2 }
@___asan_gen_.1413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11413, i32 2 }
@___asan_gen_.1416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11414, i32 2 }
@___asan_gen_.1419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11415, i32 2 }
@___asan_gen_.1422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11416, i32 2 }
@___asan_gen_.1425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11417, i32 2 }
@___asan_gen_.1428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11418, i32 2 }
@___asan_gen_.1431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11419, i32 2 }
@___asan_gen_.1434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11420, i32 2 }
@___asan_gen_.1437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11421, i32 2 }
@___asan_gen_.1440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11422, i32 2 }
@___asan_gen_.1443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11423, i32 2 }
@___asan_gen_.1446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11424, i32 2 }
@___asan_gen_.1449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11425, i32 2 }
@___asan_gen_.1452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11426, i32 2 }
@___asan_gen_.1455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11427, i32 2 }
@___asan_gen_.1458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11428, i32 2 }
@___asan_gen_.1461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11429, i32 2 }
@___asan_gen_.1464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11430, i32 2 }
@___asan_gen_.1467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11431, i32 2 }
@___asan_gen_.1470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11432, i32 2 }
@___asan_gen_.1473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11434, i32 2 }
@___asan_gen_.1476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11435, i32 2 }
@___asan_gen_.1479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11436, i32 2 }
@___asan_gen_.1482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11437, i32 2 }
@___asan_gen_.1485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11438, i32 2 }
@___asan_gen_.1488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11439, i32 2 }
@___asan_gen_.1491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11440, i32 2 }
@___asan_gen_.1494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11441, i32 2 }
@___asan_gen_.1497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11442, i32 2 }
@___asan_gen_.1500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11443, i32 2 }
@___asan_gen_.1503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11444, i32 2 }
@___asan_gen_.1506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9940, i32 11 }
@___asan_gen_.1509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9947, i32 11 }
@___asan_gen_.1510 = private unnamed_addr constant [20 x i8] c"alc269_fixup_models\00", align 1
@___asan_gen_.1512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9288, i32 37 }
@___asan_gen_.1513 = private unnamed_addr constant [17 x i8] c"alc269_fixup_tbl\00", align 1
@___asan_gen_.1515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8765, i32 35 }
@___asan_gen_.1516 = private unnamed_addr constant [14 x i8] c"alc269_fixups\00", align 1
@___asan_gen_.1518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 7005, i32 31 }
@___asan_gen_.1527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10077, i32 3 }
@___asan_gen_.1528 = private unnamed_addr constant [21 x i8] c"alc269_pin_fixup_tbl\00", align 1
@___asan_gen_.1530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9439, i32 39 }
@___asan_gen_.1531 = private unnamed_addr constant [30 x i8] c"alc269_fallback_pin_fixup_tbl\00", align 1
@___asan_gen_.1533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9854, i32 39 }
@___asan_gen_.1534 = private unnamed_addr constant [24 x i8] c"alc269_fixup_vendor_tbl\00", align 1
@___asan_gen_.1536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9279, i32 35 }
@___asan_gen_.1537 = private unnamed_addr constant [14 x i8] c"alc_patch_ops\00", align 1
@___asan_gen_.1539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 987, i32 35 }
@___asan_gen_.1540 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1203, i32 2 }
@___asan_gen_.1546 = private unnamed_addr constant [5 x i8] c"pins\00", align 1
@___asan_gen_.1548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 544, i32 25 }
@___asan_gen_.1551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 944, i32 36 }
@___asan_gen_.1552 = private unnamed_addr constant [11 x i8] c"rename_tbl\00", align 1
@___asan_gen_.1554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1020, i32 44 }
@___asan_gen_.1555 = private unnamed_addr constant [15 x i8] c"rename_pci_tbl\00", align 1
@___asan_gen_.1557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1041, i32 48 }
@___asan_gen_.1560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1022, i32 32 }
@___asan_gen_.1563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1023, i32 32 }
@___asan_gen_.1566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1024, i32 32 }
@___asan_gen_.1569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1025, i32 32 }
@___asan_gen_.1572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1027, i32 32 }
@___asan_gen_.1575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1028, i32 32 }
@___asan_gen_.1578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1029, i32 32 }
@___asan_gen_.1581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1030, i32 32 }
@___asan_gen_.1584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1031, i32 32 }
@___asan_gen_.1587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1032, i32 32 }
@___asan_gen_.1590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1033, i32 32 }
@___asan_gen_.1593 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1034, i32 32 }
@___asan_gen_.1596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1035, i32 32 }
@___asan_gen_.1599 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1042, i32 27 }
@___asan_gen_.1602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1043, i32 27 }
@___asan_gen_.1605 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1044, i32 27 }
@___asan_gen_.1608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1045, i32 27 }
@___asan_gen_.1611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1046, i32 27 }
@___asan_gen_.1614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1047, i32 27 }
@___asan_gen_.1617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1048, i32 27 }
@___asan_gen_.1620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1049, i32 27 }
@___asan_gen_.1623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1050, i32 27 }
@___asan_gen_.1626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1051, i32 27 }
@___asan_gen_.1629 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1052, i32 27 }
@___asan_gen_.1632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1053, i32 27 }
@___asan_gen_.1635 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1054, i32 27 }
@___asan_gen_.1638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1055, i32 27 }
@___asan_gen_.1641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1056, i32 27 }
@___asan_gen_.1644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1057, i32 27 }
@___asan_gen_.1647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1058, i32 27 }
@___asan_gen_.1650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1059, i32 27 }
@___asan_gen_.1653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1060, i32 27 }
@___asan_gen_.1656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1061, i32 27 }
@___asan_gen_.1659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1062, i32 27 }
@___asan_gen_.1662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1063, i32 27 }
@___asan_gen_.1665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1064, i32 27 }
@___asan_gen_.1668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1065, i32 27 }
@___asan_gen_.1671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1066, i32 27 }
@___asan_gen_.1674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1067, i32 27 }
@___asan_gen_.1677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1068, i32 27 }
@___asan_gen_.1678 = private unnamed_addr constant [13 x i8] c"alc282_coefs\00", align 1
@___asan_gen_.1680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3317, i32 29 }
@___asan_gen_.1681 = private unnamed_addr constant [13 x i8] c"alc283_coefs\00", align 1
@___asan_gen_.1683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3429, i32 29 }
@___asan_gen_.1686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9289, i32 36 }
@___asan_gen_.1689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9290, i32 36 }
@___asan_gen_.1692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9291, i32 43 }
@___asan_gen_.1695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9292, i32 36 }
@___asan_gen_.1698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9293, i32 40 }
@___asan_gen_.1701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9294, i32 43 }
@___asan_gen_.1704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9295, i32 44 }
@___asan_gen_.1707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9296, i32 54 }
@___asan_gen_.1710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9297, i32 43 }
@___asan_gen_.1713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9298, i32 55 }
@___asan_gen_.1716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9299, i32 43 }
@___asan_gen_.1719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9300, i32 53 }
@___asan_gen_.1722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9301, i32 53 }
@___asan_gen_.1725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9302, i32 53 }
@___asan_gen_.1728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9303, i32 53 }
@___asan_gen_.1731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9304, i32 53 }
@___asan_gen_.1734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9305, i32 43 }
@___asan_gen_.1737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9306, i32 48 }
@___asan_gen_.1740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9307, i32 43 }
@___asan_gen_.1743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9308, i32 38 }
@___asan_gen_.1746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9309, i32 38 }
@___asan_gen_.1749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9310, i32 47 }
@___asan_gen_.1752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9311, i32 43 }
@___asan_gen_.1755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9312, i32 51 }
@___asan_gen_.1758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9313, i32 47 }
@___asan_gen_.1761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9314, i32 41 }
@___asan_gen_.1764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9315, i32 42 }
@___asan_gen_.1767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9316, i32 42 }
@___asan_gen_.1770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9317, i32 43 }
@___asan_gen_.1773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9318, i32 41 }
@___asan_gen_.1776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9319, i32 39 }
@___asan_gen_.1779 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9320, i32 40 }
@___asan_gen_.1782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9321, i32 47 }
@___asan_gen_.1785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9322, i32 47 }
@___asan_gen_.1788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9323, i32 57 }
@___asan_gen_.1791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9324, i32 38 }
@___asan_gen_.1794 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9325, i32 38 }
@___asan_gen_.1797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9326, i32 48 }
@___asan_gen_.1800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9327, i32 48 }
@___asan_gen_.1803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9328, i32 48 }
@___asan_gen_.1806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9329, i32 48 }
@___asan_gen_.1809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9330, i32 49 }
@___asan_gen_.1812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9331, i32 41 }
@___asan_gen_.1815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9332, i32 52 }
@___asan_gen_.1818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9333, i32 50 }
@___asan_gen_.1821 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9334, i32 41 }
@___asan_gen_.1824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9335, i32 48 }
@___asan_gen_.1827 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9336, i32 55 }
@___asan_gen_.1830 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9337, i32 42 }
@___asan_gen_.1833 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9338, i32 51 }
@___asan_gen_.1836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9339, i32 46 }
@___asan_gen_.1839 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9340, i32 52 }
@___asan_gen_.1842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9341, i32 48 }
@___asan_gen_.1845 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9342, i32 42 }
@___asan_gen_.1848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9343, i32 39 }
@___asan_gen_.1851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9344, i32 52 }
@___asan_gen_.1854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9345, i32 48 }
@___asan_gen_.1857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9346, i32 45 }
@___asan_gen_.1860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9347, i32 50 }
@___asan_gen_.1863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9348, i32 52 }
@___asan_gen_.1866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9349, i32 52 }
@___asan_gen_.1869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9350, i32 53 }
@___asan_gen_.1872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9351, i32 53 }
@___asan_gen_.1875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9352, i32 53 }
@___asan_gen_.1878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9353, i32 43 }
@___asan_gen_.1881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9354, i32 44 }
@___asan_gen_.1884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9355, i32 46 }
@___asan_gen_.1887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9356, i32 48 }
@___asan_gen_.1890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9357, i32 40 }
@___asan_gen_.1893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9359, i32 51 }
@___asan_gen_.1896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9360, i32 44 }
@___asan_gen_.1899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9361, i32 53 }
@___asan_gen_.1902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9362, i32 40 }
@___asan_gen_.1905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9363, i32 49 }
@___asan_gen_.1908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9364, i32 53 }
@___asan_gen_.1911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9365, i32 43 }
@___asan_gen_.1914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9366, i32 40 }
@___asan_gen_.1917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9367, i32 55 }
@___asan_gen_.1920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9368, i32 53 }
@___asan_gen_.1923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9369, i32 56 }
@___asan_gen_.1926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9370, i32 40 }
@___asan_gen_.1929 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9371, i32 48 }
@___asan_gen_.1932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9372, i32 55 }
@___asan_gen_.1935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9373, i32 46 }
@___asan_gen_.1938 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9374, i32 53 }
@___asan_gen_.1941 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9375, i32 44 }
@___asan_gen_.1944 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9376, i32 48 }
@___asan_gen_.1947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9377, i32 46 }
@___asan_gen_.1950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9378, i32 44 }
@___asan_gen_.1953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9379, i32 42 }
@___asan_gen_.1956 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9380, i32 60 }
@___asan_gen_.1959 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9381, i32 43 }
@___asan_gen_.1962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9383, i32 49 }
@___asan_gen_.1965 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9384, i32 40 }
@___asan_gen_.1968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9385, i32 46 }
@___asan_gen_.1971 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9386, i32 52 }
@___asan_gen_.1974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9387, i32 61 }
@___asan_gen_.1977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9388, i32 51 }
@___asan_gen_.1980 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9389, i32 57 }
@___asan_gen_.1983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9390, i32 53 }
@___asan_gen_.1986 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9391, i32 50 }
@___asan_gen_.1989 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9392, i32 48 }
@___asan_gen_.1992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9393, i32 39 }
@___asan_gen_.1995 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9394, i32 44 }
@___asan_gen_.1998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9395, i32 43 }
@___asan_gen_.2001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9396, i32 44 }
@___asan_gen_.2004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9397, i32 49 }
@___asan_gen_.2007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9398, i32 58 }
@___asan_gen_.2010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9399, i32 60 }
@___asan_gen_.2013 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9400, i32 50 }
@___asan_gen_.2016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9401, i32 38 }
@___asan_gen_.2019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9402, i32 43 }
@___asan_gen_.2022 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9403, i32 39 }
@___asan_gen_.2025 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9404, i32 47 }
@___asan_gen_.2028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9405, i32 51 }
@___asan_gen_.2031 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9406, i32 52 }
@___asan_gen_.2034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9407, i32 56 }
@___asan_gen_.2037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9408, i32 54 }
@___asan_gen_.2040 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9409, i32 48 }
@___asan_gen_.2043 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8766, i32 2 }
@___asan_gen_.2046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8767, i32 2 }
@___asan_gen_.2049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8768, i32 2 }
@___asan_gen_.2052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8769, i32 2 }
@___asan_gen_.2055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8770, i32 2 }
@___asan_gen_.2058 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8771, i32 2 }
@___asan_gen_.2061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8772, i32 2 }
@___asan_gen_.2064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8773, i32 2 }
@___asan_gen_.2067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8774, i32 2 }
@___asan_gen_.2070 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8775, i32 2 }
@___asan_gen_.2073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8776, i32 2 }
@___asan_gen_.2076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8777, i32 2 }
@___asan_gen_.2079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8778, i32 2 }
@___asan_gen_.2082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8779, i32 2 }
@___asan_gen_.2085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8780, i32 2 }
@___asan_gen_.2088 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8781, i32 2 }
@___asan_gen_.2091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8782, i32 2 }
@___asan_gen_.2094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8783, i32 2 }
@___asan_gen_.2097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8784, i32 2 }
@___asan_gen_.2100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8785, i32 2 }
@___asan_gen_.2103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8786, i32 2 }
@___asan_gen_.2106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8787, i32 2 }
@___asan_gen_.2109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8788, i32 2 }
@___asan_gen_.2112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8789, i32 2 }
@___asan_gen_.2115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8790, i32 2 }
@___asan_gen_.2118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8791, i32 2 }
@___asan_gen_.2121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8792, i32 2 }
@___asan_gen_.2124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8793, i32 2 }
@___asan_gen_.2127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8794, i32 2 }
@___asan_gen_.2130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8795, i32 2 }
@___asan_gen_.2133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8796, i32 2 }
@___asan_gen_.2136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8797, i32 2 }
@___asan_gen_.2139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8798, i32 2 }
@___asan_gen_.2142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8799, i32 2 }
@___asan_gen_.2145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8800, i32 2 }
@___asan_gen_.2148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8801, i32 2 }
@___asan_gen_.2151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8802, i32 2 }
@___asan_gen_.2154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8803, i32 2 }
@___asan_gen_.2157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8804, i32 2 }
@___asan_gen_.2160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8805, i32 2 }
@___asan_gen_.2163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8806, i32 2 }
@___asan_gen_.2166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8807, i32 2 }
@___asan_gen_.2169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8808, i32 2 }
@___asan_gen_.2172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8809, i32 2 }
@___asan_gen_.2175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8810, i32 2 }
@___asan_gen_.2178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8813, i32 2 }
@___asan_gen_.2181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8815, i32 2 }
@___asan_gen_.2184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8816, i32 2 }
@___asan_gen_.2187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8817, i32 2 }
@___asan_gen_.2190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8820, i32 2 }
@___asan_gen_.2193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8821, i32 2 }
@___asan_gen_.2196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8822, i32 2 }
@___asan_gen_.2199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8831, i32 2 }
@___asan_gen_.2202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8832, i32 2 }
@___asan_gen_.2205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8833, i32 2 }
@___asan_gen_.2208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8834, i32 2 }
@___asan_gen_.2211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8835, i32 2 }
@___asan_gen_.2214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8836, i32 2 }
@___asan_gen_.2217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8837, i32 2 }
@___asan_gen_.2220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8838, i32 2 }
@___asan_gen_.2223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8841, i32 2 }
@___asan_gen_.2226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8843, i32 2 }
@___asan_gen_.2229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8844, i32 2 }
@___asan_gen_.2232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8845, i32 2 }
@___asan_gen_.2235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8847, i32 2 }
@___asan_gen_.2238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8854, i32 2 }
@___asan_gen_.2241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8855, i32 2 }
@___asan_gen_.2244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8856, i32 2 }
@___asan_gen_.2247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8860, i32 2 }
@___asan_gen_.2250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8867, i32 2 }
@___asan_gen_.2253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8917, i32 2 }
@___asan_gen_.2256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8918, i32 2 }
@___asan_gen_.2259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8921, i32 2 }
@___asan_gen_.2262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8923, i32 2 }
@___asan_gen_.2265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8925, i32 2 }
@___asan_gen_.2268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8926, i32 2 }
@___asan_gen_.2271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8927, i32 2 }
@___asan_gen_.2274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8928, i32 2 }
@___asan_gen_.2277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8929, i32 2 }
@___asan_gen_.2280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8930, i32 2 }
@___asan_gen_.2283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8932, i32 2 }
@___asan_gen_.2286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8933, i32 2 }
@___asan_gen_.2289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8934, i32 2 }
@___asan_gen_.2292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8936, i32 2 }
@___asan_gen_.2295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8937, i32 2 }
@___asan_gen_.2298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8938, i32 2 }
@___asan_gen_.2301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8939, i32 2 }
@___asan_gen_.2304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8940, i32 2 }
@___asan_gen_.2307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8942, i32 2 }
@___asan_gen_.2310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8943, i32 2 }
@___asan_gen_.2313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8948, i32 2 }
@___asan_gen_.2316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8950, i32 2 }
@___asan_gen_.2319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8952, i32 2 }
@___asan_gen_.2322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8954, i32 2 }
@___asan_gen_.2325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8955, i32 2 }
@___asan_gen_.2328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8956, i32 2 }
@___asan_gen_.2331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8957, i32 2 }
@___asan_gen_.2334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8960, i32 2 }
@___asan_gen_.2337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8962, i32 2 }
@___asan_gen_.2340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8963, i32 2 }
@___asan_gen_.2343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8964, i32 2 }
@___asan_gen_.2346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8966, i32 2 }
@___asan_gen_.2349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8967, i32 2 }
@___asan_gen_.2352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8968, i32 2 }
@___asan_gen_.2355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8969, i32 2 }
@___asan_gen_.2358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8970, i32 2 }
@___asan_gen_.2361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8972, i32 2 }
@___asan_gen_.2364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8973, i32 2 }
@___asan_gen_.2367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8974, i32 2 }
@___asan_gen_.2370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8975, i32 2 }
@___asan_gen_.2373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8976, i32 2 }
@___asan_gen_.2376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8978, i32 2 }
@___asan_gen_.2379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8979, i32 2 }
@___asan_gen_.2382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8982, i32 2 }
@___asan_gen_.2385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8983, i32 2 }
@___asan_gen_.2388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8984, i32 2 }
@___asan_gen_.2391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8985, i32 2 }
@___asan_gen_.2394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8987, i32 2 }
@___asan_gen_.2397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8988, i32 2 }
@___asan_gen_.2400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8989, i32 2 }
@___asan_gen_.2403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8990, i32 2 }
@___asan_gen_.2406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8991, i32 2 }
@___asan_gen_.2409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8992, i32 2 }
@___asan_gen_.2412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8993, i32 2 }
@___asan_gen_.2415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8994, i32 2 }
@___asan_gen_.2418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8995, i32 2 }
@___asan_gen_.2421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8996, i32 2 }
@___asan_gen_.2424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8997, i32 2 }
@___asan_gen_.2427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8998, i32 2 }
@___asan_gen_.2430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 8999, i32 2 }
@___asan_gen_.2433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9000, i32 2 }
@___asan_gen_.2436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9001, i32 2 }
@___asan_gen_.2439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9002, i32 2 }
@___asan_gen_.2442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9003, i32 2 }
@___asan_gen_.2445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9004, i32 2 }
@___asan_gen_.2448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9005, i32 2 }
@___asan_gen_.2451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9006, i32 2 }
@___asan_gen_.2454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9007, i32 2 }
@___asan_gen_.2457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9008, i32 2 }
@___asan_gen_.2460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9009, i32 2 }
@___asan_gen_.2463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9010, i32 2 }
@___asan_gen_.2466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9011, i32 2 }
@___asan_gen_.2469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9012, i32 2 }
@___asan_gen_.2472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9013, i32 2 }
@___asan_gen_.2475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9014, i32 2 }
@___asan_gen_.2478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9015, i32 2 }
@___asan_gen_.2481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9016, i32 2 }
@___asan_gen_.2484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9017, i32 2 }
@___asan_gen_.2487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9018, i32 2 }
@___asan_gen_.2490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9019, i32 2 }
@___asan_gen_.2493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9020, i32 2 }
@___asan_gen_.2496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9022, i32 2 }
@___asan_gen_.2499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9023, i32 2 }
@___asan_gen_.2502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9024, i32 2 }
@___asan_gen_.2505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9025, i32 2 }
@___asan_gen_.2508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9026, i32 2 }
@___asan_gen_.2511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9027, i32 2 }
@___asan_gen_.2514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9029, i32 2 }
@___asan_gen_.2517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9030, i32 2 }
@___asan_gen_.2520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9033, i32 2 }
@___asan_gen_.2523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9034, i32 2 }
@___asan_gen_.2526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9035, i32 2 }
@___asan_gen_.2529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9036, i32 2 }
@___asan_gen_.2532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9037, i32 2 }
@___asan_gen_.2535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9038, i32 2 }
@___asan_gen_.2538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9039, i32 2 }
@___asan_gen_.2541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9040, i32 2 }
@___asan_gen_.2544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9041, i32 2 }
@___asan_gen_.2547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9042, i32 2 }
@___asan_gen_.2550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9043, i32 2 }
@___asan_gen_.2553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9047, i32 2 }
@___asan_gen_.2556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9048, i32 2 }
@___asan_gen_.2559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9049, i32 2 }
@___asan_gen_.2562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9050, i32 2 }
@___asan_gen_.2565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9051, i32 2 }
@___asan_gen_.2568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9052, i32 2 }
@___asan_gen_.2571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9053, i32 2 }
@___asan_gen_.2574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9054, i32 2 }
@___asan_gen_.2577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9055, i32 2 }
@___asan_gen_.2580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9056, i32 2 }
@___asan_gen_.2583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9057, i32 2 }
@___asan_gen_.2586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9058, i32 2 }
@___asan_gen_.2589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9059, i32 2 }
@___asan_gen_.2592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9060, i32 2 }
@___asan_gen_.2595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9061, i32 2 }
@___asan_gen_.2598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9062, i32 2 }
@___asan_gen_.2601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9063, i32 2 }
@___asan_gen_.2604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9064, i32 2 }
@___asan_gen_.2607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9065, i32 2 }
@___asan_gen_.2610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9066, i32 2 }
@___asan_gen_.2613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9067, i32 2 }
@___asan_gen_.2616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9068, i32 2 }
@___asan_gen_.2619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9069, i32 2 }
@___asan_gen_.2622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9070, i32 2 }
@___asan_gen_.2625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9071, i32 2 }
@___asan_gen_.2628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9072, i32 2 }
@___asan_gen_.2631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9073, i32 2 }
@___asan_gen_.2634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9074, i32 2 }
@___asan_gen_.2637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9075, i32 2 }
@___asan_gen_.2640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9076, i32 2 }
@___asan_gen_.2643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9077, i32 2 }
@___asan_gen_.2646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9078, i32 2 }
@___asan_gen_.2649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9079, i32 2 }
@___asan_gen_.2652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9080, i32 2 }
@___asan_gen_.2655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9081, i32 2 }
@___asan_gen_.2658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9082, i32 2 }
@___asan_gen_.2661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9083, i32 2 }
@___asan_gen_.2664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9084, i32 2 }
@___asan_gen_.2667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9085, i32 2 }
@___asan_gen_.2670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9086, i32 2 }
@___asan_gen_.2673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9087, i32 2 }
@___asan_gen_.2676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9088, i32 2 }
@___asan_gen_.2679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9089, i32 2 }
@___asan_gen_.2682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9090, i32 2 }
@___asan_gen_.2685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9091, i32 2 }
@___asan_gen_.2688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9092, i32 2 }
@___asan_gen_.2691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9093, i32 2 }
@___asan_gen_.2694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9094, i32 2 }
@___asan_gen_.2697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9095, i32 2 }
@___asan_gen_.2700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9096, i32 2 }
@___asan_gen_.2703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9097, i32 2 }
@___asan_gen_.2706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9098, i32 2 }
@___asan_gen_.2709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9099, i32 2 }
@___asan_gen_.2712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9100, i32 2 }
@___asan_gen_.2715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9104, i32 2 }
@___asan_gen_.2718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9105, i32 2 }
@___asan_gen_.2721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9106, i32 2 }
@___asan_gen_.2724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9107, i32 2 }
@___asan_gen_.2727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9108, i32 2 }
@___asan_gen_.2730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9109, i32 2 }
@___asan_gen_.2733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9110, i32 2 }
@___asan_gen_.2736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9111, i32 2 }
@___asan_gen_.2739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9112, i32 2 }
@___asan_gen_.2742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9113, i32 2 }
@___asan_gen_.2745 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9114, i32 2 }
@___asan_gen_.2748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9115, i32 2 }
@___asan_gen_.2751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9116, i32 2 }
@___asan_gen_.2754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9117, i32 2 }
@___asan_gen_.2757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9118, i32 2 }
@___asan_gen_.2760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9119, i32 2 }
@___asan_gen_.2763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9122, i32 2 }
@___asan_gen_.2766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9123, i32 2 }
@___asan_gen_.2769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9124, i32 2 }
@___asan_gen_.2772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9125, i32 2 }
@___asan_gen_.2775 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9126, i32 2 }
@___asan_gen_.2778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9127, i32 2 }
@___asan_gen_.2781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9128, i32 2 }
@___asan_gen_.2784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9129, i32 2 }
@___asan_gen_.2787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9130, i32 2 }
@___asan_gen_.2790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9131, i32 2 }
@___asan_gen_.2793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9132, i32 2 }
@___asan_gen_.2796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9133, i32 2 }
@___asan_gen_.2799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9134, i32 2 }
@___asan_gen_.2802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9135, i32 2 }
@___asan_gen_.2805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9136, i32 2 }
@___asan_gen_.2808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9137, i32 2 }
@___asan_gen_.2811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9138, i32 2 }
@___asan_gen_.2814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9139, i32 2 }
@___asan_gen_.2817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9140, i32 2 }
@___asan_gen_.2820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9141, i32 2 }
@___asan_gen_.2823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9142, i32 2 }
@___asan_gen_.2826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9143, i32 2 }
@___asan_gen_.2829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9144, i32 2 }
@___asan_gen_.2832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9145, i32 2 }
@___asan_gen_.2835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9148, i32 2 }
@___asan_gen_.2838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9150, i32 2 }
@___asan_gen_.2841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9157, i32 2 }
@___asan_gen_.2844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9158, i32 2 }
@___asan_gen_.2847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9159, i32 2 }
@___asan_gen_.2850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9160, i32 2 }
@___asan_gen_.2853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9161, i32 2 }
@___asan_gen_.2856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9165, i32 2 }
@___asan_gen_.2859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9176, i32 2 }
@___asan_gen_.2862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9177, i32 2 }
@___asan_gen_.2865 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9178, i32 2 }
@___asan_gen_.2868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9179, i32 2 }
@___asan_gen_.2871 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9180, i32 2 }
@___asan_gen_.2874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9181, i32 2 }
@___asan_gen_.2877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9182, i32 2 }
@___asan_gen_.2880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9183, i32 2 }
@___asan_gen_.2883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9184, i32 2 }
@___asan_gen_.2886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9185, i32 2 }
@___asan_gen_.2889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9186, i32 2 }
@___asan_gen_.2892 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9188, i32 2 }
@___asan_gen_.2895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9189, i32 2 }
@___asan_gen_.2898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9190, i32 2 }
@___asan_gen_.2901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9191, i32 2 }
@___asan_gen_.2904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9194, i32 2 }
@___asan_gen_.2907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9196, i32 2 }
@___asan_gen_.2910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9197, i32 2 }
@___asan_gen_.2913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9198, i32 2 }
@___asan_gen_.2916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9199, i32 2 }
@___asan_gen_.2919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9201, i32 2 }
@___asan_gen_.2922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9202, i32 2 }
@___asan_gen_.2925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9203, i32 2 }
@___asan_gen_.2928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9210, i32 2 }
@___asan_gen_.2931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9211, i32 2 }
@___asan_gen_.2934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9212, i32 2 }
@___asan_gen_.2937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9213, i32 2 }
@___asan_gen_.2940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9214, i32 2 }
@___asan_gen_.2943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9215, i32 2 }
@___asan_gen_.2946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9216, i32 2 }
@___asan_gen_.2949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9217, i32 2 }
@___asan_gen_.2952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9218, i32 2 }
@___asan_gen_.2955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9219, i32 2 }
@___asan_gen_.2958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9220, i32 2 }
@___asan_gen_.2961 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9221, i32 2 }
@___asan_gen_.2964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9222, i32 2 }
@___asan_gen_.2967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9223, i32 2 }
@___asan_gen_.2970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9224, i32 2 }
@___asan_gen_.2973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9225, i32 2 }
@___asan_gen_.2976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9226, i32 2 }
@___asan_gen_.2977 = private unnamed_addr constant [17 x i8] c".compoundliteral\00", align 1
@___asan_gen_.2978 = private unnamed_addr constant [21 x i8] c".compoundliteral.553\00", align 1
@___asan_gen_.2979 = private unnamed_addr constant [21 x i8] c".compoundliteral.554\00", align 1
@___asan_gen_.2980 = private unnamed_addr constant [21 x i8] c".compoundliteral.555\00", align 1
@___asan_gen_.2981 = private unnamed_addr constant [21 x i8] c".compoundliteral.556\00", align 1
@___asan_gen_.2982 = private unnamed_addr constant [21 x i8] c".compoundliteral.557\00", align 1
@___asan_gen_.2983 = private unnamed_addr constant [21 x i8] c".compoundliteral.558\00", align 1
@___asan_gen_.2984 = private unnamed_addr constant [21 x i8] c".compoundliteral.559\00", align 1
@___asan_gen_.2985 = private unnamed_addr constant [21 x i8] c".compoundliteral.560\00", align 1
@___asan_gen_.2986 = private unnamed_addr constant [21 x i8] c".compoundliteral.561\00", align 1
@___asan_gen_.2987 = private unnamed_addr constant [21 x i8] c".compoundliteral.562\00", align 1
@___asan_gen_.2988 = private unnamed_addr constant [21 x i8] c".compoundliteral.563\00", align 1
@___asan_gen_.2989 = private unnamed_addr constant [21 x i8] c".compoundliteral.564\00", align 1
@___asan_gen_.2990 = private unnamed_addr constant [21 x i8] c".compoundliteral.565\00", align 1
@___asan_gen_.2991 = private unnamed_addr constant [21 x i8] c".compoundliteral.566\00", align 1
@___asan_gen_.2992 = private unnamed_addr constant [21 x i8] c".compoundliteral.567\00", align 1
@___asan_gen_.2993 = private unnamed_addr constant [21 x i8] c".compoundliteral.568\00", align 1
@___asan_gen_.2994 = private unnamed_addr constant [21 x i8] c".compoundliteral.569\00", align 1
@___asan_gen_.2995 = private unnamed_addr constant [21 x i8] c".compoundliteral.570\00", align 1
@___asan_gen_.2996 = private unnamed_addr constant [21 x i8] c".compoundliteral.571\00", align 1
@___asan_gen_.2997 = private unnamed_addr constant [21 x i8] c".compoundliteral.572\00", align 1
@___asan_gen_.2998 = private unnamed_addr constant [21 x i8] c".compoundliteral.573\00", align 1
@___asan_gen_.2999 = private unnamed_addr constant [21 x i8] c".compoundliteral.574\00", align 1
@___asan_gen_.3000 = private unnamed_addr constant [21 x i8] c".compoundliteral.575\00", align 1
@___asan_gen_.3001 = private unnamed_addr constant [21 x i8] c".compoundliteral.576\00", align 1
@___asan_gen_.3002 = private unnamed_addr constant [21 x i8] c".compoundliteral.577\00", align 1
@___asan_gen_.3003 = private unnamed_addr constant [21 x i8] c".compoundliteral.578\00", align 1
@___asan_gen_.3004 = private unnamed_addr constant [21 x i8] c".compoundliteral.579\00", align 1
@___asan_gen_.3005 = private unnamed_addr constant [21 x i8] c".compoundliteral.580\00", align 1
@___asan_gen_.3006 = private unnamed_addr constant [21 x i8] c".compoundliteral.581\00", align 1
@___asan_gen_.3007 = private unnamed_addr constant [21 x i8] c".compoundliteral.582\00", align 1
@___asan_gen_.3008 = private unnamed_addr constant [21 x i8] c".compoundliteral.583\00", align 1
@___asan_gen_.3009 = private unnamed_addr constant [21 x i8] c".compoundliteral.584\00", align 1
@___asan_gen_.3010 = private unnamed_addr constant [21 x i8] c".compoundliteral.585\00", align 1
@___asan_gen_.3011 = private unnamed_addr constant [21 x i8] c".compoundliteral.586\00", align 1
@___asan_gen_.3012 = private unnamed_addr constant [21 x i8] c".compoundliteral.587\00", align 1
@___asan_gen_.3013 = private unnamed_addr constant [21 x i8] c".compoundliteral.588\00", align 1
@___asan_gen_.3014 = private unnamed_addr constant [21 x i8] c".compoundliteral.589\00", align 1
@___asan_gen_.3015 = private unnamed_addr constant [21 x i8] c".compoundliteral.590\00", align 1
@___asan_gen_.3016 = private unnamed_addr constant [21 x i8] c".compoundliteral.591\00", align 1
@___asan_gen_.3017 = private unnamed_addr constant [21 x i8] c".compoundliteral.592\00", align 1
@___asan_gen_.3018 = private unnamed_addr constant [21 x i8] c".compoundliteral.593\00", align 1
@___asan_gen_.3019 = private unnamed_addr constant [21 x i8] c".compoundliteral.594\00", align 1
@___asan_gen_.3020 = private unnamed_addr constant [21 x i8] c".compoundliteral.595\00", align 1
@___asan_gen_.3021 = private unnamed_addr constant [21 x i8] c".compoundliteral.596\00", align 1
@___asan_gen_.3022 = private unnamed_addr constant [21 x i8] c".compoundliteral.597\00", align 1
@___asan_gen_.3023 = private unnamed_addr constant [21 x i8] c".compoundliteral.598\00", align 1
@___asan_gen_.3024 = private unnamed_addr constant [21 x i8] c".compoundliteral.599\00", align 1
@___asan_gen_.3025 = private unnamed_addr constant [21 x i8] c".compoundliteral.600\00", align 1
@___asan_gen_.3026 = private unnamed_addr constant [21 x i8] c".compoundliteral.601\00", align 1
@___asan_gen_.3027 = private unnamed_addr constant [21 x i8] c".compoundliteral.602\00", align 1
@___asan_gen_.3028 = private unnamed_addr constant [21 x i8] c".compoundliteral.603\00", align 1
@___asan_gen_.3029 = private unnamed_addr constant [21 x i8] c".compoundliteral.604\00", align 1
@___asan_gen_.3030 = private unnamed_addr constant [21 x i8] c".compoundliteral.605\00", align 1
@___asan_gen_.3031 = private unnamed_addr constant [21 x i8] c".compoundliteral.606\00", align 1
@___asan_gen_.3032 = private unnamed_addr constant [21 x i8] c".compoundliteral.607\00", align 1
@___asan_gen_.3033 = private unnamed_addr constant [21 x i8] c".compoundliteral.608\00", align 1
@___asan_gen_.3034 = private unnamed_addr constant [21 x i8] c".compoundliteral.609\00", align 1
@___asan_gen_.3035 = private unnamed_addr constant [21 x i8] c".compoundliteral.610\00", align 1
@___asan_gen_.3036 = private unnamed_addr constant [21 x i8] c".compoundliteral.611\00", align 1
@___asan_gen_.3037 = private unnamed_addr constant [21 x i8] c".compoundliteral.612\00", align 1
@___asan_gen_.3038 = private unnamed_addr constant [21 x i8] c".compoundliteral.613\00", align 1
@___asan_gen_.3039 = private unnamed_addr constant [21 x i8] c".compoundliteral.614\00", align 1
@___asan_gen_.3040 = private unnamed_addr constant [21 x i8] c".compoundliteral.615\00", align 1
@___asan_gen_.3041 = private unnamed_addr constant [21 x i8] c".compoundliteral.616\00", align 1
@___asan_gen_.3042 = private unnamed_addr constant [21 x i8] c".compoundliteral.617\00", align 1
@___asan_gen_.3043 = private unnamed_addr constant [21 x i8] c".compoundliteral.618\00", align 1
@___asan_gen_.3044 = private unnamed_addr constant [21 x i8] c".compoundliteral.619\00", align 1
@___asan_gen_.3045 = private unnamed_addr constant [21 x i8] c".compoundliteral.620\00", align 1
@___asan_gen_.3046 = private unnamed_addr constant [21 x i8] c".compoundliteral.621\00", align 1
@___asan_gen_.3047 = private unnamed_addr constant [21 x i8] c".compoundliteral.622\00", align 1
@___asan_gen_.3048 = private unnamed_addr constant [21 x i8] c".compoundliteral.623\00", align 1
@___asan_gen_.3049 = private unnamed_addr constant [21 x i8] c".compoundliteral.624\00", align 1
@___asan_gen_.3050 = private unnamed_addr constant [21 x i8] c".compoundliteral.625\00", align 1
@___asan_gen_.3051 = private unnamed_addr constant [21 x i8] c".compoundliteral.626\00", align 1
@___asan_gen_.3052 = private unnamed_addr constant [21 x i8] c".compoundliteral.627\00", align 1
@___asan_gen_.3053 = private unnamed_addr constant [21 x i8] c".compoundliteral.628\00", align 1
@___asan_gen_.3054 = private unnamed_addr constant [21 x i8] c".compoundliteral.629\00", align 1
@___asan_gen_.3055 = private unnamed_addr constant [21 x i8] c".compoundliteral.630\00", align 1
@___asan_gen_.3056 = private unnamed_addr constant [21 x i8] c".compoundliteral.631\00", align 1
@___asan_gen_.3057 = private unnamed_addr constant [21 x i8] c".compoundliteral.632\00", align 1
@___asan_gen_.3058 = private unnamed_addr constant [21 x i8] c".compoundliteral.633\00", align 1
@___asan_gen_.3059 = private unnamed_addr constant [21 x i8] c".compoundliteral.634\00", align 1
@___asan_gen_.3060 = private unnamed_addr constant [21 x i8] c".compoundliteral.635\00", align 1
@___asan_gen_.3061 = private unnamed_addr constant [21 x i8] c".compoundliteral.636\00", align 1
@___asan_gen_.3062 = private unnamed_addr constant [21 x i8] c".compoundliteral.637\00", align 1
@___asan_gen_.3063 = private unnamed_addr constant [21 x i8] c".compoundliteral.638\00", align 1
@___asan_gen_.3064 = private unnamed_addr constant [21 x i8] c".compoundliteral.639\00", align 1
@___asan_gen_.3065 = private unnamed_addr constant [21 x i8] c".compoundliteral.640\00", align 1
@___asan_gen_.3066 = private unnamed_addr constant [21 x i8] c".compoundliteral.641\00", align 1
@___asan_gen_.3067 = private unnamed_addr constant [21 x i8] c".compoundliteral.642\00", align 1
@___asan_gen_.3068 = private unnamed_addr constant [21 x i8] c".compoundliteral.643\00", align 1
@___asan_gen_.3069 = private unnamed_addr constant [21 x i8] c".compoundliteral.644\00", align 1
@___asan_gen_.3070 = private unnamed_addr constant [21 x i8] c".compoundliteral.645\00", align 1
@___asan_gen_.3071 = private unnamed_addr constant [21 x i8] c".compoundliteral.646\00", align 1
@___asan_gen_.3072 = private unnamed_addr constant [21 x i8] c".compoundliteral.647\00", align 1
@___asan_gen_.3073 = private unnamed_addr constant [21 x i8] c".compoundliteral.648\00", align 1
@___asan_gen_.3074 = private unnamed_addr constant [21 x i8] c".compoundliteral.649\00", align 1
@___asan_gen_.3075 = private unnamed_addr constant [21 x i8] c".compoundliteral.650\00", align 1
@___asan_gen_.3076 = private unnamed_addr constant [21 x i8] c".compoundliteral.651\00", align 1
@___asan_gen_.3077 = private unnamed_addr constant [21 x i8] c".compoundliteral.652\00", align 1
@___asan_gen_.3078 = private unnamed_addr constant [21 x i8] c".compoundliteral.653\00", align 1
@___asan_gen_.3079 = private unnamed_addr constant [21 x i8] c".compoundliteral.654\00", align 1
@___asan_gen_.3080 = private unnamed_addr constant [6 x i8] c"verbs\00", align 1
@___asan_gen_.3082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4091, i32 31 }
@___asan_gen_.3083 = private unnamed_addr constant [31 x i8] c"alc269_44k_pcm_analog_playback\00", align 1
@___asan_gen_.3085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3109, i32 36 }
@___asan_gen_.3086 = private unnamed_addr constant [30 x i8] c"alc269_44k_pcm_analog_capture\00", align 1
@___asan_gen_.3088 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3113, i32 36 }
@___asan_gen_.3091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4815, i32 30 }
@___asan_gen_.3094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4823, i32 30 }
@___asan_gen_.3097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4831, i32 30 }
@___asan_gen_.3100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4841, i32 30 }
@___asan_gen_.3103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4849, i32 30 }
@___asan_gen_.3106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4853, i32 30 }
@___asan_gen_.3109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4860, i32 30 }
@___asan_gen_.3110 = private unnamed_addr constant [9 x i8] c"coef0668\00", align 1
@___asan_gen_.3112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4869, i32 30 }
@___asan_gen_.3115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4874, i32 30 }
@___asan_gen_.3118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4878, i32 30 }
@___asan_gen_.3119 = private unnamed_addr constant [18 x i8] c"alc225_pre_hsmode\00", align 1
@___asan_gen_.3121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4801, i32 29 }
@___asan_gen_.3127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4942, i32 2 }
@___asan_gen_.3130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5427, i32 30 }
@___asan_gen_.3133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5433, i32 30 }
@___asan_gen_.3134 = private unnamed_addr constant [9 x i8] c"coef0298\00", align 1
@___asan_gen_.3136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5437, i32 30 }
@___asan_gen_.3139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5445, i32 30 }
@___asan_gen_.3142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5450, i32 30 }
@___asan_gen_.3145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5457, i32 30 }
@___asan_gen_.3157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5616, i32 2 }
@___asan_gen_.3160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5206, i32 30 }
@___asan_gen_.3163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5212, i32 30 }
@___asan_gen_.3166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5217, i32 30 }
@___asan_gen_.3169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5223, i32 30 }
@___asan_gen_.3172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5230, i32 30 }
@___asan_gen_.3175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5236, i32 30 }
@___asan_gen_.3178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5241, i32 30 }
@___asan_gen_.3179 = private unnamed_addr constant [11 x i8] c"coef0225_1\00", align 1
@___asan_gen_.3181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5247, i32 30 }
@___asan_gen_.3182 = private unnamed_addr constant [11 x i8] c"coef0225_2\00", align 1
@___asan_gen_.3184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5252, i32 30 }
@___asan_gen_.3190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5319, i32 2 }
@___asan_gen_.3193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5325, i32 30 }
@___asan_gen_.3196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5331, i32 30 }
@___asan_gen_.3199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5336, i32 30 }
@___asan_gen_.3202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5342, i32 30 }
@___asan_gen_.3205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5349, i32 30 }
@___asan_gen_.3208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5355, i32 30 }
@___asan_gen_.3211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5360, i32 30 }
@___asan_gen_.3214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5366, i32 30 }
@___asan_gen_.3220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5419, i32 2 }
@___asan_gen_.3223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4949, i32 30 }
@___asan_gen_.3226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4954, i32 30 }
@___asan_gen_.3229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4960, i32 30 }
@___asan_gen_.3232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4967, i32 30 }
@___asan_gen_.3235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4976, i32 30 }
@___asan_gen_.3238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4981, i32 30 }
@___asan_gen_.3241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4987, i32 30 }
@___asan_gen_.3244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4993, i32 30 }
@___asan_gen_.3247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4999, i32 30 }
@___asan_gen_.3253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5081, i32 2 }
@___asan_gen_.3254 = private unnamed_addr constant [9 x i8] c"coef0225\00", align 1
@___asan_gen_.3256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5086, i32 30 }
@___asan_gen_.3257 = private unnamed_addr constant [9 x i8] c"coef0255\00", align 1
@___asan_gen_.3259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5095, i32 30 }
@___asan_gen_.3260 = private unnamed_addr constant [9 x i8] c"coef0256\00", align 1
@___asan_gen_.3262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5102, i32 30 }
@___asan_gen_.3263 = private unnamed_addr constant [9 x i8] c"coef0233\00", align 1
@___asan_gen_.3265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5110, i32 30 }
@___asan_gen_.3266 = private unnamed_addr constant [9 x i8] c"coef0288\00", align 1
@___asan_gen_.3268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5115, i32 30 }
@___asan_gen_.3269 = private unnamed_addr constant [9 x i8] c"coef0292\00", align 1
@___asan_gen_.3271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5123, i32 30 }
@___asan_gen_.3272 = private unnamed_addr constant [9 x i8] c"coef0293\00", align 1
@___asan_gen_.3274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5130, i32 30 }
@___asan_gen_.3275 = private unnamed_addr constant [9 x i8] c"coef0688\00", align 1
@___asan_gen_.3277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5136, i32 30 }
@___asan_gen_.3278 = private unnamed_addr constant [9 x i8] c"coef0274\00", align 1
@___asan_gen_.3280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5142, i32 30 }
@___asan_gen_.3286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5198, i32 2 }
@___asan_gen_.3287 = private unnamed_addr constant [10 x i8] c"dock_pins\00", align 1
@___asan_gen_.3289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6125, i32 33 }
@___asan_gen_.3292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6148, i32 21 }
@___asan_gen_.3295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6149, i32 7 }
@___asan_gen_.3298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6150, i32 21 }
@___asan_gen_.3301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6163, i32 26 }
@___asan_gen_.3302 = private unnamed_addr constant [9 x i8] c"alc255fw\00", align 1
@___asan_gen_.3304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5751, i32 30 }
@___asan_gen_.3305 = private unnamed_addr constant [9 x i8] c"alc256fw\00", align 1
@___asan_gen_.3307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5759, i32 30 }
@___asan_gen_.3310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5856, i32 33 }
@___asan_gen_.3325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4696, i32 3 }
@___asan_gen_.3328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4702, i32 23 }
@___asan_gen_.3334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4711, i32 3 }
@___asan_gen_.3337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6510, i32 25 }
@___asan_gen_.3340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6513, i32 33 }
@___asan_gen_.3343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6190, i32 26 }
@___asan_gen_.3346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6200, i32 26 }
@___asan_gen_.3349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6180, i32 26 }
@___asan_gen_.3352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6292, i32 33 }
@___asan_gen_.3355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6296, i32 21 }
@___asan_gen_.3358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6298, i32 7 }
@___asan_gen_.3361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6299, i32 7 }
@___asan_gen_.3364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6300, i32 21 }
@___asan_gen_.3367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6302, i32 7 }
@___asan_gen_.3370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6303, i32 7 }
@___asan_gen_.3373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6322, i32 25 }
@___asan_gen_.3376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5873, i32 33 }
@___asan_gen_.3379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5900, i32 25 }
@___asan_gen_.3380 = private unnamed_addr constant [9 x i8] c"dac_init\00", align 1
@___asan_gen_.3382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 4210, i32 41 }
@___asan_gen_.3385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3387, i32 9, i32 33 }
@___asan_gen_.3386 = private unnamed_addr constant [25 x i8] c"alc295_hp_speakers_coefs\00", align 1
@___asan_gen_.3387 = private unnamed_addr constant [34 x i8] c"../sound/pci/hda/hp_x360_helper.c\00", align 1
@___asan_gen_.3388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3387, i32 13, i32 30 }
@___asan_gen_.3389 = private unnamed_addr constant [23 x i8] c"alc_headset_btn_keymap\00", align 1
@___asan_gen_.3391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3187, i32 37 }
@___asan_gen_.3394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3290, i32 39 }
@___asan_gen_.3397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6260, i32 25 }
@___asan_gen_.3400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6261, i32 25 }
@___asan_gen_.3403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6278, i32 21 }
@___asan_gen_.3406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6278, i32 46 }
@___asan_gen_.3409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6279, i32 21 }
@___asan_gen_.3412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6279, i32 53 }
@___asan_gen_.3415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6339, i32 25 }
@___asan_gen_.3416 = private unnamed_addr constant [26 x i8] c"alc285_ideapad_s740_coefs\00", align 1
@___asan_gen_.3417 = private unnamed_addr constant [39 x i8] c"../sound/pci/hda/ideapad_s740_helper.c\00", align 1
@___asan_gen_.3418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3417, i32 4, i32 30 }
@___asan_gen_.3419 = private unnamed_addr constant [16 x i8] c"preferred_pairs\00", align 1
@___asan_gen_.3421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 5913, i32 25 }
@___asan_gen_.3424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6545, i32 25 }
@___asan_gen_.3427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6546, i32 33 }
@___asan_gen_.3428 = private unnamed_addr constant [37 x i8] c"alc256_fixup_set_coef_defaults_coefs\00", align 1
@___asan_gen_.3430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6717, i32 29 }
@___asan_gen_.3431 = private unnamed_addr constant [33 x i8] c"alc233_fixup_no_audio_jack_coefs\00", align 1
@___asan_gen_.3433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6739, i32 29 }
@___asan_gen_.3436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6699, i32 9 }
@___asan_gen_.3439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6701, i32 9 }
@___asan_gen_.3440 = private unnamed_addr constant [16 x i8] c"comp_master_ops\00", align 1
@___asan_gen_.3442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6617, i32 42 }
@___asan_gen_.3451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6704, i32 4 }
@___asan_gen_.3454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6662, i32 37 }
@___asan_gen_.3457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6662, i32 44 }
@___asan_gen_.3460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6646, i32 12 }
@___asan_gen_.3466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 6653, i32 4 }
@___asan_gen_.3467 = private unnamed_addr constant [21 x i8] c".compoundliteral.703\00", align 1
@___asan_gen_.3470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9440, i32 2 }
@___asan_gen_.3471 = private unnamed_addr constant [21 x i8] c".compoundliteral.705\00", align 1
@___asan_gen_.3474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9446, i32 2 }
@___asan_gen_.3475 = private unnamed_addr constant [21 x i8] c".compoundliteral.707\00", align 1
@___asan_gen_.3478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9450, i32 2 }
@___asan_gen_.3479 = private unnamed_addr constant [21 x i8] c".compoundliteral.709\00", align 1
@___asan_gen_.3480 = private unnamed_addr constant [21 x i8] c".compoundliteral.710\00", align 1
@___asan_gen_.3481 = private unnamed_addr constant [21 x i8] c".compoundliteral.711\00", align 1
@___asan_gen_.3482 = private unnamed_addr constant [21 x i8] c".compoundliteral.712\00", align 1
@___asan_gen_.3483 = private unnamed_addr constant [21 x i8] c".compoundliteral.713\00", align 1
@___asan_gen_.3484 = private unnamed_addr constant [21 x i8] c".compoundliteral.714\00", align 1
@___asan_gen_.3485 = private unnamed_addr constant [21 x i8] c".compoundliteral.715\00", align 1
@___asan_gen_.3488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9478, i32 2 }
@___asan_gen_.3489 = private unnamed_addr constant [21 x i8] c".compoundliteral.717\00", align 1
@___asan_gen_.3492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9482, i32 2 }
@___asan_gen_.3493 = private unnamed_addr constant [21 x i8] c".compoundliteral.719\00", align 1
@___asan_gen_.3494 = private unnamed_addr constant [21 x i8] c".compoundliteral.720\00", align 1
@___asan_gen_.3495 = private unnamed_addr constant [21 x i8] c".compoundliteral.721\00", align 1
@___asan_gen_.3496 = private unnamed_addr constant [21 x i8] c".compoundliteral.722\00", align 1
@___asan_gen_.3497 = private unnamed_addr constant [21 x i8] c".compoundliteral.723\00", align 1
@___asan_gen_.3498 = private unnamed_addr constant [21 x i8] c".compoundliteral.724\00", align 1
@___asan_gen_.3499 = private unnamed_addr constant [21 x i8] c".compoundliteral.725\00", align 1
@___asan_gen_.3500 = private unnamed_addr constant [21 x i8] c".compoundliteral.726\00", align 1
@___asan_gen_.3501 = private unnamed_addr constant [21 x i8] c".compoundliteral.727\00", align 1
@___asan_gen_.3502 = private unnamed_addr constant [21 x i8] c".compoundliteral.728\00", align 1
@___asan_gen_.3503 = private unnamed_addr constant [21 x i8] c".compoundliteral.729\00", align 1
@___asan_gen_.3504 = private unnamed_addr constant [21 x i8] c".compoundliteral.730\00", align 1
@___asan_gen_.3505 = private unnamed_addr constant [21 x i8] c".compoundliteral.731\00", align 1
@___asan_gen_.3506 = private unnamed_addr constant [21 x i8] c".compoundliteral.732\00", align 1
@___asan_gen_.3507 = private unnamed_addr constant [21 x i8] c".compoundliteral.733\00", align 1
@___asan_gen_.3508 = private unnamed_addr constant [21 x i8] c".compoundliteral.734\00", align 1
@___asan_gen_.3509 = private unnamed_addr constant [21 x i8] c".compoundliteral.735\00", align 1
@___asan_gen_.3510 = private unnamed_addr constant [21 x i8] c".compoundliteral.736\00", align 1
@___asan_gen_.3511 = private unnamed_addr constant [21 x i8] c".compoundliteral.737\00", align 1
@___asan_gen_.3512 = private unnamed_addr constant [21 x i8] c".compoundliteral.738\00", align 1
@___asan_gen_.3513 = private unnamed_addr constant [21 x i8] c".compoundliteral.739\00", align 1
@___asan_gen_.3514 = private unnamed_addr constant [21 x i8] c".compoundliteral.740\00", align 1
@___asan_gen_.3515 = private unnamed_addr constant [21 x i8] c".compoundliteral.741\00", align 1
@___asan_gen_.3516 = private unnamed_addr constant [21 x i8] c".compoundliteral.742\00", align 1
@___asan_gen_.3519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9581, i32 2 }
@___asan_gen_.3520 = private unnamed_addr constant [21 x i8] c".compoundliteral.744\00", align 1
@___asan_gen_.3523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9585, i32 2 }
@___asan_gen_.3524 = private unnamed_addr constant [21 x i8] c".compoundliteral.746\00", align 1
@___asan_gen_.3525 = private unnamed_addr constant [21 x i8] c".compoundliteral.747\00", align 1
@___asan_gen_.3526 = private unnamed_addr constant [21 x i8] c".compoundliteral.748\00", align 1
@___asan_gen_.3527 = private unnamed_addr constant [21 x i8] c".compoundliteral.749\00", align 1
@___asan_gen_.3528 = private unnamed_addr constant [21 x i8] c".compoundliteral.750\00", align 1
@___asan_gen_.3529 = private unnamed_addr constant [21 x i8] c".compoundliteral.751\00", align 1
@___asan_gen_.3530 = private unnamed_addr constant [21 x i8] c".compoundliteral.752\00", align 1
@___asan_gen_.3531 = private unnamed_addr constant [21 x i8] c".compoundliteral.753\00", align 1
@___asan_gen_.3532 = private unnamed_addr constant [21 x i8] c".compoundliteral.754\00", align 1
@___asan_gen_.3533 = private unnamed_addr constant [21 x i8] c".compoundliteral.755\00", align 1
@___asan_gen_.3534 = private unnamed_addr constant [21 x i8] c".compoundliteral.756\00", align 1
@___asan_gen_.3537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9632, i32 2 }
@___asan_gen_.3538 = private unnamed_addr constant [21 x i8] c".compoundliteral.758\00", align 1
@___asan_gen_.3539 = private unnamed_addr constant [21 x i8] c".compoundliteral.759\00", align 1
@___asan_gen_.3540 = private unnamed_addr constant [21 x i8] c".compoundliteral.760\00", align 1
@___asan_gen_.3541 = private unnamed_addr constant [21 x i8] c".compoundliteral.761\00", align 1
@___asan_gen_.3542 = private unnamed_addr constant [21 x i8] c".compoundliteral.762\00", align 1
@___asan_gen_.3543 = private unnamed_addr constant [21 x i8] c".compoundliteral.763\00", align 1
@___asan_gen_.3544 = private unnamed_addr constant [21 x i8] c".compoundliteral.764\00", align 1
@___asan_gen_.3545 = private unnamed_addr constant [21 x i8] c".compoundliteral.765\00", align 1
@___asan_gen_.3546 = private unnamed_addr constant [21 x i8] c".compoundliteral.766\00", align 1
@___asan_gen_.3547 = private unnamed_addr constant [21 x i8] c".compoundliteral.767\00", align 1
@___asan_gen_.3548 = private unnamed_addr constant [21 x i8] c".compoundliteral.768\00", align 1
@___asan_gen_.3549 = private unnamed_addr constant [21 x i8] c".compoundliteral.769\00", align 1
@___asan_gen_.3550 = private unnamed_addr constant [21 x i8] c".compoundliteral.770\00", align 1
@___asan_gen_.3551 = private unnamed_addr constant [21 x i8] c".compoundliteral.771\00", align 1
@___asan_gen_.3552 = private unnamed_addr constant [21 x i8] c".compoundliteral.772\00", align 1
@___asan_gen_.3553 = private unnamed_addr constant [21 x i8] c".compoundliteral.773\00", align 1
@___asan_gen_.3554 = private unnamed_addr constant [21 x i8] c".compoundliteral.774\00", align 1
@___asan_gen_.3555 = private unnamed_addr constant [21 x i8] c".compoundliteral.775\00", align 1
@___asan_gen_.3556 = private unnamed_addr constant [21 x i8] c".compoundliteral.776\00", align 1
@___asan_gen_.3557 = private unnamed_addr constant [21 x i8] c".compoundliteral.777\00", align 1
@___asan_gen_.3558 = private unnamed_addr constant [21 x i8] c".compoundliteral.778\00", align 1
@___asan_gen_.3559 = private unnamed_addr constant [21 x i8] c".compoundliteral.779\00", align 1
@___asan_gen_.3560 = private unnamed_addr constant [21 x i8] c".compoundliteral.780\00", align 1
@___asan_gen_.3561 = private unnamed_addr constant [21 x i8] c".compoundliteral.781\00", align 1
@___asan_gen_.3562 = private unnamed_addr constant [21 x i8] c".compoundliteral.782\00", align 1
@___asan_gen_.3563 = private unnamed_addr constant [21 x i8] c".compoundliteral.783\00", align 1
@___asan_gen_.3564 = private unnamed_addr constant [21 x i8] c".compoundliteral.784\00", align 1
@___asan_gen_.3565 = private unnamed_addr constant [21 x i8] c".compoundliteral.785\00", align 1
@___asan_gen_.3566 = private unnamed_addr constant [21 x i8] c".compoundliteral.786\00", align 1
@___asan_gen_.3567 = private unnamed_addr constant [21 x i8] c".compoundliteral.787\00", align 1
@___asan_gen_.3568 = private unnamed_addr constant [21 x i8] c".compoundliteral.788\00", align 1
@___asan_gen_.3569 = private unnamed_addr constant [21 x i8] c".compoundliteral.789\00", align 1
@___asan_gen_.3570 = private unnamed_addr constant [21 x i8] c".compoundliteral.790\00", align 1
@___asan_gen_.3571 = private unnamed_addr constant [21 x i8] c".compoundliteral.791\00", align 1
@___asan_gen_.3572 = private unnamed_addr constant [21 x i8] c".compoundliteral.792\00", align 1
@___asan_gen_.3573 = private unnamed_addr constant [21 x i8] c".compoundliteral.793\00", align 1
@___asan_gen_.3574 = private unnamed_addr constant [21 x i8] c".compoundliteral.794\00", align 1
@___asan_gen_.3575 = private unnamed_addr constant [21 x i8] c".compoundliteral.795\00", align 1
@___asan_gen_.3576 = private unnamed_addr constant [21 x i8] c".compoundliteral.796\00", align 1
@___asan_gen_.3577 = private unnamed_addr constant [21 x i8] c".compoundliteral.797\00", align 1
@___asan_gen_.3578 = private unnamed_addr constant [21 x i8] c".compoundliteral.798\00", align 1
@___asan_gen_.3579 = private unnamed_addr constant [21 x i8] c".compoundliteral.799\00", align 1
@___asan_gen_.3580 = private unnamed_addr constant [21 x i8] c".compoundliteral.800\00", align 1
@___asan_gen_.3581 = private unnamed_addr constant [21 x i8] c".compoundliteral.801\00", align 1
@___asan_gen_.3582 = private unnamed_addr constant [21 x i8] c".compoundliteral.802\00", align 1
@___asan_gen_.3583 = private unnamed_addr constant [21 x i8] c".compoundliteral.803\00", align 1
@___asan_gen_.3584 = private unnamed_addr constant [21 x i8] c".compoundliteral.804\00", align 1
@___asan_gen_.3585 = private unnamed_addr constant [21 x i8] c".compoundliteral.805\00", align 1
@___asan_gen_.3586 = private unnamed_addr constant [21 x i8] c".compoundliteral.806\00", align 1
@___asan_gen_.3587 = private unnamed_addr constant [21 x i8] c".compoundliteral.807\00", align 1
@___asan_gen_.3588 = private unnamed_addr constant [21 x i8] c".compoundliteral.808\00", align 1
@___asan_gen_.3591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9280, i32 2 }
@___asan_gen_.3594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 9284, i32 2 }
@___asan_gen_.3606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 701, i32 3 }
@___asan_gen_.3609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 726, i32 2 }
@___asan_gen_.3612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 728, i32 2 }
@___asan_gen_.3615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 730, i32 2 }
@___asan_gen_.3618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 731, i32 2 }
@___asan_gen_.3621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 732, i32 2 }
@___asan_gen_.3624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 733, i32 2 }
@___asan_gen_.3627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 734, i32 2 }
@___asan_gen_.3630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 735, i32 2 }
@___asan_gen_.3633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 736, i32 2 }
@___asan_gen_.3634 = private unnamed_addr constant [16 x i8] c"beep_allow_list\00", align 1
@___asan_gen_.3636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1129, i32 35 }
@___asan_gen_.3639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1133, i32 2 }
@___asan_gen_.3642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1137, i32 2 }
@___asan_gen_.3645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1138, i32 2 }
@___asan_gen_.3648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1140, i32 2 }
@___asan_gen_.3651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1141, i32 2 }
@___asan_gen_.3652 = private unnamed_addr constant [14 x i8] c"alc269_ignore\00", align 1
@___asan_gen_.3654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3147, i32 25 }
@___asan_gen_.3655 = private unnamed_addr constant [13 x i8] c"alc269_ssids\00", align 1
@___asan_gen_.3657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3148, i32 25 }
@___asan_gen_.3658 = private unnamed_addr constant [15 x i8] c"alc269va_ssids\00", align 1
@___asan_gen_.3660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3149, i32 25 }
@___asan_gen_.3666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 872, i32 4 }
@___asan_gen_.3672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 796, i32 2 }
@___asan_gen_.3675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 813, i32 2 }
@___asan_gen_.3676 = private unnamed_addr constant [15 x i8] c"alc_beep_mixer\00", align 1
@___asan_gen_.3678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1106, i32 38 }
@___asan_gen_.3681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1107, i32 2 }
@___asan_gen_.3684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1108, i32 2 }
@___asan_gen_.3685 = private unnamed_addr constant [20 x i8] c"alc260_fixup_models\00", align 1
@___asan_gen_.3687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1874, i32 37 }
@___asan_gen_.3688 = private unnamed_addr constant [17 x i8] c"alc260_fixup_tbl\00", align 1
@___asan_gen_.3690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1858, i32 35 }
@___asan_gen_.3691 = private unnamed_addr constant [14 x i8] c"alc260_fixups\00", align 1
@___asan_gen_.3693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1775, i32 31 }
@___asan_gen_.3696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1875, i32 37 }
@___asan_gen_.3699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1876, i32 36 }
@___asan_gen_.3702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1877, i32 41 }
@___asan_gen_.3705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1878, i32 46 }
@___asan_gen_.3708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1859, i32 2 }
@___asan_gen_.3711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1860, i32 2 }
@___asan_gen_.3714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1862, i32 2 }
@___asan_gen_.3717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1863, i32 2 }
@___asan_gen_.3720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1865, i32 2 }
@___asan_gen_.3723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1866, i32 2 }
@___asan_gen_.3726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1867, i32 2 }
@___asan_gen_.3729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1868, i32 2 }
@___asan_gen_.3732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1869, i32 2 }
@___asan_gen_.3735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1870, i32 2 }
@___asan_gen_.3736 = private unnamed_addr constant [21 x i8] c".compoundliteral.849\00", align 1
@___asan_gen_.3737 = private unnamed_addr constant [21 x i8] c".compoundliteral.850\00", align 1
@___asan_gen_.3738 = private unnamed_addr constant [21 x i8] c".compoundliteral.851\00", align 1
@___asan_gen_.3739 = private unnamed_addr constant [21 x i8] c".compoundliteral.852\00", align 1
@___asan_gen_.3740 = private unnamed_addr constant [21 x i8] c".compoundliteral.853\00", align 1
@___asan_gen_.3743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1733, i32 33 }
@___asan_gen_.3744 = private unnamed_addr constant [14 x i8] c"alc260_ignore\00", align 1
@___asan_gen_.3746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1682, i32 25 }
@___asan_gen_.3747 = private unnamed_addr constant [13 x i8] c"alc260_ssids\00", align 1
@___asan_gen_.3749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1683, i32 25 }
@___asan_gen_.3750 = private unnamed_addr constant [20 x i8] c"alc262_fixup_models\00", align 1
@___asan_gen_.3752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2883, i32 37 }
@___asan_gen_.3753 = private unnamed_addr constant [17 x i8] c"alc262_fixup_tbl\00", align 1
@___asan_gen_.3755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2869, i32 35 }
@___asan_gen_.3756 = private unnamed_addr constant [14 x i8] c"alc262_fixups\00", align 1
@___asan_gen_.3758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2801, i32 31 }
@___asan_gen_.3761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2885, i32 40 }
@___asan_gen_.3764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2886, i32 41 }
@___asan_gen_.3767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2887, i32 39 }
@___asan_gen_.3770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2888, i32 36 }
@___asan_gen_.3773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2889, i32 43 }
@___asan_gen_.3776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2890, i32 36 }
@___asan_gen_.3779 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2891, i32 40 }
@___asan_gen_.3782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2892, i32 47 }
@___asan_gen_.3785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2870, i32 2 }
@___asan_gen_.3788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2871, i32 2 }
@___asan_gen_.3791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2872, i32 2 }
@___asan_gen_.3794 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2873, i32 2 }
@___asan_gen_.3797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2874, i32 2 }
@___asan_gen_.3800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2875, i32 2 }
@___asan_gen_.3803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2876, i32 2 }
@___asan_gen_.3806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2877, i32 2 }
@___asan_gen_.3809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2878, i32 2 }
@___asan_gen_.3812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2879, i32 2 }
@___asan_gen_.3813 = private unnamed_addr constant [21 x i8] c".compoundliteral.872\00", align 1
@___asan_gen_.3814 = private unnamed_addr constant [21 x i8] c".compoundliteral.873\00", align 1
@___asan_gen_.3815 = private unnamed_addr constant [21 x i8] c".compoundliteral.874\00", align 1
@___asan_gen_.3816 = private unnamed_addr constant [21 x i8] c".compoundliteral.875\00", align 1
@___asan_gen_.3817 = private unnamed_addr constant [21 x i8] c".compoundliteral.876\00", align 1
@___asan_gen_.3818 = private unnamed_addr constant [21 x i8] c".compoundliteral.877\00", align 1
@___asan_gen_.3819 = private unnamed_addr constant [21 x i8] c".compoundliteral.878\00", align 1
@___asan_gen_.3820 = private unnamed_addr constant [14 x i8] c"alc262_ignore\00", align 1
@___asan_gen_.3822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2781, i32 25 }
@___asan_gen_.3823 = private unnamed_addr constant [13 x i8] c"alc262_ssids\00", align 1
@___asan_gen_.3825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2782, i32 25 }
@___asan_gen_.3826 = private unnamed_addr constant [20 x i8] c"alc268_fixup_models\00", align 1
@___asan_gen_.3828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3023, i32 37 }
@___asan_gen_.3829 = private unnamed_addr constant [17 x i8] c"alc268_fixup_tbl\00", align 1
@___asan_gen_.3831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3030, i32 35 }
@___asan_gen_.3832 = private unnamed_addr constant [14 x i8] c"alc268_fixups\00", align 1
@___asan_gen_.3834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3002, i32 31 }
@___asan_gen_.3835 = private unnamed_addr constant [18 x i8] c"alc268_beep_mixer\00", align 1
@___asan_gen_.3837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2975, i32 38 }
@___asan_gen_.3838 = private unnamed_addr constant [23 x i8] c"alc268_beep_init_verbs\00", align 1
@___asan_gen_.3840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2989, i32 30 }
@___asan_gen_.3843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3025, i32 39 }
@___asan_gen_.3846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3026, i32 37 }
@___asan_gen_.3849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3031, i32 2 }
@___asan_gen_.3852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3032, i32 2 }
@___asan_gen_.3855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3036, i32 2 }
@___asan_gen_.3856 = private unnamed_addr constant [21 x i8] c".compoundliteral.884\00", align 1
@___asan_gen_.3857 = private unnamed_addr constant [21 x i8] c".compoundliteral.885\00", align 1
@___asan_gen_.3858 = private unnamed_addr constant [13 x i8] c"alc268_ssids\00", align 1
@___asan_gen_.3860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 3045, i32 25 }
@___asan_gen_.3861 = private unnamed_addr constant [20 x i8] c"alc662_fixup_models\00", align 1
@___asan_gen_.3863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11160, i32 37 }
@___asan_gen_.3864 = private unnamed_addr constant [17 x i8] c"alc662_fixup_tbl\00", align 1
@___asan_gen_.3866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11046, i32 35 }
@___asan_gen_.3867 = private unnamed_addr constant [14 x i8] c"alc662_fixups\00", align 1
@___asan_gen_.3869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10627, i32 31 }
@___asan_gen_.3870 = private unnamed_addr constant [21 x i8] c"alc662_pin_fixup_tbl\00", align 1
@___asan_gen_.3872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11196, i32 39 }
@___asan_gen_.3875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11296, i32 9 }
@___asan_gen_.3876 = private unnamed_addr constant [13 x i8] c"alc668_coefs\00", align 1
@___asan_gen_.3878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10543, i32 29 }
@___asan_gen_.3881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11161, i32 38 }
@___asan_gen_.3884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11162, i32 39 }
@___asan_gen_.3887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11163, i32 37 }
@___asan_gen_.3890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11164, i32 41 }
@___asan_gen_.3893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11165, i32 42 }
@___asan_gen_.3896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11166, i32 42 }
@___asan_gen_.3899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11167, i32 42 }
@___asan_gen_.3902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11168, i32 42 }
@___asan_gen_.3905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11169, i32 42 }
@___asan_gen_.3908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11170, i32 42 }
@___asan_gen_.3911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11171, i32 42 }
@___asan_gen_.3914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11172, i32 42 }
@___asan_gen_.3917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11173, i32 41 }
@___asan_gen_.3920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11175, i32 52 }
@___asan_gen_.3923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11177, i32 44 }
@___asan_gen_.3926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11178, i32 44 }
@___asan_gen_.3929 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11179, i32 39 }
@___asan_gen_.3932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11180, i32 39 }
@___asan_gen_.3935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11181, i32 41 }
@___asan_gen_.3938 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11182, i32 42 }
@___asan_gen_.3941 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11183, i32 41 }
@___asan_gen_.3944 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11184, i32 41 }
@___asan_gen_.3947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11185, i32 41 }
@___asan_gen_.3950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11186, i32 44 }
@___asan_gen_.3953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11187, i32 52 }
@___asan_gen_.3956 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11188, i32 44 }
@___asan_gen_.3959 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11189, i32 43 }
@___asan_gen_.3962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11190, i32 48 }
@___asan_gen_.3965 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11192, i32 49 }
@___asan_gen_.3968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11047, i32 2 }
@___asan_gen_.3971 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11048, i32 2 }
@___asan_gen_.3974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11049, i32 2 }
@___asan_gen_.3977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11050, i32 2 }
@___asan_gen_.3980 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11051, i32 2 }
@___asan_gen_.3983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11052, i32 2 }
@___asan_gen_.3986 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11053, i32 2 }
@___asan_gen_.3989 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11054, i32 2 }
@___asan_gen_.3992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11055, i32 2 }
@___asan_gen_.3995 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11056, i32 2 }
@___asan_gen_.3998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11057, i32 2 }
@___asan_gen_.4001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11060, i32 2 }
@___asan_gen_.4004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11062, i32 2 }
@___asan_gen_.4007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11068, i32 2 }
@___asan_gen_.4010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11070, i32 2 }
@___asan_gen_.4013 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11071, i32 2 }
@___asan_gen_.4016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11072, i32 2 }
@___asan_gen_.4019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11073, i32 2 }
@___asan_gen_.4022 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11074, i32 2 }
@___asan_gen_.4025 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11075, i32 2 }
@___asan_gen_.4028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11076, i32 2 }
@___asan_gen_.4031 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11077, i32 2 }
@___asan_gen_.4034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11078, i32 2 }
@___asan_gen_.4037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11079, i32 2 }
@___asan_gen_.4040 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11080, i32 2 }
@___asan_gen_.4043 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11081, i32 2 }
@___asan_gen_.4046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11082, i32 2 }
@___asan_gen_.4049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11083, i32 2 }
@___asan_gen_.4052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11084, i32 2 }
@___asan_gen_.4055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11085, i32 2 }
@___asan_gen_.4058 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11086, i32 2 }
@___asan_gen_.4061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11088, i32 2 }
@___asan_gen_.4064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11089, i32 2 }
@___asan_gen_.4067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11090, i32 2 }
@___asan_gen_.4070 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11091, i32 2 }
@___asan_gen_.4073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11092, i32 2 }
@___asan_gen_.4076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11093, i32 2 }
@___asan_gen_.4079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11094, i32 2 }
@___asan_gen_.4082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11095, i32 2 }
@___asan_gen_.4085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11096, i32 2 }
@___asan_gen_.4088 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11097, i32 2 }
@___asan_gen_.4091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11098, i32 2 }
@___asan_gen_.4092 = private unnamed_addr constant [21 x i8] c".compoundliteral.958\00", align 1
@___asan_gen_.4093 = private unnamed_addr constant [21 x i8] c".compoundliteral.959\00", align 1
@___asan_gen_.4094 = private unnamed_addr constant [21 x i8] c".compoundliteral.960\00", align 1
@___asan_gen_.4095 = private unnamed_addr constant [21 x i8] c".compoundliteral.961\00", align 1
@___asan_gen_.4096 = private unnamed_addr constant [21 x i8] c".compoundliteral.962\00", align 1
@___asan_gen_.4097 = private unnamed_addr constant [21 x i8] c".compoundliteral.963\00", align 1
@___asan_gen_.4098 = private unnamed_addr constant [21 x i8] c".compoundliteral.964\00", align 1
@___asan_gen_.4099 = private unnamed_addr constant [21 x i8] c".compoundliteral.965\00", align 1
@___asan_gen_.4100 = private unnamed_addr constant [21 x i8] c".compoundliteral.966\00", align 1
@___asan_gen_.4101 = private unnamed_addr constant [21 x i8] c".compoundliteral.967\00", align 1
@___asan_gen_.4102 = private unnamed_addr constant [21 x i8] c".compoundliteral.968\00", align 1
@___asan_gen_.4103 = private unnamed_addr constant [21 x i8] c".compoundliteral.969\00", align 1
@___asan_gen_.4104 = private unnamed_addr constant [21 x i8] c".compoundliteral.970\00", align 1
@___asan_gen_.4105 = private unnamed_addr constant [21 x i8] c".compoundliteral.971\00", align 1
@___asan_gen_.4106 = private unnamed_addr constant [21 x i8] c".compoundliteral.972\00", align 1
@___asan_gen_.4107 = private unnamed_addr constant [21 x i8] c".compoundliteral.973\00", align 1
@___asan_gen_.4108 = private unnamed_addr constant [21 x i8] c".compoundliteral.974\00", align 1
@___asan_gen_.4109 = private unnamed_addr constant [21 x i8] c".compoundliteral.975\00", align 1
@___asan_gen_.4110 = private unnamed_addr constant [21 x i8] c".compoundliteral.976\00", align 1
@___asan_gen_.4111 = private unnamed_addr constant [21 x i8] c".compoundliteral.977\00", align 1
@___asan_gen_.4112 = private unnamed_addr constant [21 x i8] c".compoundliteral.978\00", align 1
@___asan_gen_.4113 = private unnamed_addr constant [21 x i8] c".compoundliteral.979\00", align 1
@___asan_gen_.4114 = private unnamed_addr constant [21 x i8] c".compoundliteral.980\00", align 1
@___asan_gen_.4115 = private unnamed_addr constant [21 x i8] c".compoundliteral.981\00", align 1
@___asan_gen_.4116 = private unnamed_addr constant [21 x i8] c".compoundliteral.982\00", align 1
@___asan_gen_.4117 = private unnamed_addr constant [21 x i8] c".compoundliteral.983\00", align 1
@___asan_gen_.4118 = private unnamed_addr constant [21 x i8] c".compoundliteral.984\00", align 1
@___asan_gen_.4119 = private unnamed_addr constant [21 x i8] c".compoundliteral.985\00", align 1
@___asan_gen_.4120 = private unnamed_addr constant [21 x i8] c".compoundliteral.986\00", align 1
@___asan_gen_.4121 = private unnamed_addr constant [21 x i8] c".compoundliteral.987\00", align 1
@___asan_gen_.4122 = private unnamed_addr constant [21 x i8] c".compoundliteral.988\00", align 1
@___asan_gen_.4123 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.4134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10389, i32 3 }
@___asan_gen_.4135 = private unnamed_addr constant [20 x i8] c"asus_pcm_2_1_chmaps\00", align 1
@___asan_gen_.4137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10392, i32 40 }
@___asan_gen_.4138 = private unnamed_addr constant [8 x i8] c"pincfgs\00", align 1
@___asan_gen_.4140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10504, i32 33 }
@___asan_gen_.4141 = private unnamed_addr constant [21 x i8] c".compoundliteral.993\00", align 1
@___asan_gen_.4142 = private unnamed_addr constant [21 x i8] c".compoundliteral.994\00", align 1
@___asan_gen_.4143 = private unnamed_addr constant [21 x i8] c".compoundliteral.995\00", align 1
@___asan_gen_.4144 = private unnamed_addr constant [21 x i8] c".compoundliteral.996\00", align 1
@___asan_gen_.4145 = private unnamed_addr constant [21 x i8] c".compoundliteral.997\00", align 1
@___asan_gen_.4146 = private unnamed_addr constant [21 x i8] c".compoundliteral.998\00", align 1
@___asan_gen_.4147 = private unnamed_addr constant [21 x i8] c".compoundliteral.999\00", align 1
@___asan_gen_.4148 = private unnamed_addr constant [22 x i8] c".compoundliteral.1000\00", align 1
@___asan_gen_.4149 = private unnamed_addr constant [22 x i8] c".compoundliteral.1001\00", align 1
@___asan_gen_.4152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 11235, i32 2 }
@___asan_gen_.4153 = private unnamed_addr constant [22 x i8] c".compoundliteral.1003\00", align 1
@___asan_gen_.4154 = private unnamed_addr constant [22 x i8] c".compoundliteral.1004\00", align 1
@___asan_gen_.4155 = private unnamed_addr constant [14 x i8] c"alc662_ignore\00", align 1
@___asan_gen_.4157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10365, i32 25 }
@___asan_gen_.4158 = private unnamed_addr constant [13 x i8] c"alc663_ssids\00", align 1
@___asan_gen_.4160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10366, i32 25 }
@___asan_gen_.4161 = private unnamed_addr constant [13 x i8] c"alc662_ssids\00", align 1
@___asan_gen_.4163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10367, i32 25 }
@___asan_gen_.4164 = private unnamed_addr constant [17 x i8] c"alc861_fixup_tbl\00", align 1
@___asan_gen_.4166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10192, i32 35 }
@___asan_gen_.4167 = private unnamed_addr constant [14 x i8] c"alc861_fixups\00", align 1
@___asan_gen_.4169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10157, i32 31 }
@___asan_gen_.4172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10193, i32 2 }
@___asan_gen_.4175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10194, i32 2 }
@___asan_gen_.4178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10195, i32 2 }
@___asan_gen_.4181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10196, i32 2 }
@___asan_gen_.4184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10197, i32 2 }
@___asan_gen_.4187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10198, i32 2 }
@___asan_gen_.4190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10199, i32 2 }
@___asan_gen_.4191 = private unnamed_addr constant [22 x i8] c".compoundliteral.1012\00", align 1
@___asan_gen_.4192 = private unnamed_addr constant [22 x i8] c".compoundliteral.1013\00", align 1
@___asan_gen_.4193 = private unnamed_addr constant [14 x i8] c"alc861_ignore\00", align 1
@___asan_gen_.4195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10118, i32 25 }
@___asan_gen_.4196 = private unnamed_addr constant [13 x i8] c"alc861_ssids\00", align 1
@___asan_gen_.4198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10119, i32 25 }
@___asan_gen_.4199 = private unnamed_addr constant [19 x i8] c"alc861vd_fixup_tbl\00", align 1
@___asan_gen_.4201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10298, i32 35 }
@___asan_gen_.4202 = private unnamed_addr constant [16 x i8] c"alc861vd_fixups\00", align 1
@___asan_gen_.4204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10287, i32 31 }
@___asan_gen_.4207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10299, i32 2 }
@___asan_gen_.4210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10300, i32 2 }
@___asan_gen_.4213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10301, i32 2 }
@___asan_gen_.4214 = private unnamed_addr constant [16 x i8] c"alc861vd_ignore\00", align 1
@___asan_gen_.4216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10256, i32 25 }
@___asan_gen_.4217 = private unnamed_addr constant [15 x i8] c"alc861vd_ssids\00", align 1
@___asan_gen_.4219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 10257, i32 25 }
@___asan_gen_.4220 = private unnamed_addr constant [20 x i8] c"alc882_fixup_models\00", align 1
@___asan_gen_.4222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2648, i32 37 }
@___asan_gen_.4223 = private unnamed_addr constant [17 x i8] c"alc882_fixup_tbl\00", align 1
@___asan_gen_.4225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2533, i32 35 }
@___asan_gen_.4226 = private unnamed_addr constant [14 x i8] c"alc882_fixups\00", align 1
@___asan_gen_.4228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2247, i32 31 }
@___asan_gen_.4229 = private unnamed_addr constant [21 x i8] c"alc882_pin_fixup_tbl\00", align 1
@___asan_gen_.4231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2684, i32 39 }
@___asan_gen_.4234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2649, i32 45 }
@___asan_gen_.4237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2650, i32 43 }
@___asan_gen_.4240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2651, i32 48 }
@___asan_gen_.4243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2652, i32 41 }
@___asan_gen_.4246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2653, i32 34 }
@___asan_gen_.4249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2654, i32 52 }
@___asan_gen_.4252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2655, i32 39 }
@___asan_gen_.4255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2656, i32 39 }
@___asan_gen_.4258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2657, i32 36 }
@___asan_gen_.4261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2658, i32 36 }
@___asan_gen_.4264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2660, i32 37 }
@___asan_gen_.4267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2661, i32 37 }
@___asan_gen_.4270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2662, i32 36 }
@___asan_gen_.4273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2663, i32 41 }
@___asan_gen_.4276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2664, i32 49 }
@___asan_gen_.4279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2665, i32 49 }
@___asan_gen_.4282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2666, i32 41 }
@___asan_gen_.4285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2667, i32 43 }
@___asan_gen_.4288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2668, i32 41 }
@___asan_gen_.4291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2669, i32 40 }
@___asan_gen_.4294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2670, i32 43 }
@___asan_gen_.4297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2671, i32 42 }
@___asan_gen_.4300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2672, i32 42 }
@___asan_gen_.4303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2673, i32 41 }
@___asan_gen_.4306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2674, i32 41 }
@___asan_gen_.4309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2676, i32 45 }
@___asan_gen_.4312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2677, i32 41 }
@___asan_gen_.4315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2679, i32 40 }
@___asan_gen_.4318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2680, i32 43 }
@___asan_gen_.4321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2534, i32 2 }
@___asan_gen_.4324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2537, i32 2 }
@___asan_gen_.4327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2539, i32 2 }
@___asan_gen_.4330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2540, i32 2 }
@___asan_gen_.4333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2541, i32 2 }
@___asan_gen_.4336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2543, i32 2 }
@___asan_gen_.4339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2545, i32 2 }
@___asan_gen_.4342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2547, i32 2 }
@___asan_gen_.4345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2549, i32 2 }
@___asan_gen_.4348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2551, i32 2 }
@___asan_gen_.4351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2552, i32 2 }
@___asan_gen_.4354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2554, i32 2 }
@___asan_gen_.4357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2556, i32 2 }
@___asan_gen_.4360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2558, i32 2 }
@___asan_gen_.4363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2559, i32 2 }
@___asan_gen_.4366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2560, i32 2 }
@___asan_gen_.4369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2561, i32 2 }
@___asan_gen_.4372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2562, i32 2 }
@___asan_gen_.4375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2563, i32 2 }
@___asan_gen_.4378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2564, i32 2 }
@___asan_gen_.4381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2565, i32 2 }
@___asan_gen_.4384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2566, i32 2 }
@___asan_gen_.4387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2567, i32 2 }
@___asan_gen_.4390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2568, i32 2 }
@___asan_gen_.4393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2569, i32 2 }
@___asan_gen_.4396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2570, i32 2 }
@___asan_gen_.4399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2571, i32 2 }
@___asan_gen_.4402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2572, i32 2 }
@___asan_gen_.4405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2575, i32 2 }
@___asan_gen_.4408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2576, i32 2 }
@___asan_gen_.4411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2577, i32 2 }
@___asan_gen_.4414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2578, i32 2 }
@___asan_gen_.4417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2579, i32 2 }
@___asan_gen_.4420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2580, i32 2 }
@___asan_gen_.4423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2581, i32 2 }
@___asan_gen_.4426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2582, i32 2 }
@___asan_gen_.4429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2583, i32 2 }
@___asan_gen_.4432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2584, i32 2 }
@___asan_gen_.4435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2585, i32 2 }
@___asan_gen_.4438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2586, i32 2 }
@___asan_gen_.4441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2588, i32 2 }
@___asan_gen_.4444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2589, i32 2 }
@___asan_gen_.4447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2590, i32 2 }
@___asan_gen_.4450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2591, i32 2 }
@___asan_gen_.4453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2592, i32 2 }
@___asan_gen_.4456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2593, i32 2 }
@___asan_gen_.4459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2594, i32 2 }
@___asan_gen_.4462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2595, i32 2 }
@___asan_gen_.4465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2596, i32 2 }
@___asan_gen_.4468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2598, i32 2 }
@___asan_gen_.4471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2599, i32 2 }
@___asan_gen_.4474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2600, i32 2 }
@___asan_gen_.4477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2601, i32 2 }
@___asan_gen_.4480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2602, i32 2 }
@___asan_gen_.4483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2603, i32 2 }
@___asan_gen_.4486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2604, i32 2 }
@___asan_gen_.4489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2605, i32 2 }
@___asan_gen_.4492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2606, i32 2 }
@___asan_gen_.4495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2607, i32 2 }
@___asan_gen_.4498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2608, i32 2 }
@___asan_gen_.4501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2609, i32 2 }
@___asan_gen_.4504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2610, i32 2 }
@___asan_gen_.4507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2611, i32 2 }
@___asan_gen_.4510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2612, i32 2 }
@___asan_gen_.4513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2613, i32 2 }
@___asan_gen_.4516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2614, i32 2 }
@___asan_gen_.4519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2615, i32 2 }
@___asan_gen_.4522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2616, i32 2 }
@___asan_gen_.4525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2617, i32 2 }
@___asan_gen_.4528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2618, i32 2 }
@___asan_gen_.4531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2619, i32 2 }
@___asan_gen_.4534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2620, i32 2 }
@___asan_gen_.4537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2621, i32 2 }
@___asan_gen_.4540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2622, i32 2 }
@___asan_gen_.4543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2623, i32 2 }
@___asan_gen_.4546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2624, i32 2 }
@___asan_gen_.4549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2625, i32 2 }
@___asan_gen_.4552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2626, i32 2 }
@___asan_gen_.4555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2627, i32 2 }
@___asan_gen_.4558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2628, i32 2 }
@___asan_gen_.4561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2629, i32 2 }
@___asan_gen_.4564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2630, i32 2 }
@___asan_gen_.4567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2631, i32 2 }
@___asan_gen_.4570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2632, i32 2 }
@___asan_gen_.4573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2633, i32 2 }
@___asan_gen_.4576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2634, i32 2 }
@___asan_gen_.4579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2635, i32 2 }
@___asan_gen_.4582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2636, i32 2 }
@___asan_gen_.4585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2637, i32 2 }
@___asan_gen_.4588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2638, i32 2 }
@___asan_gen_.4591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2639, i32 2 }
@___asan_gen_.4594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2640, i32 2 }
@___asan_gen_.4597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2641, i32 2 }
@___asan_gen_.4600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2642, i32 2 }
@___asan_gen_.4603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2643, i32 2 }
@___asan_gen_.4606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2644, i32 2 }
@___asan_gen_.4607 = private unnamed_addr constant [22 x i8] c".compoundliteral.1142\00", align 1
@___asan_gen_.4608 = private unnamed_addr constant [22 x i8] c".compoundliteral.1143\00", align 1
@___asan_gen_.4609 = private unnamed_addr constant [22 x i8] c".compoundliteral.1144\00", align 1
@___asan_gen_.4610 = private unnamed_addr constant [22 x i8] c".compoundliteral.1145\00", align 1
@___asan_gen_.4611 = private unnamed_addr constant [22 x i8] c".compoundliteral.1146\00", align 1
@___asan_gen_.4612 = private unnamed_addr constant [22 x i8] c".compoundliteral.1147\00", align 1
@___asan_gen_.4613 = private unnamed_addr constant [22 x i8] c".compoundliteral.1148\00", align 1
@___asan_gen_.4614 = private unnamed_addr constant [22 x i8] c".compoundliteral.1149\00", align 1
@___asan_gen_.4615 = private unnamed_addr constant [22 x i8] c".compoundliteral.1150\00", align 1
@___asan_gen_.4616 = private unnamed_addr constant [22 x i8] c".compoundliteral.1151\00", align 1
@___asan_gen_.4617 = private unnamed_addr constant [22 x i8] c".compoundliteral.1152\00", align 1
@___asan_gen_.4618 = private unnamed_addr constant [22 x i8] c".compoundliteral.1153\00", align 1
@___asan_gen_.4619 = private unnamed_addr constant [22 x i8] c".compoundliteral.1154\00", align 1
@___asan_gen_.4620 = private unnamed_addr constant [22 x i8] c".compoundliteral.1155\00", align 1
@___asan_gen_.4621 = private unnamed_addr constant [22 x i8] c".compoundliteral.1156\00", align 1
@___asan_gen_.4622 = private unnamed_addr constant [22 x i8] c".compoundliteral.1157\00", align 1
@___asan_gen_.4623 = private unnamed_addr constant [22 x i8] c".compoundliteral.1158\00", align 1
@___asan_gen_.4624 = private unnamed_addr constant [22 x i8] c".compoundliteral.1159\00", align 1
@___asan_gen_.4627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2015, i32 26 }
@___asan_gen_.4628 = private unnamed_addr constant [6 x i8] c"conn2\00", align 1
@___asan_gen_.4630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2016, i32 26 }
@___asan_gen_.4631 = private unnamed_addr constant [5 x i8] c"conn\00", align 1
@___asan_gen_.4633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2023, i32 26 }
@___asan_gen_.4636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2154, i32 33 }
@___asan_gen_.4639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2174, i32 25 }
@___asan_gen_.4640 = private unnamed_addr constant [14 x i8] c"gb_x570_coefs\00", align 1
@___asan_gen_.4642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2175, i32 30 }
@___asan_gen_.4643 = private unnamed_addr constant [6 x i8] c"conn1\00", align 1
@___asan_gen_.4645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2198, i32 25 }
@___asan_gen_.4646 = private unnamed_addr constant [22 x i8] c".compoundliteral.1161\00", align 1
@___asan_gen_.4647 = private unnamed_addr constant [22 x i8] c".compoundliteral.1162\00", align 1
@___asan_gen_.4650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2694, i32 2 }
@___asan_gen_.4651 = private unnamed_addr constant [14 x i8] c"alc882_ignore\00", align 1
@___asan_gen_.4653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2712, i32 25 }
@___asan_gen_.4654 = private unnamed_addr constant [13 x i8] c"alc882_ssids\00", align 1
@___asan_gen_.4656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 2713, i32 25 }
@___asan_gen_.4657 = private unnamed_addr constant [20 x i8] c"alc880_fixup_models\00", align 1
@___asan_gen_.4659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1620, i32 37 }
@___asan_gen_.4660 = private unnamed_addr constant [17 x i8] c"alc880_fixup_tbl\00", align 1
@___asan_gen_.4662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1549, i32 35 }
@___asan_gen_.4663 = private unnamed_addr constant [14 x i8] c"alc880_fixups\00", align 1
@___asan_gen_.4665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1260, i32 31 }
@___asan_gen_.4668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1621, i32 35 }
@___asan_gen_.4671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1622, i32 39 }
@___asan_gen_.4674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1623, i32 35 }
@___asan_gen_.4677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1624, i32 39 }
@___asan_gen_.4680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1625, i32 35 }
@___asan_gen_.4683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1626, i32 39 }
@___asan_gen_.4686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1627, i32 44 }
@___asan_gen_.4689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1550, i32 2 }
@___asan_gen_.4692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1551, i32 2 }
@___asan_gen_.4695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1552, i32 2 }
@___asan_gen_.4698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1554, i32 2 }
@___asan_gen_.4701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1555, i32 2 }
@___asan_gen_.4704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1556, i32 2 }
@___asan_gen_.4707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1557, i32 2 }
@___asan_gen_.4710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1560, i32 2 }
@___asan_gen_.4713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1561, i32 2 }
@___asan_gen_.4716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1562, i32 2 }
@___asan_gen_.4719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1563, i32 2 }
@___asan_gen_.4722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1564, i32 2 }
@___asan_gen_.4725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1565, i32 2 }
@___asan_gen_.4728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1566, i32 2 }
@___asan_gen_.4731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1567, i32 2 }
@___asan_gen_.4734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1568, i32 2 }
@___asan_gen_.4737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1569, i32 2 }
@___asan_gen_.4740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1570, i32 2 }
@___asan_gen_.4743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1571, i32 2 }
@___asan_gen_.4746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1572, i32 2 }
@___asan_gen_.4749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1581, i32 2 }
@___asan_gen_.4752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1582, i32 2 }
@___asan_gen_.4755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1589, i32 2 }
@___asan_gen_.4758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1591, i32 2 }
@___asan_gen_.4761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1594, i32 2 }
@___asan_gen_.4764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1595, i32 2 }
@___asan_gen_.4767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1597, i32 2 }
@___asan_gen_.4770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1598, i32 2 }
@___asan_gen_.4773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1599, i32 2 }
@___asan_gen_.4776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1600, i32 2 }
@___asan_gen_.4779 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1603, i32 2 }
@___asan_gen_.4782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1615, i32 2 }
@___asan_gen_.4783 = private unnamed_addr constant [22 x i8] c".compoundliteral.1203\00", align 1
@___asan_gen_.4784 = private unnamed_addr constant [22 x i8] c".compoundliteral.1204\00", align 1
@___asan_gen_.4785 = private unnamed_addr constant [22 x i8] c".compoundliteral.1205\00", align 1
@___asan_gen_.4786 = private unnamed_addr constant [22 x i8] c".compoundliteral.1206\00", align 1
@___asan_gen_.4787 = private unnamed_addr constant [22 x i8] c".compoundliteral.1207\00", align 1
@___asan_gen_.4788 = private unnamed_addr constant [22 x i8] c".compoundliteral.1208\00", align 1
@___asan_gen_.4789 = private unnamed_addr constant [22 x i8] c".compoundliteral.1209\00", align 1
@___asan_gen_.4790 = private unnamed_addr constant [22 x i8] c".compoundliteral.1210\00", align 1
@___asan_gen_.4791 = private unnamed_addr constant [22 x i8] c".compoundliteral.1211\00", align 1
@___asan_gen_.4792 = private unnamed_addr constant [22 x i8] c".compoundliteral.1212\00", align 1
@___asan_gen_.4793 = private unnamed_addr constant [22 x i8] c".compoundliteral.1213\00", align 1
@___asan_gen_.4794 = private unnamed_addr constant [22 x i8] c".compoundliteral.1214\00", align 1
@___asan_gen_.4795 = private unnamed_addr constant [22 x i8] c".compoundliteral.1215\00", align 1
@___asan_gen_.4796 = private unnamed_addr constant [22 x i8] c".compoundliteral.1216\00", align 1
@___asan_gen_.4797 = private unnamed_addr constant [22 x i8] c".compoundliteral.1217\00", align 1
@___asan_gen_.4798 = private unnamed_addr constant [22 x i8] c".compoundliteral.1218\00", align 1
@___asan_gen_.4799 = private unnamed_addr constant [22 x i8] c".compoundliteral.1219\00", align 1
@___asan_gen_.4800 = private unnamed_addr constant [22 x i8] c".compoundliteral.1220\00", align 1
@___asan_gen_.4801 = private unnamed_addr constant [22 x i8] c".compoundliteral.1221\00", align 1
@___asan_gen_.4802 = private unnamed_addr constant [22 x i8] c".compoundliteral.1222\00", align 1
@___asan_gen_.4803 = private unnamed_addr constant [22 x i8] c".compoundliteral.1223\00", align 1
@___asan_gen_.4804 = private unnamed_addr constant [22 x i8] c".compoundliteral.1224\00", align 1
@___asan_gen_.4805 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.4807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 382, i32 39 }
@___asan_gen_.4808 = private unnamed_addr constant [14 x i8] c"alc880_ignore\00", align 1
@___asan_gen_.4810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1215, i32 25 }
@___asan_gen_.4811 = private unnamed_addr constant [13 x i8] c"alc880_ssids\00", align 1
@___asan_gen_.4812 = private constant [33 x i8] c"../sound/pci/hda/patch_realtek.c\00", align 1
@___asan_gen_.4813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.4812, i32 1216, i32 25 }
@___asan_gen_.4814 = private unnamed_addr constant [38 x i8] c"switch.table.alc269_parse_auto_config\00", align 1
@llvm.compiler.used = appending global [1394 x ptr] [ptr @__UNIQUE_ID_description265, ptr @__UNIQUE_ID_file263, ptr @__UNIQUE_ID_license264, ptr @__exitcall_realtek_driver_exit, ptr @__initcall__kmod_snd_hda_codec_realtek__266_11457_realtek_driver_init6, ptr @alc272_fixup_mario._entry, ptr @alc272_fixup_mario._entry_ptr, ptr @alc287_fixup_legion_16achg6_speakers._entry, ptr @alc287_fixup_legion_16achg6_speakers._entry_ptr, ptr @alc_auto_parse_customize_define._entry, ptr @alc_auto_parse_customize_define._entry_ptr, ptr @alc_register_micmute_input_device._entry, ptr @alc_register_micmute_input_device._entry.680, ptr @alc_register_micmute_input_device._entry_ptr, ptr @alc_register_micmute_input_device._entry_ptr.682, ptr @cs35l41_generic_fixup._entry, ptr @cs35l41_generic_fixup._entry_ptr, ptr @realtek_driver_exit, ptr @realtek_driver, ptr @.str, ptr @snd_hda_id_realtek, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @alc269_fixup_models, ptr @alc269_fixup_tbl, ptr @alc269_fixups, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @alc269_pin_fixup_tbl, ptr @alc269_fallback_pin_fixup_tbl, ptr @alc269_fixup_vendor_tbl, ptr @alc_patch_ops, ptr @alc_alloc_spec.__key, ptr @.str.80, ptr @alc_auto_setup_eapd.pins, ptr @.str.81, ptr @rename_tbl, ptr @rename_pci_tbl, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @alc282_coefs, ptr @alc283_coefs, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @.str.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @.str.393, ptr @.str.394, ptr @.str.395, ptr @.str.396, ptr @.str.397, ptr @.str.398, ptr @.str.399, ptr @.str.400, ptr @.str.401, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @.str.416, ptr @.str.417, ptr @.str.418, ptr @.str.419, ptr @.str.420, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @.str.425, ptr @.str.426, ptr @.str.427, ptr @.str.428, ptr @.str.429, ptr @.str.430, ptr @.str.431, ptr @.str.432, ptr @.str.433, ptr @.str.434, ptr @.str.435, ptr @.str.436, ptr @.str.437, ptr @.str.438, ptr @.str.439, ptr @.str.440, ptr @.str.441, ptr @.str.442, ptr @.str.443, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @.str.447, ptr @.str.448, ptr @.str.449, ptr @.str.450, ptr @.str.451, ptr @.str.452, ptr @.str.453, ptr @.str.454, ptr @.str.455, ptr @.str.456, ptr @.str.457, ptr @.str.458, ptr @.str.459, ptr @.str.460, ptr @.str.461, ptr @.str.462, ptr @.str.463, ptr @.str.464, ptr @.str.465, ptr @.str.466, ptr @.str.467, ptr @.str.468, ptr @.str.469, ptr @.str.470, ptr @.str.471, ptr @.str.472, ptr @.str.473, ptr @.str.474, ptr @.str.475, ptr @.str.476, ptr @.str.477, ptr @.str.478, ptr @.str.479, ptr @.str.480, ptr @.str.481, ptr @.str.482, ptr @.str.483, ptr @.str.484, ptr @.str.485, ptr @.str.486, ptr @.str.487, ptr @.str.488, ptr @.str.489, ptr @.str.490, ptr @.str.491, ptr @.str.492, ptr @.str.493, ptr @.str.494, ptr @.str.495, ptr @.str.496, ptr @.str.497, ptr @.str.498, ptr @.str.499, ptr @.str.500, ptr @.str.501, ptr @.str.502, ptr @.str.503, ptr @.str.504, ptr @.str.505, ptr @.str.506, ptr @.str.507, ptr @.str.508, ptr @.str.509, ptr @.str.510, ptr @.str.511, ptr @.str.512, ptr @.str.513, ptr @.str.514, ptr @.str.515, ptr @.str.516, ptr @.str.517, ptr @.str.518, ptr @.str.519, ptr @.str.520, ptr @.str.521, ptr @.str.522, ptr @.str.523, ptr @.str.524, ptr @.str.525, ptr @.str.526, ptr @.str.527, ptr @.str.528, ptr @.str.529, ptr @.str.530, ptr @.str.531, ptr @.str.532, ptr @.str.533, ptr @.str.534, ptr @.str.535, ptr @.str.536, ptr @.str.537, ptr @.str.538, ptr @.str.539, ptr @.str.540, ptr @.str.541, ptr @.str.542, ptr @.str.543, ptr @.str.544, ptr @.str.545, ptr @.str.546, ptr @.str.547, ptr @.str.548, ptr @.str.549, ptr @.str.550, ptr @.str.551, ptr @.str.552, ptr @.compoundliteral, ptr @.compoundliteral.553, ptr @.compoundliteral.554, ptr @.compoundliteral.555, ptr @.compoundliteral.556, ptr @.compoundliteral.557, ptr @.compoundliteral.558, ptr @.compoundliteral.559, ptr @.compoundliteral.560, ptr @.compoundliteral.561, ptr @.compoundliteral.562, ptr @.compoundliteral.563, ptr @.compoundliteral.564, ptr @.compoundliteral.565, ptr @.compoundliteral.566, ptr @.compoundliteral.567, ptr @.compoundliteral.568, ptr @.compoundliteral.569, ptr @.compoundliteral.570, ptr @.compoundliteral.571, ptr @.compoundliteral.572, ptr @.compoundliteral.573, ptr @.compoundliteral.574, ptr @.compoundliteral.575, ptr @.compoundliteral.576, ptr @.compoundliteral.577, ptr @.compoundliteral.578, ptr @.compoundliteral.579, ptr @.compoundliteral.580, ptr @.compoundliteral.581, ptr @.compoundliteral.582, ptr @.compoundliteral.583, ptr @.compoundliteral.584, ptr @.compoundliteral.585, ptr @.compoundliteral.586, ptr @.compoundliteral.587, ptr @.compoundliteral.588, ptr @.compoundliteral.589, ptr @.compoundliteral.590, ptr @.compoundliteral.591, ptr @.compoundliteral.592, ptr @.compoundliteral.593, ptr @.compoundliteral.594, ptr @.compoundliteral.595, ptr @.compoundliteral.596, ptr @.compoundliteral.597, ptr @.compoundliteral.598, ptr @.compoundliteral.599, ptr @.compoundliteral.600, ptr @.compoundliteral.601, ptr @.compoundliteral.602, ptr @.compoundliteral.603, ptr @.compoundliteral.604, ptr @.compoundliteral.605, ptr @.compoundliteral.606, ptr @.compoundliteral.607, ptr @.compoundliteral.608, ptr @.compoundliteral.609, ptr @.compoundliteral.610, ptr @.compoundliteral.611, ptr @.compoundliteral.612, ptr @.compoundliteral.613, ptr @.compoundliteral.614, ptr @.compoundliteral.615, ptr @.compoundliteral.616, ptr @.compoundliteral.617, ptr @.compoundliteral.618, ptr @.compoundliteral.619, ptr @.compoundliteral.620, ptr @.compoundliteral.621, ptr @.compoundliteral.622, ptr @.compoundliteral.623, ptr @.compoundliteral.624, ptr @.compoundliteral.625, ptr @.compoundliteral.626, ptr @.compoundliteral.627, ptr @.compoundliteral.628, ptr @.compoundliteral.629, ptr @.compoundliteral.630, ptr @.compoundliteral.631, ptr @.compoundliteral.632, ptr @.compoundliteral.633, ptr @.compoundliteral.634, ptr @.compoundliteral.635, ptr @.compoundliteral.636, ptr @.compoundliteral.637, ptr @.compoundliteral.638, ptr @.compoundliteral.639, ptr @.compoundliteral.640, ptr @.compoundliteral.641, ptr @.compoundliteral.642, ptr @.compoundliteral.643, ptr @.compoundliteral.644, ptr @.compoundliteral.645, ptr @.compoundliteral.646, ptr @.compoundliteral.647, ptr @.compoundliteral.648, ptr @.compoundliteral.649, ptr @.compoundliteral.650, ptr @.compoundliteral.651, ptr @.compoundliteral.652, ptr @.compoundliteral.653, ptr @.compoundliteral.654, ptr @alc271_fixup_dmic.verbs, ptr @alc269_44k_pcm_analog_playback, ptr @alc269_44k_pcm_analog_capture, ptr @alc_headset_mode_unplugged.coef0255, ptr @alc_headset_mode_unplugged.coef0256, ptr @alc_headset_mode_unplugged.coef0233, ptr @alc_headset_mode_unplugged.coef0288, ptr @alc_headset_mode_unplugged.coef0298, ptr @alc_headset_mode_unplugged.coef0292, ptr @alc_headset_mode_unplugged.coef0293, ptr @alc_headset_mode_unplugged.coef0668, ptr @alc_headset_mode_unplugged.coef0225, ptr @alc_headset_mode_unplugged.coef0274, ptr @alc225_pre_hsmode, ptr @.str.658, ptr @.str.659, ptr @alc_determine_headset_type.coef0255, ptr @alc_determine_headset_type.coef0288, ptr @alc_determine_headset_type.coef0298, ptr @alc_determine_headset_type.coef0293, ptr @alc_determine_headset_type.coef0688, ptr @alc_determine_headset_type.coef0274, ptr @.str.660, ptr @.str.661, ptr @.str.662, ptr @.str.663, ptr @alc_headset_mode_ctia.coef0255, ptr @alc_headset_mode_ctia.coef0256, ptr @alc_headset_mode_ctia.coef0233, ptr @alc_headset_mode_ctia.coef0288, ptr @alc_headset_mode_ctia.coef0292, ptr @alc_headset_mode_ctia.coef0293, ptr @alc_headset_mode_ctia.coef0688, ptr @alc_headset_mode_ctia.coef0225_1, ptr @alc_headset_mode_ctia.coef0225_2, ptr @.str.664, ptr @.str.665, ptr @alc_headset_mode_omtp.coef0255, ptr @alc_headset_mode_omtp.coef0256, ptr @alc_headset_mode_omtp.coef0233, ptr @alc_headset_mode_omtp.coef0288, ptr @alc_headset_mode_omtp.coef0292, ptr @alc_headset_mode_omtp.coef0293, ptr @alc_headset_mode_omtp.coef0688, ptr @alc_headset_mode_omtp.coef0225, ptr @.str.666, ptr @.str.667, ptr @alc_headset_mode_mic_in.coef0255, ptr @alc_headset_mode_mic_in.coef0256, ptr @alc_headset_mode_mic_in.coef0233, ptr @alc_headset_mode_mic_in.coef0288, ptr @alc_headset_mode_mic_in.coef0292, ptr @alc_headset_mode_mic_in.coef0293, ptr @alc_headset_mode_mic_in.coef0688, ptr @alc_headset_mode_mic_in.coef0225, ptr @alc_headset_mode_mic_in.coef0274, ptr @.str.668, ptr @.str.669, ptr @alc_headset_mode_default.coef0225, ptr @alc_headset_mode_default.coef0255, ptr @alc_headset_mode_default.coef0256, ptr @alc_headset_mode_default.coef0233, ptr @alc_headset_mode_default.coef0288, ptr @alc_headset_mode_default.coef0292, ptr @alc_headset_mode_default.coef0293, ptr @alc_headset_mode_default.coef0688, ptr @alc_headset_mode_default.coef0274, ptr @.str.670, ptr @.str.671, ptr @alc282_fixup_asus_tx300.dock_pins, ptr @.str.672, ptr @.str.673, ptr @.str.674, ptr @alc290_fixup_mono_speakers.conn1, ptr @alc255_set_default_jack_type.alc255fw, ptr @alc255_set_default_jack_type.alc256fw, ptr @alc_fixup_tpt440_dock.pincfgs, ptr @.str.675, ptr @.str.676, ptr @.str.677, ptr @.str.678, ptr @.str.679, ptr @.str.681, ptr @alc285_fixup_hp_spectre_x360_eb1.conn, ptr @alc285_fixup_hp_spectre_x360_eb1.pincfgs, ptr @alc295_fixup_disable_dac3.conn, ptr @alc285_fixup_speaker2_to_dac1.conn, ptr @alc298_fixup_speaker_volume.conn1, ptr @.str.683, ptr @.str.684, ptr @.str.685, ptr @.str.686, ptr @.str.687, ptr @.str.688, ptr @.str.689, ptr @alc274_fixup_bind_dacs.preferred_pairs, ptr @alc_fixup_tpt470_dock.pincfgs, ptr @alc_fixup_tpt470_dacs.preferred_pairs, ptr @alc298_fixup_huawei_mbx_stereo.dac_init, ptr @alc295_fixup_hp_top_speakers.pincfgs, ptr @alc295_fixup_hp_top_speakers.alc295_hp_speakers_coefs, ptr @alc_headset_btn_keymap, ptr @.str.690, ptr @alc285_fixup_thinkpad_x1_gen7.conn, ptr @alc285_fixup_thinkpad_x1_gen7.preferred_pairs, ptr @.str.691, ptr @.str.692, ptr @.str.693, ptr @.str.694, ptr @alc289_fixup_asus_ga401.preferred_pairs, ptr @alc285_ideapad_s740_coefs, ptr @alc295_fixup_asus_dacs.preferred_pairs, ptr @alc285_fixup_hp_spectre_x360.conn, ptr @alc285_fixup_hp_spectre_x360.pincfgs, ptr @alc256_fixup_set_coef_defaults_coefs, ptr @alc233_fixup_no_audio_jack_coefs, ptr @.str.695, ptr @.str.696, ptr @comp_master_ops, ptr @.str.697, ptr @.str.698, ptr @.str.699, ptr @.str.700, ptr @.str.701, ptr @.str.702, ptr @.compoundliteral.703, ptr @.str.704, ptr @.compoundliteral.705, ptr @.str.706, ptr @.compoundliteral.707, ptr @.str.708, ptr @.compoundliteral.709, ptr @.compoundliteral.710, ptr @.compoundliteral.711, ptr @.compoundliteral.712, ptr @.compoundliteral.713, ptr @.compoundliteral.714, ptr @.compoundliteral.715, ptr @.str.716, ptr @.compoundliteral.717, ptr @.str.718, ptr @.compoundliteral.719, ptr @.compoundliteral.720, ptr @.compoundliteral.721, ptr @.compoundliteral.722, ptr @.compoundliteral.723, ptr @.compoundliteral.724, ptr @.compoundliteral.725, ptr @.compoundliteral.726, ptr @.compoundliteral.727, ptr @.compoundliteral.728, ptr @.compoundliteral.729, ptr @.compoundliteral.730, ptr @.compoundliteral.731, ptr @.compoundliteral.732, ptr @.compoundliteral.733, ptr @.compoundliteral.734, ptr @.compoundliteral.735, ptr @.compoundliteral.736, ptr @.compoundliteral.737, ptr @.compoundliteral.738, ptr @.compoundliteral.739, ptr @.compoundliteral.740, ptr @.compoundliteral.741, ptr @.compoundliteral.742, ptr @.str.743, ptr @.compoundliteral.744, ptr @.str.745, ptr @.compoundliteral.746, ptr @.compoundliteral.747, ptr @.compoundliteral.748, ptr @.compoundliteral.749, ptr @.compoundliteral.750, ptr @.compoundliteral.751, ptr @.compoundliteral.752, ptr @.compoundliteral.753, ptr @.compoundliteral.754, ptr @.compoundliteral.755, ptr @.compoundliteral.756, ptr @.str.757, ptr @.compoundliteral.758, ptr @.compoundliteral.759, ptr @.compoundliteral.760, ptr @.compoundliteral.761, ptr @.compoundliteral.762, ptr @.compoundliteral.763, ptr @.compoundliteral.764, ptr @.compoundliteral.765, ptr @.compoundliteral.766, ptr @.compoundliteral.767, ptr @.compoundliteral.768, ptr @.compoundliteral.769, ptr @.compoundliteral.770, ptr @.compoundliteral.771, ptr @.compoundliteral.772, ptr @.compoundliteral.773, ptr @.compoundliteral.774, ptr @.compoundliteral.775, ptr @.compoundliteral.776, ptr @.compoundliteral.777, ptr @.compoundliteral.778, ptr @.compoundliteral.779, ptr @.compoundliteral.780, ptr @.compoundliteral.781, ptr @.compoundliteral.782, ptr @.compoundliteral.783, ptr @.compoundliteral.784, ptr @.compoundliteral.785, ptr @.compoundliteral.786, ptr @.compoundliteral.787, ptr @.compoundliteral.788, ptr @.compoundliteral.789, ptr @.compoundliteral.790, ptr @.compoundliteral.791, ptr @.compoundliteral.792, ptr @.compoundliteral.793, ptr @.compoundliteral.794, ptr @.compoundliteral.795, ptr @.compoundliteral.796, ptr @.compoundliteral.797, ptr @.compoundliteral.798, ptr @.compoundliteral.799, ptr @.compoundliteral.800, ptr @.compoundliteral.801, ptr @.compoundliteral.802, ptr @.compoundliteral.803, ptr @.compoundliteral.804, ptr @.compoundliteral.805, ptr @.compoundliteral.806, ptr @.compoundliteral.807, ptr @.compoundliteral.808, ptr @.str.809, ptr @.str.810, ptr @.str.811, ptr @.str.812, ptr @.str.813, ptr @.str.814, ptr @.str.815, ptr @.str.816, ptr @.str.817, ptr @.str.818, ptr @.str.819, ptr @.str.820, ptr @.str.821, ptr @.str.822, ptr @beep_allow_list, ptr @.str.823, ptr @.str.824, ptr @.str.825, ptr @.str.826, ptr @.str.827, ptr @alc269_parse_auto_config.alc269_ignore, ptr @alc269_parse_auto_config.alc269_ssids, ptr @alc269_parse_auto_config.alc269va_ssids, ptr @.str.828, ptr @.str.829, ptr @.str.830, ptr @.str.831, ptr @.str.832, ptr @alc_beep_mixer, ptr @.str.833, ptr @.str.834, ptr @alc260_fixup_models, ptr @alc260_fixup_tbl, ptr @alc260_fixups, ptr @.str.835, ptr @.str.836, ptr @.str.837, ptr @.str.838, ptr @.str.839, ptr @.str.840, ptr @.str.841, ptr @.str.842, ptr @.str.843, ptr @.str.844, ptr @.str.845, ptr @.str.846, ptr @.str.847, ptr @.str.848, ptr @.compoundliteral.849, ptr @.compoundliteral.850, ptr @.compoundliteral.851, ptr @.compoundliteral.852, ptr @.compoundliteral.853, ptr @alc260_fixup_kn1.pincfgs, ptr @alc260_parse_auto_config.alc260_ignore, ptr @alc260_parse_auto_config.alc260_ssids, ptr @alc262_fixup_models, ptr @alc262_fixup_tbl, ptr @alc262_fixups, ptr @.str.854, ptr @.str.855, ptr @.str.856, ptr @.str.857, ptr @.str.858, ptr @.str.859, ptr @.str.860, ptr @.str.861, ptr @.str.862, ptr @.str.863, ptr @.str.864, ptr @.str.865, ptr @.str.866, ptr @.str.867, ptr @.str.868, ptr @.str.869, ptr @.str.870, ptr @.str.871, ptr @.compoundliteral.872, ptr @.compoundliteral.873, ptr @.compoundliteral.874, ptr @.compoundliteral.875, ptr @.compoundliteral.876, ptr @.compoundliteral.877, ptr @.compoundliteral.878, ptr @alc262_parse_auto_config.alc262_ignore, ptr @alc262_parse_auto_config.alc262_ssids, ptr @alc268_fixup_models, ptr @alc268_fixup_tbl, ptr @alc268_fixups, ptr @alc268_beep_mixer, ptr @alc268_beep_init_verbs, ptr @.str.879, ptr @.str.880, ptr @.str.881, ptr @.str.882, ptr @.str.883, ptr @.compoundliteral.884, ptr @.compoundliteral.885, ptr @alc268_parse_auto_config.alc268_ssids, ptr @alc662_fixup_models, ptr @alc662_fixup_tbl, ptr @alc662_fixups, ptr @alc662_pin_fixup_tbl, ptr @.str.886, ptr @alc668_coefs, ptr @.str.887, ptr @.str.888, ptr @.str.889, ptr @.str.890, ptr @.str.891, ptr @.str.892, ptr @.str.893, ptr @.str.894, ptr @.str.895, ptr @.str.896, ptr @.str.897, ptr @.str.898, ptr @.str.899, ptr @.str.900, ptr @.str.901, ptr @.str.902, ptr @.str.903, ptr @.str.904, ptr @.str.905, ptr @.str.906, ptr @.str.907, ptr @.str.908, ptr @.str.909, ptr @.str.910, ptr @.str.911, ptr @.str.912, ptr @.str.913, ptr @.str.914, ptr @.str.915, ptr @.str.916, ptr @.str.917, ptr @.str.918, ptr @.str.919, ptr @.str.920, ptr @.str.921, ptr @.str.922, ptr @.str.923, ptr @.str.924, ptr @.str.925, ptr @.str.926, ptr @.str.927, ptr @.str.928, ptr @.str.929, ptr @.str.930, ptr @.str.931, ptr @.str.932, ptr @.str.933, ptr @.str.934, ptr @.str.935, ptr @.str.936, ptr @.str.937, ptr @.str.938, ptr @.str.939, ptr @.str.940, ptr @.str.941, ptr @.str.942, ptr @.str.943, ptr @.str.944, ptr @.str.945, ptr @.str.946, ptr @.str.947, ptr @.str.948, ptr @.str.949, ptr @.str.950, ptr @.str.951, ptr @.str.952, ptr @.str.953, ptr @.str.954, ptr @.str.955, ptr @.str.956, ptr @.str.957, ptr @.compoundliteral.958, ptr @.compoundliteral.959, ptr @.compoundliteral.960, ptr @.compoundliteral.961, ptr @.compoundliteral.962, ptr @.compoundliteral.963, ptr @.compoundliteral.964, ptr @.compoundliteral.965, ptr @.compoundliteral.966, ptr @.compoundliteral.967, ptr @.compoundliteral.968, ptr @.compoundliteral.969, ptr @.compoundliteral.970, ptr @.compoundliteral.971, ptr @.compoundliteral.972, ptr @.compoundliteral.973, ptr @.compoundliteral.974, ptr @.compoundliteral.975, ptr @.compoundliteral.976, ptr @.compoundliteral.977, ptr @.compoundliteral.978, ptr @.compoundliteral.979, ptr @.compoundliteral.980, ptr @.compoundliteral.981, ptr @.compoundliteral.982, ptr @.compoundliteral.983, ptr @.compoundliteral.984, ptr @.compoundliteral.985, ptr @.compoundliteral.986, ptr @.compoundliteral.987, ptr @.compoundliteral.988, ptr @.str.989, ptr @.str.990, ptr @.str.991, ptr @asus_pcm_2_1_chmaps, ptr @alc671_fixup_hp_headset_mic2.pincfgs, ptr @.compoundliteral.993, ptr @.compoundliteral.994, ptr @.compoundliteral.995, ptr @.compoundliteral.996, ptr @.compoundliteral.997, ptr @.compoundliteral.998, ptr @.compoundliteral.999, ptr @.compoundliteral.1000, ptr @.compoundliteral.1001, ptr @.str.1002, ptr @.compoundliteral.1003, ptr @.compoundliteral.1004, ptr @alc662_parse_auto_config.alc662_ignore, ptr @alc662_parse_auto_config.alc663_ssids, ptr @alc662_parse_auto_config.alc662_ssids, ptr @alc861_fixup_tbl, ptr @alc861_fixups, ptr @.str.1005, ptr @.str.1006, ptr @.str.1007, ptr @.str.1008, ptr @.str.1009, ptr @.str.1010, ptr @.str.1011, ptr @.compoundliteral.1012, ptr @.compoundliteral.1013, ptr @alc861_parse_auto_config.alc861_ignore, ptr @alc861_parse_auto_config.alc861_ssids, ptr @alc861vd_fixup_tbl, ptr @alc861vd_fixups, ptr @.str.1014, ptr @.str.1015, ptr @.str.1016, ptr @alc861vd_parse_auto_config.alc861vd_ignore, ptr @alc861vd_parse_auto_config.alc861vd_ssids, ptr @alc882_fixup_models, ptr @alc882_fixup_tbl, ptr @alc882_fixups, ptr @alc882_pin_fixup_tbl, ptr @.str.1017, ptr @.str.1018, ptr @.str.1019, ptr @.str.1020, ptr @.str.1021, ptr @.str.1022, ptr @.str.1023, ptr @.str.1024, ptr @.str.1025, ptr @.str.1026, ptr @.str.1027, ptr @.str.1028, ptr @.str.1029, ptr @.str.1030, ptr @.str.1031, ptr @.str.1032, ptr @.str.1033, ptr @.str.1034, ptr @.str.1035, ptr @.str.1036, ptr @.str.1037, ptr @.str.1038, ptr @.str.1039, ptr @.str.1040, ptr @.str.1041, ptr @.str.1042, ptr @.str.1043, ptr @.str.1044, ptr @.str.1045, ptr @.str.1046, ptr @.str.1047, ptr @.str.1048, ptr @.str.1049, ptr @.str.1050, ptr @.str.1051, ptr @.str.1052, ptr @.str.1053, ptr @.str.1054, ptr @.str.1055, ptr @.str.1056, ptr @.str.1057, ptr @.str.1058, ptr @.str.1059, ptr @.str.1060, ptr @.str.1061, ptr @.str.1062, ptr @.str.1063, ptr @.str.1064, ptr @.str.1065, ptr @.str.1066, ptr @.str.1067, ptr @.str.1068, ptr @.str.1069, ptr @.str.1070, ptr @.str.1071, ptr @.str.1072, ptr @.str.1073, ptr @.str.1074, ptr @.str.1075, ptr @.str.1076, ptr @.str.1077, ptr @.str.1078, ptr @.str.1079, ptr @.str.1080, ptr @.str.1081, ptr @.str.1082, ptr @.str.1083, ptr @.str.1084, ptr @.str.1085, ptr @.str.1086, ptr @.str.1087, ptr @.str.1088, ptr @.str.1089, ptr @.str.1090, ptr @.str.1091, ptr @.str.1092, ptr @.str.1093, ptr @.str.1094, ptr @.str.1095, ptr @.str.1096, ptr @.str.1097, ptr @.str.1098, ptr @.str.1099, ptr @.str.1100, ptr @.str.1101, ptr @.str.1102, ptr @.str.1103, ptr @.str.1104, ptr @.str.1105, ptr @.str.1106, ptr @.str.1107, ptr @.str.1108, ptr @.str.1109, ptr @.str.1110, ptr @.str.1111, ptr @.str.1112, ptr @.str.1113, ptr @.str.1114, ptr @.str.1115, ptr @.str.1116, ptr @.str.1117, ptr @.str.1118, ptr @.str.1119, ptr @.str.1120, ptr @.str.1121, ptr @.str.1122, ptr @.str.1123, ptr @.str.1124, ptr @.str.1125, ptr @.str.1126, ptr @.str.1127, ptr @.str.1128, ptr @.str.1129, ptr @.str.1130, ptr @.str.1131, ptr @.str.1132, ptr @.str.1133, ptr @.str.1134, ptr @.str.1135, ptr @.str.1136, ptr @.str.1137, ptr @.str.1138, ptr @.str.1139, ptr @.str.1140, ptr @.str.1141, ptr @.compoundliteral.1142, ptr @.compoundliteral.1143, ptr @.compoundliteral.1144, ptr @.compoundliteral.1145, ptr @.compoundliteral.1146, ptr @.compoundliteral.1147, ptr @.compoundliteral.1148, ptr @.compoundliteral.1149, ptr @.compoundliteral.1150, ptr @.compoundliteral.1151, ptr @.compoundliteral.1152, ptr @.compoundliteral.1153, ptr @.compoundliteral.1154, ptr @.compoundliteral.1155, ptr @.compoundliteral.1156, ptr @.compoundliteral.1157, ptr @.compoundliteral.1158, ptr @.compoundliteral.1159, ptr @alc889_fixup_dac_route.conn1, ptr @alc889_fixup_dac_route.conn2, ptr @alc889_fixup_dac_route.conn, ptr @.str.1160, ptr @alc1220_fixup_gb_x570.conn1, ptr @alc1220_fixup_gb_x570.gb_x570_coefs, ptr @alc1220_fixup_clevo_p950.conn1, ptr @.compoundliteral.1161, ptr @.compoundliteral.1162, ptr @.str.1163, ptr @alc882_parse_auto_config.alc882_ignore, ptr @alc882_parse_auto_config.alc882_ssids, ptr @alc880_fixup_models, ptr @alc880_fixup_tbl, ptr @alc880_fixups, ptr @.str.1164, ptr @.str.1165, ptr @.str.1166, ptr @.str.1167, ptr @.str.1168, ptr @.str.1169, ptr @.str.1170, ptr @.str.1171, ptr @.str.1172, ptr @.str.1173, ptr @.str.1174, ptr @.str.1175, ptr @.str.1176, ptr @.str.1177, ptr @.str.1178, ptr @.str.1179, ptr @.str.1180, ptr @.str.1181, ptr @.str.1182, ptr @.str.1183, ptr @.str.1184, ptr @.str.1185, ptr @.str.1186, ptr @.str.1187, ptr @.str.1188, ptr @.str.1189, ptr @.str.1190, ptr @.str.1191, ptr @.str.1192, ptr @.str.1193, ptr @.str.1194, ptr @.str.1195, ptr @.str.1196, ptr @.str.1197, ptr @.str.1198, ptr @.str.1199, ptr @.str.1200, ptr @.str.1201, ptr @.str.1202, ptr @.compoundliteral.1203, ptr @.compoundliteral.1204, ptr @.compoundliteral.1205, ptr @.compoundliteral.1206, ptr @.compoundliteral.1207, ptr @.compoundliteral.1208, ptr @.compoundliteral.1209, ptr @.compoundliteral.1210, ptr @.compoundliteral.1211, ptr @.compoundliteral.1212, ptr @.compoundliteral.1213, ptr @.compoundliteral.1214, ptr @.compoundliteral.1215, ptr @.compoundliteral.1216, ptr @.compoundliteral.1217, ptr @.compoundliteral.1218, ptr @.compoundliteral.1219, ptr @.compoundliteral.1220, ptr @.compoundliteral.1221, ptr @.compoundliteral.1222, ptr @.compoundliteral.1223, ptr @.compoundliteral.1224, ptr @.str.1225, ptr @alc880_parse_auto_config.alc880_ignore, ptr @alc880_parse_auto_config.alc880_ssids, ptr @switch.table.alc269_parse_auto_config], section "llvm.metadata"
@0 = internal global [1382 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @realtek_driver to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_hda_id_realtek to i32), i32 1580, i32 1984, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_fixup_models to i32), i32 976, i32 1216, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_fixup_tbl to i32), i32 7360, i32 9184, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_fixups to i32), i32 3600, i32 4512, i32 ptrtoint (ptr @___asan_gen_.1516 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_pin_fixup_tbl to i32), i32 1900, i32 2368, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_fallback_pin_fixup_tbl to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_fixup_vendor_tbl to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_patch_ops to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_alloc_spec.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_auto_setup_eapd.pins to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1546 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rename_tbl to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rename_pci_tbl to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1629 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1635 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc282_coefs to i32), i32 180, i32 224, i32 ptrtoint (ptr @___asan_gen_.1678 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc283_coefs to i32), i32 204, i32 256, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2058 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2070 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2088 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.395 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.398 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.417 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.426 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.427 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.428 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.437 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.439 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.441 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.442 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.450 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.453 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.454 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.456 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.457 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.460 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.463 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.466 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.476 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.479 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.482 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.484 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.490 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.493 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.494 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.495 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.496 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.497 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.499 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.501 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.502 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.503 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.504 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.505 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.507 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.508 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.509 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.510 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.511 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.513 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.514 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.517 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2871 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.519 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.521 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.522 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.523 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.524 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.525 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.527 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.528 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.530 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.532 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.533 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.534 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.535 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.536 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.538 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.539 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.541 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.542 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.544 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.545 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.547 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2961 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.548 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.549 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.550 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.551 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.552 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2977 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.553 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2978 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.554 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2979 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.555 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2980 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.556 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2981 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.557 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2982 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.558 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2983 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.559 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2984 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.560 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2985 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.561 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2986 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.562 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.563 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2988 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.564 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.565 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2990 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.566 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2991 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.567 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2992 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.568 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2993 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.569 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2994 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.570 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2995 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.571 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2996 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.572 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2997 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.573 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2998 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.574 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2999 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.575 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3000 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.576 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3001 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.577 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3002 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.578 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3003 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.579 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.580 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3005 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.581 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3006 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.582 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3007 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.583 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3008 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.584 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3009 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.585 to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.3010 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.586 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3011 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.587 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3012 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.588 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3013 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.589 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.590 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3015 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.591 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.592 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3017 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.593 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3018 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.594 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3019 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.595 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3020 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.596 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3021 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.597 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3022 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.598 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3023 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.599 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3024 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.600 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3025 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.601 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3026 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.602 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3027 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.603 to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.3028 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.604 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3029 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.605 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3030 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.606 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3031 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.607 to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.3032 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.608 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3033 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.609 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3034 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.610 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3035 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.611 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3036 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.612 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3037 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.613 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3038 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.614 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3039 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.615 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3040 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.616 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3041 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.617 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3042 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.618 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3043 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.619 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3044 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.620 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3045 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.621 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3046 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.622 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3047 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.623 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3048 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.624 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3049 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.625 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3050 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.626 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3051 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.627 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3052 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.628 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3053 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.629 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3054 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.630 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3055 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.631 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3056 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.632 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3057 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.633 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3058 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.634 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3059 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.635 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3060 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.636 to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.3061 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.637 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.638 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.3063 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.639 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.3064 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.640 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3065 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.641 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3066 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.642 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3067 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.643 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3068 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.644 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3069 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.645 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3070 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.646 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3071 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.647 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3072 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.648 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.3073 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.649 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3074 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.650 to i32), i32 300, i32 384, i32 ptrtoint (ptr @___asan_gen_.3075 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.651 to i32), i32 300, i32 384, i32 ptrtoint (ptr @___asan_gen_.3076 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.652 to i32), i32 180, i32 224, i32 ptrtoint (ptr @___asan_gen_.3077 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.653 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3078 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.654 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3079 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc271_fixup_dmic.verbs to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3080 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_44k_pcm_analog_playback to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3083 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_44k_pcm_analog_capture to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3086 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3088 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0255 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3257 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0256 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3260 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0233 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3263 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0288 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3266 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0298 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3134 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0292 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3269 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0293 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3272 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0668 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3110 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0225 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3254 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_unplugged.coef0274 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3278 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc225_pre_hsmode to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3119 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.658 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.659 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_determine_headset_type.coef0255 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3257 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_determine_headset_type.coef0288 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3266 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_determine_headset_type.coef0298 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3134 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_determine_headset_type.coef0293 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3272 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_determine_headset_type.coef0688 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3275 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_determine_headset_type.coef0274 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3278 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.660 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.661 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.662 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.663 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0255 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3257 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0256 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3260 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0233 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3263 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0288 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3266 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0292 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3269 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0293 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3272 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0688 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3275 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0225_1 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3179 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_ctia.coef0225_2 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3182 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.664 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.665 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0255 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3257 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0256 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3260 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0233 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3263 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0288 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3266 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0292 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3269 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0293 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3272 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0688 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3275 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_omtp.coef0225 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3254 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.666 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.667 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0255 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3257 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0256 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3260 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0233 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3263 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0288 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3266 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0292 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3269 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0293 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3272 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0688 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3275 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3254 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_mic_in.coef0274 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3278 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.668 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.669 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0225 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3254 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0255 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3257 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0256 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3260 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0233 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3263 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0288 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3266 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0292 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3269 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0293 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3272 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0688 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3275 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_mode_default.coef0274 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3278 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.670 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.671 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc282_fixup_asus_tx300.dock_pins to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3287 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.672 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.673 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.674 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc290_fixup_mono_speakers.conn1 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4643 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc255_set_default_jack_type.alc255fw to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3302 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc255_set_default_jack_type.alc256fw to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3305 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_fixup_tpt440_dock.pincfgs to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_register_micmute_input_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4123 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.675 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.676 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.677 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.678 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.679 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_register_micmute_input_device._entry.680 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4123 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.681 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_hp_spectre_x360_eb1.conn to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4631 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_hp_spectre_x360_eb1.pincfgs to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc295_fixup_disable_dac3.conn to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4631 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_speaker2_to_dac1.conn to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4631 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc298_fixup_speaker_volume.conn1 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4643 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.683 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.684 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.685 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.686 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.687 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.688 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.689 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc274_fixup_bind_dacs.preferred_pairs to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3419 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_fixup_tpt470_dock.pincfgs to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_fixup_tpt470_dacs.preferred_pairs to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3419 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc298_fixup_huawei_mbx_stereo.dac_init to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3380 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc295_fixup_hp_top_speakers.pincfgs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc295_fixup_hp_top_speakers.alc295_hp_speakers_coefs to i32), i32 1680, i32 2112, i32 ptrtoint (ptr @___asan_gen_.3386 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_headset_btn_keymap to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3389 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.690 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_thinkpad_x1_gen7.conn to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4631 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_thinkpad_x1_gen7.preferred_pairs to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3419 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.691 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.692 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.693 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.694 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc289_fixup_asus_ga401.preferred_pairs to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3419 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_ideapad_s740_coefs to i32), i32 5712, i32 7136, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc295_fixup_asus_dacs.preferred_pairs to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3419 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_hp_spectre_x360.conn to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4631 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc285_fixup_hp_spectre_x360.pincfgs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc256_fixup_set_coef_defaults_coefs to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3428 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc233_fixup_no_audio_jack_coefs to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3431 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.695 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.696 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @comp_master_ops to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3440 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc287_fixup_legion_16achg6_speakers._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4123 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.697 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.698 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.699 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.700 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.701 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cs35l41_generic_fixup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4123 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.702 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.703 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3467 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.704 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.705 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3471 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.706 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.707 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3475 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.708 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.709 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3479 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.710 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3480 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.711 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3481 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.712 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3482 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.713 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3483 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.714 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3484 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.715 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3485 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.716 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.717 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.718 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.719 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3493 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.720 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.721 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3495 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.722 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3496 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.723 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3497 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.724 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3498 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.725 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3499 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.726 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3500 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.727 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3501 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.728 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3502 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.729 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3503 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.730 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3504 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.731 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3505 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.732 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3506 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.733 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3507 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.734 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3508 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.735 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3509 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.736 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3510 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.737 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3511 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.738 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3512 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.739 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3513 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.740 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3514 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.741 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3515 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.742 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3516 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.743 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.744 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3520 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.745 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.746 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3524 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.747 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3525 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.748 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3526 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.749 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3527 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.750 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3528 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.751 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3529 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.752 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3530 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.753 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3531 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.754 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3532 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.755 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3533 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.756 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3534 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.757 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.758 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3538 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.759 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3539 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.760 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3540 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.761 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3541 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.762 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3542 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.763 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3543 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.764 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3544 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.765 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3545 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.766 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3546 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.767 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3547 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.768 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3548 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.769 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3549 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.770 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3550 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.771 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3551 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.772 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3552 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.773 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3553 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.774 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3554 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.775 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3555 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.776 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3556 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.777 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3557 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.778 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3558 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.779 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3559 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.780 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3560 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.781 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3561 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.782 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3562 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.783 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3563 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.784 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3564 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.785 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3565 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.786 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3566 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.787 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3567 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.788 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3568 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.789 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3569 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.790 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3570 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.791 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3571 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.792 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3572 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.793 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3573 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.794 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3574 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.795 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3575 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.796 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3576 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.797 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3577 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.798 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3578 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.799 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3579 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.800 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3580 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.801 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3581 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.802 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3582 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.803 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3583 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.804 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3584 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.805 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3585 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.806 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3586 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.807 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3587 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.808 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3588 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.809 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.810 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_auto_parse_customize_define._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4123 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.811 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.812 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.813 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.814 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.815 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.816 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.817 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.818 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.819 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.820 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.821 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.822 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @beep_allow_list to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.3634 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.823 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.824 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.825 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.826 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.827 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_parse_auto_config.alc269_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3652 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_parse_auto_config.alc269_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3655 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc269_parse_auto_config.alc269va_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3658 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.828 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.829 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.830 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.831 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.832 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc_beep_mixer to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.3676 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.833 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.834 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc260_fixup_models to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3685 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc260_fixup_tbl to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc260_fixups to i32), i32 176, i32 224, i32 ptrtoint (ptr @___asan_gen_.3691 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.835 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.836 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.837 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.838 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.839 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.840 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.841 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.842 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.843 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.844 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.845 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.846 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.847 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.848 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.849 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3736 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.850 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3737 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.851 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3738 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.852 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3739 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.853 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.3740 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc260_fixup_kn1.pincfgs to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc260_parse_auto_config.alc260_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3744 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc260_parse_auto_config.alc260_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3747 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc262_fixup_models to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3750 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc262_fixup_tbl to i32), i32 176, i32 224, i32 ptrtoint (ptr @___asan_gen_.3753 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc262_fixups to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.3756 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.854 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.855 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.856 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.857 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.858 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.859 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.860 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.861 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.862 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.863 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.864 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.865 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.866 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.867 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.868 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.869 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.870 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.871 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.872 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3813 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.873 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3814 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.874 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3815 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.875 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3816 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.876 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3817 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.877 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3818 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.878 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3819 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc262_parse_auto_config.alc262_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3820 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc262_parse_auto_config.alc262_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3823 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc268_fixup_models to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3826 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc268_fixup_tbl to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3829 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc268_fixups to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3832 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc268_beep_mixer to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.3835 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc268_beep_init_verbs to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3838 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.879 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.880 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.881 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.882 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.883 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.884 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3856 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.885 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3857 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc268_parse_auto_config.alc268_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3858 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_fixup_models to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.3861 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_fixup_tbl to i32), i32 848, i32 1056, i32 ptrtoint (ptr @___asan_gen_.3864 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_fixups to i32), i32 832, i32 1024, i32 ptrtoint (ptr @___asan_gen_.3867 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_pin_fixup_tbl to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.3870 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.886 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc668_coefs to i32), i32 360, i32 448, i32 ptrtoint (ptr @___asan_gen_.3876 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.887 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.888 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.889 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.890 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.891 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.892 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.893 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.894 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.895 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.896 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.897 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.898 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.899 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.900 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.901 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.902 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.903 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.904 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.905 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.906 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.907 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.908 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.909 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.910 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.911 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.912 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.913 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.914 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.915 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.916 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.917 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.918 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.919 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.920 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.921 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.922 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.923 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.924 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.925 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.926 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.927 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.928 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.929 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.930 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.931 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.932 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.933 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.934 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.935 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.936 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.937 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.938 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.939 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.940 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.941 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.942 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.943 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.944 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.945 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.946 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4058 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.947 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.948 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.949 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.950 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4070 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.951 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.952 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.953 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.954 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.955 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.956 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4088 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.957 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.958 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4092 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.959 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4093 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.960 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4094 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.961 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4095 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.962 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4096 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.963 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4097 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.964 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4098 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.965 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4099 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.966 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4100 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.967 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4101 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.968 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4102 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.969 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.4103 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.970 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.4104 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.971 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4105 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.972 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4106 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.973 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4107 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.974 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4108 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.975 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4109 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.976 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4110 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.977 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4111 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.978 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4112 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.979 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4113 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.980 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4114 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.981 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4115 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.982 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4116 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.983 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4117 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.984 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4118 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.985 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4119 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.986 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4120 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.987 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4121 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.988 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4122 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc272_fixup_mario._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4123 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.989 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.990 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.991 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_pcm_2_1_chmaps to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4135 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc671_fixup_hp_headset_mic2.pincfgs to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4138 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.993 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4141 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.994 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4142 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.995 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4143 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.996 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4144 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.997 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4145 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.998 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4146 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.999 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4147 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1000 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4148 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1001 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4149 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1002 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1003 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4153 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1004 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.4154 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_parse_auto_config.alc662_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4155 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_parse_auto_config.alc663_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4158 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc662_parse_auto_config.alc662_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4161 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861_fixup_tbl to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.4164 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861_fixups to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.4167 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1005 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1006 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1007 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1008 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1009 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1010 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1011 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1012 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4191 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1013 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4192 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861_parse_auto_config.alc861_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4193 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861_parse_auto_config.alc861_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4196 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861vd_fixup_tbl to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.4199 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861vd_fixups to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4202 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1014 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1015 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1016 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861vd_parse_auto_config.alc861vd_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4214 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc861vd_parse_auto_config.alc861vd_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4217 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc882_fixup_models to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.4220 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc882_fixup_tbl to i32), i32 1616, i32 2016, i32 ptrtoint (ptr @___asan_gen_.4223 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc882_fixups to i32), i32 640, i32 800, i32 ptrtoint (ptr @___asan_gen_.4226 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc882_pin_fixup_tbl to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.4229 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1017 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1018 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1019 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1020 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1021 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1022 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1023 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1024 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1025 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1026 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1027 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1028 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1029 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1030 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1031 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1032 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1033 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1034 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1035 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1036 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1037 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1038 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1039 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1040 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1041 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1042 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1043 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1044 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1045 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1046 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1047 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1048 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1049 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1050 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1051 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1052 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1053 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1054 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1055 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1056 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1057 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1058 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1059 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1060 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1061 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1062 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1063 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1064 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1065 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1066 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1067 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1068 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1069 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1070 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1071 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1072 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1073 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1074 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1075 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1076 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1077 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1078 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1079 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1080 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1081 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1082 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1083 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1084 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1085 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1086 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1087 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1088 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1089 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1090 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1091 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1092 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1093 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1094 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1095 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1096 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1097 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1098 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1099 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1100 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1101 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1102 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1103 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1104 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1105 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1106 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1107 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1108 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1109 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1110 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1111 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1112 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1113 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1114 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1115 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1116 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1117 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1118 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1119 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1120 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1121 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1122 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1123 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1124 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1125 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1126 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1127 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1128 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1129 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1130 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1131 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1132 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1133 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1134 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1135 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1136 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1137 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1138 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1139 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1140 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1141 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1142 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4607 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4608 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1144 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4609 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1145 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4610 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1146 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4611 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1147 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4612 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1148 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4613 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1149 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4614 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1150 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4615 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1151 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4616 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1152 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4617 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1153 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4618 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1154 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4619 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1155 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4620 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1156 to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.4621 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1157 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4622 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1158 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4623 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1159 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4624 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc889_fixup_dac_route.conn1 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4643 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc889_fixup_dac_route.conn2 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4628 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc889_fixup_dac_route.conn to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4631 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1160 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc1220_fixup_gb_x570.conn1 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4643 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc1220_fixup_gb_x570.gb_x570_coefs to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.4640 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc1220_fixup_clevo_p950.conn1 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.4643 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1161 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.4646 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1162 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.4647 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1163 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc882_parse_auto_config.alc882_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4651 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc882_parse_auto_config.alc882_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4654 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc880_fixup_models to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.4657 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc880_fixup_tbl to i32), i32 960, i32 1184, i32 ptrtoint (ptr @___asan_gen_.4660 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc880_fixups to i32), i32 400, i32 512, i32 ptrtoint (ptr @___asan_gen_.4663 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1164 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1165 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1166 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1167 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1168 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1169 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1170 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1171 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1172 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1173 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1174 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1175 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1176 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1177 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1178 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1179 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1180 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1181 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1182 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1183 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1184 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1185 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1186 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1187 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1188 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1189 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1190 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1191 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1192 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1193 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1194 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1195 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1196 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1197 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1198 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1199 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1200 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1201 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1202 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1203 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4783 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1204 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4784 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1205 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.4785 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1206 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4786 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1207 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4787 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1208 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.4788 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1209 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4789 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1210 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4790 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1211 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.4791 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1212 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.4792 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1213 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4793 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1214 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4794 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1215 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4795 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1216 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4796 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1217 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4797 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1218 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4798 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1219 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4799 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1220 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4800 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1221 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.4801 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1222 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4802 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1223 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4803 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.1224 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.4804 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1225 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.4805 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc880_parse_auto_config.alc880_ignore to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.4808 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alc880_parse_auto_config.alc880_ssids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.4811 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.4813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.alc269_parse_auto_config to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.4814 to i32), i32 ptrtoint (ptr @___asan_gen_.4812 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @realtek_driver_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__hda_codec_driver_register(ptr noundef nonnull @realtek_driver, ptr noundef nonnull @.str, ptr noundef null) #13
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @realtek_driver_exit() #0 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @hda_codec_driver_unregister(ptr noundef nonnull @realtek_driver) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hda_codec_driver_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__hda_codec_driver_register(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc269(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %shared_mic_vref_pin = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 39
  %2 = ptrtoint ptr %shared_mic_vref_pin to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 24, ptr %shared_mic_vref_pin, align 8
  %power_save_node = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %3 = ptrtoint ptr %power_save_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %bf.load = load i32, ptr %power_save_node, align 4
  %bf.clear = and i32 %bf.load, -16385
  store i32 %bf.clear, ptr %power_save_node, align 4
  %suspend = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 6
  %4 = ptrtoint ptr %suspend to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @alc269_suspend, ptr %suspend, align 8
  %resume = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 7
  %5 = ptrtoint ptr %resume to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @alc269_resume, ptr %resume, align 4
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %6 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @alc_default_shutup, ptr %shutup, align 4
  %init_hook = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 20
  %7 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @alc_default_init, ptr %init_hook, align 4
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %8 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vendor_id, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values)
  switch i32 %9, label %if.end.sw.epilog114_crit_edge [
    i32 283902569, label %sw.bb
    i32 283902592, label %if.end.sw.bb47_crit_edge
    i32 283902608, label %if.end.sw.bb47_crit_edge291
    i32 283902594, label %sw.bb49
    i32 283902515, label %if.end.sw.bb53_crit_edge
    i32 283902595, label %if.end.sw.bb53_crit_edge292
    i32 283902596, label %if.end.sw.bb57_crit_edge
    i32 283902610, label %if.end.sw.bb57_crit_edge293
    i32 283902611, label %sw.bb59
    i32 283902598, label %if.end.sw.bb61_crit_edge
    i32 283902600, label %if.end.sw.bb61_crit_edge294
    i32 283902616, label %sw.bb63
    i32 283902517, label %if.end.sw.bb65_crit_edge
    i32 283902549, label %if.end.sw.bb65_crit_edge295
    i32 283902512, label %if.end.sw.bb69_crit_edge
    i32 283902518, label %if.end.sw.bb69_crit_edge296
    i32 283902550, label %if.end.sw.bb69_crit_edge297
    i32 283902551, label %sw.bb74
    i32 283902485, label %if.end.sw.bb80_crit_edge
    i32 283902533, label %if.end.sw.bb80_crit_edge298
    i32 283902597, label %if.end.sw.bb80_crit_edge299
    i32 283902601, label %if.end.sw.bb80_crit_edge300
    i32 283902501, label %if.end.sw.bb86_crit_edge
    i32 283902613, label %if.end.sw.bb86_crit_edge301
    i32 283902617, label %if.end.sw.bb86_crit_edge302
    i32 283902599, label %sw.bb92
    i32 283902516, label %if.end.sw.bb98_crit_edge
    i32 283902580, label %if.end.sw.bb98_crit_edge303
    i32 283902612, label %if.end.sw.bb98_crit_edge304
    i32 283902720, label %sw.bb103
    i32 283903523, label %sw.bb107
    i32 283903744, label %if.end.sw.bb109_crit_edge
    i32 283903745, label %if.end.sw.bb109_crit_edge305
    i32 283903747, label %if.end.sw.bb109_crit_edge306
    i32 283903761, label %if.end.sw.bb109_crit_edge307
  ]

if.end.sw.bb109_crit_edge307:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb109

if.end.sw.bb109_crit_edge306:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb109

if.end.sw.bb109_crit_edge305:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb109

if.end.sw.bb109_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb109

if.end.sw.bb98_crit_edge304:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb98

if.end.sw.bb98_crit_edge303:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb98

if.end.sw.bb98_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb98

if.end.sw.bb86_crit_edge302:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb86

if.end.sw.bb86_crit_edge301:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb86

if.end.sw.bb86_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb86

if.end.sw.bb80_crit_edge300:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb80

if.end.sw.bb80_crit_edge299:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb80

if.end.sw.bb80_crit_edge298:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb80

if.end.sw.bb80_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb80

if.end.sw.bb69_crit_edge297:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb69

if.end.sw.bb69_crit_edge296:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb69

if.end.sw.bb69_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb69

if.end.sw.bb65_crit_edge295:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb65

if.end.sw.bb65_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb65

if.end.sw.bb61_crit_edge294:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb61

if.end.sw.bb61_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb61

if.end.sw.bb57_crit_edge293:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb57

if.end.sw.bb57_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb57

if.end.sw.bb53_crit_edge292:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb53

if.end.sw.bb53_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb53

if.end.sw.bb47_crit_edge291:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb47

if.end.sw.bb47_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb47

if.end.sw.epilog114_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog114

sw.bb:                                            ; preds = %if.end
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %11 = ptrtoint ptr %codec_variant to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %codec_variant, align 4
  %call3 = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %12 = trunc i32 %call3 to i8
  %trunc = and i8 %12, -16
  %13 = zext i8 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.1226)
  switch i8 %trunc, label %sw.default [
    i8 16, label %sw.bb4
    i8 32, label %sw.bb18
    i8 48, label %sw.bb39
  ]

sw.bb4:                                           ; preds = %sw.bb
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %14 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus, align 8
  %pci = getelementptr inbounds %struct.hda_bus, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %pci to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pci, align 4
  %tobool.not = icmp eq ptr %17, null
  br i1 %tobool.not, label %sw.bb4.sw.epilog.thread_crit_edge, label %land.lhs.true

sw.bb4.sw.epilog.thread_crit_edge:                ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.thread

land.lhs.true:                                    ; preds = %sw.bb4
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 9
  %18 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 4133, i16 %19)
  %cmp7 = icmp eq i16 %19, 4133
  br i1 %cmp7, label %land.lhs.true9, label %land.lhs.true.sw.epilog.thread_crit_edge

land.lhs.true.sw.epilog.thread_crit_edge:         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.thread

land.lhs.true9:                                   ; preds = %land.lhs.true
  %platform_type = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %20 = ptrtoint ptr %platform_type to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load10 = load i8, ptr %platform_type, align 8
  %21 = and i8 %bf.load10, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %cmp12.not = icmp eq i8 %21, 0
  br i1 %cmp12.not, label %land.lhs.true9.sw.epilog.thread_crit_edge, label %land.lhs.true9.sw.epilog_crit_edge

land.lhs.true9.sw.epilog_crit_edge:               ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

land.lhs.true9.sw.epilog.thread_crit_edge:        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.thread

sw.bb18:                                          ; preds = %sw.bb
  %bus19 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %22 = ptrtoint ptr %bus19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %bus19, align 8
  %pci20 = getelementptr inbounds %struct.hda_bus, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %pci20 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pci20, align 4
  %tobool21.not = icmp eq ptr %25, null
  br i1 %tobool21.not, label %sw.bb18.sw.epilog.thread_crit_edge, label %land.lhs.true22

sw.bb18.sw.epilog.thread_crit_edge:               ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.thread

land.lhs.true22:                                  ; preds = %sw.bb18
  %subsystem_vendor25 = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 9
  %26 = ptrtoint ptr %subsystem_vendor25 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %subsystem_vendor25, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6058, i16 %27)
  %cmp27 = icmp eq i16 %27, 6058
  br i1 %cmp27, label %land.lhs.true29, label %land.lhs.true22.sw.epilog.thread_crit_edge

land.lhs.true22.sw.epilog.thread_crit_edge:       ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.thread

land.lhs.true29:                                  ; preds = %land.lhs.true22
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 10
  %28 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %subsystem_device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 8691, i16 %29)
  %cmp33 = icmp eq i16 %29, 8691
  br i1 %cmp33, label %land.lhs.true29.sw.epilog_crit_edge, label %land.lhs.true29.sw.epilog.thread_crit_edge

land.lhs.true29.sw.epilog.thread_crit_edge:       ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.thread

land.lhs.true29.sw.epilog_crit_edge:              ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb39:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %30 = ptrtoint ptr %codec_variant to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 3, ptr %codec_variant, align 4
  br label %if.end44

sw.default:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_fix_pll_init(ptr noundef %codec, i32 noundef 4, i32 noundef 15)
  br label %if.end44

sw.epilog.thread:                                 ; preds = %land.lhs.true29.sw.epilog.thread_crit_edge, %land.lhs.true22.sw.epilog.thread_crit_edge, %sw.bb18.sw.epilog.thread_crit_edge, %land.lhs.true9.sw.epilog.thread_crit_edge, %land.lhs.true.sw.epilog.thread_crit_edge, %sw.bb4.sw.epilog.thread_crit_edge
  %storemerge.ph = phi i32 [ 2, %sw.bb18.sw.epilog.thread_crit_edge ], [ 2, %land.lhs.true22.sw.epilog.thread_crit_edge ], [ 2, %land.lhs.true29.sw.epilog.thread_crit_edge ], [ 1, %sw.bb4.sw.epilog.thread_crit_edge ], [ 1, %land.lhs.true.sw.epilog.thread_crit_edge ], [ 1, %land.lhs.true9.sw.epilog.thread_crit_edge ]
  %31 = ptrtoint ptr %codec_variant to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %storemerge.ph, ptr %codec_variant, align 4
  br label %if.end44

sw.epilog:                                        ; preds = %land.lhs.true29.sw.epilog_crit_edge, %land.lhs.true9.sw.epilog_crit_edge
  %.str.76.sink = phi ptr [ @.str.75, %land.lhs.true9.sw.epilog_crit_edge ], [ @.str.76, %land.lhs.true29.sw.epilog_crit_edge ]
  %storemerge = phi i32 [ 1, %land.lhs.true9.sw.epilog_crit_edge ], [ 2, %land.lhs.true29.sw.epilog_crit_edge ]
  %call36 = tail call i32 @snd_hda_codec_set_name(ptr noundef %codec, ptr noundef nonnull %.str.76.sink) #13
  %32 = ptrtoint ptr %codec_variant to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %storemerge, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %cmp41 = icmp slt i32 %call36, 0
  br i1 %cmp41, label %sw.epilog.error_crit_edge, label %sw.epilog.if.end44_crit_edge

sw.epilog.if.end44_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44

sw.epilog.error_crit_edge:                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end44:                                         ; preds = %sw.epilog.if.end44_crit_edge, %sw.epilog.thread, %sw.default, %sw.bb39
  %33 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @alc269_shutup, ptr %shutup, align 4
  %34 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @alc269_fill_coef, ptr %init_hook, align 4
  tail call void @alc269_fill_coef(ptr noundef %codec)
  br label %sw.epilog114

sw.bb47:                                          ; preds = %if.end.sw.bb47_crit_edge, %if.end.sw.bb47_crit_edge291
  %codec_variant48 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %35 = ptrtoint ptr %codec_variant48 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 4, ptr %codec_variant48, align 4
  br label %sw.epilog114

sw.bb49:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant50 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %36 = ptrtoint ptr %codec_variant50 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 5, ptr %codec_variant50, align 4
  %37 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @alc282_shutup, ptr %shutup, align 4
  %38 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @alc282_init, ptr %init_hook, align 4
  br label %sw.epilog114

sw.bb53:                                          ; preds = %if.end.sw.bb53_crit_edge, %if.end.sw.bb53_crit_edge292
  %codec_variant54 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %39 = ptrtoint ptr %codec_variant54 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 6, ptr %codec_variant54, align 4
  %40 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @alc283_shutup, ptr %shutup, align 4
  %41 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @alc283_init, ptr %init_hook, align 4
  br label %sw.epilog114

sw.bb57:                                          ; preds = %if.end.sw.bb57_crit_edge, %if.end.sw.bb57_crit_edge293
  %codec_variant58 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %42 = ptrtoint ptr %codec_variant58 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 7, ptr %codec_variant58, align 4
  br label %sw.epilog114

sw.bb59:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant60 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %43 = ptrtoint ptr %codec_variant60 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 8, ptr %codec_variant60, align 4
  br label %sw.epilog114

sw.bb61:                                          ; preds = %if.end.sw.bb61_crit_edge, %if.end.sw.bb61_crit_edge294
  %codec_variant62 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %44 = ptrtoint ptr %codec_variant62 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 9, ptr %codec_variant62, align 4
  br label %sw.epilog114

sw.bb63:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant64 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %45 = ptrtoint ptr %codec_variant64 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 10, ptr %codec_variant64, align 4
  br label %sw.epilog114

sw.bb65:                                          ; preds = %if.end.sw.bb65_crit_edge, %if.end.sw.bb65_crit_edge295
  %codec_variant66 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %46 = ptrtoint ptr %codec_variant66 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 11, ptr %codec_variant66, align 4
  %47 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @alc256_shutup, ptr %shutup, align 4
  %48 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @alc256_init, ptr %init_hook, align 4
  br label %sw.epilog114

sw.bb69:                                          ; preds = %if.end.sw.bb69_crit_edge, %if.end.sw.bb69_crit_edge296, %if.end.sw.bb69_crit_edge297
  %codec_variant70 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %49 = ptrtoint ptr %codec_variant70 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 12, ptr %codec_variant70, align 4
  %50 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @alc256_shutup, ptr %shutup, align 4
  %51 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @alc256_init, ptr %init_hook, align 4
  %mixer_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %52 = ptrtoint ptr %mixer_nid to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 0, ptr %mixer_nid, align 2
  br label %sw.epilog114

sw.bb74:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant75 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %53 = ptrtoint ptr %codec_variant75 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 13, ptr %codec_variant75, align 4
  %54 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @alc256_shutup, ptr %shutup, align 4
  %55 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @alc256_init, ptr %init_hook, align 4
  %mixer_nid79 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %56 = ptrtoint ptr %mixer_nid79 to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 0, ptr %mixer_nid79, align 2
  br label %sw.epilog114

sw.bb80:                                          ; preds = %if.end.sw.bb80_crit_edge, %if.end.sw.bb80_crit_edge298, %if.end.sw.bb80_crit_edge299, %if.end.sw.bb80_crit_edge300
  %codec_variant81 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %57 = ptrtoint ptr %codec_variant81 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 14, ptr %codec_variant81, align 4
  %58 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @alc225_shutup, ptr %shutup, align 4
  %59 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @alc225_init, ptr %init_hook, align 4
  %mixer_nid85 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %60 = ptrtoint ptr %mixer_nid85 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 0, ptr %mixer_nid85, align 2
  br label %sw.epilog114

sw.bb86:                                          ; preds = %if.end.sw.bb86_crit_edge, %if.end.sw.bb86_crit_edge301, %if.end.sw.bb86_crit_edge302
  %codec_variant87 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %61 = ptrtoint ptr %codec_variant87 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 15, ptr %codec_variant87, align 4
  %62 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr @alc225_shutup, ptr %shutup, align 4
  %63 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr @alc225_init, ptr %init_hook, align 4
  %mixer_nid91 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %64 = ptrtoint ptr %mixer_nid91 to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 0, ptr %mixer_nid91, align 2
  br label %sw.epilog114

sw.bb92:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant93 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %65 = ptrtoint ptr %codec_variant93 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 16, ptr %codec_variant93, align 4
  %66 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @alc225_shutup, ptr %shutup, align 4
  %67 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr @alc225_init, ptr %init_hook, align 4
  %mixer_nid97 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %68 = ptrtoint ptr %mixer_nid97 to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 0, ptr %mixer_nid97, align 2
  br label %sw.epilog114

sw.bb98:                                          ; preds = %if.end.sw.bb98_crit_edge, %if.end.sw.bb98_crit_edge303, %if.end.sw.bb98_crit_edge304
  %codec_variant99 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %69 = ptrtoint ptr %codec_variant99 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 17, ptr %codec_variant99, align 4
  %mixer_nid101 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %70 = ptrtoint ptr %mixer_nid101 to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 0, ptr %mixer_nid101, align 2
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 107, i32 noundef 24, i32 noundef 24)
  %71 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr @alc294_init, ptr %init_hook, align 4
  br label %sw.epilog114

sw.bb103:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant104 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %72 = ptrtoint ptr %codec_variant104 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 18, ptr %codec_variant104, align 4
  %mixer_nid106 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %73 = ptrtoint ptr %mixer_nid106 to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 0, ptr %mixer_nid106, align 2
  br label %sw.epilog114

sw.bb107:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %codec_variant108 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %74 = ptrtoint ptr %codec_variant108 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 19, ptr %codec_variant108, align 4
  br label %sw.epilog114

sw.bb109:                                         ; preds = %if.end.sw.bb109_crit_edge, %if.end.sw.bb109_crit_edge305, %if.end.sw.bb109_crit_edge306, %if.end.sw.bb109_crit_edge307
  %codec_variant110 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %75 = ptrtoint ptr %codec_variant110 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 20, ptr %codec_variant110, align 4
  %mixer_nid112 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %76 = ptrtoint ptr %mixer_nid112 to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 0, ptr %mixer_nid112, align 2
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 32768, i32 noundef 0)
  %77 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr @alc294_init, ptr %init_hook, align 4
  br label %sw.epilog114

sw.epilog114:                                     ; preds = %sw.bb109, %sw.bb107, %sw.bb103, %sw.bb98, %sw.bb92, %sw.bb86, %sw.bb80, %sw.bb74, %sw.bb69, %sw.bb65, %sw.bb63, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb53, %sw.bb49, %sw.bb47, %if.end44, %if.end.sw.epilog114_crit_edge
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 3840, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 283923717, i32 %call.i)
  %cmp116 = icmp eq i32 %call.i, 283923717
  br i1 %cmp116, label %if.then118, label %sw.epilog114.if.end123_crit_edge

sw.epilog114.if.end123_crit_edge:                 ; preds = %sw.epilog114
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end123

if.then118:                                       ; preds = %sw.epilog114
  call void @__sanitizer_cov_trace_pc() #15
  %has_alc5505_dsp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %78 = ptrtoint ptr %has_alc5505_dsp to i32
  call void @__asan_load1_noabort(i32 %78)
  %bf.load119 = load i8, ptr %has_alc5505_dsp, align 8
  %bf.set121 = or i8 %bf.load119, -128
  store i8 %bf.set121, ptr %has_alc5505_dsp, align 8
  %79 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr @alc5505_dsp_init, ptr %init_hook, align 4
  br label %if.end123

if.end123:                                        ; preds = %if.then118, %sw.epilog114.if.end123_crit_edge
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc269_fixup_models, ptr noundef nonnull @alc269_fixup_tbl, ptr noundef nonnull @alc269_fixups) #13
  %fixup_id = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 41
  %80 = ptrtoint ptr %fixup_id to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %fixup_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 57, i32 %81)
  %cmp124 = icmp eq i32 %81, 57
  br i1 %cmp124, label %land.lhs.true126, label %if.end123.if.end140_crit_edge

if.end123.if.end140_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end140

land.lhs.true126:                                 ; preds = %if.end123
  %82 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %vendor_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 283902612, i32 %83)
  %cmp129 = icmp eq i32 %83, 283902612
  br i1 %cmp129, label %do.body, label %land.lhs.true126.if.end140_crit_edge

land.lhs.true126.if.end140_crit_edge:             ; preds = %land.lhs.true126
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end140

do.body:                                          ; preds = %land.lhs.true126
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @patch_alc269.__UNIQUE_ID_ddebug262, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc269, %if.then136)) #13
          to label %do.end [label %if.then136], !srcloc !2188

if.then136:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @patch_alc269.__UNIQUE_ID_ddebug262, ptr noundef %codec, ptr noundef nonnull @.str.79) #13
  br label %do.end

do.end:                                           ; preds = %if.then136, %do.body
  %84 = ptrtoint ptr %fixup_id to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 -1, ptr %fixup_id, align 4
  br label %if.end140

if.end140:                                        ; preds = %do.end, %land.lhs.true126.if.end140_crit_edge, %if.end123.if.end140_crit_edge
  tail call void @snd_hda_pick_pin_fixup(ptr noundef %codec, ptr noundef nonnull @alc269_pin_fixup_tbl, ptr noundef nonnull @alc269_fixups, i1 noundef zeroext true) #13
  tail call void @snd_hda_pick_pin_fixup(ptr noundef %codec, ptr noundef nonnull @alc269_fallback_pin_fixup_tbl, ptr noundef nonnull @alc269_fixups, i1 noundef zeroext false) #13
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef null, ptr noundef nonnull @alc269_fixup_vendor_tbl, ptr noundef nonnull @alc269_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  tail call fastcc void @alc_auto_parse_customize_define(ptr noundef %codec)
  %85 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %87 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %88, i32 0, i32 2
  %89 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %pci.i, align 4
  %call.i277 = tail call ptr @snd_pci_quirk_lookup(ptr noundef %90, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i277, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i277, i32 0, i32 3
  %91 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %86, i32 0, i32 1, i32 5
  %93 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i278 = phi i32 [ %92, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i278)
  %tobool143.not = icmp eq i32 %retval.0.i278, 0
  br i1 %tobool143.not, label %has_cdefine_beep.exit.if.end146_crit_edge, label %if.then144

has_cdefine_beep.exit.if.end146_crit_edge:        ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end146

if.then144:                                       ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %94 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 1, ptr %beep_nid, align 2
  br label %if.end146

if.end146:                                        ; preds = %if.then144, %has_cdefine_beep.exit.if.end146_crit_edge
  %call147 = tail call fastcc i32 @alc269_parse_auto_config(ptr noundef %codec)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call147)
  %cmp148 = icmp slt i32 %call147, 0
  br i1 %cmp148, label %if.end146.error_crit_edge, label %if.end151

if.end146.error_crit_edge:                        ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end151:                                        ; preds = %if.end146
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %95 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %95, i32 8)
  %bf.load153 = load i64, ptr %no_analog, align 4
  %96 = and i64 %bf.load153, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %96)
  %tobool157.not = icmp eq i64 %96, 0
  br i1 %tobool157.not, label %land.lhs.true158, label %if.end151.if.end176_crit_edge

if.end151.if.end176_crit_edge:                    ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end176

land.lhs.true158:                                 ; preds = %if.end151
  %beep_nid160 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %97 = ptrtoint ptr %beep_nid160 to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %beep_nid160, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %98)
  %tobool162.not = icmp eq i16 %98, 0
  br i1 %tobool162.not, label %land.lhs.true158.if.end176_crit_edge, label %land.lhs.true163

land.lhs.true158.if.end176_crit_edge:             ; preds = %land.lhs.true158
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end176

land.lhs.true163:                                 ; preds = %land.lhs.true158
  %mixer_nid165 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %99 = ptrtoint ptr %mixer_nid165 to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %mixer_nid165, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %100)
  %tobool167.not = icmp eq i16 %100, 0
  br i1 %tobool167.not, label %land.lhs.true163.if.end176_crit_edge, label %if.then168

land.lhs.true163.if.end176_crit_edge:             ; preds = %land.lhs.true163
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end176

if.then168:                                       ; preds = %land.lhs.true163
  %conv.i = zext i16 %100 to i32
  %or3.i = or i32 %conv.i, 2293760
  %call.i279 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i280 = icmp eq ptr %call.i279, null
  br i1 %tobool.not.i280, label %if.then168.error_crit_edge, label %if.end.i281

if.then168.error_crit_edge:                       ; preds = %if.then168
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i281:                                      ; preds = %if.then168
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i279, i32 0, i32 11
  %101 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %or3.i, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i281.error_crit_edge, label %set_beep_amp.exit

if.end.i281.error_crit_edge:                      ; preds = %if.end.i281
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i281
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %102 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %or3.i, ptr %private_value.1.i, align 4
  br label %if.end176

if.end176:                                        ; preds = %set_beep_amp.exit, %land.lhs.true163.if.end176_crit_edge, %land.lhs.true158.if.end176_crit_edge, %if.end151.if.end176_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i281.error_crit_edge, %if.then168.error_crit_edge, %if.end146.error_crit_edge, %sw.epilog.error_crit_edge
  %err.3 = phi i32 [ %call147, %if.end146.error_crit_edge ], [ %call36, %sw.epilog.error_crit_edge ], [ -12, %if.then168.error_crit_edge ], [ -12, %if.end.i281.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end176, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.3, %error ], [ 0, %if.end176 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc260(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 7)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %prefer_hp_amp = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %prefer_hp_amp to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %prefer_hp_amp, align 4
  %bf.set = or i64 %bf.load, 17179869184
  store i64 %bf.set, ptr %prefer_hp_amp, align 4
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %3 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 1, ptr %beep_nid, align 2
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %4 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @alc_eapd_shutup, ptr %shutup, align 4
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc260_fixup_models, ptr noundef nonnull @alc260_fixup_tbl, ptr noundef nonnull @alc260_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  %5 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %6, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef nonnull @alc260_parse_auto_config.alc260_ignore, i32 noundef %8) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end.error_crit_edge, label %if.end.i.i

if.end.error_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc260_parse_auto_config.alc260_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %9 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 23
  %11 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i.i.i = icmp eq i32 %12, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc260, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %13 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %if.end6

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end6:                                          ; preds = %if.end3.i.i
  %14 = ptrtoint ptr %prefer_hp_amp to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %bf.load8 = load i64, ptr %prefer_hp_amp, align 4
  %15 = and i64 %bf.load8, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not = icmp eq i64 %15, 0
  br i1 %tobool.not, label %if.then10, label %if.end6.if.end15_crit_edge

if.end6.if.end15_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

if.then10:                                        ; preds = %if.end6
  %call.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then10.error_crit_edge, label %if.end.i

if.then10.error_crit_edge:                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i:                                         ; preds = %if.then10
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i, i32 0, i32 11
  %16 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 2818055, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i.error_crit_edge, label %set_beep_amp.exit

if.end.i.error_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %17 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 2818055, ptr %private_value.1.i, align 4
  br label %if.end15

if.end15:                                         ; preds = %set_beep_amp.exit, %if.end6.if.end15_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i.error_crit_edge, %if.then10.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %if.then10.error_crit_edge ], [ -12, %if.end.i.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end15, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end15 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc262(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %shared_mic_vref_pin = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 39
  %2 = ptrtoint ptr %shared_mic_vref_pin to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 24, ptr %shared_mic_vref_pin, align 8
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %3 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @alc_eapd_shutup, ptr %shutup, align 4
  %4 = load ptr, ptr %spec1, align 8
  %pll_nid.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 26
  %5 = ptrtoint ptr %pll_nid.i to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 32, ptr %pll_nid.i, align 2
  %pll_coef_idx.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 27
  %6 = ptrtoint ptr %pll_coef_idx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 10, ptr %pll_coef_idx.i, align 4
  %pll_coef_bit.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 28
  %7 = ptrtoint ptr %pll_coef_bit.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 10, ptr %pll_coef_bit.i, align 8
  %8 = load ptr, ptr %spec1, align 8
  %pll_nid.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 26
  %9 = ptrtoint ptr %pll_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %pll_nid.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i.i, label %if.end.alc_fix_pll_init.exit_crit_edge, label %if.then.i.i

if.end.alc_fix_pll_init.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fix_pll_init.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %pll_coef_idx.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 27
  %11 = ptrtoint ptr %pll_coef_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pll_coef_idx.i.i, align 4
  %pll_coef_bit.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %pll_coef_bit.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pll_coef_bit.i.i, align 8
  %shl.i.i = shl nuw i32 1, %14
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext %10, i32 noundef %12, i32 noundef %shl.i.i, i32 noundef 0) #13
  br label %alc_fix_pll_init.exit

alc_fix_pll_init.exit:                            ; preds = %if.then.i.i, %if.end.alc_fix_pll_init.exit_crit_edge
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc262_fixup_models, ptr noundef nonnull @alc262_fixup_tbl, ptr noundef nonnull @alc262_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  tail call fastcc void @alc_auto_parse_customize_define(ptr noundef %codec)
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %17 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pci.i, align 4
  %call.i = tail call ptr @snd_pci_quirk_lookup(ptr noundef %20, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %alc_fix_pll_init.exit
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i, i32 0, i32 3
  %21 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %alc_fix_pll_init.exit
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 1, i32 5
  %23 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %22, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %has_cdefine_beep.exit.if.end6_crit_edge, label %if.then4

has_cdefine_beep.exit.if.end6_crit_edge:          ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

if.then4:                                         ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %24 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 1, ptr %beep_nid, align 2
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %has_cdefine_beep.exit.if.end6_crit_edge
  %25 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %26, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef nonnull @alc262_parse_auto_config.alc262_ignore, i32 noundef %28) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end6.error_crit_edge, label %if.end.i.i

if.end6.error_crit_edge:                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end6
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc262_parse_auto_config.alc262_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %29 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %30, i32 0, i32 23
  %31 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp.i.i.i = icmp eq i32 %32, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc262, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %33 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %if.end10

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end10:                                         ; preds = %if.end3.i.i
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %34 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %34, i32 8)
  %bf.load = load i64, ptr %no_analog, align 4
  %35 = and i64 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %35)
  %tobool12.not = icmp eq i64 %35, 0
  br i1 %tobool12.not, label %land.lhs.true, label %if.end10.if.end22_crit_edge

if.end10.if.end22_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end22

land.lhs.true:                                    ; preds = %if.end10
  %beep_nid14 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %36 = ptrtoint ptr %beep_nid14 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %beep_nid14, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %tobool15.not = icmp eq i16 %37, 0
  br i1 %tobool15.not, label %land.lhs.true.if.end22_crit_edge, label %if.then16

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end22

if.then16:                                        ; preds = %land.lhs.true
  %call.i44 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i45 = icmp eq ptr %call.i44, null
  br i1 %tobool.not.i45, label %if.then16.error_crit_edge, label %if.end.i46

if.then16.error_crit_edge:                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i46:                                       ; preds = %if.then16
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i44, i32 0, i32 11
  %38 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 2818059, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i46.error_crit_edge, label %set_beep_amp.exit

if.end.i46.error_crit_edge:                       ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %39 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 2818059, ptr %private_value.1.i, align 4
  br label %if.end22

if.end22:                                         ; preds = %set_beep_amp.exit, %land.lhs.true.if.end22_crit_edge, %if.end10.if.end22_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i46.error_crit_edge, %if.then16.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end6.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end6.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %if.then16.error_crit_edge ], [ -12, %if.end.i46.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end22, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end22 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc268(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %2 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pci.i, align 4
  %call.i = tail call ptr @snd_pci_quirk_lookup(ptr noundef %5, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i, i32 0, i32 3
  %6 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %8 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %7, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %has_cdefine_beep.exit.if.end4_crit_edge, label %if.then3

has_cdefine_beep.exit.if.end4_crit_edge:          ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then3:                                         ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %9 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 1, ptr %beep_nid, align 2
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %has_cdefine_beep.exit.if.end4_crit_edge
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %10 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @alc_eapd_shutup, ptr %shutup, align 4
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc268_fixup_models, ptr noundef nonnull @alc268_fixup_tbl, ptr noundef nonnull @alc268_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  %11 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %12, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef null, i32 noundef %14) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end4.error_crit_edge, label %if.end.i.i

if.end4.error_crit_edge:                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end4
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc268_parse_auto_config.alc268_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i.i.i = icmp eq i32 %18, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc268, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %19 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %land.lhs.true

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

land.lhs.true:                                    ; preds = %if.end3.i.i
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %20 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %bf.load = load i64, ptr %no_analog, align 4
  %21 = and i64 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %21)
  %tobool11.not = icmp eq i64 %21, 0
  br i1 %tobool11.not, label %land.lhs.true12, label %land.lhs.true.if.end31_crit_edge

land.lhs.true.if.end31_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

land.lhs.true12:                                  ; preds = %land.lhs.true
  %speaker_pins = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 3
  %22 = ptrtoint ptr %speaker_pins to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %speaker_pins, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 29, i16 %23)
  %cmp14.not = icmp eq i16 %23, 29
  br i1 %cmp14.not, label %land.lhs.true12.if.end31_crit_edge, label %for.body.preheader

land.lhs.true12.if.end31_crit_edge:               ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

for.body.preheader:                               ; preds = %land.lhs.true12
  %call21 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc268_beep_mixer) #13
  %tobool22.not = icmp eq ptr %call21, null
  br i1 %tobool22.not, label %for.body.preheader.error_crit_edge, label %for.cond

for.body.preheader.error_crit_edge:               ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

for.cond:                                         ; preds = %for.body.preheader
  %call21.1 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc268_beep_mixer, i32 0, i32 1)) #13
  %tobool22.not.1 = icmp eq ptr %call21.1, null
  br i1 %tobool22.not.1, label %for.cond.error_crit_edge, label %for.cond.1

for.cond.error_crit_edge:                         ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

for.cond.1:                                       ; preds = %for.cond
  %call25 = tail call i32 @snd_hda_add_verbs(ptr noundef %codec, ptr noundef nonnull @alc268_beep_init_verbs) #13
  %call26 = tail call i32 @query_amp_caps(ptr noundef %codec, i16 noundef zeroext 29, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.then28, label %for.cond.1.if.end31_crit_edge

for.cond.1.if.end31_crit_edge:                    ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

if.then28:                                        ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  %call29 = tail call i32 @snd_hda_override_amp_caps(ptr noundef %codec, i16 noundef zeroext 29, i32 noundef 0, i32 noundef 461836) #13
  br label %if.end31

if.end31:                                         ; preds = %if.then28, %for.cond.1.if.end31_crit_edge, %land.lhs.true12.if.end31_crit_edge, %land.lhs.true.if.end31_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %for.cond.error_crit_edge, %for.body.preheader.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end4.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end4.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %for.cond.error_crit_edge ], [ -12, %for.body.preheader.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end31, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end31 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc662(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc_eapd_shutup, ptr %shutup, align 4
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %parse_flags to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %parse_flags, align 4
  %4 = load ptr, ptr %spec1, align 8
  %pll_nid.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 26
  %5 = ptrtoint ptr %pll_nid.i to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 32, ptr %pll_nid.i, align 2
  %pll_coef_idx.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 27
  %6 = ptrtoint ptr %pll_coef_idx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 4, ptr %pll_coef_idx.i, align 4
  %pll_coef_bit.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 28
  %7 = ptrtoint ptr %pll_coef_bit.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 15, ptr %pll_coef_bit.i, align 8
  %8 = load ptr, ptr %spec1, align 8
  %pll_nid.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 26
  %9 = ptrtoint ptr %pll_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %pll_nid.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i.i, label %if.end.alc_fix_pll_init.exit_crit_edge, label %if.then.i.i

if.end.alc_fix_pll_init.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fix_pll_init.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %pll_coef_idx.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 27
  %11 = ptrtoint ptr %pll_coef_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pll_coef_idx.i.i, align 4
  %pll_coef_bit.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %pll_coef_bit.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pll_coef_bit.i.i, align 8
  %shl.i.i = shl nuw i32 1, %14
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext %10, i32 noundef %12, i32 noundef %shl.i.i, i32 noundef 0) #13
  br label %alc_fix_pll_init.exit

alc_fix_pll_init.exit:                            ; preds = %if.then.i.i, %if.end.alc_fix_pll_init.exit_crit_edge
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %15 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vendor_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 283903592, i32 %16)
  %cond = icmp eq i32 %16, 283903592
  br i1 %cond, label %sw.bb, label %alc_fix_pll_init.exit.sw.epilog_crit_edge

alc_fix_pll_init.exit.sw.epilog_crit_edge:        ; preds = %alc_fix_pll_init.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %alc_fix_pll_init.exit
  call void @__sanitizer_cov_trace_pc() #15
  %init_hook = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 20
  %17 = ptrtoint ptr %init_hook to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @alc668_restore_default_value, ptr %init_hook, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %alc_fix_pll_init.exit.sw.epilog_crit_edge
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc662_fixup_models, ptr noundef nonnull @alc662_fixup_tbl, ptr noundef nonnull @alc662_fixups) #13
  tail call void @snd_hda_pick_pin_fixup(ptr noundef %codec, ptr noundef nonnull @alc662_pin_fixup_tbl, ptr noundef nonnull @alc662_fixups, i1 noundef zeroext true) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  tail call fastcc void @alc_auto_parse_customize_define(ptr noundef %codec)
  %18 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %20 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pci.i, align 4
  %call.i = tail call ptr @snd_pci_quirk_lookup(ptr noundef %23, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i, i32 0, i32 3
  %24 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %19, i32 0, i32 1, i32 5
  %26 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %25, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %has_cdefine_beep.exit.if.end5_crit_edge, label %if.then4

has_cdefine_beep.exit.if.end5_crit_edge:          ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.then4:                                         ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %27 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 1, ptr %beep_nid, align 2
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %has_cdefine_beep.exit.if.end5_crit_edge
  %call6 = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and = and i32 %call6, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end5.if.end23_crit_edge, label %land.lhs.true

if.end5.if.end23_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

land.lhs.true:                                    ; preds = %if.end5
  %28 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %bus.i, align 8
  %pci = getelementptr inbounds %struct.hda_bus, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %pci to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pci, align 4
  %tobool8.not = icmp eq ptr %31, null
  br i1 %tobool8.not, label %land.lhs.true.if.end23_crit_edge, label %land.lhs.true9

land.lhs.true.if.end23_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

land.lhs.true9:                                   ; preds = %land.lhs.true
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %31, i32 0, i32 9
  %32 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 4133, i16 %33)
  %cmp12 = icmp eq i16 %33, 4133
  br i1 %cmp12, label %land.lhs.true14, label %land.lhs.true9.if.end23_crit_edge

land.lhs.true9.if.end23_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

land.lhs.true14:                                  ; preds = %land.lhs.true9
  %platform_type = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %34 = ptrtoint ptr %platform_type to i32
  call void @__asan_load1_noabort(i32 %34)
  %bf.load = load i8, ptr %platform_type, align 8
  %35 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %cmp15.not = icmp eq i8 %35, 0
  br i1 %cmp15.not, label %land.lhs.true14.if.end23_crit_edge, label %if.then17

land.lhs.true14.if.end23_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = tail call i32 @snd_hda_codec_set_name(ptr noundef %codec, ptr noundef nonnull @.str.886) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %if.then17.error_crit_edge, label %if.then17.if.end23_crit_edge

if.then17.if.end23_crit_edge:                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

if.then17.error_crit_edge:                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end23:                                         ; preds = %if.then17.if.end23_crit_edge, %land.lhs.true14.if.end23_crit_edge, %land.lhs.true9.if.end23_crit_edge, %land.lhs.true.if.end23_crit_edge, %if.end5.if.end23_crit_edge
  %call24 = tail call fastcc i32 @alc662_parse_auto_config(ptr noundef %codec)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %if.end23.error_crit_edge, label %if.end28

if.end23.error_crit_edge:                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end28:                                         ; preds = %if.end23
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %36 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %bf.load30 = load i64, ptr %no_analog, align 4
  %37 = and i64 %bf.load30, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %37)
  %tobool34.not = icmp eq i64 %37, 0
  br i1 %tobool34.not, label %land.lhs.true35, label %if.end28.if.end54_crit_edge

if.end28.if.end54_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

land.lhs.true35:                                  ; preds = %if.end28
  %beep_nid37 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %38 = ptrtoint ptr %beep_nid37 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %beep_nid37, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %39)
  %tobool39.not = icmp eq i16 %39, 0
  br i1 %tobool39.not, label %land.lhs.true35.if.end54_crit_edge, label %if.then40

land.lhs.true35.if.end54_crit_edge:               ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then40:                                        ; preds = %land.lhs.true35
  %40 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %vendor_id, align 8
  %42 = zext i32 %41 to i64
  call void @__sanitizer_cov_trace_switch(i64 %42, ptr @__sancov_gen_cov_switch_values.1227)
  switch i32 %41, label %if.then40.if.end54_crit_edge [
    i32 283903586, label %if.then40.sw.epilog49_crit_edge
    i32 283902578, label %if.then40.sw.bb45_crit_edge
    i32 283903587, label %if.then40.sw.bb45_crit_edge98
    i32 283903589, label %if.then40.sw.bb45_crit_edge99
    i32 283903592, label %if.then40.sw.bb45_crit_edge100
    i32 283902579, label %sw.bb47
  ]

if.then40.sw.bb45_crit_edge100:                   ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb45

if.then40.sw.bb45_crit_edge99:                    ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb45

if.then40.sw.bb45_crit_edge98:                    ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb45

if.then40.sw.bb45_crit_edge:                      ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb45

if.then40.sw.epilog49_crit_edge:                  ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog49

if.then40.if.end54_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

sw.bb45:                                          ; preds = %if.then40.sw.bb45_crit_edge, %if.then40.sw.bb45_crit_edge98, %if.then40.sw.bb45_crit_edge99, %if.then40.sw.bb45_crit_edge100
  %call.i88 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i89 = icmp eq ptr %call.i88, null
  br i1 %tobool.not.i89, label %sw.bb45.error_crit_edge, label %if.end.i90

sw.bb45.error_crit_edge:                          ; preds = %sw.bb45
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i90:                                       ; preds = %sw.bb45
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i88, i32 0, i32 11
  %43 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 2293771, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i90.error_crit_edge, label %if.end.1.i

if.end.i90.error_crit_edge:                       ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.1.i:                                       ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %44 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 2293771, ptr %private_value.1.i, align 4
  br label %if.end54

sw.bb47:                                          ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog49

sw.epilog49:                                      ; preds = %sw.bb47, %if.then40.sw.epilog49_crit_edge
  %.sink = phi i32 [ 3, %sw.bb47 ], [ 5, %if.then40.sw.epilog49_crit_edge ]
  %call48 = tail call fastcc i32 @set_beep_amp(ptr noundef %1, i16 noundef zeroext 11, i32 noundef %.sink, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %cmp50 = icmp slt i32 %call48, 0
  br i1 %cmp50, label %sw.epilog49.error_crit_edge, label %sw.epilog49.if.end54_crit_edge

sw.epilog49.if.end54_crit_edge:                   ; preds = %sw.epilog49
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

sw.epilog49.error_crit_edge:                      ; preds = %sw.epilog49
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end54:                                         ; preds = %sw.epilog49.if.end54_crit_edge, %if.end.1.i, %if.then40.if.end54_crit_edge, %land.lhs.true35.if.end54_crit_edge, %if.end28.if.end54_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %sw.epilog49.error_crit_edge, %if.end.i90.error_crit_edge, %sw.bb45.error_crit_edge, %if.end23.error_crit_edge, %if.then17.error_crit_edge
  %err.1 = phi i32 [ %call18, %if.then17.error_crit_edge ], [ %call24, %if.end23.error_crit_edge ], [ %call48, %sw.epilog49.error_crit_edge ], [ -12, %sw.bb45.error_crit_edge ], [ -12, %if.end.i90.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end54, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %error ], [ 0, %if.end54 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc861(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 21)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %2 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pci.i, align 4
  %call.i = tail call ptr @snd_pci_quirk_lookup(ptr noundef %5, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i, i32 0, i32 3
  %6 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %8 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %7, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %has_cdefine_beep.exit.if.end4_crit_edge, label %if.then3

has_cdefine_beep.exit.if.end4_crit_edge:          ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then3:                                         ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %9 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 35, ptr %beep_nid, align 2
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %has_cdefine_beep.exit.if.end4_crit_edge
  %power_hook = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 21
  %10 = ptrtoint ptr %power_hook to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @alc_power_eapd, ptr %power_hook, align 8
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef null, ptr noundef nonnull @alc861_fixup_tbl, ptr noundef nonnull @alc861_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  %11 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %12, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef nonnull @alc861_parse_auto_config.alc861_ignore, i32 noundef %14) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end4.error_crit_edge, label %if.end.i.i

if.end4.error_crit_edge:                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end4
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc861_parse_auto_config.alc861_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i.i.i = icmp eq i32 %18, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc861, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %19 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %if.end8

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end8:                                          ; preds = %if.end3.i.i
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %20 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %bf.load = load i64, ptr %no_analog, align 4
  %21 = and i64 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %21)
  %tobool10.not = icmp eq i64 %21, 0
  br i1 %tobool10.not, label %if.then11, label %if.end8.if.end16_crit_edge

if.end8.if.end16_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.then11:                                        ; preds = %if.end8
  %call.i33 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i34 = icmp eq ptr %call.i33, null
  br i1 %tobool.not.i34, label %if.then11.error_crit_edge, label %if.end.i35

if.then11.error_crit_edge:                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i35:                                       ; preds = %if.then11
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i33, i32 0, i32 11
  %22 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 458787, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i35.error_crit_edge, label %set_beep_amp.exit

if.end.i35.error_crit_edge:                       ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %23 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 458787, ptr %private_value.1.i, align 4
  br label %if.end16

if.end16:                                         ; preds = %set_beep_amp.exit, %if.end8.if.end16_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i35.error_crit_edge, %if.then11.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end4.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end4.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %if.then11.error_crit_edge ], [ -12, %if.end.i35.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end16, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end16 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc861vd(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %2 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pci.i, align 4
  %call.i = tail call ptr @snd_pci_quirk_lookup(ptr noundef %5, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i, i32 0, i32 3
  %6 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %8 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %7, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %has_cdefine_beep.exit.if.end4_crit_edge, label %if.then3

has_cdefine_beep.exit.if.end4_crit_edge:          ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then3:                                         ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %9 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 35, ptr %beep_nid, align 2
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %has_cdefine_beep.exit.if.end4_crit_edge
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %10 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @alc_eapd_shutup, ptr %shutup, align 4
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef null, ptr noundef nonnull @alc861vd_fixup_tbl, ptr noundef nonnull @alc861vd_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  %11 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %12, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef nonnull @alc861vd_parse_auto_config.alc861vd_ignore, i32 noundef %14) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end4.error_crit_edge, label %if.end.i.i

if.end4.error_crit_edge:                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end4
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc861vd_parse_auto_config.alc861vd_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i.i.i = icmp eq i32 %18, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc861vd, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %19 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %if.end8

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end8:                                          ; preds = %if.end3.i.i
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %20 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %bf.load = load i64, ptr %no_analog, align 4
  %21 = and i64 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %21)
  %tobool10.not = icmp eq i64 %21, 0
  br i1 %tobool10.not, label %if.then11, label %if.end8.if.end16_crit_edge

if.end8.if.end16_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.then11:                                        ; preds = %if.end8
  %call.i33 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i34 = icmp eq ptr %call.i33, null
  br i1 %tobool.not.i34, label %if.then11.error_crit_edge, label %if.end.i35

if.then11.error_crit_edge:                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i35:                                       ; preds = %if.then11
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i33, i32 0, i32 11
  %22 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 2818059, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i35.error_crit_edge, label %set_beep_amp.exit

if.end.i35.error_crit_edge:                       ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %23 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 2818059, ptr %private_value.1.i, align 4
  br label %if.end16

if.end16:                                         ; preds = %set_beep_amp.exit, %if.end8.if.end16_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i35.error_crit_edge, %if.then11.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end4.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end4.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %if.then11.error_crit_edge ], [ -12, %if.end.i35.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end16, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end16 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc882(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %2 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vendor_id, align 8
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.1228)
  switch i32 %3, label %sw.default [
    i32 283904130, label %if.end.sw.epilog_crit_edge
    i32 283904133, label %if.end.sw.epilog_crit_edge51
    i32 283904256, label %if.end.sw.epilog_crit_edge52
    i32 283904768, label %if.end.sw.epilog_crit_edge53
    i32 283906592, label %if.end.sw.epilog_crit_edge54
  ]

if.end.sw.epilog_crit_edge54:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.sw.epilog_crit_edge53:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.sw.epilog_crit_edge52:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.sw.epilog_crit_edge51:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %pll_nid.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 26
  %5 = ptrtoint ptr %pll_nid.i to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 32, ptr %pll_nid.i, align 2
  %pll_coef_idx.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 27
  %6 = ptrtoint ptr %pll_coef_idx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 10, ptr %pll_coef_idx.i, align 4
  %pll_coef_bit.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 28
  %7 = ptrtoint ptr %pll_coef_bit.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 10, ptr %pll_coef_bit.i, align 8
  %8 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1, align 8
  %pll_nid.i.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 26
  %10 = ptrtoint ptr %pll_nid.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %pll_nid.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i.i = icmp eq i16 %11, 0
  br i1 %tobool.not.i.i, label %sw.default.sw.epilog_crit_edge, label %if.then.i.i

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then.i.i:                                      ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  %pll_coef_idx.i.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 27
  %12 = ptrtoint ptr %pll_coef_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pll_coef_idx.i.i, align 4
  %pll_coef_bit.i.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 28
  %14 = ptrtoint ptr %pll_coef_bit.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pll_coef_bit.i.i, align 8
  %shl.i.i = shl nuw i32 1, %15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext %11, i32 noundef %13, i32 noundef %shl.i.i, i32 noundef 0) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.i.i, %sw.default.sw.epilog_crit_edge, %if.end.sw.epilog_crit_edge, %if.end.sw.epilog_crit_edge51, %if.end.sw.epilog_crit_edge52, %if.end.sw.epilog_crit_edge53, %if.end.sw.epilog_crit_edge54
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc882_fixup_models, ptr noundef nonnull @alc882_fixup_tbl, ptr noundef nonnull @alc882_fixups) #13
  tail call void @snd_hda_pick_pin_fixup(ptr noundef %codec, ptr noundef nonnull @alc882_pin_fixup_tbl, ptr noundef nonnull @alc882_fixups, i1 noundef zeroext true) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  tail call fastcc void @alc_auto_parse_customize_define(ptr noundef %codec)
  %16 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spec1, align 8
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %18 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pci.i, align 4
  %call.i = tail call ptr @snd_pci_quirk_lookup(ptr noundef %21, ptr noundef nonnull @beep_allow_list) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %value.i = getelementptr inbounds %struct.snd_pci_quirk, ptr %call.i, i32 0, i32 3
  %22 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %value.i, align 4
  br label %has_cdefine_beep.exit

if.end.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %enable_pcbeep.i = getelementptr inbounds %struct.alc_spec, ptr %17, i32 0, i32 1, i32 5
  %24 = ptrtoint ptr %enable_pcbeep.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i = load i8, ptr %enable_pcbeep.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %has_cdefine_beep.exit

has_cdefine_beep.exit:                            ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %23, %if.then.i ], [ %bf.cast.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %has_cdefine_beep.exit.if.end5_crit_edge, label %if.then4

has_cdefine_beep.exit.if.end5_crit_edge:          ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.then4:                                         ; preds = %has_cdefine_beep.exit
  call void @__sanitizer_cov_trace_pc() #15
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %25 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 1, ptr %beep_nid, align 2
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %has_cdefine_beep.exit.if.end5_crit_edge
  %26 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %27, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef nonnull @alc882_parse_auto_config.alc882_ignore, i32 noundef %29) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end5.error_crit_edge, label %if.end.i.i

if.end5.error_crit_edge:                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end5
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc882_parse_auto_config.alc882_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %30 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %31, i32 0, i32 23
  %32 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp.i.i.i = icmp eq i32 %33, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc882, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %34 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %if.end9

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end9:                                          ; preds = %if.end3.i.i
  %no_analog = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %35 = ptrtoint ptr %no_analog to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %bf.load = load i64, ptr %no_analog, align 4
  %36 = and i64 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %36)
  %tobool11.not = icmp eq i64 %36, 0
  br i1 %tobool11.not, label %land.lhs.true, label %if.end9.if.end21_crit_edge

if.end9.if.end21_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

land.lhs.true:                                    ; preds = %if.end9
  %beep_nid13 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %37 = ptrtoint ptr %beep_nid13 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %beep_nid13, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %38)
  %tobool14.not = icmp eq i16 %38, 0
  br i1 %tobool14.not, label %land.lhs.true.if.end21_crit_edge, label %if.then15

land.lhs.true.if.end21_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.then15:                                        ; preds = %land.lhs.true
  %call.i43 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i44 = icmp eq ptr %call.i43, null
  br i1 %tobool.not.i44, label %if.then15.error_crit_edge, label %if.end.i45

if.then15.error_crit_edge:                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i45:                                       ; preds = %if.then15
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i43, i32 0, i32 11
  %39 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 2818059, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i45.error_crit_edge, label %set_beep_amp.exit

if.end.i45.error_crit_edge:                       ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %40 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 2818059, ptr %private_value.1.i, align 4
  br label %if.end21

if.end21:                                         ; preds = %set_beep_amp.exit, %land.lhs.true.if.end21_crit_edge, %if.end9.if.end21_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i45.error_crit_edge, %if.then15.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end5.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end5.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %if.then15.error_crit_edge ], [ -12, %if.end.i45.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end21, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end21 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc680(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef null, i32 noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end.if.then3_crit_edge, label %if.end.i.i

if.end.if.then3_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3

if.end.i.i:                                       ; preds = %if.end
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end.i.i.if.then3_crit_edge, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.if.then3_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3

if.then3:                                         ; preds = %if.end.i.i.if.then3_crit_edge, %if.end.if.then3_crit_edge
  %retval.0.i.i.ph = phi i32 [ %call.i.i, %if.end.if.then3_crit_edge ], [ %call4.i.i, %if.end.i.i.if.then3_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.end.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i.i.ph, %if.then3 ], [ %call, %entry.cleanup_crit_edge ], [ 0, %if.end.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @patch_alc880(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %need_dac_fix = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %need_dac_fix to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %need_dac_fix, align 4
  %bf.set = or i64 %bf.load, 70368744177664
  store i64 %bf.set, ptr %need_dac_fix, align 4
  %beep_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 67
  %3 = ptrtoint ptr %beep_nid to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 1, ptr %beep_nid, align 2
  %unsol_event = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 4
  %4 = ptrtoint ptr %unsol_event to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @alc880_unsol_event, ptr %unsol_event, align 8
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  tail call void @snd_hda_pick_fixup(ptr noundef %codec, ptr noundef nonnull @alc880_fixup_models, ptr noundef nonnull @alc880_fixup_tbl, ptr noundef nonnull @alc880_fixups) #13
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 0) #13
  %5 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1, align 8
  %autocfg.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %6, i32 0, i32 33
  %parse_flags.i.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %parse_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %parse_flags.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i.i, ptr noundef nonnull @alc880_parse_auto_config.alc880_ignore, i32 noundef %8) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end.error_crit_edge, label %if.end.i.i

if.end.error_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i.i:                                       ; preds = %if.end
  %call.i.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull @alc880_parse_auto_config.alc880_ssids) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.i.if.end3.i.i_crit_edge

if.end.i.i.if.end3.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %9 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1, align 8
  %init_amp.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 23
  %11 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %init_amp.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i.i.i = icmp eq i32 %12, 0
  br i1 %cmp.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i.if.end3.i.i_crit_edge

if.then.i.i.i.if.end3.i.i_crit_edge:              ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i.i

do.body.i.i.i:                                    ; preds = %if.then.i.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@patch_alc880, %if.then7.i.i.i)) #13
          to label %do.end.i.i.i [label %if.then7.i.i.i], !srcloc !2188

if.then7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then7.i.i.i, %do.body.i.i.i
  %13 = ptrtoint ptr %init_amp.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2, ptr %init_amp.i.i.i, align 8
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %do.end.i.i.i, %if.then.i.i.i.if.end3.i.i_crit_edge, %if.end.i.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.end3.i.i.error_crit_edge, label %if.end6

if.end3.i.i.error_crit_edge:                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end6:                                          ; preds = %if.end3.i.i
  %14 = ptrtoint ptr %need_dac_fix to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %bf.load8 = load i64, ptr %need_dac_fix, align 4
  %15 = and i64 %bf.load8, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not = icmp eq i64 %15, 0
  br i1 %tobool.not, label %if.then10, label %if.end6.if.end15_crit_edge

if.end6.if.end15_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

if.then10:                                        ; preds = %if.end6
  %call.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then10.error_crit_edge, label %if.end.i

if.then10.error_crit_edge:                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

if.end.i:                                         ; preds = %if.then10
  %private_value.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.i, i32 0, i32 11
  %16 = ptrtoint ptr %private_value.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 2818059, ptr %private_value.i, align 4
  %call.1.i = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %1, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i.error_crit_edge, label %set_beep_amp.exit

if.end.i.error_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %error

set_beep_amp.exit:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1.i = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1.i, i32 0, i32 11
  %17 = ptrtoint ptr %private_value.1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 2818059, ptr %private_value.1.i, align 4
  br label %if.end15

if.end15:                                         ; preds = %set_beep_amp.exit, %if.end6.if.end15_crit_edge
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 1) #13
  br label %cleanup

error:                                            ; preds = %if.end.i.error_crit_edge, %if.then10.error_crit_edge, %if.end3.i.i.error_crit_edge, %if.end.error_crit_edge
  %err.0 = phi i32 [ %call.i.i, %if.end.error_crit_edge ], [ %call4.i.i, %if.end3.i.i.error_crit_edge ], [ -12, %if.then10.error_crit_edge ], [ -12, %if.end.i.error_crit_edge ]
  tail call void @snd_hda_gen_free(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end15, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %error ], [ 0, %if.end15 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc_alloc_spec(ptr noundef %codec, i16 noundef zeroext %mixer_nid) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 13) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 13), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 6200) #16
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call7.i.i, ptr %spec1, align 8
  %call2 = tail call i32 @snd_hda_gen_spec_init(ptr noundef nonnull %call7.i.i) #13
  %mixer_nid4 = getelementptr inbounds %struct.hda_gen_spec, ptr %call7.i.i, i32 0, i32 18
  %2 = ptrtoint ptr %mixer_nid4 to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 %mixer_nid, ptr %mixer_nid4, align 2
  %own_eapd_ctl = getelementptr inbounds %struct.hda_gen_spec, ptr %call7.i.i, i32 0, i32 58
  %3 = ptrtoint ptr %own_eapd_ctl to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load = load i64, ptr %own_eapd_ctl, align 4
  %bf.set = or i64 %bf.load, 549755813888
  store i64 %bf.set, ptr %own_eapd_ctl, align 4
  %single_adc_amp = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %4 = ptrtoint ptr %single_adc_amp to i32
  call void @__asan_load4_noabort(i32 %4)
  %bf.load6 = load i32, ptr %single_adc_amp, align 4
  %bf.set14 = or i32 %bf.load6, 167772672
  store i32 %bf.set14, ptr %single_adc_amp, align 4
  %patch_ops = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7
  %5 = call ptr @memcpy(ptr %patch_ops, ptr @alc_patch_ops, i32 40)
  %coef_mutex = getelementptr inbounds %struct.alc_spec, ptr %call7.i.i, i32 0, i32 15
  tail call void @__mutex_init(ptr noundef %coef_mutex, ptr noundef nonnull @.str.80, ptr noundef nonnull @alc_alloc_spec.__key) #13
  %vendor_id2.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end
  %6 = phi i32 [ 283902497, %if.end ], [ %14, %for.inc.i.for.body.i_crit_edge ]
  %p.068.i = phi ptr [ @rename_tbl, %if.end ], [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ]
  %7 = ptrtoint ptr %vendor_id2.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vendor_id2.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp.not.i = icmp eq i32 %6, %8
  br i1 %cmp.not.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %call.i = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec) #13
  %coef_mask.i = getelementptr inbounds %struct.alc_codec_rename_table, ptr %p.068.i, i32 0, i32 1
  %9 = ptrtoint ptr %coef_mask.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %coef_mask.i, align 4
  %conv.i = zext i16 %10 to i32
  %and.i = and i32 %call.i, %conv.i
  %coef_bits.i = getelementptr inbounds %struct.alc_codec_rename_table, ptr %p.068.i, i32 0, i32 2
  %11 = ptrtoint ptr %coef_bits.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %coef_bits.i, align 2
  %conv3.i = zext i16 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %conv3.i)
  %cmp4.i = icmp eq i32 %and.i, %conv3.i
  br i1 %cmp4.i, label %if.then6.i, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %name.i = getelementptr inbounds %struct.alc_codec_rename_table, ptr %p.068.i, i32 0, i32 3
  br label %alc_codec_rename_from_preset.exit

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.alc_codec_rename_table, ptr %p.068.i, i32 1
  %13 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %incdec.ptr.i, align 4
  %tobool.not.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %15 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bus.i, align 8
  %pci.i = getelementptr inbounds %struct.hda_bus, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %pci.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pci.i, align 4
  %tobool9.not.i = icmp eq ptr %18, null
  br i1 %tobool9.not.i, label %for.end.i.cleanup_crit_edge, label %for.cond12.preheader.i

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond12.preheader.i:                           ; preds = %for.end.i
  %19 = ptrtoint ptr %vendor_id2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vendor_id2.i, align 8
  %subsystem_vendor.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 9
  %subsystem_device.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 10
  br label %for.body14.i

for.body14.i:                                     ; preds = %for.inc42.i.for.body14.i_crit_edge, %for.cond12.preheader.i
  %21 = phi i32 [ 283902592, %for.cond12.preheader.i ], [ %31, %for.inc42.i.for.body14.i_crit_edge ]
  %q.070.i = phi ptr [ @rename_pci_tbl, %for.cond12.preheader.i ], [ %incdec.ptr43.i, %for.inc42.i.for.body14.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp18.not.i = icmp eq i32 %21, %20
  br i1 %cmp18.not.i, label %if.end21.i, label %for.body14.i.for.inc42.i_crit_edge

for.body14.i.for.inc42.i_crit_edge:               ; preds = %for.body14.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc42.i

if.end21.i:                                       ; preds = %for.body14.i
  %pci_subvendor.i = getelementptr inbounds %struct.alc_codec_rename_pci_table, ptr %q.070.i, i32 0, i32 1
  %22 = ptrtoint ptr %pci_subvendor.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %pci_subvendor.i, align 4
  %24 = ptrtoint ptr %subsystem_vendor.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %subsystem_vendor.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %25)
  %cmp26.not.i = icmp eq i16 %23, %25
  br i1 %cmp26.not.i, label %if.end29.i, label %if.end21.i.for.inc42.i_crit_edge

if.end21.i.for.inc42.i_crit_edge:                 ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc42.i

if.end29.i:                                       ; preds = %if.end21.i
  %pci_subdevice.i = getelementptr inbounds %struct.alc_codec_rename_pci_table, ptr %q.070.i, i32 0, i32 2
  %26 = ptrtoint ptr %pci_subdevice.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %pci_subdevice.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool30.not.i = icmp eq i16 %27, 0
  br i1 %tobool30.not.i, label %if.end29.i.if.then38.i_crit_edge, label %lor.lhs.false.i

if.end29.i.if.then38.i_crit_edge:                 ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then38.i

lor.lhs.false.i:                                  ; preds = %if.end29.i
  %28 = ptrtoint ptr %subsystem_device.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %subsystem_device.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %27, i16 %29)
  %cmp36.i = icmp eq i16 %27, %29
  br i1 %cmp36.i, label %lor.lhs.false.i.if.then38.i_crit_edge, label %lor.lhs.false.i.for.inc42.i_crit_edge

lor.lhs.false.i.for.inc42.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc42.i

lor.lhs.false.i.if.then38.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then38.i

if.then38.i:                                      ; preds = %lor.lhs.false.i.if.then38.i_crit_edge, %if.end29.i.if.then38.i_crit_edge
  %name39.i = getelementptr inbounds %struct.alc_codec_rename_pci_table, ptr %q.070.i, i32 0, i32 3
  br label %alc_codec_rename_from_preset.exit

for.inc42.i:                                      ; preds = %lor.lhs.false.i.for.inc42.i_crit_edge, %if.end21.i.for.inc42.i_crit_edge, %for.body14.i.for.inc42.i_crit_edge
  %incdec.ptr43.i = getelementptr %struct.alc_codec_rename_pci_table, ptr %q.070.i, i32 1
  %30 = ptrtoint ptr %incdec.ptr43.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %incdec.ptr43.i, align 4
  %tobool13.not.i = icmp eq i32 %31, 0
  br i1 %tobool13.not.i, label %for.inc42.i.cleanup_crit_edge, label %for.inc42.i.for.body14.i_crit_edge

for.inc42.i.for.body14.i_crit_edge:               ; preds = %for.inc42.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body14.i

for.inc42.i.cleanup_crit_edge:                    ; preds = %for.inc42.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

alc_codec_rename_from_preset.exit:                ; preds = %if.then38.i, %if.then6.i
  %name39.sink.i = phi ptr [ %name39.i, %if.then38.i ], [ %name.i, %if.then6.i ]
  %32 = ptrtoint ptr %name39.sink.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %name39.sink.i, align 4
  %call40.i = tail call i32 @snd_hda_codec_set_name(ptr noundef %codec, ptr noundef %33) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40.i)
  %cmp = icmp slt i32 %call40.i, 0
  br i1 %cmp, label %if.then16, label %alc_codec_rename_from_preset.exit.cleanup_crit_edge

alc_codec_rename_from_preset.exit.cleanup_crit_edge: ; preds = %alc_codec_rename_from_preset.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then16:                                        ; preds = %alc_codec_rename_from_preset.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then16, %alc_codec_rename_from_preset.exit.cleanup_crit_edge, %for.inc42.i.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call40.i, %if.then16 ], [ -12, %entry.cleanup_crit_edge ], [ 0, %alc_codec_rename_from_preset.exit.cleanup_crit_edge ], [ 0, %for.end.i.cleanup_crit_edge ], [ 0, %for.inc42.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc269_suspend(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i.i = tail call i32 @snd_hda_get_bool_hint(ptr noundef %codec, ptr noundef nonnull @.str.81) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %entry.alc_shutup.exit.i_crit_edge, label %if.end.i.i

entry.alc_shutup.exit.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_shutup.exit.i

if.end.i.i:                                       ; preds = %entry
  %tobool2.not.i.i = icmp eq ptr %1, null
  br i1 %tobool2.not.i.i, label %if.end.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

if.end.i.i.if.else.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %shutup.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %shutup.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shutup.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %3, null
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %alc_shutup.exit.thread.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i

alc_shutup.exit.thread.i:                         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %3(ptr noundef %codec) #13
  br label %land.lhs.true.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %if.end.i.i.if.else.i.i_crit_edge
  tail call fastcc void @alc_shutup_pins(ptr noundef %codec) #13
  br label %alc_shutup.exit.i

alc_shutup.exit.i:                                ; preds = %if.else.i.i, %entry.alc_shutup.exit.i_crit_edge
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %alc_shutup.exit.i.alc_suspend.exit_crit_edge, label %alc_shutup.exit.i.land.lhs.true.i_crit_edge

alc_shutup.exit.i.land.lhs.true.i_crit_edge:      ; preds = %alc_shutup.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i

alc_shutup.exit.i.alc_suspend.exit_crit_edge:     ; preds = %alc_shutup.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_suspend.exit

land.lhs.true.i:                                  ; preds = %alc_shutup.exit.i.land.lhs.true.i_crit_edge, %alc_shutup.exit.thread.i
  %power_hook.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 21
  %4 = ptrtoint ptr %power_hook.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %power_hook.i, align 8
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.alc_suspend.exit_crit_edge, label %if.then.i

land.lhs.true.i.alc_suspend.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_suspend.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %5(ptr noundef %codec) #13
  br label %alc_suspend.exit

alc_suspend.exit:                                 ; preds = %if.then.i, %land.lhs.true.i.alc_suspend.exit_crit_edge, %alc_shutup.exit.i.alc_suspend.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc269_resume(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %2 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %if.end, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

if.end:                                           ; preds = %entry
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 2048, i32 noundef 0) #13
  %4 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pr = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp3 = icmp eq i32 %.pr, 1
  br i1 %cmp3, label %land.lhs.true, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %call = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and = and i32 %call, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and)
  %cmp4 = icmp eq i32 %and, 24
  br i1 %cmp4, label %if.then5, label %land.lhs.true.if.end6_crit_edge

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 150) #13
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true.if.end6_crit_edge, %if.end.if.end6_crit_edge, %entry.if.end6_crit_edge
  %init = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 2
  %5 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %init, align 8
  %call7 = tail call i32 %6(ptr noundef %codec) #13
  %7 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp9 = icmp eq i32 %8, 1
  br i1 %cmp9, label %if.end11, label %if.end6.if.end19_crit_edge

if.end6.if.end19_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.end11:                                         ; preds = %if.end6
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 2048, i32 noundef 2048) #13
  %9 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pr41 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr41)
  %cmp13 = icmp eq i32 %.pr41, 1
  br i1 %cmp13, label %land.lhs.true14, label %if.end11.if.end19_crit_edge

if.end11.if.end19_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

land.lhs.true14:                                  ; preds = %if.end11
  %call15 = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and16 = and i32 %call15, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %and16)
  %cmp17 = icmp eq i32 %and16, 23
  br i1 %cmp17, label %if.then18, label %land.lhs.true14.if.end19_crit_edge

land.lhs.true14.if.end19_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.then18:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 200) #13
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %land.lhs.true14.if.end19_crit_edge, %if.end11.if.end19_crit_edge, %if.end6.if.end19_crit_edge
  tail call void @snd_hdac_regmap_sync(ptr noundef %codec) #13
  %check_power_status.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 8
  %10 = ptrtoint ptr %check_power_status.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %check_power_status.i, align 8
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.end19.hda_call_check_power_status.exit_crit_edge, label %if.then.i

if.end19.hda_call_check_power_status.exit_crit_edge: ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %hda_call_check_power_status.exit

if.then.i:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call i32 %11(ptr noundef %codec, i16 noundef zeroext 1) #13
  br label %hda_call_check_power_status.exit

hda_call_check_power_status.exit:                 ; preds = %if.then.i, %if.end19.hda_call_check_power_status.exit_crit_edge
  %gpio_data = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %gpio_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gpio_data, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not = icmp eq i32 %13, 0
  br i1 %tobool.not, label %hda_call_check_power_status.exit.if.end22_crit_edge, label %if.then21

hda_call_check_power_status.exit.if.end22_crit_edge: ; preds = %hda_call_check_power_status.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end22

if.then21:                                        ; preds = %hda_call_check_power_status.exit
  call void @__sanitizer_cov_trace_pc() #15
  %14 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1, align 8
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 5
  %16 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %gpio_data.i, align 8
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %17) #13
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %hda_call_check_power_status.exit.if.end22_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_default_shutup(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.if.then_crit_edge

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.if.then_crit_edge, label %alc_get_hp_pin.exit.if.end_crit_edge

alc_get_hp_pin.exit.if.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

alc_get_hp_pin.exit.if.then_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then:                                          ; preds = %alc_get_hp_pin.exit.if.then_crit_edge, %if.end.i.if.then_crit_edge
  %codec_variant.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %8 = ptrtoint ptr %codec_variant.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %codec_variant.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i31 = icmp eq i32 %9, 1
  br i1 %cmp.i31, label %if.end.i32, label %if.then.alc269_shutup.exit_crit_edge

if.then.alc269_shutup.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

if.end.i32:                                       ; preds = %if.then
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 2048, i32 noundef 0) #13
  %10 = ptrtoint ptr %codec_variant.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pr.i = load i32, ptr %codec_variant.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr.i)
  %cmp3.i = icmp eq i32 %.pr.i, 1
  br i1 %cmp3.i, label %land.lhs.true.i, label %if.end.i32.alc269_shutup.exit_crit_edge

if.end.i32.alc269_shutup.exit_crit_edge:          ; preds = %if.end.i32
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

land.lhs.true.i:                                  ; preds = %if.end.i32
  %call.i = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec) #13
  %and.i = and i32 %call.i, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and.i)
  %cmp4.i = icmp eq i32 %and.i, 24
  br i1 %cmp4.i, label %if.then5.i, label %land.lhs.true.i.alc269_shutup.exit_crit_edge

land.lhs.true.i.alc269_shutup.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

if.then5.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 150) #13
  br label %alc269_shutup.exit

alc269_shutup.exit:                               ; preds = %if.then5.i, %land.lhs.true.i.alc269_shutup.exit_crit_edge, %if.end.i32.alc269_shutup.exit_crit_edge, %if.then.alc269_shutup.exit_crit_edge
  tail call fastcc void @alc_shutup_pins(ptr noundef %codec) #13
  br label %cleanup

if.end:                                           ; preds = %alc_get_hp_pin.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i43 = phi i16 [ %7, %alc_get_hp_pin.exit.if.end_crit_edge ], [ %3, %entry.if.end_crit_edge ]
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i43, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i.not, label %if.end9.critedge, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  %call.i33 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i43, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 85) #13
  br label %if.end9

if.end9.critedge:                                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i34 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i43, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.end9

if.end9:                                          ; preds = %if.end9.critedge, %if.then4
  %no_shutup_pins = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %11 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load = load i8, ptr %no_shutup_pins, align 8
  %12 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool10.not = icmp eq i8 %12, 0
  br i1 %tobool10.not, label %if.then11, label %if.end9.if.end13_crit_edge

if.end9.if.end13_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then11:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  %call.i35 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i43, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9.if.end13_crit_edge
  br i1 %cmp.i.i.not, label %if.end13.if.end16_crit_edge, label %if.then15

if.end13.if.end16_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end13.if.end16_crit_edge
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %if.end16
  %13 = phi i16 [ 15, %if.end16 ], [ %27, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %if.end16 ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %13 to i32
  %14 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %15 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %13)
  %cmp.i.i.i = icmp ugt i16 %15, %13
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %16 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %17, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %18 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %19, i32 %sub.i.i.i
  %20 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx.i.i.i, align 4
  %22 = and i32 %21, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %22)
  %cmp.not.i.i = icmp eq i32 %22, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %23 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %13, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %24 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %25, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %13, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %26 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i36 = icmp eq i16 %27, 0
  br i1 %tobool.not.i36, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @alc_shutup_pins(ptr noundef %codec)
  br label %cleanup

cleanup:                                          ; preds = %alc_auto_setup_eapd.exit, %alc269_shutup.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_default_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.cleanup_crit_edge, label %alc_get_hp_pin.exit.if.end_crit_edge

alc_get_hp_pin.exit.if.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

alc_get_hp_pin.exit.cleanup_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %alc_get_hp_pin.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i32 = phi i16 [ %7, %alc_get_hp_pin.exit.if.end_crit_edge ], [ %3, %entry.if.end_crit_edge ]
  tail call void @msleep(i32 noundef 30) #13
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i32, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i.not, label %if.end9.critedge, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i32, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 85) #13
  %call.i24 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i32, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  tail call void @msleep(i32 noundef 100) #13
  br label %cleanup

if.end9.critedge:                                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i25 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i32, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  %call.i26 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i32, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end9.critedge, %if.then4, %alc_get_hp_pin.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc_get_coef0(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %coef0 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 29
  %2 = ptrtoint ptr %coef0 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %coef0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 0) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %6 = ptrtoint ptr %coef0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call.i4.i.i, ptr %coef0, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %7 = ptrtoint ptr %coef0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %coef0, align 4
  ret i32 %8
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_codec_set_name(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_fix_pll_init(ptr noundef %codec, i32 noundef %coef_idx, i32 noundef %coef_bit) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %pll_nid = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 26
  %2 = ptrtoint ptr %pll_nid to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 32, ptr %pll_nid, align 2
  %pll_coef_idx = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 27
  %3 = ptrtoint ptr %pll_coef_idx to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %coef_idx, ptr %pll_coef_idx, align 4
  %pll_coef_bit = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 28
  %4 = ptrtoint ptr %pll_coef_bit to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %coef_bit, ptr %pll_coef_bit, align 8
  %5 = load ptr, ptr %spec1, align 8
  %pll_nid.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 26
  %6 = ptrtoint ptr %pll_nid.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %pll_nid.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i, label %entry.alc_fix_pll.exit_crit_edge, label %if.then.i

entry.alc_fix_pll.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fix_pll.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %pll_coef_idx.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 27
  %8 = ptrtoint ptr %pll_coef_idx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pll_coef_idx.i, align 4
  %pll_coef_bit.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 28
  %10 = ptrtoint ptr %pll_coef_bit.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pll_coef_bit.i, align 8
  %shl.i = shl nuw i32 1, %11
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext %7, i32 noundef %9, i32 noundef %shl.i, i32 noundef 0) #13
  br label %alc_fix_pll.exit

alc_fix_pll.exit:                                 ; preds = %if.then.i, %entry.alc_fix_pll.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_shutup(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %2 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %if.end, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

if.end:                                           ; preds = %entry
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 2048, i32 noundef 0) #13
  %4 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pr = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp3 = icmp eq i32 %.pr, 1
  br i1 %cmp3, label %land.lhs.true, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %call = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and = and i32 %call, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and)
  %cmp4 = icmp eq i32 %and, 24
  br i1 %cmp4, label %if.then5, label %land.lhs.true.if.end6_crit_edge

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 150) #13
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true.if.end6_crit_edge, %if.end.if.end6_crit_edge, %entry.if.end6_crit_edge
  tail call fastcc void @alc_shutup_pins(ptr noundef %codec)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fill_coef(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %2 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.not = icmp eq i32 %3, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and = and i32 %call, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %and)
  %cmp2 = icmp ult i32 %and, 21
  br i1 %cmp2, label %if.then3, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 15) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 38411) #13
  %6 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %7, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %8 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1, align 8
  %call.i.i57 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i58 = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i58, i32 noundef 0) #13
  %call.i.i.i59 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 14) #13
  %call.i4.i.i60 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 34839) #13
  %10 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i61 = getelementptr inbounds %struct.alc_spec, ptr %11, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i61) #13
  %call.i5.i62 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  %call5 = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and6 = and i32 %call5, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %and6)
  %cmp7 = icmp eq i32 %and6, 22
  br i1 %cmp7, label %if.then8, label %if.end4.if.end9_crit_edge

if.end4.if.end9_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

if.then8:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  %12 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %spec1, align 8
  %call.i.i64 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i65 = getelementptr inbounds %struct.alc_spec, ptr %13, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i65, i32 noundef 0) #13
  %call.i.i.i66 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 15) #13
  %call.i4.i.i67 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 38411) #13
  %14 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i68 = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i68) #13
  %call.i5.i69 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %16 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spec1, align 8
  %call.i.i71 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i72 = getelementptr inbounds %struct.alc_spec, ptr %17, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i72, i32 noundef 0) #13
  %call.i.i.i73 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 14) #13
  %call.i4.i.i74 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 34836) #13
  %18 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i75 = getelementptr inbounds %struct.alc_spec, ptr %19, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i75) #13
  %call.i5.i76 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end4.if.end9_crit_edge
  %call10 = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and11 = and i32 %call10, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %and11)
  %cmp12 = icmp eq i32 %and11, 23
  br i1 %cmp12, label %if.then13, label %if.end9.if.end14_crit_edge

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 0, i32 noundef 2048)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end9.if.end14_crit_edge
  %call15 = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec)
  %and16 = and i32 %call15, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and16)
  %cmp17 = icmp eq i32 %and16, 24
  br i1 %cmp17, label %if.then18, label %if.end14.if.end34_crit_edge

if.end14.if.end34_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

if.then18:                                        ; preds = %if.end14
  %20 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %spec1, align 8
  %call.i.i78 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i79 = getelementptr inbounds %struct.alc_spec, ptr %21, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i79, i32 noundef 0) #13
  %call.i.i.i80 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 13) #13
  %call.i4.i.i81 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %22 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i82 = getelementptr inbounds %struct.alc_spec, ptr %23, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i82) #13
  %call.i5.i83 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i4.i.i81)
  %cmp20.not = icmp eq i32 %call.i4.i.i81, -1
  %24 = and i32 %call.i4.i.i81, 3072
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %24)
  %cmp22.not = icmp eq i32 %24, 1024
  %or.cond = or i1 %cmp20.not, %cmp22.not
  br i1 %or.cond, label %if.then18.if.end24_crit_edge, label %if.then23

if.then18.if.end24_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.then23:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  %or = or i32 %call.i4.i.i81, 1024
  %25 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %spec1, align 8
  %call.i.i85 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i86 = getelementptr inbounds %struct.alc_spec, ptr %26, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i86, i32 noundef 0) #13
  %call.i.i.i87 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 13) #13
  %call.i4.i.i88 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %or) #13
  %27 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i89 = getelementptr inbounds %struct.alc_spec, ptr %28, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i89) #13
  %call.i5.i90 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.then18.if.end24_crit_edge
  %29 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %spec1, align 8
  %call.i.i92 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i93 = getelementptr inbounds %struct.alc_spec, ptr %30, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i93, i32 noundef 0) #13
  %call.i.i.i94 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 23) #13
  %call.i4.i.i95 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %31 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i96 = getelementptr inbounds %struct.alc_spec, ptr %32, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i96) #13
  %call.i5.i97 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i4.i.i95)
  %cmp26.not = icmp eq i32 %call.i4.i.i95, -1
  %33 = and i32 %call.i4.i.i95, 448
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %33)
  %cmp30.not = icmp eq i32 %33, 256
  %or.cond55 = or i1 %cmp26.not, %cmp30.not
  br i1 %or.cond55, label %if.end24.if.end34_crit_edge, label %if.then31

if.end24.if.end34_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

if.then31:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  %or32 = or i32 %call.i4.i.i95, 128
  %34 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %spec1, align 8
  %call.i.i99 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i100 = getelementptr inbounds %struct.alc_spec, ptr %35, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i100, i32 noundef 0) #13
  %call.i.i.i101 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 23) #13
  %call.i4.i.i102 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %or32) #13
  %36 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i103 = getelementptr inbounds %struct.alc_spec, ptr %37, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i103) #13
  %call.i5.i104 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end24.if.end34_crit_edge, %if.end14.if.end34_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 0, i32 noundef 2048)
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc282_shutup(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.if.then_crit_edge

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.if.then_crit_edge, label %alc_get_hp_pin.exit.if.end_crit_edge

alc_get_hp_pin.exit.if.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

alc_get_hp_pin.exit.if.then_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then:                                          ; preds = %alc_get_hp_pin.exit.if.then_crit_edge, %if.end.i.if.then_crit_edge
  %codec_variant.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %8 = ptrtoint ptr %codec_variant.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %codec_variant.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i36 = icmp eq i32 %9, 1
  br i1 %cmp.i36, label %if.end.i37, label %if.then.alc269_shutup.exit_crit_edge

if.then.alc269_shutup.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

if.end.i37:                                       ; preds = %if.then
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 2048, i32 noundef 0) #13
  %10 = ptrtoint ptr %codec_variant.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pr.i = load i32, ptr %codec_variant.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr.i)
  %cmp3.i = icmp eq i32 %.pr.i, 1
  br i1 %cmp3.i, label %land.lhs.true.i, label %if.end.i37.alc269_shutup.exit_crit_edge

if.end.i37.alc269_shutup.exit_crit_edge:          ; preds = %if.end.i37
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

land.lhs.true.i:                                  ; preds = %if.end.i37
  %call.i = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec) #13
  %and.i = and i32 %call.i, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and.i)
  %cmp4.i = icmp eq i32 %and.i, 24
  br i1 %cmp4.i, label %if.then5.i, label %land.lhs.true.i.alc269_shutup.exit_crit_edge

land.lhs.true.i.alc269_shutup.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

if.then5.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 150) #13
  br label %alc269_shutup.exit

alc269_shutup.exit:                               ; preds = %if.then5.i, %land.lhs.true.i.alc269_shutup.exit_crit_edge, %if.end.i37.alc269_shutup.exit_crit_edge, %if.then.alc269_shutup.exit_crit_edge
  tail call fastcc void @alc_shutup_pins(ptr noundef %codec) #13
  br label %cleanup

if.end:                                           ; preds = %alc_get_hp_pin.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i64 = phi i16 [ %7, %alc_get_hp_pin.exit.if.end_crit_edge ], [ %3, %entry.if.end_crit_edge ]
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i64, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  %11 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1, align 8
  %call.i.i38 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 120) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %13 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %14, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %call.i.i40 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i41 = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i41, i32 noundef 0) #13
  %call.i.i.i42 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 120) #13
  %call.i4.i.i43 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 36868) #13
  %17 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i44 = getelementptr inbounds %struct.alc_spec, ptr %18, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i44) #13
  %call.i5.i45 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br i1 %cmp.i.i.not, label %if.end10.critedge, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  %call.i46 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i64, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 85) #13
  br label %if.end10

if.end10.critedge:                                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i47 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i64, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.end10

if.end10:                                         ; preds = %if.end10.critedge, %if.then5
  %no_shutup_pins = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %19 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %no_shutup_pins, align 8
  %20 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool11.not = icmp eq i8 %20, 0
  br i1 %tobool11.not, label %if.then12, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %call.i48 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i64, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10.if.end14_crit_edge
  br i1 %cmp.i.i.not, label %if.end14.if.end17_crit_edge, label %if.then16

if.end14.if.end17_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end17

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14.if.end17_crit_edge
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %if.end17
  %21 = phi i16 [ 15, %if.end17 ], [ %35, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %if.end17 ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %21 to i32
  %22 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %23 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %21)
  %cmp.i.i.i = icmp ugt i16 %23, %21
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %24 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %25, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %26 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %27, i32 %sub.i.i.i
  %28 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i.i.i, align 4
  %30 = and i32 %29, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %30)
  %cmp.not.i.i = icmp eq i32 %30, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %31 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %21, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %32 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %33, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i49 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %21, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %34 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i50 = icmp eq i16 %35, 0
  br i1 %tobool.not.i50, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @alc_shutup_pins(ptr noundef %codec)
  %36 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %spec1, align 8
  %call.i.i52 = call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i53 = getelementptr inbounds %struct.alc_spec, ptr %37, i32 0, i32 15
  call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i53, i32 noundef 0) #13
  %call.i.i.i54 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 120) #13
  %call.i4.i.i55 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %call.i4.i.i) #13
  %38 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i56 = getelementptr inbounds %struct.alc_spec, ptr %39, i32 0, i32 15
  call void @mutex_unlock(ptr noundef %coef_mutex.i4.i56) #13
  %call.i5.i57 = call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %alc_auto_setup_eapd.exit, %alc269_shutup.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc282_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %alc_get_hp_pin.exit.thread50

alc_get_hp_pin.exit.thread50:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc282_coefs) #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit.thread:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc282_coefs) #13
  br label %cleanup

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc282_coefs) #13
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.cleanup_crit_edge, label %alc_get_hp_pin.exit.if.end_crit_edge

alc_get_hp_pin.exit.if.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

alc_get_hp_pin.exit.cleanup_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %alc_get_hp_pin.exit.if.end_crit_edge, %alc_get_hp_pin.exit.thread50
  %retval.0.i53 = phi i16 [ %3, %alc_get_hp_pin.exit.thread50 ], [ %7, %alc_get_hp_pin.exit.if.end_crit_edge ]
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i53, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  %8 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1, align 8
  %call.i.i30 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 120) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %10 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %11, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %12 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %spec1, align 8
  %call.i.i32 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i33 = getelementptr inbounds %struct.alc_spec, ptr %13, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i33, i32 noundef 0) #13
  %call.i.i.i34 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 120) #13
  %call.i4.i.i35 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 36868) #13
  %14 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i36 = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i36) #13
  %call.i5.i37 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br i1 %cmp.i.i.not, label %if.end10.critedge, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i53, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 85) #13
  %call.i38 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i53, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end14

if.end10.critedge:                                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i39 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i53, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  %call.i40 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i53, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  br label %if.end14

if.end14:                                         ; preds = %if.end10.critedge, %if.then5
  %16 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spec1, align 8
  %call.i.i42 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i43 = getelementptr inbounds %struct.alc_spec, ptr %17, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i43, i32 noundef 0) #13
  %call.i.i.i44 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 120) #13
  %call.i4.i.i45 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %call.i4.i.i) #13
  %18 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i46 = getelementptr inbounds %struct.alc_spec, ptr %19, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i46) #13
  %call.i5.i47 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %alc_get_hp_pin.exit.cleanup_crit_edge, %alc_get_hp_pin.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc283_shutup(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.if.then_crit_edge

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.if.then_crit_edge, label %alc_get_hp_pin.exit.if.end_crit_edge

alc_get_hp_pin.exit.if.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

alc_get_hp_pin.exit.if.then_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then:                                          ; preds = %alc_get_hp_pin.exit.if.then_crit_edge, %if.end.i.if.then_crit_edge
  %codec_variant.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %8 = ptrtoint ptr %codec_variant.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %codec_variant.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i31 = icmp eq i32 %9, 1
  br i1 %cmp.i31, label %if.end.i32, label %if.then.alc269_shutup.exit_crit_edge

if.then.alc269_shutup.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

if.end.i32:                                       ; preds = %if.then
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 2048, i32 noundef 0) #13
  %10 = ptrtoint ptr %codec_variant.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pr.i = load i32, ptr %codec_variant.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr.i)
  %cmp3.i = icmp eq i32 %.pr.i, 1
  br i1 %cmp3.i, label %land.lhs.true.i, label %if.end.i32.alc269_shutup.exit_crit_edge

if.end.i32.alc269_shutup.exit_crit_edge:          ; preds = %if.end.i32
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

land.lhs.true.i:                                  ; preds = %if.end.i32
  %call.i = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec) #13
  %and.i = and i32 %call.i, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and.i)
  %cmp4.i = icmp eq i32 %and.i, 24
  br i1 %cmp4.i, label %if.then5.i, label %land.lhs.true.i.alc269_shutup.exit_crit_edge

land.lhs.true.i.alc269_shutup.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_shutup.exit

if.then5.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 150) #13
  br label %alc269_shutup.exit

alc269_shutup.exit:                               ; preds = %if.then5.i, %land.lhs.true.i.alc269_shutup.exit_crit_edge, %if.end.i32.alc269_shutup.exit_crit_edge, %if.then.alc269_shutup.exit_crit_edge
  tail call fastcc void @alc_shutup_pins(ptr noundef %codec) #13
  br label %cleanup

if.end:                                           ; preds = %alc_get_hp_pin.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i57 = phi i16 [ %7, %alc_get_hp_pin.exit.if.end_crit_edge ], [ %3, %entry.if.end_crit_edge ]
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i57, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  %11 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1, align 8
  %call.i.i33 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 67) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 36868) #13
  %13 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %14, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %call.i.i35 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i36 = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i36, i32 noundef 0) #13
  %call.i.i.i37 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 6) #13
  %call.i4.i.i38 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 8448) #13
  %17 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i39 = getelementptr inbounds %struct.alc_spec, ptr %18, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i39) #13
  %call.i5.i40 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i41 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i57, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br i1 %cmp.i.i.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %no_shutup_pins = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %19 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %no_shutup_pins, align 8
  %20 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool7.not = icmp eq i8 %20, 0
  br i1 %tobool7.not, label %if.then8, label %if.end6.if.end10_crit_edge

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  %call.i42 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i57, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end6.if.end10_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 70, i32 noundef 0, i32 noundef 12288)
  br i1 %cmp.i.i.not, label %if.end10.if.end13_crit_edge, label %if.then12

if.end10.if.end13_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end10.if.end13_crit_edge
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %if.end13
  %21 = phi i16 [ 15, %if.end13 ], [ %35, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %if.end13 ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %21 to i32
  %22 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %23 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %21)
  %cmp.i.i.i = icmp ugt i16 %23, %21
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %24 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %25, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %26 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %27, i32 %sub.i.i.i
  %28 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i.i.i, align 4
  %30 = and i32 %29, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %30)
  %cmp.not.i.i = icmp eq i32 %30, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %31 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %21, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %32 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %33, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i43 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %21, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %34 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i44 = icmp eq i16 %35, 0
  br i1 %tobool.not.i44, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @alc_shutup_pins(ptr noundef %codec)
  %36 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %spec1, align 8
  %call.i.i46 = call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i47 = getelementptr inbounds %struct.alc_spec, ptr %37, i32 0, i32 15
  call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i47, i32 noundef 0) #13
  %call.i.i.i48 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 67) #13
  %call.i4.i.i49 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 38420) #13
  %38 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i50 = getelementptr inbounds %struct.alc_spec, ptr %39, i32 0, i32 15
  call void @mutex_unlock(ptr noundef %coef_mutex.i4.i50) #13
  %call.i5.i51 = call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %alc_auto_setup_eapd.exit, %alc269_shutup.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc283_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %alc_get_hp_pin.exit.thread36

alc_get_hp_pin.exit.thread36:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc283_coefs) #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit.thread:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc283_coefs) #13
  br label %cleanup

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc283_coefs) #13
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.cleanup_crit_edge, label %alc_get_hp_pin.exit.if.end_crit_edge

alc_get_hp_pin.exit.if.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

alc_get_hp_pin.exit.cleanup_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %alc_get_hp_pin.exit.if.end_crit_edge, %alc_get_hp_pin.exit.thread36
  %retval.0.i39 = phi i16 [ %3, %alc_get_hp_pin.exit.thread36 ], [ %7, %alc_get_hp_pin.exit.if.end_crit_edge ]
  tail call void @msleep(i32 noundef 30) #13
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i39, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  %8 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1, align 8
  %call.i.i24 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 67) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 36868) #13
  %10 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %11, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i39, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br i1 %cmp.i.i.not, label %if.end10.critedge, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 85) #13
  %call.i25 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i39, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  tail call void @msleep(i32 noundef 85) #13
  br label %if.end10

if.end10.critedge:                                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i26 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i39, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  br label %if.end10

if.end10:                                         ; preds = %if.end10.critedge, %if.then5
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 70, i32 noundef 12288, i32 noundef 0)
  %12 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %spec1, align 8
  %call.i.i28 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i29 = getelementptr inbounds %struct.alc_spec, ptr %13, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i29, i32 noundef 0) #13
  %call.i.i.i30 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 67) #13
  %call.i4.i.i31 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 38420) #13
  %14 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i32 = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i32) #13
  %call.i5.i33 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %alc_get_hp_pin.exit.cleanup_crit_edge, %alc_get_hp_pin.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc256_shutup(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.alc_get_hp_pin.exit.thread68_crit_edge

entry.alc_get_hp_pin.exit.thread68_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread68

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.alc_get_hp_pin.exit.thread_crit_edge

if.end.i.alc_get_hp_pin.exit.thread_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge, label %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread68_crit_edge

alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread68_crit_edge: ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread68

alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge: ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit.thread:                       ; preds = %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge, %if.end.i.alc_get_hp_pin.exit.thread_crit_edge
  br label %alc_get_hp_pin.exit.thread68

alc_get_hp_pin.exit.thread68:                     ; preds = %alc_get_hp_pin.exit.thread, %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread68_crit_edge, %entry.alc_get_hp_pin.exit.thread68_crit_edge
  %8 = phi i16 [ 33, %alc_get_hp_pin.exit.thread ], [ %7, %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread68_crit_edge ], [ %3, %entry.alc_get_hp_pin.exit.thread68_crit_edge ]
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i.not, label %lor.lhs.false.critedge, label %if.then4

if.then4:                                         ; preds = %alc_get_hp_pin.exit.thread68
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.then9

lor.lhs.false.critedge:                           ; preds = %alc_get_hp_pin.exit.thread68
  %call.i63 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  %ultra_low_power = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %9 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load = load i8, ptr %ultra_low_power, align 8
  %10 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool8.not = icmp eq i8 %10, 0
  br i1 %tobool8.not, label %lor.lhs.false.critedge.if.end10_crit_edge, label %lor.lhs.false.critedge.if.then9_crit_edge

lor.lhs.false.critedge.if.then9_crit_edge:        ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then9

lor.lhs.false.critedge.if.end10_crit_edge:        ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then9:                                         ; preds = %lor.lhs.false.critedge.if.then9_crit_edge, %if.then4
  tail call void @msleep(i32 noundef 85) #13
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %lor.lhs.false.critedge.if.end10_crit_edge
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %11 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %codec_variant, align 4
  %13 = and i32 %12, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %13)
  %switch = icmp eq i32 %13, 12
  br i1 %switch, label %if.end10.if.end14_crit_edge, label %if.then13

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 70, i32 noundef 0, i32 noundef 12288)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end10.if.end14_crit_edge
  %no_shutup_pins = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %14 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load15 = load i8, ptr %no_shutup_pins, align 8
  %15 = and i8 %bf.load15, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool19.not = icmp eq i8 %15, 0
  br i1 %tobool19.not, label %if.then20, label %if.end14.if.end22_crit_edge

if.end14.if.end22_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end22

if.then20:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  %call.i64 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end14.if.end22_crit_edge
  br i1 %cmp.i.i.not, label %lor.lhs.false24, label %if.end22.if.then31_crit_edge

if.end22.if.then31_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then31

lor.lhs.false24:                                  ; preds = %if.end22
  %16 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load26 = load i8, ptr %no_shutup_pins, align 8
  %17 = and i8 %bf.load26, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool30.not = icmp eq i8 %17, 0
  br i1 %tobool30.not, label %lor.lhs.false24.if.end32_crit_edge, label %lor.lhs.false24.if.then31_crit_edge

lor.lhs.false24.if.then31_crit_edge:              ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then31

lor.lhs.false24.if.end32_crit_edge:               ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32

if.then31:                                        ; preds = %lor.lhs.false24.if.then31_crit_edge, %if.end22.if.then31_crit_edge
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %lor.lhs.false24.if.end32_crit_edge
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %if.end32
  %18 = phi i16 [ 15, %if.end32 ], [ %32, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %if.end32 ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %18 to i32
  %19 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %20 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %20, i16 %18)
  %cmp.i.i.i = icmp ugt i16 %20, %18
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %21 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %22, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %23 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %24, i32 %sub.i.i.i
  %25 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i.i.i, align 4
  %27 = and i32 %26, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %27)
  %cmp.not.i.i = icmp eq i32 %27, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %28 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %18, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %29 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %30, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %18, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %31 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i65 = icmp eq i16 %32, 0
  br i1 %tobool.not.i65, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  call fastcc void @alc_shutup_pins(ptr noundef %codec)
  %33 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load34 = load i8, ptr %no_shutup_pins, align 8
  %34 = and i8 %bf.load34, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool38.not = icmp eq i8 %34, 0
  br i1 %tobool38.not, label %alc_auto_setup_eapd.exit.if.end40_crit_edge, label %if.then39

alc_auto_setup_eapd.exit.if.end40_crit_edge:      ; preds = %alc_auto_setup_eapd.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end40

if.then39:                                        ; preds = %alc_auto_setup_eapd.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @msleep(i32 noundef 50) #13
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 3, i32 noundef 2, i32 noundef 0)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 8, i32 noundef 112, i32 noundef 112)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 8, i32 noundef 12, i32 noundef 0)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 59, i32 noundef 32768, i32 noundef 32768)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 14, i32 noundef 448, i32 noundef 0)
  call void @msleep(i32 noundef 30) #13
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %alc_auto_setup_eapd.exit.if.end40_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc256_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.alc_get_hp_pin.exit.thread59_crit_edge

entry.alc_get_hp_pin.exit.thread59_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread59

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.alc_get_hp_pin.exit.thread_crit_edge

if.end.i.alc_get_hp_pin.exit.thread_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge, label %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread59_crit_edge

alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread59_crit_edge: ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread59

alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge: ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit.thread:                       ; preds = %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge, %if.end.i.alc_get_hp_pin.exit.thread_crit_edge
  br label %alc_get_hp_pin.exit.thread59

alc_get_hp_pin.exit.thread59:                     ; preds = %alc_get_hp_pin.exit.thread, %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread59_crit_edge, %entry.alc_get_hp_pin.exit.thread59_crit_edge
  %8 = phi i16 [ 33, %alc_get_hp_pin.exit.thread ], [ %7, %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread59_crit_edge ], [ %3, %entry.alc_get_hp_pin.exit.thread59_crit_edge ]
  tail call void @msleep(i32 noundef 30) #13
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i.not, label %alc_get_hp_pin.exit.thread59.if.end5_crit_edge, label %if.then4

alc_get_hp_pin.exit.thread59.if.end5_crit_edge:   ; preds = %alc_get_hp_pin.exit.thread59
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.then4:                                         ; preds = %alc_get_hp_pin.exit.thread59
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %alc_get_hp_pin.exit.thread59.if.end5_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 4, i32 noundef 7, i32 noundef 1)
  %ultra_low_power = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %9 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load = load i8, ptr %ultra_low_power, align 8
  %10 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool6.not = icmp eq i8 %10, 0
  br i1 %tobool6.not, label %if.end5.if.end8_crit_edge, label %if.then7

if.end5.if.end8_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 3, i32 noundef 2, i32 noundef 2)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 8, i32 noundef 12, i32 noundef 12)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 8, i32 noundef 112, i32 noundef 0)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 59, i32 noundef 32768, i32 noundef 0)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 14, i32 noundef 448, i32 noundef 448)
  tail call void @msleep(i32 noundef 30) #13
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5.if.end8_crit_edge
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br i1 %cmp.i.i.not, label %lor.lhs.false, label %if.then28.critedge

lor.lhs.false:                                    ; preds = %if.end8
  %11 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load12 = load i8, ptr %ultra_low_power, align 8
  %12 = and i8 %bf.load12, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool16.not = icmp eq i8 %12, 0
  br i1 %tobool16.not, label %lor.lhs.false.lor.lhs.false21_crit_edge, label %lor.lhs.false21.critedge52

lor.lhs.false.lor.lhs.false21_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false21

lor.lhs.false21.critedge52:                       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 85) #13
  br label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false21.critedge52, %lor.lhs.false.lor.lhs.false21_crit_edge
  %call.i54 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  %13 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load23 = load i8, ptr %ultra_low_power, align 8
  %14 = and i8 %bf.load23, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool27.not = icmp eq i8 %14, 0
  br i1 %tobool27.not, label %lor.lhs.false21.if.end29_crit_edge, label %lor.lhs.false21.if.then28_crit_edge

lor.lhs.false21.if.then28_crit_edge:              ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then28

lor.lhs.false21.if.end29_crit_edge:               ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then28.critedge:                               ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 85) #13
  %call.i55 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  br label %if.then28

if.then28:                                        ; preds = %if.then28.critedge, %lor.lhs.false21.if.then28_crit_edge
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %lor.lhs.false21.if.end29_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 70, i32 noundef 12288, i32 noundef 0)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 4, i32 noundef 7, i32 noundef 4)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 83, i32 noundef 2, i32 noundef 32768, i32 noundef 32768)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 83, i32 noundef 2, i32 noundef 32768, i32 noundef 0)
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %call.i.i56 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 54) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 22359) #13
  %17 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %18, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc225_shutup(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.alc_get_hp_pin.exit.thread112_crit_edge

entry.alc_get_hp_pin.exit.thread112_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread112

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.alc_get_hp_pin.exit.thread_crit_edge

if.end.i.alc_get_hp_pin.exit.thread_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge, label %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread112_crit_edge

alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread112_crit_edge: ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread112

alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge: ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.thread

alc_get_hp_pin.exit.thread:                       ; preds = %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread_crit_edge, %if.end.i.alc_get_hp_pin.exit.thread_crit_edge
  br label %alc_get_hp_pin.exit.thread112

alc_get_hp_pin.exit.thread112:                    ; preds = %alc_get_hp_pin.exit.thread, %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread112_crit_edge, %entry.alc_get_hp_pin.exit.thread112_crit_edge
  %8 = phi i16 [ 33, %alc_get_hp_pin.exit.thread ], [ %7, %alc_get_hp_pin.exit.alc_get_hp_pin.exit.thread112_crit_edge ], [ %3, %entry.alc_get_hp_pin.exit.thread112_crit_edge ]
  %has_hs_key.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %9 = ptrtoint ptr %has_hs_key.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load.i = load i8, ptr %has_hs_key.i, align 8
  %10 = and i8 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.i100 = icmp eq i8 %10, 0
  br i1 %tobool.not.i100, label %alc_get_hp_pin.exit.thread112.alc_disable_headset_jack_key.exit_crit_edge, label %if.end.i101

alc_get_hp_pin.exit.thread112.alc_disable_headset_jack_key.exit_crit_edge: ; preds = %alc_get_hp_pin.exit.thread112
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_disable_headset_jack_key.exit

if.end.i101:                                      ; preds = %alc_get_hp_pin.exit.thread112
  %vendor_id.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %11 = ptrtoint ptr %vendor_id.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vendor_id.i, align 8
  %13 = zext i32 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.1229)
  switch i32 %12, label %if.end.i101.alc_disable_headset_jack_key.exit_crit_edge [
    i32 283902485, label %if.end.i101.sw.bb.i_crit_edge
    i32 283902501, label %if.end.i101.sw.bb.i_crit_edge115
    i32 283902597, label %if.end.i101.sw.bb.i_crit_edge116
    i32 283902599, label %if.end.i101.sw.bb.i_crit_edge117
    i32 283902613, label %if.end.i101.sw.bb.i_crit_edge118
    i32 283902601, label %if.end.i101.sw.bb.i_crit_edge119
    i32 283902617, label %if.end.i101.sw.bb.i_crit_edge120
    i32 283902512, label %if.end.i101.sw.bb2.i_crit_edge
    i32 283902518, label %if.end.i101.sw.bb2.i_crit_edge121
    i32 283902550, label %if.end.i101.sw.bb2.i_crit_edge122
  ]

if.end.i101.sw.bb2.i_crit_edge122:                ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

if.end.i101.sw.bb2.i_crit_edge121:                ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

if.end.i101.sw.bb2.i_crit_edge:                   ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

if.end.i101.sw.bb.i_crit_edge120:                 ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.sw.bb.i_crit_edge119:                 ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.sw.bb.i_crit_edge118:                 ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.sw.bb.i_crit_edge117:                 ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.sw.bb.i_crit_edge116:                 ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.sw.bb.i_crit_edge115:                 ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.sw.bb.i_crit_edge:                    ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.end.i101.alc_disable_headset_jack_key.exit_crit_edge: ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_disable_headset_jack_key.exit

sw.bb.i:                                          ; preds = %if.end.i101.sw.bb.i_crit_edge, %if.end.i101.sw.bb.i_crit_edge115, %if.end.i101.sw.bb.i_crit_edge116, %if.end.i101.sw.bb.i_crit_edge117, %if.end.i101.sw.bb.i_crit_edge118, %if.end.i101.sw.bb.i_crit_edge119, %if.end.i101.sw.bb.i_crit_edge120
  %call.i.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i.i, i32 noundef 0) #13
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 72) #13
  %call.i4.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %14 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i.i = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i.i) #13
  %call.i5.i.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 73, i32 noundef 69, i32 noundef 0) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 68, i32 noundef 17664, i32 noundef 0) #13
  br label %alc_disable_headset_jack_key.exit

sw.bb2.i:                                         ; preds = %if.end.i101.sw.bb2.i_crit_edge, %if.end.i101.sw.bb2.i_crit_edge121, %if.end.i101.sw.bb2.i_crit_edge122
  %call.i.i10.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i11.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i11.i, i32 noundef 0) #13
  %call.i.i.i12.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 72) #13
  %call.i4.i.i13.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %16 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i14.i = getelementptr inbounds %struct.alc_spec, ptr %17, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i14.i) #13
  %call.i5.i15.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 73, i32 noundef 69, i32 noundef 0) #13
  br label %alc_disable_headset_jack_key.exit

alc_disable_headset_jack_key.exit:                ; preds = %sw.bb2.i, %sw.bb.i, %if.end.i101.alc_disable_headset_jack_key.exit_crit_edge, %alc_get_hp_pin.exit.thread112.alc_disable_headset_jack_key.exit_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 0, i32 noundef 3072)
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp ne i32 %call.i.i, 0
  %call.i.i102 = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 22, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i102)
  %cmp.i.i103 = icmp ne i32 %call.i.i102, 0
  %brmerge = select i1 %cmp.i.i, i1 true, i1 %cmp.i.i103
  br i1 %brmerge, label %if.then7, label %alc_disable_headset_jack_key.exit.if.end8_crit_edge

alc_disable_headset_jack_key.exit.if.end8_crit_edge: ; preds = %alc_disable_headset_jack_key.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then7:                                         ; preds = %alc_disable_headset_jack_key.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %alc_disable_headset_jack_key.exit.if.end8_crit_edge
  br i1 %cmp.i.i, label %if.end8.if.then12_crit_edge, label %lor.lhs.false10

if.end8.if.then12_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then12

lor.lhs.false10:                                  ; preds = %if.end8
  %18 = ptrtoint ptr %has_hs_key.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load = load i8, ptr %has_hs_key.i, align 8
  %19 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool11.not = icmp eq i8 %19, 0
  br i1 %tobool11.not, label %lor.lhs.false10.if.end14_crit_edge, label %lor.lhs.false10.if.then12_crit_edge

lor.lhs.false10.if.then12_crit_edge:              ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then12

lor.lhs.false10.if.end14_crit_edge:               ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then12:                                        ; preds = %lor.lhs.false10.if.then12_crit_edge, %if.end8.if.then12_crit_edge
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %lor.lhs.false10.if.end14_crit_edge
  br i1 %cmp.i.i103, label %if.then16, label %if.end14.if.end18_crit_edge

if.end14.if.end18_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  %call.i104 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 22, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14.if.end18_crit_edge
  br i1 %brmerge, label %if.end18.if.then29_crit_edge, label %lor.lhs.false22

if.end18.if.then29_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then29

lor.lhs.false22:                                  ; preds = %if.end18
  %20 = ptrtoint ptr %has_hs_key.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load24 = load i8, ptr %has_hs_key.i, align 8
  %21 = and i8 %bf.load24, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool28.not = icmp eq i8 %21, 0
  br i1 %tobool28.not, label %lor.lhs.false22.if.end30_crit_edge, label %lor.lhs.false22.if.then29_crit_edge

lor.lhs.false22.if.then29_crit_edge:              ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then29

lor.lhs.false22.if.end30_crit_edge:               ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end30

if.then29:                                        ; preds = %lor.lhs.false22.if.then29_crit_edge, %if.end18.if.then29_crit_edge
  tail call void @msleep(i32 noundef 85) #13
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %lor.lhs.false22.if.end30_crit_edge
  br i1 %cmp.i.i, label %if.end30.if.then39_crit_edge, label %lor.lhs.false32

if.end30.if.then39_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then39

lor.lhs.false32:                                  ; preds = %if.end30
  %22 = ptrtoint ptr %has_hs_key.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load34 = load i8, ptr %has_hs_key.i, align 8
  %23 = and i8 %bf.load34, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool38.not = icmp eq i8 %23, 0
  br i1 %tobool38.not, label %lor.lhs.false32.if.end41_crit_edge, label %lor.lhs.false32.if.then39_crit_edge

lor.lhs.false32.if.then39_crit_edge:              ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then39

lor.lhs.false32.if.end41_crit_edge:               ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end41

if.then39:                                        ; preds = %lor.lhs.false32.if.then39_crit_edge, %if.end30.if.then39_crit_edge
  %call.i105 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %8, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %lor.lhs.false32.if.end41_crit_edge
  br i1 %cmp.i.i103, label %if.then43, label %if.end41.if.end45_crit_edge

if.end41.if.end45_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end45

if.then43:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  %call.i106 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 22, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41.if.end45_crit_edge
  br i1 %brmerge, label %if.end45.if.then56_crit_edge, label %lor.lhs.false49

if.end45.if.then56_crit_edge:                     ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then56

lor.lhs.false49:                                  ; preds = %if.end45
  %24 = ptrtoint ptr %has_hs_key.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load51 = load i8, ptr %has_hs_key.i, align 8
  %25 = and i8 %bf.load51, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool55.not = icmp eq i8 %25, 0
  br i1 %tobool55.not, label %lor.lhs.false49.if.end57_crit_edge, label %lor.lhs.false49.if.then56_crit_edge

lor.lhs.false49.if.then56_crit_edge:              ; preds = %lor.lhs.false49
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then56

lor.lhs.false49.if.end57_crit_edge:               ; preds = %lor.lhs.false49
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end57

if.then56:                                        ; preds = %lor.lhs.false49.if.then56_crit_edge, %if.end45.if.then56_crit_edge
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %lor.lhs.false49.if.end57_crit_edge
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %if.end57
  %26 = phi i16 [ 15, %if.end57 ], [ %40, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %if.end57 ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %26 to i32
  %27 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %28 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %28, i16 %26)
  %cmp.i.i.i = icmp ugt i16 %28, %26
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %29 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %30, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %31 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %32, i32 %sub.i.i.i
  %33 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i.i.i, align 4
  %35 = and i32 %34, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %35)
  %cmp.not.i.i = icmp eq i32 %35, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %36 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i107 = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %26, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i107)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i107, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %37 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %38, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i108 = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %26, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %39 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i109 = icmp eq i16 %40, 0
  br i1 %tobool.not.i109, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  call fastcc void @alc_shutup_pins(ptr noundef %codec)
  %41 = ptrtoint ptr %has_hs_key.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %bf.load59 = load i8, ptr %has_hs_key.i, align 8
  %42 = and i8 %bf.load59, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool63.not = icmp eq i8 %42, 0
  br i1 %tobool63.not, label %alc_auto_setup_eapd.exit.if.end65_crit_edge, label %if.then64

alc_auto_setup_eapd.exit.if.end65_crit_edge:      ; preds = %alc_auto_setup_eapd.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end65

if.then64:                                        ; preds = %alc_auto_setup_eapd.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @msleep(i32 noundef 50) #13
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 8, i32 noundef 60, i32 noundef 48)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 14, i32 noundef 448, i32 noundef 0)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 51, i32 noundef 2048, i32 noundef 2048)
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 48, i32 noundef 32)
  call void @msleep(i32 noundef 30) #13
  br label %if.end65

if.end65:                                         ; preds = %if.then64, %alc_auto_setup_eapd.exit.if.end65_crit_edge
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 3072, i32 noundef 0)
  call fastcc void @alc_enable_headset_jack_key(ptr noundef %codec)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc225_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.alc_get_hp_pin.exit_crit_edge

entry.alc_get_hp_pin.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %if.then7.i, label %if.end.i.alc_get_hp_pin.exit_crit_edge

if.end.i.alc_get_hp_pin.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  br label %alc_get_hp_pin.exit

alc_get_hp_pin.exit:                              ; preds = %if.then7.i, %if.end.i.alc_get_hp_pin.exit_crit_edge, %entry.alc_get_hp_pin.exit_crit_edge
  %retval.0.i = phi i16 [ %7, %if.then7.i ], [ %3, %entry.alc_get_hp_pin.exit_crit_edge ], [ 0, %if.end.i.alc_get_hp_pin.exit_crit_edge ]
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %8 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %9)
  %cmp.not = icmp eq i32 %9, 16
  br i1 %cmp.not, label %alc_get_hp_pin.exit.if.end14_crit_edge, label %if.then

alc_get_hp_pin.exit.if.end14_crit_edge:           ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then:                                          ; preds = %alc_get_hp_pin.exit
  %done_hp_init = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %10 = ptrtoint ptr %done_hp_init to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %done_hp_init, align 8
  %11 = and i8 %bf.load, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  br i1 %tobool.not, label %if.then.if.then10_crit_edge, label %lor.lhs.false

if.then.if.then10_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then10

lor.lhs.false:                                    ; preds = %if.then
  %power = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12
  %12 = ptrtoint ptr %power to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %power, align 8
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.1230)
  switch i32 %13, label %lor.lhs.false.if.end14_crit_edge [
    i32 16, label %lor.lhs.false.if.then10_crit_edge
    i32 64, label %lor.lhs.false.if.then10_crit_edge132
  ]

lor.lhs.false.if.then10_crit_edge132:             ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then10

lor.lhs.false.if.then10_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then10

lor.lhs.false.if.end14_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then10:                                        ; preds = %lor.lhs.false.if.then10_crit_edge, %lor.lhs.false.if.then10_crit_edge132, %if.then.if.then10_crit_edge
  br i1 %tobool.not.i, label %if.end.i.i, label %if.then10.alc_get_hp_pin.exit.i_crit_edge

if.then10.alc_get_hp_pin.exit.i_crit_edge:        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.i

if.end.i.i:                                       ; preds = %if.then10
  %line_out_type.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %15 = ptrtoint ptr %line_out_type.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %line_out_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp.i.i = icmp eq i32 %16, 2
  br i1 %cmp.i.i, label %if.then7.i.i, label %if.end.i.i.alc_get_hp_pin.exit.i_crit_edge

if.end.i.i.alc_get_hp_pin.exit.i_crit_edge:       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %line_out_pins.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %17 = ptrtoint ptr %line_out_pins.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %line_out_pins.i.i, align 4
  br label %alc_get_hp_pin.exit.i

alc_get_hp_pin.exit.i:                            ; preds = %if.then7.i.i, %if.end.i.i.alc_get_hp_pin.exit.i_crit_edge, %if.then10.alc_get_hp_pin.exit.i_crit_edge
  %retval.0.i.i = phi i16 [ %18, %if.then7.i.i ], [ %3, %if.then10.alc_get_hp_pin.exit.i_crit_edge ], [ 0, %if.end.i.i.alc_get_hp_pin.exit.i_crit_edge ]
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 32768, i32 noundef 32768) #13
  %19 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %spec1, align 8
  %call.i.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %20, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i.i, i32 noundef 0) #13
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 56) #13
  %call.i4.i.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %21 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i.i = getelementptr inbounds %struct.alc_spec, ptr %22, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i.i) #13
  %call.i5.i.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %23 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %spec1, align 8
  %call.i.i42.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i43.i = getelementptr inbounds %struct.alc_spec, ptr %24, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i43.i, i32 noundef 0) #13
  %call.i.i.i44.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 13) #13
  %call.i4.i.i45.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %25 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i46.i = getelementptr inbounds %struct.alc_spec, ptr %26, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i46.i) #13
  %call.i5.i47.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %27 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spec1, align 8
  %call.i.i49.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i50.i = getelementptr inbounds %struct.alc_spec, ptr %28, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i50.i, i32 noundef 0) #13
  %call.i.i.i51.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 54) #13
  %call.i4.i.i52.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %29 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i53.i = getelementptr inbounds %struct.alc_spec, ptr %30, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i53.i) #13
  %call.i5.i54.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 56, i32 noundef 16, i32 noundef 0) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 13, i32 noundef 272, i32 noundef 0) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 103, i32 noundef 61440, i32 noundef 12288) #13
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %retval.0.i.i)
  %tobool.not.i123 = icmp eq i16 %retval.0.i.i, 0
  br i1 %tobool.not.i123, label %if.end9.critedge.i, label %if.then.i

if.then.i:                                        ; preds = %alc_get_hp_pin.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i.i, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 130) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 54, i32 noundef 16384, i32 noundef 16384) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 54, i32 noundef 8192, i32 noundef 0) #13
  %call.i55.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i.i, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end9.i

if.end9.critedge.i:                               ; preds = %alc_get_hp_pin.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 130) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 54, i32 noundef 16384, i32 noundef 16384) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 54, i32 noundef 8192, i32 noundef 0) #13
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.end9.critedge.i, %if.then.i
  tail call void @msleep(i32 noundef 10) #13
  %31 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %spec1, align 8
  %call.i.i57.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i58.i = getelementptr inbounds %struct.alc_spec, ptr %32, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i58.i, i32 noundef 0) #13
  %call.i.i.i59.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 103) #13
  %call.i4.i.i60.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %33 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i61.i = getelementptr inbounds %struct.alc_spec, ptr %34, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i61.i) #13
  %call.i5.i62.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %35 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %spec1, align 8
  %call.i.i64.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i65.i = getelementptr inbounds %struct.alc_spec, ptr %36, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i65.i, i32 noundef 0) #13
  %call.i.i.i66.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 0) #13
  %call.i4.i.i67.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1024, i32 noundef 30848) #13
  %37 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i68.i = getelementptr inbounds %struct.alc_spec, ptr %38, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i68.i) #13
  %call.i5.i69.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %39 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %spec1, align 8
  %call.i.i71.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i72.i = getelementptr inbounds %struct.alc_spec, ptr %40, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i72.i, i32 noundef 0) #13
  %call.i.i.i73.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 15) #13
  %call.i4.i.i74.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1024, i32 noundef 61513) #13
  %41 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i75.i = getelementptr inbounds %struct.alc_spec, ptr %42, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i75.i) #13
  %call.i5.i76.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 3, i32 noundef 240, i32 noundef 192) #13
  %43 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %spec1, align 8
  %call.i.i78.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i79.i = getelementptr inbounds %struct.alc_spec, ptr %44, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i79.i, i32 noundef 0) #13
  %call.i.i.i80.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 0) #13
  %call.i4.i.i81.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1024, i32 noundef 63624) #13
  %45 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i82.i = getelementptr inbounds %struct.alc_spec, ptr %46, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i82.i) #13
  %call.i5.i83.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %47 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %spec1, align 8
  %call.i.i85.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i86.i = getelementptr inbounds %struct.alc_spec, ptr %48, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i86.i, i32 noundef 0) #13
  %call.i.i.i87.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 0) #13
  %call.i4.i.i88.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %49 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i89.i = getelementptr inbounds %struct.alc_spec, ptr %50, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i89.i) #13
  %call.i5.i90.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and105.i = and i32 %call.i4.i.i88.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and105.i)
  %tobool11.not106.i = icmp eq i32 %and105.i, 0
  br i1 %tobool11.not106.i, label %if.end9.i.alc285_hp_init.exit_crit_edge, label %if.end9.i.for.body.i_crit_edge

if.end9.i.for.body.i_crit_edge:                   ; preds = %if.end9.i
  br label %for.body.i

if.end9.i.alc285_hp_init.exit_crit_edge:          ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc285_hp_init.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end9.i.for.body.i_crit_edge
  %i.0107.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end9.i.for.body.i_crit_edge ]
  tail call void @msleep(i32 noundef 50) #13
  %51 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %spec1, align 8
  %call.i.i92.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i93.i = getelementptr inbounds %struct.alc_spec, ptr %52, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i93.i, i32 noundef 0) #13
  %call.i.i.i94.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 0) #13
  %call.i4.i.i95.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %53 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i96.i = getelementptr inbounds %struct.alc_spec, ptr %54, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i96.i) #13
  %call.i5.i97.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %inc.i = add nuw nsw i32 %i.0107.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %i.0107.i)
  %cmp.i124 = icmp ugt i32 %i.0107.i, 18
  %and.i = and i32 %call.i4.i.i95.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool11.not.i = icmp eq i32 %and.i, 0
  %or.cond.i = select i1 %cmp.i124, i1 true, i1 %tobool11.not.i
  br i1 %or.cond.i, label %for.body.i.alc285_hp_init.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.body.i.alc285_hp_init.exit_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc285_hp_init.exit

alc285_hp_init.exit:                              ; preds = %for.body.i.alc285_hp_init.exit_crit_edge, %if.end9.i.alc285_hp_init.exit_crit_edge
  %val.0.lcssa.i = phi i32 [ %call.i4.i.i88.i, %if.end9.i.alc285_hp_init.exit_crit_edge ], [ %call.i4.i.i95.i, %for.body.i.alc285_hp_init.exit_crit_edge ]
  %55 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %spec1, align 8
  %call.i.i99.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i100.i = getelementptr inbounds %struct.alc_spec, ptr %56, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i100.i, i32 noundef 0) #13
  %call.i.i.i101.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 0) #13
  %call.i4.i.i102.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1024, i32 noundef %val.0.lcssa.i) #13
  %57 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i103.i = getelementptr inbounds %struct.alc_spec, ptr %58, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i103.i) #13
  %call.i5.i104.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 56, i32 noundef 16, i32 noundef %call.i4.i.i.i) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 13, i32 noundef 272, i32 noundef %call.i4.i.i45.i) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 54, i32 noundef 24576, i32 noundef %call.i4.i.i52.i) #13
  tail call void @msleep(i32 noundef 50) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 32768, i32 noundef 0) #13
  %59 = ptrtoint ptr %done_hp_init to i32
  call void @__asan_load1_noabort(i32 %59)
  %bf.load12 = load i8, ptr %done_hp_init, align 8
  %bf.set = or i8 %bf.load12, 32
  store i8 %bf.set, ptr %done_hp_init, align 8
  br label %if.end14

if.end14:                                         ; preds = %alc285_hp_init.exit, %lor.lhs.false.if.end14_crit_edge, %alc_get_hp_pin.exit.if.end14_crit_edge
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %retval.0.i)
  %tobool15.not = icmp eq i16 %retval.0.i, 0
  %spec.store.select = select i1 %tobool15.not, i16 33, i16 %retval.0.i
  tail call void @msleep(i32 noundef 30) #13
  %call.i.i125 = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %spec.store.select, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i125)
  %cmp.i.i126 = icmp ne i32 %call.i.i125, 0
  %call.i.i127 = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 22, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i127)
  %cmp.i.i128 = icmp ne i32 %call.i.i127, 0
  %brmerge = select i1 %cmp.i.i126, i1 true, i1 %cmp.i.i128
  br i1 %brmerge, label %if.then24, label %if.end14.if.end25_crit_edge

if.end14.if.end25_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end25

if.then24:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 2) #13
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end14.if.end25_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 4, i32 noundef 7, i32 noundef 1)
  %ultra_low_power = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %60 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %60)
  %bf.load26 = load i8, ptr %ultra_low_power, align 8
  %61 = and i8 %bf.load26, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool30.not = icmp eq i8 %61, 0
  br i1 %tobool30.not, label %if.end25.if.end32_crit_edge, label %if.then31

if.end25.if.end32_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32

if.then31:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 8, i32 noundef 60, i32 noundef 12)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 14, i32 noundef 448, i32 noundef 448)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 51, i32 noundef 2048, i32 noundef 0)
  tail call void @msleep(i32 noundef 30) #13
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end25.if.end32_crit_edge
  br i1 %cmp.i.i126, label %if.end32.if.then41_crit_edge, label %lor.lhs.false34

if.end32.if.then41_crit_edge:                     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then41

lor.lhs.false34:                                  ; preds = %if.end32
  %62 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %62)
  %bf.load36 = load i8, ptr %ultra_low_power, align 8
  %63 = and i8 %bf.load36, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool40.not = icmp eq i8 %63, 0
  br i1 %tobool40.not, label %lor.lhs.false34.if.end43_crit_edge, label %lor.lhs.false34.if.then41_crit_edge

lor.lhs.false34.if.then41_crit_edge:              ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then41

lor.lhs.false34.if.end43_crit_edge:               ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end43

if.then41:                                        ; preds = %lor.lhs.false34.if.then41_crit_edge, %if.end32.if.then41_crit_edge
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %spec.store.select, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %lor.lhs.false34.if.end43_crit_edge
  br i1 %cmp.i.i128, label %if.then45, label %if.end43.if.end47_crit_edge

if.end43.if.end47_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end47

if.then45:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #15
  %call.i129 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 22, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %if.end43.if.end47_crit_edge
  br i1 %brmerge, label %if.end47.if.then58_crit_edge, label %lor.lhs.false51

if.end47.if.then58_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then58

lor.lhs.false51:                                  ; preds = %if.end47
  %64 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %64)
  %bf.load53 = load i8, ptr %ultra_low_power, align 8
  %65 = and i8 %bf.load53, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool57.not = icmp eq i8 %65, 0
  br i1 %tobool57.not, label %lor.lhs.false51.if.end59_crit_edge, label %lor.lhs.false51.if.then58_crit_edge

lor.lhs.false51.if.then58_crit_edge:              ; preds = %lor.lhs.false51
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then58

lor.lhs.false51.if.end59_crit_edge:               ; preds = %lor.lhs.false51
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end59

if.then58:                                        ; preds = %lor.lhs.false51.if.then58_crit_edge, %if.end47.if.then58_crit_edge
  tail call void @msleep(i32 noundef 85) #13
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %lor.lhs.false51.if.end59_crit_edge
  br i1 %cmp.i.i126, label %if.end59.if.then68_crit_edge, label %lor.lhs.false61

if.end59.if.then68_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then68

lor.lhs.false61:                                  ; preds = %if.end59
  %66 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %66)
  %bf.load63 = load i8, ptr %ultra_low_power, align 8
  %67 = and i8 %bf.load63, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool67.not = icmp eq i8 %67, 0
  br i1 %tobool67.not, label %lor.lhs.false61.if.end70_crit_edge, label %lor.lhs.false61.if.then68_crit_edge

lor.lhs.false61.if.then68_crit_edge:              ; preds = %lor.lhs.false61
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then68

lor.lhs.false61.if.end70_crit_edge:               ; preds = %lor.lhs.false61
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end70

if.then68:                                        ; preds = %lor.lhs.false61.if.then68_crit_edge, %if.end59.if.then68_crit_edge
  %call.i130 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %spec.store.select, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %lor.lhs.false61.if.end70_crit_edge
  br i1 %cmp.i.i128, label %if.then72, label %if.end70.if.end74_crit_edge

if.end70.if.end74_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end74

if.then72:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #15
  %call.i131 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 22, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.end70.if.end74_crit_edge
  br i1 %brmerge, label %if.end74.if.then85_crit_edge, label %lor.lhs.false78

if.end74.if.then85_crit_edge:                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then85

lor.lhs.false78:                                  ; preds = %if.end74
  %68 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %68)
  %bf.load80 = load i8, ptr %ultra_low_power, align 8
  %69 = and i8 %bf.load80, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool84.not = icmp eq i8 %69, 0
  br i1 %tobool84.not, label %lor.lhs.false78.if.end86_crit_edge, label %lor.lhs.false78.if.then85_crit_edge

lor.lhs.false78.if.then85_crit_edge:              ; preds = %lor.lhs.false78
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then85

lor.lhs.false78.if.end86_crit_edge:               ; preds = %lor.lhs.false78
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end86

if.then85:                                        ; preds = %lor.lhs.false78.if.then85_crit_edge, %if.end74.if.then85_crit_edge
  tail call void @msleep(i32 noundef 100) #13
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %lor.lhs.false78.if.end86_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 3072, i32 noundef 0)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 4, i32 noundef 7, i32 noundef 4)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %coef_idx, i32 noundef %mask, i32 noundef %bits_set) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 1280, i32 noundef %coef_idx) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i4.i.i)
  %cmp.not.i = icmp eq i32 %call.i4.i.i, -1
  br i1 %cmp.not.i, label %entry.__alc_update_coefex_idx.exit_crit_edge, label %if.then.i

entry.__alc_update_coefex_idx.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %__alc_update_coefex_idx.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %neg.i = xor i32 %mask, -1
  %and.i = and i32 %call.i4.i.i, %neg.i
  %or.i = or i32 %and.i, %bits_set
  %call.i.i5.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 1280, i32 noundef %coef_idx) #13
  %call.i4.i6.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 1024, i32 noundef %or.i) #13
  br label %__alc_update_coefex_idx.exit

__alc_update_coefex_idx.exit:                     ; preds = %if.then.i, %entry.__alc_update_coefex_idx.exit_crit_edge
  %2 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i, align 8
  %coef_mutex.i4 = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4) #13
  %call.i5 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc294_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %done_hp_init = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %done_hp_init to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %done_hp_init, align 8
  %3 = and i8 %bf.load, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %power = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12
  %4 = ptrtoint ptr %power to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %power, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %5)
  %cmp = icmp eq i32 %5, 64
  br i1 %cmp, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %hp_pins.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %6 = ptrtoint ptr %hp_pins.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %hp_pins.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.if.end.i_crit_edge

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i.i:                                       ; preds = %if.then
  %line_out_type.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %8 = ptrtoint ptr %line_out_type.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %line_out_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %cmp.i.i = icmp eq i32 %9, 2
  br i1 %cmp.i.i, label %alc_get_hp_pin.exit.i, label %if.end.i.i.alc294_hp_init.exit_crit_edge

if.end.i.i.alc294_hp_init.exit_crit_edge:         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc294_hp_init.exit

alc_get_hp_pin.exit.i:                            ; preds = %if.end.i.i
  %line_out_pins.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %10 = ptrtoint ptr %line_out_pins.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %line_out_pins.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i = icmp eq i16 %11, 0
  br i1 %tobool.not.i, label %alc_get_hp_pin.exit.i.alc294_hp_init.exit_crit_edge, label %alc_get_hp_pin.exit.i.if.end.i_crit_edge

alc_get_hp_pin.exit.i.if.end.i_crit_edge:         ; preds = %alc_get_hp_pin.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

alc_get_hp_pin.exit.i.alc294_hp_init.exit_crit_edge: ; preds = %alc_get_hp_pin.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc294_hp_init.exit

if.end.i:                                         ; preds = %alc_get_hp_pin.exit.i.if.end.i_crit_edge, %if.then.if.end.i_crit_edge
  %retval.0.i37.i = phi i16 [ %11, %alc_get_hp_pin.exit.i.if.end.i_crit_edge ], [ %7, %if.then.if.end.i_crit_edge ]
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i37.i, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 100) #13
  %12 = ptrtoint ptr %done_hp_init to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load.i = load i8, ptr %done_hp_init, align 8
  %13 = and i8 %bf.load.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool3.not.i = icmp eq i8 %13, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %if.end.i.if.end6.i_crit_edge

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i24.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i37.i, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.end.i.if.end6.i_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 111, i32 noundef 15, i32 noundef 0) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 32768, i32 noundef 32768) #13
  %14 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1, align 8
  %call.i.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i.i, i32 noundef 0) #13
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 1) #13
  %call.i4.i.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %16 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i.i = getelementptr inbounds %struct.alc_spec, ptr %17, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i.i) #13
  %call.i5.i.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and38.i = and i32 %call.i4.i.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool8.not39.i = icmp eq i32 %and38.i, 0
  br i1 %tobool8.not39.i, label %if.end6.i.for.end.i_crit_edge, label %if.end6.i.for.body.i_crit_edge

if.end6.i.for.body.i_crit_edge:                   ; preds = %if.end6.i
  br label %for.body.i

if.end6.i.for.end.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end6.i.for.body.i_crit_edge
  %i.040.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end6.i.for.body.i_crit_edge ]
  tail call void @msleep(i32 noundef 50) #13
  %18 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %spec1, align 8
  %call.i.i26.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i27.i = getelementptr inbounds %struct.alc_spec, ptr %19, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i27.i, i32 noundef 0) #13
  %call.i.i.i28.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 1280, i32 noundef 1) #13
  %call.i4.i.i29.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 88, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %20 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i30.i = getelementptr inbounds %struct.alc_spec, ptr %21, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i30.i) #13
  %call.i5.i31.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %inc.i = add nuw nsw i32 %i.040.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %i.040.i)
  %cmp.i = icmp ugt i32 %i.040.i, 18
  %and.i = and i32 %call.i4.i.i29.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool8.not.i = icmp eq i32 %and.i, 0
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %tobool8.not.i
  br i1 %or.cond.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.end6.i.for.end.i_crit_edge
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 111, i32 noundef 15, i32 noundef 11) #13
  tail call void @msleep(i32 noundef 50) #13
  br label %alc294_hp_init.exit

alc294_hp_init.exit:                              ; preds = %for.end.i, %alc_get_hp_pin.exit.i.alc294_hp_init.exit_crit_edge, %if.end.i.i.alc294_hp_init.exit_crit_edge
  %22 = ptrtoint ptr %done_hp_init to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load3 = load i8, ptr %done_hp_init, align 8
  %bf.set = or i8 %bf.load3, 32
  store i8 %bf.set, ptr %done_hp_init, align 8
  br label %if.end

if.end:                                           ; preds = %alc294_hp_init.exit, %lor.lhs.false.if.end_crit_edge
  tail call void @alc_default_init(ptr noundef %codec)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc5505_dsp_init(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @alc5505_dsp_halt(ptr noundef %codec)
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13058) #13
  %call.i8.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1043) #13
  %call.i.i6.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12504) #13
  %call.i7.i7.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 23318) #13
  %call.i8.i8.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i9.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12506) #13
  %call.i7.i10.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 11010) #13
  %call.i8.i11.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1034) #13
  %call.i.i12.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12568) #13
  %call.i7.i13.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 16401) #13
  %call.i8.i14.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 63501) #13
  %call.i.i15.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12560) #13
  %call.i7.i16.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 271) #13
  %call.i8.i17.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 8194) #13
  %call.i.i18.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17414) #13
  %call.i7.i19.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 4) #13
  %call.i8.i20.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12504) #13
  %call.i7.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 23316) #13
  %call.i8.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i27 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12504) #13
  %call.i7.i28 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 23318) #13
  %call.i8.i29 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i30 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12506) #13
  %call.i7.i31 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 11008) #13
  %call.i8.i32 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1043) #13
  %call.i.i33 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12506) #13
  %call.i7.i34 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 11010) #13
  %call.i8.i35 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1043) #13
  %call.i.i36 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i37 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13056) #13
  %call.i8.i38 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1055) #13
  %call.i.i39 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i40 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13058) #13
  %call.i8.i41 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1055) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 2047, i32 noundef 0) #13
  %call.i.i42 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i43 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13058) #13
  %call.i8.i44 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1051) #13
  %call.i.i45 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i46 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13058) #13
  %call.i8.i47 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1047) #13
  %call.i.i48 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i49 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13058) #13
  %call.i8.i50 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1046) #13
  %call.i.i51 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17408) #13
  %call.i7.i52 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 12939) #13
  %call.i8.i53 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13451) #13
  %call.i.i54 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17412) #13
  %call.i7.i55 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 34) #13
  %call.i8.i56 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 2) #13
  %call.i.i57 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17420) #13
  %call.i7.i58 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1024) #13
  %call.i8.i59 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i60 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12544) #13
  %call.i6.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %call.i7.i61 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %0 = and i32 %call.i7.i61, 65532
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp = icmp eq i32 %0, 0
  %call.i.i62 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12560) #13
  %. = select i1 %cmp, i32 271, i32 399
  %.90 = select i1 %cmp, i32 8194, i32 24578
  %call.i7.i66 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef %.) #13
  %call.i8.i67 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef %.90) #13
  %call.i.i68 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12502) #13
  %call.i7.i69 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 9712) #13
  %call.i8.i70 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1365) #13
  %call.i.i71 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12512) #13
  %call.i7.i72 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 128) #13
  %call.i8.i73 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 4643) #13
  %call.i.i74 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12506) #13
  %call.i7.i75 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 11010) #13
  %call.i8.i76 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1038) #13
  %call.i.i77 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12510) #13
  %call.i7.i78 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13560) #13
  %call.i8.i79 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 258) #13
  %call.i.i80 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17414) #13
  %call.i7.i81 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 4) #13
  %call.i8.i82 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i83 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17414) #13
  %call.i7.i84 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 3) #13
  %call.i8.i85 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i86 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17414) #13
  %call.i7.i87 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 16) #13
  %call.i8.i88 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  tail call fastcc void @alc5505_dsp_halt(ptr noundef %codec)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_pre_init(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc i32 @alc_get_coef0(ptr noundef %codec) #13
  %vendor_id.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id.i, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1231)
  switch i32 %1, label %entry.alc_fill_eapd_coef.exit_crit_edge [
    i32 283902562, label %sw.bb.i
    i32 283902567, label %entry.sw.bb1.i_crit_edge
    i32 283902568, label %entry.sw.bb1.i_crit_edge1
    i32 283902569, label %sw.bb2.i
    i32 283902592, label %entry.sw.bb11.i_crit_edge
    i32 283902596, label %entry.sw.bb11.i_crit_edge2
    i32 283902608, label %entry.sw.bb11.i_crit_edge3
    i32 283902610, label %entry.sw.bb11.i_crit_edge4
    i32 283902501, label %entry.sw.bb12.i_crit_edge
    i32 283902613, label %entry.sw.bb12.i_crit_edge5
    i32 283902617, label %entry.sw.bb12.i_crit_edge6
    i32 283902485, label %entry.sw.bb13.i_crit_edge
    i32 283902512, label %entry.sw.bb13.i_crit_edge7
    i32 283902515, label %entry.sw.bb13.i_crit_edge8
    i32 283902517, label %entry.sw.bb13.i_crit_edge9
    i32 283902518, label %entry.sw.bb13.i_crit_edge10
    i32 283902533, label %entry.sw.bb13.i_crit_edge11
    i32 283902549, label %entry.sw.bb13.i_crit_edge12
    i32 283902550, label %entry.sw.bb13.i_crit_edge13
    i32 283902551, label %entry.sw.bb13.i_crit_edge14
    i32 283902594, label %entry.sw.bb13.i_crit_edge15
    i32 283902595, label %entry.sw.bb13.i_crit_edge16
    i32 283902598, label %entry.sw.bb13.i_crit_edge17
    i32 283902600, label %entry.sw.bb13.i_crit_edge18
    i32 283902597, label %entry.sw.bb13.i_crit_edge19
    i32 283902616, label %entry.sw.bb13.i_crit_edge20
    i32 283902601, label %entry.sw.bb13.i_crit_edge21
    i32 283902720, label %entry.sw.bb13.i_crit_edge22
    i32 283902581, label %sw.bb14.i
    i32 283902599, label %sw.bb15.i
    i32 283902611, label %sw.bb16.i
    i32 283902516, label %entry.sw.bb17.i_crit_edge
    i32 283902580, label %entry.sw.bb17.i_crit_edge23
    i32 283902612, label %entry.sw.bb17.i_crit_edge24
    i32 283903744, label %entry.sw.bb17.i_crit_edge25
    i32 283903745, label %entry.sw.bb17.i_crit_edge26
    i32 283903747, label %entry.sw.bb17.i_crit_edge27
    i32 283903761, label %entry.sw.bb17.i_crit_edge28
    i32 283903586, label %sw.bb18.i
    i32 283902578, label %entry.sw.bb23.i_crit_edge
    i32 283902579, label %entry.sw.bb23.i_crit_edge29
    i32 283903587, label %entry.sw.bb23.i_crit_edge30
    i32 283903589, label %entry.sw.bb23.i_crit_edge31
    i32 283903600, label %entry.sw.bb23.i_crit_edge32
    i32 283903601, label %entry.sw.bb23.i_crit_edge33
    i32 283903602, label %entry.sw.bb23.i_crit_edge34
    i32 283902498, label %entry.sw.bb24.i_crit_edge
    i32 283903523, label %entry.sw.bb24.i_crit_edge35
    i32 283903592, label %sw.bb25.i
    i32 283904103, label %sw.bb26.i
    i32 283904136, label %sw.bb27.i
    i32 283904146, label %entry.sw.bb34.i_crit_edge
    i32 283904151, label %entry.sw.bb34.i_crit_edge36
    i32 283904153, label %entry.sw.bb35.i_crit_edge
    i32 283904256, label %entry.sw.bb35.i_crit_edge37
    i32 283904768, label %entry.sw.bb35.i_crit_edge38
    i32 283906408, label %entry.sw.bb35.i_crit_edge39
    i32 283906592, label %entry.sw.bb35.i_crit_edge40
  ]

entry.sw.bb35.i_crit_edge40:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb35.i

entry.sw.bb35.i_crit_edge39:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb35.i

entry.sw.bb35.i_crit_edge38:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb35.i

entry.sw.bb35.i_crit_edge37:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb35.i

entry.sw.bb35.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb35.i

entry.sw.bb34.i_crit_edge36:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb34.i

entry.sw.bb34.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb34.i

entry.sw.bb24.i_crit_edge35:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24.i

entry.sw.bb24.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24.i

entry.sw.bb23.i_crit_edge34:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb23.i_crit_edge33:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb23.i_crit_edge32:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb23.i_crit_edge31:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb23.i_crit_edge30:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb23.i_crit_edge29:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb23.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb23.i

entry.sw.bb17.i_crit_edge28:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb17.i_crit_edge27:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb17.i_crit_edge26:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb17.i_crit_edge25:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb17.i_crit_edge24:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb17.i_crit_edge23:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb17.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17.i

entry.sw.bb13.i_crit_edge22:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge21:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge20:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge19:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge18:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge17:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge16:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge15:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge14:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge13:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge12:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge11:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge10:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge9:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge8:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge7:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb13.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb13.i

entry.sw.bb12.i_crit_edge6:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12.i

entry.sw.bb12.i_crit_edge5:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12.i

entry.sw.bb12.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12.i

entry.sw.bb11.i_crit_edge4:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11.i

entry.sw.bb11.i_crit_edge3:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11.i

entry.sw.bb11.i_crit_edge2:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11.i

entry.sw.bb11.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11.i

entry.sw.bb1.i_crit_edge1:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1.i

entry.sw.bb1.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1.i

entry.alc_fill_eapd_coef.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fill_eapd_coef.exit

sw.bb.i:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 32) #13
  br label %alc_fill_eapd_coef.exit

sw.bb1.i:                                         ; preds = %entry.sw.bb1.i_crit_edge, %entry.sw.bb1.i_crit_edge1
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 8192) #13
  br label %alc_fill_eapd_coef.exit

sw.bb2.i:                                         ; preds = %entry
  %3 = trunc i32 %call.i to i8
  %trunc63.i = and i8 %3, -16
  %4 = zext i8 %trunc63.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.1232)
  switch i8 %trunc63.i, label %sw.bb2.i.alc_fill_eapd_coef.exit_crit_edge [
    i8 16, label %if.then.i
    i8 32, label %if.then5.i
    i8 48, label %if.then9.i
  ]

sw.bb2.i.alc_fill_eapd_coef.exit_crit_edge:       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fill_eapd_coef.exit

if.then.i:                                        ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 13, i32 noundef 0, i32 noundef 16384) #13
  br label %alc_fill_eapd_coef.exit

if.then5.i:                                       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 32768, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

if.then9.i:                                       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 16, i32 noundef 512, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb11.i:                                        ; preds = %entry.sw.bb11.i_crit_edge, %entry.sw.bb11.i_crit_edge2, %entry.sw.bb11.i_crit_edge3, %entry.sw.bb11.i_crit_edge4
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 32768, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb12.i:                                        ; preds = %entry.sw.bb12.i_crit_edge, %entry.sw.bb12.i_crit_edge5, %entry.sw.bb12.i_crit_edge6
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 103, i32 noundef 61440, i32 noundef 12288) #13
  br label %sw.bb13.i

sw.bb13.i:                                        ; preds = %sw.bb12.i, %entry.sw.bb13.i_crit_edge, %entry.sw.bb13.i_crit_edge7, %entry.sw.bb13.i_crit_edge8, %entry.sw.bb13.i_crit_edge9, %entry.sw.bb13.i_crit_edge10, %entry.sw.bb13.i_crit_edge11, %entry.sw.bb13.i_crit_edge12, %entry.sw.bb13.i_crit_edge13, %entry.sw.bb13.i_crit_edge14, %entry.sw.bb13.i_crit_edge15, %entry.sw.bb13.i_crit_edge16, %entry.sw.bb13.i_crit_edge17, %entry.sw.bb13.i_crit_edge18, %entry.sw.bb13.i_crit_edge19, %entry.sw.bb13.i_crit_edge20, %entry.sw.bb13.i_crit_edge21, %entry.sw.bb13.i_crit_edge22
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 16, i32 noundef 512, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb14.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 14, i32 noundef 0, i32 noundef 1) #13
  br label %alc_fill_eapd_coef.exit

sw.bb15.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 16, i32 noundef 512, i32 noundef 0) #13
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %5 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 8) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 19127) #13
  %7 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %alc_fill_eapd_coef.exit

sw.bb16.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 10, i32 noundef 8192, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb17.i:                                        ; preds = %entry.sw.bb17.i_crit_edge, %entry.sw.bb17.i_crit_edge23, %entry.sw.bb17.i_crit_edge24, %entry.sw.bb17.i_crit_edge25, %entry.sw.bb17.i_crit_edge26, %entry.sw.bb17.i_crit_edge27, %entry.sw.bb17.i_crit_edge28
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 16, i32 noundef 32768, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb18.i:                                        ; preds = %entry
  %and19.i = and i32 %call.i, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %and19.i)
  %cmp20.i = icmp eq i32 %and19.i, 48
  br i1 %cmp20.i, label %if.then21.i, label %sw.bb18.i.alc_fill_eapd_coef.exit_crit_edge

sw.bb18.i.alc_fill_eapd_coef.exit_crit_edge:      ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fill_eapd_coef.exit

if.then21.i:                                      ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 1024, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb23.i:                                        ; preds = %entry.sw.bb23.i_crit_edge, %entry.sw.bb23.i_crit_edge29, %entry.sw.bb23.i_crit_edge30, %entry.sw.bb23.i_crit_edge31, %entry.sw.bb23.i_crit_edge32, %entry.sw.bb23.i_crit_edge33, %entry.sw.bb23.i_crit_edge34
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 13, i32 noundef 0, i32 noundef 16384) #13
  br label %alc_fill_eapd_coef.exit

sw.bb24.i:                                        ; preds = %entry.sw.bb24.i_crit_edge, %entry.sw.bb24.i_crit_edge35
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 25, i32 noundef 8192, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb25.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 24576, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb26.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 4, i32 noundef 1024, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb27.i:                                        ; preds = %entry
  %9 = trunc i32 %call.i to i8
  %trunc.i = and i8 %9, -16
  %10 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.1233)
  switch i8 %trunc.i, label %sw.bb27.i.alc_fill_eapd_coef.exit_crit_edge [
    i8 32, label %sw.bb27.i.if.then32.i_crit_edge
    i8 48, label %sw.bb27.i.if.then32.i_crit_edge41
  ]

sw.bb27.i.if.then32.i_crit_edge41:                ; preds = %sw.bb27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then32.i

sw.bb27.i.if.then32.i_crit_edge:                  ; preds = %sw.bb27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then32.i

sw.bb27.i.alc_fill_eapd_coef.exit_crit_edge:      ; preds = %sw.bb27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fill_eapd_coef.exit

if.then32.i:                                      ; preds = %sw.bb27.i.if.then32.i_crit_edge, %sw.bb27.i.if.then32.i_crit_edge41
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 32, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb34.i:                                        ; preds = %entry.sw.bb34.i_crit_edge, %entry.sw.bb34.i_crit_edge36
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 32, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

sw.bb35.i:                                        ; preds = %entry.sw.bb35.i_crit_edge, %entry.sw.bb35.i_crit_edge37, %entry.sw.bb35.i_crit_edge38, %entry.sw.bb35.i_crit_edge39, %entry.sw.bb35.i_crit_edge40
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 2, i32 noundef 0) #13
  br label %alc_fill_eapd_coef.exit

alc_fill_eapd_coef.exit:                          ; preds = %sw.bb35.i, %sw.bb34.i, %if.then32.i, %sw.bb27.i.alc_fill_eapd_coef.exit_crit_edge, %sw.bb26.i, %sw.bb25.i, %sw.bb24.i, %sw.bb23.i, %if.then21.i, %sw.bb18.i.alc_fill_eapd_coef.exit_crit_edge, %sw.bb17.i, %sw.bb16.i, %sw.bb15.i, %sw.bb14.i, %sw.bb13.i, %sw.bb11.i, %if.then9.i, %if.then5.i, %if.then.i, %sw.bb2.i.alc_fill_eapd_coef.exit_crit_edge, %sw.bb1.i, %sw.bb.i, %entry.alc_fill_eapd_coef.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_pick_fixup(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_pick_pin_fixup(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_apply_fixup(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_auto_parse_customize_define(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %cdefine = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1
  %enable_pcbeep = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %2 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %enable_pcbeep, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %enable_pcbeep, align 8
  %3 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end7, label %if.then

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %cdefine to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cdefine, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp = icmp eq i32 %5, 2
  br i1 %cmp, label %if.then.cleanup_crit_edge, label %if.then.do_sku_crit_edge

if.then.do_sku_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_sku

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %entry
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %6 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bus, align 8
  %pci = getelementptr inbounds %struct.hda_bus, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %pci to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pci, align 4
  %tobool8.not = icmp eq ptr %9, null
  br i1 %tobool8.not, label %if.end7.cleanup_crit_edge, label %if.end10

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end10:                                         ; preds = %if.end7
  %subsystem_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 8
  %10 = ptrtoint ptr %subsystem_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %subsystem_id, align 4
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 10
  %12 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %subsystem_device, align 2
  %14 = trunc i32 %11 to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %14)
  %cmp13.not = icmp eq i16 %13, %14
  br i1 %cmp13.not, label %if.end10.if.end18_crit_edge, label %land.lhs.true

if.end10.if.end18_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end10
  %and = and i32 %11, 65535
  %and15 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %land.lhs.true.if.end18_crit_edge, label %land.lhs.true.do_sku_crit_edge

land.lhs.true.do_sku_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_sku

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

if.end18:                                         ; preds = %land.lhs.true.if.end18_crit_edge, %if.end10.if.end18_crit_edge
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %15 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vendor_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 283902560, i32 %16)
  %cmp20 = icmp eq i32 %16, 283902560
  %spec.store.select = select i1 %cmp20, i32 23, i32 29
  %conv24 = trunc i32 %spec.store.select to i16
  %call = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext %conv24) #13
  %and25 = and i32 %call, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %do.end, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end18
  %17 = lshr i32 %call, 1
  %18 = and i32 %17, 1
  %19 = lshr i32 %call, 2
  %20 = and i32 %19, 1
  %spec.select.1 = add nuw nsw i32 %20, %18
  %21 = lshr i32 %call, 3
  %22 = and i32 %21, 1
  %spec.select.2 = add nuw nsw i32 %22, %spec.select.1
  %23 = lshr i32 %call, 4
  %24 = and i32 %23, 1
  %spec.select.3 = add nuw nsw i32 %24, %spec.select.2
  %25 = lshr i32 %call, 5
  %26 = and i32 %25, 1
  %spec.select.4 = add nuw nsw i32 %26, %spec.select.3
  %27 = lshr i32 %call, 6
  %28 = and i32 %27, 1
  %spec.select.5 = add nuw nsw i32 %28, %spec.select.4
  %29 = lshr i32 %call, 7
  %30 = and i32 %29, 1
  %spec.select.6 = add nuw nsw i32 %30, %spec.select.5
  %31 = lshr i32 %call, 8
  %32 = and i32 %31, 1
  %spec.select.7 = add nuw nsw i32 %32, %spec.select.6
  %33 = lshr i32 %call, 9
  %34 = and i32 %33, 1
  %spec.select.8 = add nuw nsw i32 %34, %spec.select.7
  %35 = lshr i32 %call, 10
  %36 = and i32 %35, 1
  %spec.select.9 = add nuw nsw i32 %36, %spec.select.8
  %37 = lshr i32 %call, 11
  %38 = and i32 %37, 1
  %spec.select.10 = add nuw nsw i32 %38, %spec.select.9
  %39 = lshr i32 %call, 12
  %40 = and i32 %39, 1
  %spec.select.11 = add nuw nsw i32 %40, %spec.select.10
  %41 = lshr i32 %call, 13
  %42 = and i32 %41, 1
  %spec.select.12 = add nuw nsw i32 %42, %spec.select.11
  %43 = lshr i32 %call, 14
  %44 = and i32 %43, 1
  %spec.select.13 = add nuw nsw i32 %44, %spec.select.12
  %45 = lshr i32 %call, 15
  %46 = and i32 %45, 1
  %spec.select.14 = add nuw nsw i32 %46, %spec.select.13
  %shr38 = lshr i32 %call, 16
  %and39 = and i32 %shr38, 15
  call void @__sanitizer_cov_trace_cmp4(i32 %and39, i32 %spec.select.14)
  %cmp40.not = icmp eq i32 %and39, %spec.select.14
  br i1 %cmp40.not, label %if.end43, label %for.body.preheader.cleanup_crit_edge

for.body.preheader.cleanup_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end:                                           ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  %chip_name = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 15
  %47 = ptrtoint ptr %chip_name to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %chip_name, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %codec, ptr noundef nonnull @.str.811, ptr noundef %48, i32 noundef %call) #17
  br label %cleanup

if.end43:                                         ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  %shr44 = lshr i32 %call, 30
  %conv45 = trunc i32 %shr44 to i8
  %port_connectivity = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 1
  %49 = ptrtoint ptr %port_connectivity to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %conv45, ptr %port_connectivity, align 4
  %50 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load51 = load i8, ptr %enable_pcbeep, align 8
  %tr.sh.diff = trunc i32 %41 to i8
  %bf.shl = and i8 %tr.sh.diff, -128
  %bf.clear52 = and i8 %bf.load51, 127
  %bf.set53 = or i8 %bf.clear52, %bf.shl
  store i8 %bf.set53, ptr %enable_pcbeep, align 8
  %conv56 = trunc i32 %spec.select.14 to i8
  %check_sum = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 2
  %51 = ptrtoint ptr %check_sum to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %conv56, ptr %check_sum, align 1
  %conv59 = trunc i32 %31 to i8
  %customization = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 3
  %52 = ptrtoint ptr %customization to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 %conv59, ptr %customization, align 2
  br label %do_sku

do_sku:                                           ; preds = %if.end43, %land.lhs.true.do_sku_crit_edge, %if.then.do_sku_crit_edge
  %nid.0 = phi i32 [ 0, %if.then.do_sku_crit_edge ], [ 0, %land.lhs.true.do_sku_crit_edge ], [ %spec.store.select, %if.end43 ]
  %ass.0 = phi i32 [ %5, %if.then.do_sku_crit_edge ], [ %and, %land.lhs.true.do_sku_crit_edge ], [ %call, %if.end43 ]
  %53 = ptrtoint ptr %cdefine to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %ass.0, ptr %cdefine, align 8
  %54 = trunc i32 %ass.0 to i8
  %55 = lshr i8 %54, 3
  %conv65 = and i8 %55, 7
  %external_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 4
  %56 = ptrtoint ptr %external_amp to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 %conv65, ptr %external_amp, align 1
  %57 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %57)
  %bf.load70 = load i8, ptr %enable_pcbeep, align 8
  %58 = shl i8 %54, 4
  %bf.clear73 = and i8 %bf.load70, -113
  %bf.set83 = and i8 %58, 112
  %bf.set91 = or i8 %bf.set83, %bf.clear73
  store i8 %bf.set91, ptr %enable_pcbeep, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then99)) #13
          to label %do.body107 [label %if.then99], !srcloc !2188

if.then99:                                        ; preds = %do_sku
  call void @__sanitizer_cov_trace_pc() #15
  %59 = ptrtoint ptr %cdefine to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %cdefine, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug243, ptr noundef %codec, ptr noundef nonnull @.str.814, i32 noundef %nid.0, i32 noundef %60) #13
  br label %do.body107

do.body107:                                       ; preds = %if.then99, %do_sku
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug244, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then119)) #13
          to label %do.body128 [label %if.then119], !srcloc !2188

if.then119:                                       ; preds = %do.body107
  call void @__sanitizer_cov_trace_pc() #15
  %port_connectivity123 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 1
  %61 = ptrtoint ptr %port_connectivity123 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %port_connectivity123, align 4
  %conv124 = zext i8 %62 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug244, ptr noundef %codec, ptr noundef nonnull @.str.815, i32 noundef %conv124) #13
  br label %do.body128

do.body128:                                       ; preds = %if.then119, %do.body107
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug245, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then140)) #13
          to label %do.body151 [label %if.then140], !srcloc !2188

if.then140:                                       ; preds = %do.body128
  call void @__sanitizer_cov_trace_pc() #15
  %63 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %63)
  %bf.load145 = load i8, ptr %enable_pcbeep, align 8
  %bf.lshr146 = lshr i8 %bf.load145, 7
  %bf.cast147 = zext i8 %bf.lshr146 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug245, ptr noundef %codec, ptr noundef nonnull @.str.816, i32 noundef %bf.cast147) #13
  br label %do.body151

do.body151:                                       ; preds = %if.then140, %do.body128
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug246, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then163)) #13
          to label %do.body172 [label %if.then163], !srcloc !2188

if.then163:                                       ; preds = %do.body151
  call void @__sanitizer_cov_trace_pc() #15
  %check_sum167 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 2
  %64 = ptrtoint ptr %check_sum167 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %check_sum167, align 1
  %conv168 = zext i8 %65 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug246, ptr noundef %codec, ptr noundef nonnull @.str.817, i32 noundef %conv168) #13
  br label %do.body172

do.body172:                                       ; preds = %if.then163, %do.body151
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug247, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then184)) #13
          to label %do.body193 [label %if.then184], !srcloc !2188

if.then184:                                       ; preds = %do.body172
  call void @__sanitizer_cov_trace_pc() #15
  %customization188 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 3
  %66 = ptrtoint ptr %customization188 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %customization188, align 2
  %conv189 = zext i8 %67 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug247, ptr noundef %codec, ptr noundef nonnull @.str.818, i32 noundef %conv189) #13
  br label %do.body193

do.body193:                                       ; preds = %if.then184, %do.body172
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug248, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then205)) #13
          to label %do.body214 [label %if.then205], !srcloc !2188

if.then205:                                       ; preds = %do.body193
  call void @__sanitizer_cov_trace_pc() #15
  %68 = ptrtoint ptr %external_amp to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %external_amp, align 1
  %conv210 = zext i8 %69 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug248, ptr noundef %codec, ptr noundef nonnull @.str.819, i32 noundef %conv210) #13
  br label %do.body214

do.body214:                                       ; preds = %if.then205, %do.body193
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug249, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then226)) #13
          to label %do.body238 [label %if.then226], !srcloc !2188

if.then226:                                       ; preds = %do.body214
  call void @__sanitizer_cov_trace_pc() #15
  %70 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %70)
  %bf.load231 = load i8, ptr %enable_pcbeep, align 8
  %bf.lshr232 = lshr i8 %bf.load231, 6
  %bf.clear233 = and i8 %bf.lshr232, 1
  %bf.cast234 = zext i8 %bf.clear233 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug249, ptr noundef %codec, ptr noundef nonnull @.str.820, i32 noundef %bf.cast234) #13
  br label %do.body238

do.body238:                                       ; preds = %if.then226, %do.body214
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug250, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then250)) #13
          to label %do.body262 [label %if.then250], !srcloc !2188

if.then250:                                       ; preds = %do.body238
  call void @__sanitizer_cov_trace_pc() #15
  %71 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %71)
  %bf.load255 = load i8, ptr %enable_pcbeep, align 8
  %bf.lshr256 = lshr i8 %bf.load255, 5
  %bf.clear257 = and i8 %bf.lshr256, 1
  %bf.cast258 = zext i8 %bf.clear257 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug250, ptr noundef %codec, ptr noundef nonnull @.str.821, i32 noundef %bf.cast258) #13
  br label %do.body262

do.body262:                                       ; preds = %if.then250, %do.body238
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug251, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_auto_parse_customize_define, %if.then274)) #13
          to label %cleanup [label %if.then274], !srcloc !2188

if.then274:                                       ; preds = %do.body262
  call void @__sanitizer_cov_trace_pc() #15
  %72 = ptrtoint ptr %enable_pcbeep to i32
  call void @__asan_load1_noabort(i32 %72)
  %bf.load279 = load i8, ptr %enable_pcbeep, align 8
  %bf.lshr280 = lshr i8 %bf.load279, 4
  %bf.clear281 = and i8 %bf.lshr280, 1
  %bf.cast282 = zext i8 %bf.clear281 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug251, ptr noundef %codec, ptr noundef nonnull @.str.822, i32 noundef %bf.cast282) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then274, %do.body262, %do.end, %for.body.preheader.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc269_parse_auto_config(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %codec_variant = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 24
  %2 = ptrtoint ptr %codec_variant to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %codec_variant, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %3)
  %4 = icmp ult i32 %3, 21
  br i1 %4, label %switch.lookup, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %switch.gep = getelementptr inbounds [21 x ptr], ptr @switch.table.alc269_parse_auto_config, i32 0, i32 %3
  %5 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %5)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %switch.lookup, %entry.sw.epilog_crit_edge
  %ssids.0 = phi ptr [ %switch.load, %switch.lookup ], [ @alc269_parse_auto_config.alc269_ssids, %entry.sw.epilog_crit_edge ]
  %autocfg.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33
  %parse_flags.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %parse_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %parse_flags.i, align 4
  %call.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i, ptr noundef nonnull @alc269_parse_auto_config.alc269_ignore, i32 noundef %7) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %sw.epilog.alc_parse_auto_config.exit_crit_edge, label %if.end.i

sw.epilog.alc_parse_auto_config.exit_crit_edge:   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_parse_auto_config.exit

if.end.i:                                         ; preds = %sw.epilog
  %call.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull %ssids.0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.i.if.end3.i_crit_edge

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then.i.i:                                      ; preds = %if.end.i
  %8 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1, align 8
  %init_amp.i.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 23
  %10 = ptrtoint ptr %init_amp.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %init_amp.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp.i.i = icmp eq i32 %11, 0
  br i1 %cmp.i.i, label %do.body.i.i, label %if.then.i.i.if.end3.i_crit_edge

if.then.i.i.if.end3.i_crit_edge:                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

do.body.i.i:                                      ; preds = %if.then.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc269_parse_auto_config, %if.then7.i.i)) #13
          to label %do.end.i.i [label %if.then7.i.i], !srcloc !2188

if.then7.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then7.i.i, %do.body.i.i
  %12 = ptrtoint ptr %init_amp.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 2, ptr %init_amp.i.i, align 8
  br label %if.end3.i

if.end3.i:                                        ; preds = %do.end.i.i, %if.then.i.i.if.end3.i_crit_edge, %if.end.i.if.end3.i_crit_edge
  %call4.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %cmp5.i = icmp slt i32 %call4.i, 0
  %call4..i = select i1 %cmp5.i, i32 %call4.i, i32 1
  br label %alc_parse_auto_config.exit

alc_parse_auto_config.exit:                       ; preds = %if.end3.i, %sw.epilog.alc_parse_auto_config.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %sw.epilog.alc_parse_auto_config.exit_crit_edge ], [ %call4..i, %if.end3.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_beep_amp(ptr noundef %spec, i16 noundef zeroext %nid, i32 noundef %idx, i32 noundef %dir) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i16 %nid to i32
  %shl = shl i32 %dir, 18
  %or = or i32 %shl, %conv
  %shl2 = shl i32 %idx, 19
  %or1 = or i32 %shl2, %or
  %or3 = or i32 %or1, 196608
  %call = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %spec, ptr noundef null, ptr noundef nonnull @alc_beep_mixer) #13
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %private_value = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call, i32 0, i32 11
  %0 = ptrtoint ptr %private_value to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %or3, ptr %private_value, align 4
  %call.1 = tail call ptr @snd_hda_gen_add_kctl(ptr noundef %spec, ptr noundef null, ptr noundef getelementptr inbounds ([2 x %struct.snd_kcontrol_new], ptr @alc_beep_mixer, i32 0, i32 1)) #13
  %tobool.not.1 = icmp eq ptr %call.1, null
  br i1 %tobool.not.1, label %if.end.cleanup_crit_edge, label %if.end.1

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %private_value.1 = getelementptr inbounds %struct.snd_kcontrol_new, ptr %call.1, i32 0, i32 11
  %1 = ptrtoint ptr %private_value.1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %or3, ptr %private_value.1, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.1, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ 0, %if.end.1 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_gen_free(ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_spec_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc_build_controls(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @snd_hda_gen_build_controls(ptr noundef %codec) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 3) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_build_pcms(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc_init(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %power = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12
  %2 = ptrtoint ptr %power to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %power, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %3)
  %cmp = icmp eq i32 %3, 64
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_pre_init(ptr noundef %codec)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %init_hook = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %init_hook to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init_hook, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %5(ptr noundef %codec) #13
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %skip_verbs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %6 = ptrtoint ptr %skip_verbs to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %bf.load = load i64, ptr %skip_verbs, align 4
  %bf.set = or i64 %bf.load, 2097152
  store i64 %bf.set, ptr %skip_verbs, align 4
  %call = tail call i32 @snd_hda_gen_init(ptr noundef %codec) #13
  %7 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1, align 8
  %pll_nid.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 26
  %9 = ptrtoint ptr %pll_nid.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %pll_nid.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i, label %if.end4.alc_fix_pll.exit_crit_edge, label %if.then.i

if.end4.alc_fix_pll.exit_crit_edge:               ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fix_pll.exit

if.then.i:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  %pll_coef_idx.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 27
  %11 = ptrtoint ptr %pll_coef_idx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pll_coef_idx.i, align 4
  %pll_coef_bit.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %pll_coef_bit.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pll_coef_bit.i, align 8
  %shl.i = shl nuw i32 1, %14
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext %10, i32 noundef %12, i32 noundef %shl.i, i32 noundef 0) #13
  br label %alc_fix_pll.exit

alc_fix_pll.exit:                                 ; preds = %if.then.i, %if.end4.alc_fix_pll.exit_crit_edge
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %15 = ptrtoint ptr %init_amp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %init_amp, align 8
  %start_nid.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %set_eapd.exit.i.i.for.body.i.i_crit_edge, %alc_fix_pll.exit
  %17 = phi i16 [ 15, %alc_fix_pll.exit ], [ %31, %set_eapd.exit.i.i.for.body.i.i_crit_edge ]
  %p.04.i.i = phi ptr [ @alc_auto_setup_eapd.pins, %alc_fix_pll.exit ], [ %incdec.ptr.i.i, %set_eapd.exit.i.i.for.body.i.i_crit_edge ]
  %conv.i.i.i.i = zext i16 %17 to i32
  %18 = ptrtoint ptr %start_nid.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %start_nid.i.i.i.i, align 4
  %conv1.i.i.i.i = zext i16 %19 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %19, i16 %17)
  %cmp.i.i.i.i = icmp ugt i16 %19, %17
  br i1 %cmp.i.i.i.i, label %for.body.i.i.set_eapd.exit.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

for.body.i.i.set_eapd.exit.i.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %for.body.i.i
  %20 = ptrtoint ptr %num_nodes.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_nodes.i.i.i.i, align 8
  %add.i.i.i.i = add i32 %21, %conv1.i.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %conv.i.i.i.i)
  %cmp8.not.i.i.i.i = icmp ugt i32 %add.i.i.i.i, %conv.i.i.i.i
  br i1 %cmp8.not.i.i.i.i, label %get_wcaps.exit.i.i.i, label %lor.lhs.false.i.i.i.i.set_eapd.exit.i.i_crit_edge

lor.lhs.false.i.i.i.i.set_eapd.exit.i.i_crit_edge: ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i.i

get_wcaps.exit.i.i.i:                             ; preds = %lor.lhs.false.i.i.i.i
  %22 = ptrtoint ptr %wcaps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %wcaps.i.i.i.i, align 4
  %sub.i.i.i.i = sub nsw i32 %conv.i.i.i.i, %conv1.i.i.i.i
  %arrayidx.i.i.i.i = getelementptr i32, ptr %23, i32 %sub.i.i.i.i
  %24 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %26 = and i32 %25, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %26)
  %cmp.not.i.i.i = icmp eq i32 %26, 4194304
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %get_wcaps.exit.i.i.i.set_eapd.exit.i.i_crit_edge

get_wcaps.exit.i.i.i.set_eapd.exit.i.i_crit_edge: ; preds = %get_wcaps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i.i

if.end.i.i.i:                                     ; preds = %get_wcaps.exit.i.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i.i) #13
  %27 = ptrtoint ptr %val.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 -1, ptr %val.i.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %17, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp slt i32 %call.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i.i, label %snd_hda_query_pin_caps.exit.i.i.i

snd_hda_query_pin_caps.exit.thread.i.i.i:         ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i.i) #13
  br label %if.then3.i.i.i

snd_hda_query_pin_caps.exit.i.i.i:                ; preds = %if.end.i.i.i
  %28 = ptrtoint ptr %val.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %val.i.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i.i) #13
  %and.i.i.i = and i32 %29, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %snd_hda_query_pin_caps.exit.i.i.i.set_eapd.exit.i.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.i.if.then3.i.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.i.if.then3.i.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i.i

snd_hda_query_pin_caps.exit.i.i.i.set_eapd.exit.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i.i

if.then3.i.i.i:                                   ; preds = %snd_hda_query_pin_caps.exit.i.i.i.if.then3.i.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i.i
  %call.i.i.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %17, i32 noundef 0, i32 noundef 1804, i32 noundef 2) #13
  br label %set_eapd.exit.i.i

set_eapd.exit.i.i:                                ; preds = %if.then3.i.i.i, %snd_hda_query_pin_caps.exit.i.i.i.set_eapd.exit.i.i_crit_edge, %get_wcaps.exit.i.i.i.set_eapd.exit.i.i_crit_edge, %lor.lhs.false.i.i.i.i.set_eapd.exit.i.i_crit_edge, %for.body.i.i.set_eapd.exit.i.i_crit_edge
  %incdec.ptr.i.i = getelementptr i16, ptr %p.04.i.i, i32 1
  %30 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %incdec.ptr.i.i, align 2
  %tobool.not.i.i = icmp eq i16 %31, 0
  br i1 %tobool.not.i.i, label %alc_auto_setup_eapd.exit.i, label %set_eapd.exit.i.i.for.body.i.i_crit_edge

set_eapd.exit.i.i.for.body.i.i_crit_edge:         ; preds = %set_eapd.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

alc_auto_setup_eapd.exit.i:                       ; preds = %set_eapd.exit.i.i
  %32 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i = getelementptr inbounds %struct.alc_spec, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %gpio_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %gpio_mask.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.not.i10.i = icmp eq i32 %35, 0
  br i1 %tobool.not.i10.i, label %alc_auto_setup_eapd.exit.i.alc_write_gpio.exit.i_crit_edge, label %if.end.i.i

alc_auto_setup_eapd.exit.i.alc_write_gpio.exit.i_crit_edge: ; preds = %alc_auto_setup_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_write_gpio.exit.i

if.end.i.i:                                       ; preds = %alc_auto_setup_eapd.exit.i
  %afg.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %36 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %afg.i.i, align 4
  %call.i.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %37, i32 noundef 0, i32 noundef 1814, i32 noundef %35) #13
  %38 = ptrtoint ptr %afg.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %afg.i.i, align 4
  %gpio_dir.i.i = getelementptr inbounds %struct.alc_spec, ptr %33, i32 0, i32 4
  %40 = ptrtoint ptr %gpio_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %gpio_dir.i.i, align 4
  %call.i17.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %39, i32 noundef 0, i32 noundef 1815, i32 noundef %41) #13
  %gpio_write_delay.i.i = getelementptr inbounds %struct.alc_spec, ptr %33, i32 0, i32 6
  %42 = ptrtoint ptr %gpio_write_delay.i.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %gpio_write_delay.i.i, align 4, !range !2190
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool6.not.i.i = icmp eq i8 %43, 0
  br i1 %tobool6.not.i.i, label %if.end.i.i.if.end8.i.i_crit_edge, label %if.then7.i.i

if.end.i.i.if.end8.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8.i.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @msleep(i32 noundef 1) #13
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then7.i.i, %if.end.i.i.if.end8.i.i_crit_edge
  %44 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %45, i32 0, i32 5
  %46 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %gpio_data.i.i.i, align 8
  %call.i.i.i11.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %47) #13
  br label %alc_write_gpio.exit.i

alc_write_gpio.exit.i:                            ; preds = %if.end8.i.i, %alc_auto_setup_eapd.exit.i.alc_write_gpio.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cond.i = icmp eq i32 %16, 2
  br i1 %cond.i, label %sw.bb.i, label %alc_write_gpio.exit.i.alc_auto_init_amp.exit_crit_edge

alc_write_gpio.exit.i.alc_auto_init_amp.exit_crit_edge: ; preds = %alc_write_gpio.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_auto_init_amp.exit

sw.bb.i:                                          ; preds = %alc_write_gpio.exit.i
  %vendor_id.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %48 = ptrtoint ptr %vendor_id.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %vendor_id.i, align 8
  %50 = zext i32 %49 to i64
  call void @__sanitizer_cov_trace_switch(i64 %50, ptr @__sancov_gen_cov_switch_values.1234)
  switch i32 %49, label %sw.bb.i.alc_auto_init_amp.exit_crit_edge [
    i32 283902560, label %sw.bb1.i
    i32 283904128, label %sw.bb.i.sw.bb2.i_crit_edge
    i32 283904130, label %sw.bb.i.sw.bb2.i_crit_edge16
    i32 283904131, label %sw.bb.i.sw.bb2.i_crit_edge17
    i32 283904133, label %sw.bb.i.sw.bb2.i_crit_edge18
    i32 283904136, label %sw.bb3.i
  ]

sw.bb.i.sw.bb2.i_crit_edge18:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

sw.bb.i.sw.bb2.i_crit_edge17:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

sw.bb.i.sw.bb2.i_crit_edge16:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

sw.bb.i.sw.bb2.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

sw.bb.i.alc_auto_init_amp.exit_crit_edge:         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_auto_init_amp.exit

sw.bb1.i:                                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 26, i32 noundef 7, i32 noundef 0, i32 noundef 8208) #13
  br label %alc_auto_init_amp.exit

sw.bb2.i:                                         ; preds = %sw.bb.i.sw.bb2.i_crit_edge, %sw.bb.i.sw.bb2.i_crit_edge16, %sw.bb.i.sw.bb2.i_crit_edge17, %sw.bb.i.sw.bb2.i_crit_edge18
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 8240) #13
  br label %alc_auto_init_amp.exit

sw.bb3.i:                                         ; preds = %sw.bb.i
  %call.i.i = call fastcc i32 @alc_get_coef0(ptr noundef %codec) #13
  %51 = trunc i32 %call.i.i to i8
  %trunc.i.i = and i8 %51, -16
  %52 = zext i8 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %52, ptr @__sancov_gen_cov_switch_values.1235)
  switch i8 %trunc.i.i, label %sw.bb3.i.alc_auto_init_amp.exit_crit_edge [
    i8 0, label %sw.bb3.i.sw.bb.i.i_crit_edge
    i8 16, label %sw.bb3.i.sw.bb.i.i_crit_edge19
  ]

sw.bb3.i.sw.bb.i.i_crit_edge19:                   ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i.i

sw.bb3.i.sw.bb.i.i_crit_edge:                     ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i.i

sw.bb3.i.alc_auto_init_amp.exit_crit_edge:        ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_auto_init_amp.exit

sw.bb.i.i:                                        ; preds = %sw.bb3.i.sw.bb.i.i_crit_edge, %sw.bb3.i.sw.bb.i.i_crit_edge19
  call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 8240) #13
  br label %alc_auto_init_amp.exit

alc_auto_init_amp.exit:                           ; preds = %sw.bb.i.i, %sw.bb3.i.alc_auto_init_amp.exit_crit_edge, %sw.bb2.i, %sw.bb1.i, %sw.bb.i.alc_auto_init_amp.exit_crit_edge, %alc_write_gpio.exit.i.alc_auto_init_amp.exit_crit_edge
  call void @snd_hda_apply_verbs(ptr noundef %codec) #13
  call void @snd_hda_apply_fixup(ptr noundef %codec, i32 noundef 2) #13
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_jack_unsol_event(ptr noundef, i32 noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc_suspend(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %call.i = tail call i32 @snd_hda_get_bool_hint(ptr noundef %codec, ptr noundef nonnull @.str.81) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %entry.alc_shutup.exit_crit_edge, label %if.end.i

entry.alc_shutup.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_shutup.exit

if.end.i:                                         ; preds = %entry
  %tobool2.not.i = icmp eq ptr %1, null
  br i1 %tobool2.not.i, label %if.end.i.if.else.i_crit_edge, label %land.lhs.true.i

if.end.i.if.else.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %shutup.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %shutup.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shutup.i, align 4
  %tobool3.not.i = icmp eq ptr %3, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %alc_shutup.exit.thread

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i

alc_shutup.exit.thread:                           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %3(ptr noundef %codec) #13
  br label %land.lhs.true

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.end.i.if.else.i_crit_edge
  tail call fastcc void @alc_shutup_pins(ptr noundef %codec) #13
  br label %alc_shutup.exit

alc_shutup.exit:                                  ; preds = %if.else.i, %entry.alc_shutup.exit_crit_edge
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %alc_shutup.exit.if.end_crit_edge, label %alc_shutup.exit.land.lhs.true_crit_edge

alc_shutup.exit.land.lhs.true_crit_edge:          ; preds = %alc_shutup.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

alc_shutup.exit.if.end_crit_edge:                 ; preds = %alc_shutup.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %alc_shutup.exit.land.lhs.true_crit_edge, %alc_shutup.exit.thread
  %power_hook = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 21
  %4 = ptrtoint ptr %power_hook to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %power_hook, align 8
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %5(ptr noundef %codec) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %alc_shutup.exit.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc_resume(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %no_depop_delay = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %no_depop_delay to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %no_depop_delay, align 8
  %3 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 150) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %init = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 2
  %4 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init, align 8
  %call = tail call i32 %5(ptr noundef %codec) #13
  tail call void @snd_hdac_regmap_sync(ptr noundef %codec) #13
  %check_power_status.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 7, i32 8
  %6 = ptrtoint ptr %check_power_status.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %check_power_status.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.hda_call_check_power_status.exit_crit_edge, label %if.then.i

if.end.hda_call_check_power_status.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %hda_call_check_power_status.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call i32 %7(ptr noundef %codec, i16 noundef zeroext 1) #13
  br label %hda_call_check_power_status.exit

hda_call_check_power_status.exit:                 ; preds = %if.then.i, %if.end.hda_call_check_power_status.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_check_power_status(ptr noundef, i16 noundef zeroext) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_build_controls(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_apply_verbs(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_snd_hdac_read_parm(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_codec_write(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_get_bool_hint(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_shutup_pins(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1236)
  switch i32 %1, label %sw.default [
    i32 283902518, label %entry.sw.bb_crit_edge
    i32 283902550, label %entry.sw.bb_crit_edge5
    i32 283902595, label %entry.sw.bb_crit_edge6
    i32 283902598, label %entry.sw.bb_crit_edge7
    i32 283902600, label %entry.sw.bb_crit_edge8
    i32 283902616, label %entry.sw.bb_crit_edge9
  ]

entry.sw.bb_crit_edge9:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge8:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge7:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge6:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge5:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge5, %entry.sw.bb_crit_edge6, %entry.sw.bb_crit_edge7, %entry.sw.bb_crit_edge8, %entry.sw.bb_crit_edge9
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %3 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i, align 8
  %num_inputs.i.i = getelementptr inbounds %struct.hda_gen_spec, ptr %4, i32 0, i32 33, i32 7
  %5 = ptrtoint ptr %num_inputs.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_inputs.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp20.i.i = icmp sgt i32 %6, 0
  br i1 %cmp20.i.i, label %sw.bb.for.body.i.i_crit_edge, label %sw.bb.find_ext_mic_pin.exit.i_crit_edge

sw.bb.find_ext_mic_pin.exit.i_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %find_ext_mic_pin.exit.i

sw.bb.for.body.i.i_crit_edge:                     ; preds = %sw.bb
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %sw.bb.for.body.i.i_crit_edge
  %i.021.i.i = phi i32 [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %sw.bb.for.body.i.i_crit_edge ]
  %type.i.i = getelementptr %struct.hda_gen_spec, ptr %4, i32 0, i32 33, i32 8, i32 %i.021.i.i, i32 1
  %7 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp2.not.i.i = icmp eq i32 %8, 0
  br i1 %cmp2.not.i.i, label %if.end.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %arrayidx.i.i = getelementptr %struct.hda_gen_spec, ptr %4, i32 0, i32 33, i32 8, i32 %i.021.i.i
  %9 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %arrayidx.i.i, align 4
  %call.i.i = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext %10) #13
  %call5.i.i = tail call i32 @snd_hda_get_input_pin_attr(i32 noundef %call.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call5.i.i)
  %cmp6.i.i = icmp eq i32 %call5.i.i, 1
  br i1 %cmp6.i.i, label %if.end.i.i.for.inc.i.i_crit_edge, label %if.end8.i.i

if.end.i.i.for.inc.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

if.end8.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i = zext i16 %10 to i32
  br label %find_ext_mic_pin.exit.i

for.inc.i.i:                                      ; preds = %if.end.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.021.i.i, 1
  %11 = ptrtoint ptr %num_inputs.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_inputs.i.i, align 4
  %cmp.i.i = icmp slt i32 %inc.i.i, %12
  br i1 %cmp.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.find_ext_mic_pin.exit.i_crit_edge

for.inc.i.i.find_ext_mic_pin.exit.i_crit_edge:    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %find_ext_mic_pin.exit.i

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

find_ext_mic_pin.exit.i:                          ; preds = %for.inc.i.i.find_ext_mic_pin.exit.i_crit_edge, %if.end8.i.i, %sw.bb.find_ext_mic_pin.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %conv.i.i, %if.end8.i.i ], [ 0, %sw.bb.find_ext_mic_pin.exit.i_crit_edge ], [ 0, %for.inc.i.i.find_ext_mic_pin.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %13 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bus.i, align 8
  %shutdown.i = getelementptr inbounds %struct.hda_bus, ptr %14, i32 0, i32 6
  %15 = ptrtoint ptr %shutdown.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load.i = load i8, ptr %shutdown.i, align 4
  %16 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i, label %if.end.i, label %find_ext_mic_pin.exit.i.sw.epilog_crit_edge

find_ext_mic_pin.exit.i.sw.epilog_crit_edge:      ; preds = %find_ext_mic_pin.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.i:                                         ; preds = %find_ext_mic_pin.exit.i
  %init_pins.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23
  %17 = ptrtoint ptr %init_pins.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %init_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp23.not.i = icmp eq i32 %18, 0
  br i1 %cmp23.not.i, label %if.end.i.for.end.i_crit_edge, label %for.body.lr.ph.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %list.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 4
  %19 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %list.i, align 4
  %elem_size.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 23, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.025.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %pin.024.i = phi ptr [ %20, %for.body.lr.ph.i ], [ %add.ptr.i.i, %for.inc.i.for.body.i_crit_edge ]
  %21 = ptrtoint ptr %pin.024.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %pin.024.i, align 4
  %conv.i = zext i16 %22 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i, i32 %conv.i)
  %cmp2.not.i = icmp eq i32 %retval.0.i.i, %conv.i
  br i1 %cmp2.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then4.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.then4.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i22.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %22, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then4.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.025.i, 1
  %23 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %list.i, align 4
  %25 = ptrtoint ptr %elem_size.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %elem_size.i.i, align 4
  %mul.i.i = mul i32 %26, %inc.i
  %add.ptr.i.i = getelementptr i8, ptr %24, i32 %mul.i.i
  %27 = ptrtoint ptr %init_pins.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %init_pins.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %28
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %pins_shutup.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %29 = ptrtoint ptr %pins_shutup.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %bf.load10.i = load i32, ptr %pins_shutup.i, align 4
  %bf.set.i = or i32 %bf.load10.i, 8388608
  store i32 %bf.set.i, ptr %pins_shutup.i, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %30 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %spec1, align 8
  %no_shutup_pins = getelementptr inbounds %struct.alc_spec, ptr %31, i32 0, i32 25
  %32 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %no_shutup_pins, align 8
  %33 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.not = icmp eq i8 %33, 0
  br i1 %tobool.not, label %if.then, label %sw.default.sw.epilog_crit_edge

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then:                                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @snd_hda_shutup_pins(ptr noundef %codec) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %sw.default.sw.epilog_crit_edge, %for.end.i, %find_ext_mic_pin.exit.i.sw.epilog_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_shutup_pins(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_codec_get_pincfg(ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_get_input_pin_attr(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hdac_regmap_sync(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_jack_detect_state_mst(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc_read_coefex_idx(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %coef_idx) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i, i32 noundef 0) #13
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 1280, i32 noundef %coef_idx) #13
  %call.i4.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %2 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i, align 8
  %coef_mutex.i4 = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4) #13
  %call.i5 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret i32 %call.i4.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_power_up_pm(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_power_down_pm(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr nocapture noundef readonly %fw) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i, i32 noundef 0) #13
  %2 = ptrtoint ptr %fw to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fw, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not29 = icmp eq i8 %3, 0
  br i1 %tobool.not29, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %4 = phi i8 [ %12, %for.inc.for.body_crit_edge ], [ %3, %entry.for.body_crit_edge ]
  %fw.addr.030 = phi ptr [ %incdec.ptr, %for.inc.for.body_crit_edge ], [ %fw, %entry.for.body_crit_edge ]
  %mask = getelementptr inbounds %struct.coef_fw, ptr %fw.addr.030, i32 0, i32 2
  %5 = ptrtoint ptr %mask to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %mask, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %6)
  %cmp = icmp eq i16 %6, -1
  %conv3 = zext i8 %4 to i16
  %idx = getelementptr inbounds %struct.coef_fw, ptr %fw.addr.030, i32 0, i32 1
  %7 = ptrtoint ptr %idx to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %idx, align 1
  %conv4 = zext i8 %8 to i32
  %val = getelementptr inbounds %struct.coef_fw, ptr %fw.addr.030, i32 0, i32 3
  %9 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %val, align 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %conv5 = zext i16 %10 to i32
  br label %for.inc.sink.split

if.else:                                          ; preds = %for.body
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %conv3, i32 noundef 0, i32 noundef 1280, i32 noundef %conv4) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %conv3, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i4.i.i)
  %cmp.not.i = icmp eq i32 %call.i4.i.i, -1
  br i1 %cmp.not.i, label %if.else.for.inc_crit_edge, label %if.then.i

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %conv13 = zext i16 %10 to i32
  %conv = zext i16 %6 to i32
  %neg.i = xor i32 %conv, -1
  %and.i = and i32 %call.i4.i.i, %neg.i
  %or.i = or i32 %and.i, %conv13
  br label %for.inc.sink.split

for.inc.sink.split:                               ; preds = %if.then.i, %if.then
  %or.i.sink = phi i32 [ %or.i, %if.then.i ], [ %conv5, %if.then ]
  %call.i.i5.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %conv3, i32 noundef 0, i32 noundef 1280, i32 noundef %conv4) #13
  %call.i4.i6.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %conv3, i32 noundef 0, i32 noundef 1024, i32 noundef %or.i.sink) #13
  br label %for.inc

for.inc:                                          ; preds = %for.inc.sink.split, %if.else.for.inc_crit_edge
  %incdec.ptr = getelementptr %struct.coef_fw, ptr %fw.addr.030, i32 1
  %11 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %incdec.ptr, align 2
  %tobool.not = icmp eq i8 %12, 0
  br i1 %tobool.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %13 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1.i, align 8
  %coef_mutex.i27 = getelementptr inbounds %struct.alc_spec, ptr %14, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i27) #13
  %call.i28 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_enable_headset_jack_key(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %has_hs_key = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %has_hs_key to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %has_hs_key, align 8
  %3 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %4 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vendor_id, align 8
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.1237)
  switch i32 %5, label %if.end.cleanup_crit_edge [
    i32 283902485, label %if.end.sw.bb_crit_edge
    i32 283902501, label %if.end.sw.bb_crit_edge16
    i32 283902597, label %if.end.sw.bb_crit_edge17
    i32 283902599, label %if.end.sw.bb_crit_edge18
    i32 283902613, label %if.end.sw.bb_crit_edge19
    i32 283902601, label %if.end.sw.bb_crit_edge20
    i32 283902617, label %if.end.sw.bb_crit_edge21
    i32 283902512, label %if.end.sw.bb2_crit_edge
    i32 283902518, label %if.end.sw.bb2_crit_edge22
    i32 283902550, label %if.end.sw.bb2_crit_edge23
  ]

if.end.sw.bb2_crit_edge23:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb2_crit_edge22:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb2_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb_crit_edge21:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge20:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge19:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge18:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge17:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge16:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge16, %if.end.sw.bb_crit_edge17, %if.end.sw.bb_crit_edge18, %if.end.sw.bb_crit_edge19, %if.end.sw.bb_crit_edge20, %if.end.sw.bb_crit_edge21
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 72) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 53265) #13
  %7 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 73, i32 noundef 127, i32 noundef 69)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 68, i32 noundef 32512, i32 noundef 17664)
  br label %cleanup

sw.bb2:                                           ; preds = %if.end.sw.bb2_crit_edge, %if.end.sw.bb2_crit_edge22, %if.end.sw.bb2_crit_edge23
  %call.i.i10 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i11 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i11, i32 noundef 0) #13
  %call.i.i.i12 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 72) #13
  %call.i4.i.i13 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 53265) #13
  %9 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i14 = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i14) #13
  %call.i5.i15 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 73, i32 noundef 127, i32 noundef 69)
  br label %cleanup

cleanup:                                          ; preds = %sw.bb2, %sw.bb, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_codec_read(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc5505_dsp_halt(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 6144) #13
  %call.i7.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 12) #13
  %call.i8.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i9 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 17414) #13
  %call.i7.i10 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 8) #13
  %call.i8.i11 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i12 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12512) #13
  %call.i7.i13 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 128) #13
  %call.i8.i14 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 4369) #13
  %call.i.i15 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12568) #13
  %call.i7.i16 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 16401) #13
  %call.i8.i17 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 64525) #13
  %call.i.i18 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12506) #13
  %call.i7.i19 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 11011) #13
  %call.i8.i20 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1034) #13
  %call.i.i21 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12504) #13
  %call.i7.i22 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 23319) #13
  %call.i8.i23 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %call.i.i24 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12508) #13
  %call.i7.i25 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 13059) #13
  %call.i8.i26 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef 1043) #13
  %call.i.i27 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12560) #13
  %call.i6.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %call.i7.i28 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %call.i.i29 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1280, i32 noundef 12560) #13
  %or = and i32 %call.i6.i, 53247
  %and.i30 = or i32 %or, 12288
  %call.i7.i31 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef %and.i30) #13
  %shr2.i = and i32 %call.i7.i28, 65535
  %call.i8.i32 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 81, i32 noundef 0, i32 noundef 1024, i32 noundef %shr2.i) #13
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_gpio2(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc_fixup_gpio.exit_crit_edge

entry.alc_fixup_gpio.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_gpio.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %gpio_mask.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i, align 8
  %or.i.i = or i32 %3, 2
  store i32 %or.i.i, ptr %gpio_mask.i.i, align 8
  %gpio_dir.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i, align 4
  %or2.i.i = or i32 %5, 2
  store i32 %or2.i.i, ptr %gpio_dir.i.i, align 4
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i, align 8
  %or3.i.i = or i32 %7, 2
  store i32 %or3.i.i, ptr %gpio_data.i.i, align 8
  br label %alc_fixup_gpio.exit

alc_fixup_gpio.exit:                              ; preds = %if.then.i, %entry.alc_fixup_gpio.exit_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc275_fixup_gpio4_off(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask, align 8
  %or = or i32 %3, 4
  store i32 %or, ptr %gpio_mask, align 8
  %gpio_dir = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir, align 4
  %or2 = or i32 %5, 4
  store i32 %or2, ptr %gpio_dir, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_sku_ignore(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %cdefine = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1
  %fixup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %2 = ptrtoint ptr %fixup to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %fixup, align 8
  %bf.set = or i8 %bf.load, 8
  store i8 %bf.set, ptr %fixup, align 8
  %3 = ptrtoint ptr %cdefine to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 2, ptr %cdefine, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hweq(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp = icmp eq i32 %action, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 30, i32 noundef 0, i32 noundef 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_disable_aamix(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %mixer_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %mixer_nid to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 0, ptr %mixer_nid, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc271_fixup_dmic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_name = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 15
  %0 = ptrtoint ptr %chip_name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_name, align 8
  %call = tail call i32 @strcmp(ptr noundef %1, ptr noundef nonnull dereferenceable(8) @.str.75) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call3 = tail call i32 @strcmp(ptr noundef %1, ptr noundef nonnull dereferenceable(9) @.str.85) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call5 = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext 18) #13
  %shr.mask = and i32 %call5, -1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %shr.mask)
  %cmp = icmp eq i32 %shr.mask, -2147483648
  br i1 %cmp, label %if.then6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @snd_hda_sequence_write(ptr noundef %codec, ptr noundef nonnull @alc271_fixup_dmic.verbs) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc269_fixup_pcm_44k(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp.not = icmp eq i32 %action, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %stream_analog_playback = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %stream_analog_playback to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc269_44k_pcm_analog_playback, ptr %stream_analog_playback, align 8
  %stream_analog_capture = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %stream_analog_capture to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @alc269_44k_pcm_analog_capture, ptr %stream_analog_capture, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_stereo_dmic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp = icmp eq i32 %action, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc269_fixup_headset_mic(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags, align 4
  %or = or i32 %3, 4
  store i32 %or, ptr %parse_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc269_fixup_quanta_mute(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp.not = icmp eq i32 %action, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 77
  %2 = ptrtoint ptr %automute_hook to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc269_quanta_automute, ptr %automute_hook, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc269_fixup_pincfg_no_hp_to_lineout(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %parse_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_pincfg_U7x7_headset_mic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext 33) #13
  %call1 = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext 25) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp ne i32 %call, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1091637744, i32 %call1)
  %cmp = icmp eq i32 %call1, 1091637744
  %or.cond = select i1 %tobool.not, i1 %cmp, i1 false
  br i1 %or.cond, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %and = and i32 %call, -15728641
  %or = or i32 %and, 10485760
  %call2 = tail call i32 @snd_hda_codec_set_pincfg(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef %or) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc269_fixup_hp_mute_led(ptr nocapture noundef %codec, ptr nocapture noundef %fix, i32 noundef %action) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hp_mute_led_mic1(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge

entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_fixup_hp_mute_led_micx.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_nid.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %mute_led_nid.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 24, ptr %mute_led_nid.i, align 8
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_mute_led_set) #13
  %power_filter.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %4 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @led_power_filter, ptr %power_filter.i, align 4
  br label %alc269_fixup_hp_mute_led_micx.exit

alc269_fixup_hp_mute_led_micx.exit:               ; preds = %if.then.i, %entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hp_mute_led_mic2(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge

entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_fixup_hp_mute_led_micx.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_nid.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %mute_led_nid.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 25, ptr %mute_led_nid.i, align 8
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_mute_led_set) #13
  %power_filter.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %4 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @led_power_filter, ptr %power_filter.i, align 4
  br label %alc269_fixup_hp_mute_led_micx.exit

alc269_fixup_hp_mute_led_micx.exit:               ; preds = %if.then.i, %entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hp_mute_led_mic3(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge

entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc269_fixup_hp_mute_led_micx.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_nid.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %mute_led_nid.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 27, ptr %mute_led_nid.i, align 8
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_mute_led_set) #13
  %power_filter.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %4 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @led_power_filter, ptr %power_filter.i, align 4
  br label %alc269_fixup_hp_mute_led_micx.exit

alc269_fixup_hp_mute_led_micx.exit:               ; preds = %if.then.i, %entry.alc269_fixup_hp_mute_led_micx.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hp_gpio_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.end.i, label %entry.alc_fixup_hp_gpio_led.exit_crit_edge

entry.alc_fixup_hp_gpio_led.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_hp_gpio_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 24
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 24
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 24
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 8, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 16, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  br label %alc_fixup_hp_gpio_led.exit

alc_fixup_hp_gpio_led.exit:                       ; preds = %if.end.i, %entry.alc_fixup_hp_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hp_gpio_mic1_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 8
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 8
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 8
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 8, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %9 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or = or i32 %10, 16
  store i32 %or, ptr %gpio_mask.i.i.i, align 8
  %11 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2 = or i32 %12, 16
  store i32 %or2, ptr %gpio_dir.i.i.i, align 4
  %cap_mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 10
  %13 = ptrtoint ptr %cap_mute_led_nid to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 24, ptr %cap_mute_led_nid, align 2
  %call = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_micmute_led_set) #13
  %power_filter = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %14 = ptrtoint ptr %power_filter to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @led_power_filter, ptr %power_filter, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_hp_line1_mic1_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_nid.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %mute_led_nid.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 26, ptr %mute_led_nid.i, align 8
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_mute_led_set) #13
  %power_filter.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %4 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @led_power_filter, ptr %power_filter.i, align 4
  %cap_mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 10
  %5 = ptrtoint ptr %cap_mute_led_nid to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 24, ptr %cap_mute_led_nid, align 2
  %call = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_micmute_led_set) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_inv_dmic(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %inv_dmic_split = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %inv_dmic_split to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %inv_dmic_split, align 4
  %bf.set = or i64 %bf.load, 1099511627776
  store i64 %bf.set, ptr %inv_dmic_split, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_fixup_limit_int_mic_boost(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp.not = icmp eq i32 %action, 1
  br i1 %cmp.not, label %for.cond.preheader, label %entry.cleanup14_crit_edge

entry.cleanup14_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup14

for.cond.preheader:                               ; preds = %entry
  %num_inputs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 7
  %2 = ptrtoint ptr %num_inputs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_inputs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp227 = icmp sgt i32 %3, 0
  br i1 %cmp227, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.cleanup14_crit_edge

for.cond.preheader.cleanup14_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup14

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.028 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 8, i32 %i.028
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %arrayidx, align 4
  %type = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 8, i32 %i.028, i32 1
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp5.not = icmp eq i32 %7, 0
  br i1 %cmp5.not, label %if.end7, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %for.body
  %call = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext %5) #13
  %call8 = tail call i32 @snd_hda_get_input_pin_attr(i32 noundef %call) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call8)
  %cmp9.not = icmp eq i32 %call8, 1
  br i1 %cmp9.not, label %if.end11, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  %call12 = tail call i32 @snd_hda_override_amp_caps(ptr noundef %codec, i16 noundef zeroext %5, i32 noundef 0, i32 noundef 3080448) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.end7.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.028, 1
  %8 = ptrtoint ptr %num_inputs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_inputs, align 4
  %cmp2 = icmp slt i32 %inc, %9
  br i1 %cmp2, label %cleanup.for.body_crit_edge, label %cleanup.cleanup14_crit_edge

cleanup.cleanup14_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup14

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

cleanup14:                                        ; preds = %cleanup.cleanup14_crit_edge, %for.cond.preheader.cleanup14_crit_edge, %entry.cleanup14_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_no_shutup(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %no_shutup_pins = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %no_shutup_pins to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %no_shutup_pins, align 8
  %bf.set = or i8 %bf.load, 16
  store i8 %bf.set, ptr %no_shutup_pins, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %2 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1238)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %parse_flags, align 4
  %or = or i32 %4, 12
  store i32 %or, ptr %parse_flags, align 4
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %num_inputs.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 7
  %5 = ptrtoint ptr %num_inputs.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_inputs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp65.i = icmp sgt i32 %6, 0
  br i1 %cmp65.i, label %for.body.lr.ph.i, label %sw.bb2.for.end.i_crit_edge

sw.bb2.for.end.i_crit_edge:                       ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %sw.bb2
  %headset_mic_pin.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 16
  %headphone_mic_pin.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 17
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.066.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 8, i32 %i.066.i
  %is_headset_mic.i = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 8, i32 %i.066.i, i32 2
  %7 = ptrtoint ptr %is_headset_mic.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i = load i8, ptr %is_headset_mic.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %for.body.i.if.end.i_crit_edge, label %land.lhs.true.i

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %8 = ptrtoint ptr %headset_mic_pin.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %headset_mic_pin.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool2.not.i = icmp eq i16 %9, 0
  br i1 %tobool2.not.i, label %if.then.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 4
  %12 = ptrtoint ptr %headset_mic_pin.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %headset_mic_pin.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end.i_crit_edge, %for.body.i.if.end.i_crit_edge
  %13 = ptrtoint ptr %is_headset_mic.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load8.i = load i8, ptr %is_headset_mic.i, align 4
  %14 = and i8 %bf.load8.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool11.not.i = icmp eq i8 %14, 0
  br i1 %tobool11.not.i, label %if.end.i.for.inc.i_crit_edge, label %land.lhs.true12.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

land.lhs.true12.i:                                ; preds = %if.end.i
  %15 = ptrtoint ptr %headphone_mic_pin.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %headphone_mic_pin.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool13.not.i = icmp eq i16 %16, 0
  br i1 %tobool13.not.i, label %if.then14.i, label %land.lhs.true12.i.for.inc.i_crit_edge

land.lhs.true12.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.then14.i:                                      ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %arrayidx.i, align 4
  %19 = ptrtoint ptr %headphone_mic_pin.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %18, ptr %headphone_mic_pin.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then14.i, %land.lhs.true12.i.for.inc.i_crit_edge, %if.end.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.066.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %6
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %sw.bb2.for.end.i_crit_edge
  %cap_sync_hook.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 78
  %20 = ptrtoint ptr %cap_sync_hook.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cap_sync_hook.i, align 8
  %tobool21.not.i = icmp eq ptr %21, null
  br i1 %tobool21.not.i, label %for.end.i.alc_probe_headset_mode.exit_crit_edge, label %do.end.i, !prof !2191

for.end.i.alc_probe_headset_mode.exit_crit_edge:  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_probe_headset_mode.exit

do.end.i:                                         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.78, i32 noundef 5709, i32 noundef 9, ptr noundef null) #13
  br label %alc_probe_headset_mode.exit

alc_probe_headset_mode.exit:                      ; preds = %do.end.i, %for.end.i.alc_probe_headset_mode.exit_crit_edge
  %22 = ptrtoint ptr %cap_sync_hook.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @alc_update_headset_mode_hook, ptr %cap_sync_hook.i, align 8
  %automute_hook.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 77
  %23 = ptrtoint ptr %automute_hook.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @alc_update_headset_mode, ptr %automute_hook.i, align 4
  %hp_automute_hook.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %24 = ptrtoint ptr %hp_automute_hook.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @alc_update_headset_jack_cb, ptr %hp_automute_hook.i, align 4
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %power = getelementptr inbounds %struct.device, ptr %codec, i32 0, i32 12
  %25 = ptrtoint ptr %power to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %power, align 8
  %27 = zext i32 %26 to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.1239)
  switch i32 %26, label %sw.bb3.if.end_crit_edge [
    i32 16, label %sw.bb3.if.then_crit_edge
    i32 64, label %sw.bb3.if.then_crit_edge16
  ]

sw.bb3.if.then_crit_edge16:                       ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

sw.bb3.if.then_crit_edge:                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

sw.bb3.if.end_crit_edge:                          ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %sw.bb3.if.then_crit_edge, %sw.bb3.if.then_crit_edge16
  %current_headset_mode = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 18
  %28 = ptrtoint ptr %current_headset_mode to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %current_headset_mode, align 4
  %current_headset_type = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 19
  %29 = ptrtoint ptr %current_headset_type to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %current_headset_type, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb3.if.end_crit_edge
  tail call void @alc_update_headset_mode(ptr noundef %codec)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %alc_probe_headset_mode.exit, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode_no_hp_mic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags, align 4
  %or = or i32 %3, 4
  store i32 %or, ptr %parse_flags, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc269_fixup_x101_headset_mic(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags, align 4
  %or = or i32 %3, 4
  store i32 %or, ptr %parse_flags, align 4
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %4 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @alc269_x101_hp_automute_hook, ptr %hp_automute_hook, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc271_hp_gate_mic_jack(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp = icmp eq i32 %action, 1
  br i1 %cmp, label %if.then, label %entry.cleanup33_crit_edge

entry.cleanup33_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup33

if.then:                                          ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %num_inputs.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 7
  %2 = ptrtoint ptr %num_inputs.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_inputs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp20.i = icmp sgt i32 %3, 0
  br i1 %cmp20.i, label %if.then.for.body.i_crit_edge, label %if.then.find_ext_mic_pin.exit_crit_edge

if.then.find_ext_mic_pin.exit_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %find_ext_mic_pin.exit

if.then.for.body.i_crit_edge:                     ; preds = %if.then
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then.for.body.i_crit_edge
  %i.021.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.then.for.body.i_crit_edge ]
  %type.i = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 8, i32 %i.021.i, i32 1
  %4 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp2.not.i = icmp eq i32 %5, 0
  br i1 %cmp2.not.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %arrayidx.i = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 8, i32 %i.021.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %arrayidx.i, align 4
  %call.i = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext %7) #13
  %call5.i = tail call i32 @snd_hda_get_input_pin_attr(i32 noundef %call.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call5.i)
  %cmp6.i = icmp eq i32 %call5.i, 1
  br i1 %cmp6.i, label %if.end.i.for.inc.i_crit_edge, label %if.end8.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end8.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i = zext i16 %7 to i32
  br label %find_ext_mic_pin.exit

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.021.i, 1
  %8 = ptrtoint ptr %num_inputs.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_inputs.i, align 4
  %cmp.i = icmp slt i32 %inc.i, %9
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.find_ext_mic_pin.exit_crit_edge

for.inc.i.find_ext_mic_pin.exit_crit_edge:        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %find_ext_mic_pin.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

find_ext_mic_pin.exit:                            ; preds = %for.inc.i.find_ext_mic_pin.exit_crit_edge, %if.end8.i, %if.then.find_ext_mic_pin.exit_crit_edge
  %retval.0.i = phi i32 [ %conv.i, %if.end8.i ], [ 0, %if.then.find_ext_mic_pin.exit_crit_edge ], [ 0, %for.inc.i.find_ext_mic_pin.exit_crit_edge ]
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %10 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i = icmp eq i16 %11, 0
  br i1 %tobool.not.i, label %if.end.i42, label %find_ext_mic_pin.exit.alc_get_hp_pin.exit_crit_edge

find_ext_mic_pin.exit.alc_get_hp_pin.exit_crit_edge: ; preds = %find_ext_mic_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.end.i42:                                       ; preds = %find_ext_mic_pin.exit
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %12 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %13)
  %cmp.i41 = icmp eq i32 %13, 2
  br i1 %cmp.i41, label %if.then7.i, label %if.end.i42.do.end_crit_edge

if.end.i42.do.end_crit_edge:                      ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.then7.i:                                       ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #15
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %14 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %line_out_pins.i, align 4
  br label %alc_get_hp_pin.exit

alc_get_hp_pin.exit:                              ; preds = %if.then7.i, %find_ext_mic_pin.exit.alc_get_hp_pin.exit_crit_edge
  %retval.0.i43 = phi i16 [ %15, %if.then7.i ], [ %11, %find_ext_mic_pin.exit.alc_get_hp_pin.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %retval.0.i43)
  %tobool3.not = icmp eq i16 %retval.0.i43, 0
  %spec.select = select i1 %tobool.not, i1 true, i1 %tobool3.not
  br i1 %spec.select, label %alc_get_hp_pin.exit.do.end_crit_edge, label %if.end27, !prof !2192

alc_get_hp_pin.exit.do.end_crit_edge:             ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

do.end:                                           ; preds = %alc_get_hp_pin.exit.do.end_crit_edge, %if.end.i42.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.78, i32 noundef 6020, i32 noundef 9, ptr noundef null) #13
  br label %cleanup33

if.end27:                                         ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  %conv28 = trunc i32 %retval.0.i to i16
  %call30 = tail call i32 @snd_hda_jack_set_gating_jack(ptr noundef %codec, i16 noundef zeroext %conv28, i16 noundef zeroext %retval.0.i43) #13
  br label %cleanup33

cleanup33:                                        ; preds = %if.end27, %do.end, %entry.cleanup33_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc283_fixup_chromebook(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1240)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %3 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %4 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %4)
  %cmp.not.i = icmp ugt i16 %4, 3
  br i1 %cmp.not.i, label %sw.bb.snd_hda_override_wcaps.exit_crit_edge, label %land.lhs.true.i

sw.bb.snd_hda_override_wcaps.exit_crit_edge:      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_hda_override_wcaps.exit

land.lhs.true.i:                                  ; preds = %sw.bb
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %5 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %6, %conv1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %add.i)
  %cmp8.i = icmp ugt i32 %add.i, 3
  br i1 %cmp8.i, label %if.then.i, label %land.lhs.true.i.snd_hda_override_wcaps.exit_crit_edge

land.lhs.true.i.snd_hda_override_wcaps.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_hda_override_wcaps.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %7 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 3, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %8, i32 %sub.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %arrayidx.i, align 4
  br label %snd_hda_override_wcaps.exit

snd_hda_override_wcaps.exit:                      ; preds = %if.then.i, %land.lhs.true.i.snd_hda_override_wcaps.exit_crit_edge, %sw.bb.snd_hda_override_wcaps.exit_crit_edge
  %mixer_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 18
  %10 = ptrtoint ptr %mixer_nid to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 0, ptr %mixer_nid, align 2
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 6, i32 noundef 12, i32 noundef 0)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 26, i32 noundef 0, i32 noundef 16)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %snd_hda_override_wcaps.exit, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc283_fixup_sense_combo_jack(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1241)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 81
  %3 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @alc283_hp_automute_hook, ptr %hp_automute_hook, align 4
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 6, i32 noundef 12, i32 noundef 0)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc282_fixup_asus_tx300(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %2 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1242)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 3, label %sw.bb5
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %3 = ptrtoint ptr %init_amp to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 2, ptr %init_amp, align 8
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %gpio_mask.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %gpio_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_mask.i, align 8
  %or.i = or i32 %7, 4
  store i32 %or.i, ptr %gpio_mask.i, align 8
  %gpio_dir.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %gpio_dir.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %gpio_dir.i, align 4
  %or2.i = or i32 %9, 4
  store i32 %or2.i, ptr %gpio_dir.i, align 4
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 5
  %10 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %gpio_data.i, align 8
  %or3.i = or i32 %11, 4
  store i32 %or3.i, ptr %gpio_data.i, align 8
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc282_fixup_asus_tx300.dock_pins) #13
  %auto_mute_via_amp = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %12 = ptrtoint ptr %auto_mute_via_amp to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %bf.load = load i64, ptr %auto_mute_via_amp, align 4
  %bf.set = or i64 %bf.load, 562949953421312
  store i64 %bf.set, ptr %auto_mute_via_amp, align 4
  %automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 77
  %13 = ptrtoint ptr %automute_hook to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @asus_tx300_automute, ptr %automute_hook, align 4
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0, ptr noundef nonnull @snd_hda_gen_hp_automute) #13
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %init_amp4 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %14 = ptrtoint ptr %init_amp4 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 2, ptr %init_amp4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %call.i14 = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.672) #13
  %tobool.not.i = icmp eq ptr %call.i14, null
  br i1 %tobool.not.i, label %sw.bb5.rename_ctl.exit_crit_edge, label %if.then.i

sw.bb5.rename_ctl.exit_crit_edge:                 ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #15
  br label %rename_ctl.exit

if.then.i:                                        ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #15
  %name.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i14, i32 0, i32 1, i32 4
  %15 = call ptr @memcpy(ptr %name.i, ptr @.str.673, i32 29)
  br label %rename_ctl.exit

rename_ctl.exit:                                  ; preds = %if.then.i, %sw.bb5.rename_ctl.exit_crit_edge
  %call.i15 = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.674) #13
  %tobool.not.i16 = icmp eq ptr %call.i15, null
  br i1 %tobool.not.i16, label %rename_ctl.exit.sw.epilog_crit_edge, label %if.then.i19

rename_ctl.exit.sw.epilog_crit_edge:              ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then.i19:                                      ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  %name.i17 = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i15, i32 0, i32 1, i32 4
  %16 = call ptr @memcpy(ptr %name.i17, ptr @.str.672, i32 24)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.i19, %rename_ctl.exit.sw.epilog_crit_edge, %sw.bb3, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc290_fixup_mono_speakers(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 1, ptr noundef nonnull @alc290_fixup_mono_speakers.conn1) #13
  %call1 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 21, i32 noundef 1, ptr noundef nonnull @alc290_fixup_mono_speakers.conn1) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_thinkpad_acpi(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc_fixup_no_shutup.exit_crit_edge

entry.alc_fixup_no_shutup.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_no_shutup.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %no_shutup_pins.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %no_shutup_pins.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load.i = load i8, ptr %no_shutup_pins.i, align 8
  %bf.set.i = or i8 %bf.load.i, 16
  store i8 %bf.set.i, ptr %no_shutup_pins.i, align 8
  br label %alc_fixup_no_shutup.exit

alc_fixup_no_shutup.exit:                         ; preds = %if.then.i, %entry.alc_fixup_no_shutup.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode_alc255(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc255_set_default_jack_type(ptr noundef %codec)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode_alc255_no_hp_mic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags, align 4
  %or = or i32 %3, 4
  store i32 %or, ptr %parse_flags, align 4
  tail call fastcc void @alc255_set_default_jack_type(ptr noundef %codec)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_tpt440_dock(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %parse_flags, align 4
  %power_save_node = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %3 = ptrtoint ptr %power_save_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %bf.load = load i32, ptr %power_save_node, align 4
  %bf.clear = and i32 %bf.load, -16385
  store i32 %bf.clear, ptr %power_save_node, align 4
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc_fixup_tpt440_dock.pincfgs) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_micmute_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef null) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269vb_fixup_aspire_e1_coef(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp = icmp eq i32 %action, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 13, i32 noundef 24576, i32 noundef 24576)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc280_fixup_hp_gpio4(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 8
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 8
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 8
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 8, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %cap_mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 10
  %9 = ptrtoint ptr %cap_mute_led_nid to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 24, ptr %cap_mute_led_nid, align 2
  %call = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_micmute_led_set) #13
  %power_filter = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %10 = ptrtoint ptr %power_filter to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @led_power_filter, ptr %power_filter, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc286_fixup_hp_gpio_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.end.i, label %entry.alc_fixup_hp_gpio_led.exit_crit_edge

entry.alc_fixup_hp_gpio_led.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_hp_gpio_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 34
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 34
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 34
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 2, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 32, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  br label %alc_fixup_hp_gpio_led.exit

alc_fixup_hp_gpio_led.exit:                       ; preds = %if.end.i, %entry.alc_fixup_hp_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc280_fixup_hp_gpio2_mic_hotkey(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 24
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 24
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 24
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 8, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 16, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %10 = ptrtoint ptr %init_amp to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 2, ptr %init_amp, align 8
  %call = tail call fastcc i32 @alc_register_micmute_input_device(ptr noundef %codec)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2.not = icmp eq i32 %call, 0
  br i1 %cmp2.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or = or i32 %12, 6
  store i32 %or, ptr %gpio_mask.i.i.i, align 8
  %13 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or4 = or i32 %14, 2
  store i32 %or4, ptr %gpio_dir.i.i.i, align 4
  %15 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %gpio_data.i.i.i, align 8
  %or5 = or i32 %16, 2
  store i32 %or5, ptr %gpio_data.i.i.i, align 8
  %afg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %17 = ptrtoint ptr %afg to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %afg, align 4
  %conv.i.i = zext i16 %18 to i32
  %shl1.i.i = shl i32 %conv.i.i, 20
  %or2.i.i = or i32 %shl1.i.i, 989440
  %call.i.i = tail call i32 @snd_hdac_regmap_write_raw(ptr noundef %codec, i32 noundef %or2.i.i, i32 noundef 4) #13
  %19 = ptrtoint ptr %afg to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %afg, align 4
  %call.i29 = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext %20, i32 noundef 0, ptr noundef nonnull @gpio2_mic_hotkey_event) #13
  br label %cleanup

if.end10:                                         ; preds = %entry
  %kb_dev = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 30
  %21 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %kb_dev, align 8
  %tobool.not = icmp ne ptr %22, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %action)
  %cond = icmp eq i32 %action, 4
  %or.cond = and i1 %cond, %tobool.not
  br i1 %or.cond, label %sw.bb, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @input_unregister_device(ptr noundef nonnull %22) #13
  %23 = ptrtoint ptr %kb_dev to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %kb_dev, align 8
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %if.end10.cleanup_crit_edge, %if.end, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc280_fixup_hp_9480m(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 8
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 8
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 8
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 8, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %9 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or = or i32 %10, 16
  store i32 %or, ptr %gpio_mask.i.i.i, align 8
  %11 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2 = or i32 %12, 16
  store i32 %or2, ptr %gpio_dir.i.i.i, align 4
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %13 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @alc280_hp_gpio4_automute_hook, ptr %hp_automute_hook, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc245_fixup_hp_x360_amp(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1243)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb3
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %gpio_mask = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %gpio_mask to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gpio_mask, align 8
  %or = or i32 %4, 1
  store i32 %or, ptr %gpio_mask, align 8
  %gpio_dir = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 4
  %5 = ptrtoint ptr %gpio_dir to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gpio_dir, align 4
  %or2 = or i32 %6, 1
  store i32 %or2, ptr %gpio_dir, align 4
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %7 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i, align 8
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gpio_data.i, align 8
  %or.i = or i32 %10, 1
  store i32 %or.i, ptr %gpio_data.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %or.i)
  %cmp.not.i = icmp eq i32 %10, %or.i
  br i1 %cmp.not.i, label %sw.bb3.alc_update_gpio_data.exit_crit_edge, label %if.then5.i

sw.bb3.alc_update_gpio_data.exit_crit_edge:       ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_data.exit

if.then5.i:                                       ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1.i, align 8
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 5
  %13 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %gpio_data.i.i, align 8
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %14) #13
  br label %alc_update_gpio_data.exit

alc_update_gpio_data.exit:                        ; preds = %if.then5.i, %sw.bb3.alc_update_gpio_data.exit_crit_edge
  tail call void @msleep(i32 noundef 100) #13
  %15 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1.i, align 8
  %gpio_data.i8 = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %gpio_data.i8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %gpio_data.i8, align 8
  %and.i9 = and i32 %18, -2
  store i32 %and.i9, ptr %gpio_data.i8, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %and.i9)
  %cmp.not.i11 = icmp eq i32 %18, %and.i9
  br i1 %cmp.not.i11, label %alc_update_gpio_data.exit.sw.epilog_crit_edge, label %if.then5.i14

alc_update_gpio_data.exit.sw.epilog_crit_edge:    ; preds = %alc_update_gpio_data.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then5.i14:                                     ; preds = %alc_update_gpio_data.exit
  call void @__sanitizer_cov_trace_pc() #15
  %19 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %spec1.i, align 8
  %gpio_data.i.i12 = getelementptr inbounds %struct.alc_spec, ptr %20, i32 0, i32 5
  %21 = ptrtoint ptr %gpio_data.i.i12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %gpio_data.i.i12, align 8
  %call.i.i.i13 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %22) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then5.i14, %alc_update_gpio_data.exit.sw.epilog_crit_edge, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_hp_spectre_x360_eb1(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1244)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %alc_fixup_hp_gpio_led.exit.thread
    i32 2, label %sw.bb4
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

alc_fixup_hp_gpio_led.exit.thread:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %4, 4
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 4
  %5 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %6, 4
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %8, 4
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 12
  %9 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 4, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  %micmute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 8
  %10 = ptrtoint ptr %micmute_led_polarity to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %micmute_led_polarity, align 4
  %11 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or = or i32 %12, 1
  store i32 %or, ptr %gpio_mask.i.i.i, align 8
  %13 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2 = or i32 %14, 1
  store i32 %or2, ptr %gpio_dir.i.i.i, align 4
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc285_fixup_hp_spectre_x360_eb1.pincfgs) #13
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 1, ptr noundef nonnull @alc285_fixup_hp_spectre_x360_eb1.conn) #13
  %call3 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 1, ptr noundef nonnull @alc285_fixup_hp_spectre_x360_eb1.conn) #13
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %gpio_data.i, align 8
  %or.i = or i32 %18, 1
  store i32 %or.i, ptr %gpio_data.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %or.i)
  %cmp.not.i = icmp eq i32 %18, %or.i
  br i1 %cmp.not.i, label %sw.bb4.alc_update_gpio_data.exit_crit_edge, label %if.then5.i

sw.bb4.alc_update_gpio_data.exit_crit_edge:       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_data.exit

if.then5.i:                                       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #15
  %19 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %20, i32 0, i32 5
  %21 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %gpio_data.i.i, align 8
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %22) #13
  br label %alc_update_gpio_data.exit

alc_update_gpio_data.exit:                        ; preds = %if.then5.i, %sw.bb4.alc_update_gpio_data.exit_crit_edge
  tail call void @msleep(i32 noundef 100) #13
  %23 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %spec1, align 8
  %gpio_data.i16 = getelementptr inbounds %struct.alc_spec, ptr %24, i32 0, i32 5
  %25 = ptrtoint ptr %gpio_data.i16 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %gpio_data.i16, align 8
  %and.i17 = and i32 %26, -2
  store i32 %and.i17, ptr %gpio_data.i16, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %and.i17)
  %cmp.not.i19 = icmp eq i32 %26, %and.i17
  br i1 %cmp.not.i19, label %alc_update_gpio_data.exit.sw.epilog_crit_edge, label %if.then5.i22

alc_update_gpio_data.exit.sw.epilog_crit_edge:    ; preds = %alc_update_gpio_data.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then5.i22:                                     ; preds = %alc_update_gpio_data.exit
  call void @__sanitizer_cov_trace_pc() #15
  %27 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i20 = getelementptr inbounds %struct.alc_spec, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %gpio_data.i.i20 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %gpio_data.i.i20, align 8
  %call.i.i.i21 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %30) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then5.i22, %alc_update_gpio_data.exit.sw.epilog_crit_edge, %alc_fixup_hp_gpio_led.exit.thread, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode_dell_alc288(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp = icmp eq i32 %action, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask, align 8
  %or = or i32 %3, 64
  store i32 %or, ptr %gpio_mask, align 8
  %gpio_dir = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir, align 4
  %or2 = or i32 %5, 64
  store i32 %or2, ptr %gpio_dir, align 4
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %6 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @alc288_update_headset_jack_cb, ptr %hp_automute_hook, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_dell_xps13(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %2 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1245)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %for.cond.preheader
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.cond.preheader:                               ; preds = %entry
  %input_mux = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 27
  %3 = ptrtoint ptr %input_mux to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %input_mux, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp16.not = icmp eq i32 %4, 0
  br i1 %cmp16.not, label %for.cond.preheader.sw.epilog_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.sw.epilog_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_codec_set_pin_target(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 32) #13
  %shutup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 22
  %5 = ptrtoint ptr %shutup to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @alc_shutup_dell_xps13, ptr %shutup, align 4
  br label %sw.epilog

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.017 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 36, i32 %i.017
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %arrayidx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 18, i16 %7)
  %cmp4 = icmp eq i16 %7, 18
  br i1 %cmp4, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %cur_mux = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 28
  %8 = ptrtoint ptr %cur_mux to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %i.017, ptr %cur_mux, align 4
  br label %sw.epilog

for.inc:                                          ; preds = %for.body
  %inc = add nuw i32 %i.017, 1
  %exitcond.not = icmp eq i32 %inc, %4
  br i1 %exitcond.not, label %for.inc.sw.epilog_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.sw.epilog_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.inc.sw.epilog_crit_edge, %if.then, %sw.bb, %for.cond.preheader.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc233_fixup_lenovo_line2_mic_hotkey(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 4
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 4
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 4
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 12
  %8 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %9 = ptrtoint ptr %init_amp to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 2, ptr %init_amp, align 8
  %call = tail call fastcc i32 @alc_register_micmute_input_device(ptr noundef %codec)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2.not = icmp eq i32 %call, 0
  br i1 %cmp2.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0, ptr noundef nonnull @gpio2_mic_hotkey_event) #13
  br label %cleanup

if.end5:                                          ; preds = %entry
  %kb_dev = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 30
  %10 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %kb_dev, align 8
  %tobool.not = icmp ne ptr %11, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %action)
  %cond = icmp eq i32 %action, 4
  %or.cond = and i1 %cond, %tobool.not
  br i1 %or.cond, label %sw.bb, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @input_unregister_device(ptr noundef nonnull %11) #13
  %12 = ptrtoint ptr %kb_dev to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %kb_dev, align 8
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %if.end5.cleanup_crit_edge, %if.end, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_disable_mic_vref(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_codec_set_pin_target(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 32) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc295_fixup_disable_dac3(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 2, ptr noundef nonnull @alc295_fixup_disable_dac3.conn) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_speaker2_to_dac1(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 1, ptr noundef nonnull @alc285_fixup_speaker2_to_dac1.conn) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc298_fixup_speaker_volume(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 1, ptr noundef nonnull @alc298_fixup_speaker_volume.conn1) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_auto_mute_via_amp(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %auto_mute_via_amp = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %auto_mute_via_amp to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %auto_mute_via_amp, align 4
  %bf.set = or i64 %bf.load, 562949953421312
  store i64 %bf.set, ptr %auto_mute_via_amp, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_gpio4(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc_fixup_gpio.exit_crit_edge

entry.alc_fixup_gpio.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_gpio.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %gpio_mask.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i, align 8
  %or.i.i = or i32 %3, 4
  store i32 %or.i.i, ptr %gpio_mask.i.i, align 8
  %gpio_dir.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i, align 4
  %or2.i.i = or i32 %5, 4
  store i32 %or2.i.i, ptr %gpio_dir.i.i, align 4
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i, align 8
  %or3.i.i = or i32 %7, 4
  store i32 %or3.i.i, ptr %gpio_data.i.i, align 8
  br label %alc_fixup_gpio.exit

alc_fixup_gpio.exit:                              ; preds = %if.then.i, %entry.alc_fixup_gpio.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc233_alc662_fixup_lenovo_dual_codecs(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1246)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %alc_fixup_dual_codecs.exit.thread
    i32 3, label %sw.bb1
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

alc_fixup_dual_codecs.exit.thread:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1.i, align 8
  %suppress_vmaster.i = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 58
  %3 = ptrtoint ptr %suppress_vmaster.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load.i = load i64, ptr %suppress_vmaster.i, align 4
  %bf.set9.i = or i64 %bf.load.i, 422212733501440
  store i64 %bf.set9.i, ptr %suppress_vmaster.i, align 4
  %mixer_nid.i = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 18
  %4 = ptrtoint ptr %mixer_nid.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 0, ptr %mixer_nid.i, align 2
  %force_pin_prefix.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %5 = ptrtoint ptr %force_pin_prefix.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %bf.load11.i = load i32, ptr %force_pin_prefix.i, align 4
  %bf.set13.i = or i32 %bf.load11.i, 4096
  store i32 %bf.set13.i, ptr %force_pin_prefix.i, align 4
  %card = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %6 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %card, align 4
  %longname = getelementptr inbounds %struct.snd_card, ptr %7, i32 0, i32 4
  %8 = call ptr @memcpy(ptr %longname, ptr @.str.683, i32 26)
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %addr = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 3
  %9 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %addr, align 8
  %call.i = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.684) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %sw.bb1.rename_ctl.exit_crit_edge, label %if.then.i

sw.bb1.rename_ctl.exit_crit_edge:                 ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #15
  br label %rename_ctl.exit

if.then.i:                                        ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  %cond = select i1 %cmp, ptr @.str.685, ptr @.str.686
  %name.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i, i32 0, i32 1, i32 4
  %call1.i = tail call ptr @strcpy(ptr noundef %name.i, ptr noundef nonnull %cond) #19
  br label %rename_ctl.exit

rename_ctl.exit:                                  ; preds = %if.then.i, %sw.bb1.rename_ctl.exit_crit_edge
  %11 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %addr, align 8
  %call.i12 = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.687) #13
  %tobool.not.i13 = icmp eq ptr %call.i12, null
  br i1 %tobool.not.i13, label %rename_ctl.exit.sw.epilog_crit_edge, label %if.then.i16

rename_ctl.exit.sw.epilog_crit_edge:              ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then.i16:                                      ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3 = icmp eq i32 %12, 0
  %cond4 = select i1 %cmp3, ptr @.str.688, ptr @.str.689
  %name.i14 = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i12, i32 0, i32 1, i32 4
  %call1.i15 = tail call ptr @strcpy(ptr noundef %name.i14, ptr noundef nonnull %cond4) #19
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.i16, %rename_ctl.exit.sw.epilog_crit_edge, %alc_fixup_dual_codecs.exit.thread, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc225_fixup_s3_pop_noise(ptr nocapture noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.not = icmp eq i32 %action, 0
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %power_save_node = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %power_save_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %power_save_node, align 4
  %bf.set = or i32 %bf.load, 16384
  store i32 %bf.set, ptr %power_save_node, align 4
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc274_fixup_bind_dacs(ptr nocapture noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.not = icmp eq i32 %action, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %preferred_dacs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 64
  %2 = ptrtoint ptr %preferred_dacs to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc274_fixup_bind_dacs.preferred_pairs, ptr %preferred_dacs, align 8
  %auto_mute_via_amp = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %3 = ptrtoint ptr %auto_mute_via_amp to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load = load i64, ptr %auto_mute_via_amp, align 4
  %bf.set = or i64 %bf.load, 562949953421312
  store i64 %bf.set, ptr %auto_mute_via_amp, align 4
  %power_save_node = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %4 = ptrtoint ptr %power_save_node to i32
  call void @__asan_load4_noabort(i32 %4)
  %bf.load3 = load i32, ptr %power_save_node, align 4
  %bf.clear4 = and i32 %bf.load3, -16385
  store i32 %bf.clear4, ptr %power_save_node, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_tpt470_dock(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1247)
  switch i32 %action, label %entry.if.end5_crit_edge [
    i32 0, label %if.then
    i32 2, label %if.then3
  ]

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %parse_flags to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %parse_flags, align 4
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc_fixup_tpt470_dock.pincfgs) #13
  br label %if.end5

if.then3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 0, i32 noundef 1823, i32 noundef 0) #13
  %call.i10 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 0, i32 noundef 1823, i32 noundef 0) #13
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.then, %entry.if.end5_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_tpt470_dacs(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %preferred_dacs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 64
  %2 = ptrtoint ptr %preferred_dacs to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc_fixup_tpt470_dacs.preferred_pairs, ptr %preferred_dacs, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc298_fixup_huawei_mbx_stereo(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp.not = icmp eq i32 %action, 2
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 6, i32 noundef 0, i32 noundef 1854, i32 noundef 0) #13
  %call.i16 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 6, i32 noundef 0, i32 noundef 1854, i32 noundef 128) #13
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 38) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 61440) #13
  %2 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %4 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i18 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i19 = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i19, i32 noundef 0) #13
  %call.i.i.i20 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 34) #13
  %call.i4.i.i21 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 49) #13
  %6 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i22 = getelementptr inbounds %struct.alc_spec, ptr %7, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i22) #13
  %call.i5.i23 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %8 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i25 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i26 = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i26, i32 noundef 0) #13
  %call.i.i.i27 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 35) #13
  %call.i4.i.i28 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 11) #13
  %10 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i29 = getelementptr inbounds %struct.alc_spec, ptr %11, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i29) #13
  %call.i5.i30 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %12 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i32 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i33 = getelementptr inbounds %struct.alc_spec, ptr %13, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i33, i32 noundef 0) #13
  %call.i.i.i34 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 37) #13
  %call.i4.i.i35 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %14 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i36 = getelementptr inbounds %struct.alc_spec, ptr %15, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i36) #13
  %call.i5.i37 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i38 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 38) #13
  %call.i39 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 45072) #13
  br label %for.body

for.body:                                         ; preds = %alc298_huawei_mbx_stereo_seq.exit.for.body_crit_edge, %if.end
  %seq.042 = phi ptr [ @alc298_fixup_huawei_mbx_stereo.dac_init, %if.end ], [ %incdec.ptr, %alc298_huawei_mbx_stereo_seq.exit.for.body_crit_edge ]
  %cmp4 = icmp eq ptr %seq.042, @alc298_fixup_huawei_mbx_stereo.dac_init
  %call.i.i40 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 6, i32 noundef 0, i32 noundef 1854, i32 noundef 0) #13
  %16 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i.i41 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %17, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i.i, i32 noundef 0) #13
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 38) #13
  %call.i4.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 45056) #13
  %18 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i.i = getelementptr inbounds %struct.alc_spec, ptr %19, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i.i) #13
  %call.i5.i.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br i1 %cmp4, label %if.then.i, label %for.body.if.end.i_crit_edge

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %call.i21.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 3849, i32 noundef 0) #13
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.if.end.i_crit_edge
  %call.i22.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 6, i32 noundef 0, i32 noundef 1854, i32 noundef 128) #13
  %20 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i24.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i25.i = getelementptr inbounds %struct.alc_spec, ptr %21, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i25.i, i32 noundef 0) #13
  %call.i.i.i26.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 38) #13
  %call.i4.i.i27.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 61440) #13
  %22 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i28.i = getelementptr inbounds %struct.alc_spec, ptr %23, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i28.i) #13
  %call.i5.i29.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %24 = ptrtoint ptr %seq.042 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %seq.042, align 1
  %conv.i = zext i8 %25 to i32
  %26 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i31.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i32.i = getelementptr inbounds %struct.alc_spec, ptr %27, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i32.i, i32 noundef 0) #13
  %call.i.i.i33.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 35) #13
  %call.i4.i.i34.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %conv.i) #13
  %28 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i35.i = getelementptr inbounds %struct.alc_spec, ptr %29, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i35.i) #13
  %call.i5.i36.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %30 = ptrtoint ptr %seq.042 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %seq.042, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 30, i8 %31)
  %cmp.not.i = icmp eq i8 %31, 30
  br i1 %cmp.not.i, label %if.end.i.alc298_huawei_mbx_stereo_seq.exit_crit_edge, label %if.then6.i

if.end.i.alc298_huawei_mbx_stereo_seq.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc298_huawei_mbx_stereo_seq.exit

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %value_0x25.i = getelementptr inbounds %struct.hda_alc298_mbxinit, ptr %seq.042, i32 0, i32 1
  %32 = ptrtoint ptr %value_0x25.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %value_0x25.i, align 1
  %conv7.i = zext i8 %33 to i32
  %34 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i38.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i39.i = getelementptr inbounds %struct.alc_spec, ptr %35, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i39.i, i32 noundef 0) #13
  %call.i.i.i40.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 37) #13
  %call.i4.i.i41.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %conv7.i) #13
  %36 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i42.i = getelementptr inbounds %struct.alc_spec, ptr %37, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i42.i) #13
  %call.i5.i43.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %alc298_huawei_mbx_stereo_seq.exit

alc298_huawei_mbx_stereo_seq.exit:                ; preds = %if.then6.i, %if.end.i.alc298_huawei_mbx_stereo_seq.exit_crit_edge
  %call.i44.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 38) #13
  %call.i45.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 45072) #13
  %incdec.ptr = getelementptr %struct.hda_alc298_mbxinit, ptr %seq.042, i32 1
  %38 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %incdec.ptr, align 1
  %tobool.not = icmp eq i8 %39, 0
  br i1 %tobool.not, label %alc298_huawei_mbx_stereo_seq.exit.cleanup_crit_edge, label %alc298_huawei_mbx_stereo_seq.exit.for.body_crit_edge

alc298_huawei_mbx_stereo_seq.exit.for.body_crit_edge: ; preds = %alc298_huawei_mbx_stereo_seq.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

alc298_huawei_mbx_stereo_seq.exit.cleanup_crit_edge: ; preds = %alc298_huawei_mbx_stereo_seq.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

cleanup:                                          ; preds = %alc298_huawei_mbx_stereo_seq.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc295_fixup_hp_top_speakers(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1248)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc295_fixup_hp_top_speakers.pincfgs) #13
  %call.i = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 2, ptr noundef nonnull @alc295_fixup_disable_dac3.conn) #13
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc295_fixup_hp_top_speakers.alc295_hp_speakers_coefs)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc285_fixup_invalidate_dacs(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.not = icmp eq i32 %action, 0
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %0 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %1)
  %cmp.not.i = icmp ugt i16 %1, 3
  br i1 %cmp.not.i, label %if.end.return_crit_edge, label %land.lhs.true.i

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

land.lhs.true.i:                                  ; preds = %if.end
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %2 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %3, %conv1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %add.i)
  %cmp8.i = icmp ugt i32 %add.i, 3
  br i1 %cmp8.i, label %if.then.i, label %land.lhs.true.i.return_crit_edge

land.lhs.true.i.return_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %4 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 3, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %5, i32 %sub.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %arrayidx.i, align 4
  br label %return

return:                                           ; preds = %if.then.i, %land.lhs.true.i.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc295_fixup_chromebook(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1249)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %ultra_low_power = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 25
  %3 = ptrtoint ptr %ultra_low_power to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %ultra_low_power, align 8
  %bf.set = or i8 %bf.load, 8
  store i8 %bf.set, ptr %ultra_low_power, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_combo_jack_hp_jd_restart(ptr noundef %codec)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_jack(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %2 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1250)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 3, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %has_hs_key = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %3 = ptrtoint ptr %has_hs_key to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %has_hs_key, align 8
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %has_hs_key, align 8
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 85, i32 noundef 0, ptr noundef nonnull @alc_headset_btn_callback) #13
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %4 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not.i = icmp eq i16 %5, 0
  br i1 %tobool.not.i, label %if.end.i, label %sw.bb2.lor.lhs.false_crit_edge

sw.bb2.lor.lhs.false_crit_edge:                   ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false

if.end.i:                                         ; preds = %sw.bb2
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %6 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp.i = icmp eq i32 %7, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.if.then_crit_edge

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %8 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not = icmp eq i16 %9, 0
  br i1 %tobool.not, label %alc_get_hp_pin.exit.if.then_crit_edge, label %alc_get_hp_pin.exit.lor.lhs.false_crit_edge

alc_get_hp_pin.exit.lor.lhs.false_crit_edge:      ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false

alc_get_hp_pin.exit.if.then_crit_edge:            ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

lor.lhs.false:                                    ; preds = %alc_get_hp_pin.exit.lor.lhs.false_crit_edge, %sw.bb2.lor.lhs.false_crit_edge
  %retval.0.i19 = phi i16 [ %9, %alc_get_hp_pin.exit.lor.lhs.false_crit_edge ], [ %5, %sw.bb2.lor.lhs.false_crit_edge ]
  %call4 = tail call i32 @snd_hda_jack_bind_keymap(ptr noundef %codec, i16 noundef zeroext 85, ptr noundef nonnull @alc_headset_btn_keymap, i16 noundef zeroext %retval.0.i19) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %alc_get_hp_pin.exit.if.then_crit_edge, %if.end.i.if.then_crit_edge
  %call.i13 = tail call i32 @snd_hda_jack_add_kctl_mst(ptr noundef %codec, i16 noundef zeroext 85, i32 noundef 0, ptr noundef nonnull @.str.690, i1 noundef zeroext false, i32 noundef 3, ptr noundef nonnull @alc_headset_btn_keymap) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.if.end_crit_edge
  tail call fastcc void @alc_enable_headset_jack_key(ptr noundef %codec)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_thinkpad_x1_gen7(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1251)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 3, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 2, ptr noundef nonnull @alc285_fixup_thinkpad_x1_gen7.conn) #13
  %preferred_dacs = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 64
  %3 = ptrtoint ptr %preferred_dacs to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @alc285_fixup_thinkpad_x1_gen7.preferred_pairs, ptr %preferred_dacs, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %call.i = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.691) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %sw.bb2.rename_ctl.exit_crit_edge, label %if.then.i

sw.bb2.rename_ctl.exit_crit_edge:                 ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #15
  br label %rename_ctl.exit

if.then.i:                                        ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #15
  %name.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i, i32 0, i32 1, i32 4
  %4 = call ptr @memcpy(ptr %name.i, ptr @.str.692, i32 21)
  br label %rename_ctl.exit

rename_ctl.exit:                                  ; preds = %if.then.i, %sw.bb2.rename_ctl.exit_crit_edge
  %call.i6 = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.693) #13
  %tobool.not.i7 = icmp eq ptr %call.i6, null
  br i1 %tobool.not.i7, label %rename_ctl.exit.sw.epilog_crit_edge, label %if.then.i10

rename_ctl.exit.sw.epilog_crit_edge:              ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then.i10:                                      ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  %name.i8 = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i6, i32 0, i32 1, i32 4
  %5 = call ptr @memcpy(ptr %name.i8, ptr @.str.694, i32 21)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.i10, %rename_ctl.exit.sw.epilog_crit_edge, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc294_fixup_gx502_hp(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @is_jack_detectable(ptr noundef %codec, i16 noundef zeroext 33) #13
  br i1 %call, label %if.end, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end:                                           ; preds = %entry
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1252)
  switch i32 %action, label %if.end.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, ptr noundef nonnull @alc294_gx502_toggle_output) #13
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp eq i32 %call.i.i, 1
  %spec1.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1.i.i.i, align 8
  %call.i.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i.i, i32 noundef 0) #13
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 16) #13
  %..i = select i1 %cmp.i, i32 35360, i32 2592
  %call.i4.i.i7.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %..i) #13
  %3 = ptrtoint ptr %spec1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i.i, align 8
  %coef_mutex.i4.i8.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i8.i) #13
  %call.i5.i9.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %if.end.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc294_fixup_gu502_hp(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @is_jack_detectable(ptr noundef %codec, i16 noundef zeroext 33) #13
  br i1 %call, label %if.end, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end:                                           ; preds = %entry
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1253)
  switch i32 %action, label %if.end.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, ptr noundef nonnull @alc294_gu502_toggle_output) #13
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp eq i32 %call.i.i, 1
  %spec1.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1.i.i.i, align 8
  %call.i.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i.i, i32 noundef 0) #13
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 16) #13
  %..i = select i1 %cmp.i, i32 33824, i32 2592
  %call.i4.i.i7.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %..i) #13
  %3 = ptrtoint ptr %spec1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i.i, align 8
  %coef_mutex.i4.i8.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i8.i) #13
  %call.i5.i9.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %if.end.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_hp_gpio_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.end.i, label %entry.alc_fixup_hp_gpio_led.exit_crit_edge

entry.alc_fixup_hp_gpio_led.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_hp_gpio_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 5
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 5
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 5
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  br label %alc_fixup_hp_gpio_led.exit

alc_fixup_hp_gpio_led.exit:                       ; preds = %if.end.i, %entry.alc_fixup_hp_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_hp_mute_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i10, label %entry.alc285_fixup_hp_coef_micmute_led.exit_crit_edge

entry.alc285_fixup_hp_coef_micmute_led.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc285_fixup_hp_coef_micmute_led.exit

if.then.i10:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_coef.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13
  %3 = ptrtoint ptr %mute_led_coef.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 11, ptr %mute_led_coef.i, align 4
  %mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 1
  %4 = ptrtoint ptr %mask.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 8, ptr %mask.i, align 4
  %on.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 2
  %5 = ptrtoint ptr %on.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 8, ptr %on.i, align 4
  %off.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 3
  %6 = ptrtoint ptr %off.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %off.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @coef_mute_led_set) #13
  %7 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i, align 8
  %mic_led_coef.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14
  %9 = ptrtoint ptr %mic_led_coef.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 25, ptr %mic_led_coef.i, align 4
  %mask.i6 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14, i32 1
  %10 = ptrtoint ptr %mask.i6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 8192, ptr %mask.i6, align 4
  %on.i7 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14, i32 2
  %11 = ptrtoint ptr %on.i7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 8192, ptr %on.i7, align 4
  %off.i8 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14, i32 3
  %12 = ptrtoint ptr %off.i8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %off.i8, align 4
  %call.i9 = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @coef_micmute_led_set) #13
  br label %alc285_fixup_hp_coef_micmute_led.exit

alc285_fixup_hp_coef_micmute_led.exit:            ; preds = %if.then.i10, %entry.alc285_fixup_hp_coef_micmute_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc236_fixup_hp_gpio_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.end.i, label %entry.alc_fixup_hp_gpio_led.exit_crit_edge

entry.alc_fixup_hp_gpio_led.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_hp_gpio_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 3
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 3
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 3
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 2, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  br label %alc_fixup_hp_gpio_led.exit

alc_fixup_hp_gpio_led.exit:                       ; preds = %if.end.i, %entry.alc_fixup_hp_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc236_fixup_hp_mute_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i10, label %entry.alc236_fixup_hp_coef_micmute_led.exit_crit_edge

entry.alc236_fixup_hp_coef_micmute_led.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc236_fixup_hp_coef_micmute_led.exit

if.then.i10:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_coef.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13
  %3 = ptrtoint ptr %mute_led_coef.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 52, ptr %mute_led_coef.i, align 4
  %mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 1
  %4 = ptrtoint ptr %mask.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 32, ptr %mask.i, align 4
  %on.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 2
  %5 = ptrtoint ptr %on.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %on.i, align 4
  %off.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 3
  %6 = ptrtoint ptr %off.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 32, ptr %off.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @coef_mute_led_set) #13
  %7 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i, align 8
  %mic_led_coef.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14
  %9 = ptrtoint ptr %mic_led_coef.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 53, ptr %mic_led_coef.i, align 4
  %mask.i6 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14, i32 1
  %10 = ptrtoint ptr %mask.i6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 12, ptr %mask.i6, align 4
  %on.i7 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14, i32 2
  %11 = ptrtoint ptr %on.i7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 8, ptr %on.i7, align 4
  %off.i8 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 14, i32 3
  %12 = ptrtoint ptr %off.i8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 4, ptr %off.i8, align 4
  %call.i9 = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @coef_micmute_led_set) #13
  br label %alc236_fixup_hp_coef_micmute_led.exit

alc236_fixup_hp_coef_micmute_led.exit:            ; preds = %if.then.i10, %entry.alc236_fixup_hp_coef_micmute_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc236_fixup_hp_mute_led_micmute_vref(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i7, label %entry.alc236_fixup_hp_micmute_led_vref.exit_crit_edge

entry.alc236_fixup_hp_micmute_led_vref.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc236_fixup_hp_micmute_led_vref.exit

if.then.i7:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %mute_led_polarity.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mute_led_polarity.i, align 8
  %mute_led_coef.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13
  %3 = ptrtoint ptr %mute_led_coef.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 52, ptr %mute_led_coef.i, align 4
  %mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 1
  %4 = ptrtoint ptr %mask.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 32, ptr %mask.i, align 4
  %on.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 2
  %5 = ptrtoint ptr %on.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %on.i, align 4
  %off.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 13, i32 3
  %6 = ptrtoint ptr %off.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 32, ptr %off.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @coef_mute_led_set) #13
  %7 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i, align 8
  %cap_mute_led_nid.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %cap_mute_led_nid.i to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 26, ptr %cap_mute_led_nid.i, align 2
  %call.i6 = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @vref_micmute_led_set) #13
  %power_filter.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %10 = ptrtoint ptr %power_filter.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @led_power_filter, ptr %power_filter.i, align 4
  br label %alc236_fixup_hp_micmute_led_vref.exit

alc236_fixup_hp_micmute_led_vref.exit:            ; preds = %if.then.i7, %entry.alc236_fixup_hp_micmute_led_vref.exit_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc289_fixup_asus_ga401(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %preferred_dacs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 64
  %2 = ptrtoint ptr %preferred_dacs to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc289_fixup_asus_ga401.preferred_pairs, ptr %preferred_dacs, align 8
  %obey_preferred_dacs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %3 = ptrtoint ptr %obey_preferred_dacs to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load = load i64, ptr %obey_preferred_dacs, align 4
  %bf.set = or i64 %bf.load, 134217728
  store i64 %bf.set, ptr %obey_preferred_dacs, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_hp_gpio_amp_init(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp.not = icmp eq i32 %action, 2
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @msleep(i32 noundef 100) #13
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 101) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 0) #13
  %2 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc274_fixup_hp_headset_mic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cond = icmp eq i32 %action, 2
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_combo_jack_hp_jd_restart(ptr noundef %codec)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc274_fixup_hp_envy_gpio(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp = icmp eq i32 %action, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask, align 8
  %or = or i32 %3, 4
  store i32 %or, ptr %gpio_mask, align 8
  %gpio_dir = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir, align 4
  %or2 = or i32 %5, 4
  store i32 %or2, ptr %gpio_dir, align 4
  %pcm_playback_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 79
  %6 = ptrtoint ptr %pcm_playback_hook to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @alc274_hp_envy_pcm_hook, ptr %pcm_playback_hook, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc287_fixup_hp_gpio_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.end.i, label %entry.alc_fixup_hp_gpio_led.exit_crit_edge

entry.alc_fixup_hp_gpio_led.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_hp_gpio_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 16
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 16
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 16
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 16, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  br label %alc_fixup_hp_gpio_led.exit

alc_fixup_hp_gpio_led.exit:                       ; preds = %if.end.i, %entry.alc_fixup_hp_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc245_fixup_hp_gpio_led(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.end.i, label %entry.alc_fixup_hp_gpio_led.exit_crit_edge

entry.alc_fixup_hp_gpio_led.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_hp_gpio_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %micmute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %micmute_led_polarity to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %micmute_led_polarity, align 4
  %3 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %5, 4
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 4
  %6 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %7, 4
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 5
  %8 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %9, 4
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mic_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 12
  %10 = ptrtoint ptr %gpio_mic_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 4, ptr %gpio_mic_led_mask.i, align 8
  %call6.i = tail call i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef %codec, ptr noundef nonnull @micmute_led_set) #13
  br label %alc_fixup_hp_gpio_led.exit

alc_fixup_hp_gpio_led.exit:                       ; preds = %if.end.i, %entry.alc_fixup_hp_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_no_int_mic(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1254)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 69, i32 noundef 62464, i32 noundef 20480)
  %no_internal_mic_pin = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 25
  %3 = ptrtoint ptr %no_internal_mic_pin to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %no_internal_mic_pin, align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, ptr %no_internal_mic_pin, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_combo_jack_hp_jd_restart(ptr noundef %codec)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_ideapad_s740_coef(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cond = icmp eq i32 %action, 0
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_add_verbs(ptr noundef %codec, ptr noundef nonnull @alc285_ideapad_s740_coefs) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc295_fixup_asus_dacs(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %preferred_dacs = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 64
  %2 = ptrtoint ptr %preferred_dacs to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc295_fixup_asus_dacs.preferred_pairs, ptr %preferred_dacs, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc285_fixup_hp_spectre_x360(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cond = icmp eq i32 %action, 0
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc285_fixup_hp_spectre_x360.pincfgs) #13
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 23, i32 noundef 1, ptr noundef nonnull @alc285_fixup_hp_spectre_x360.conn) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc287_fixup_legion_15imhg05_speakers(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cond = icmp eq i32 %action, 0
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %suppress_auto_mute = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %suppress_auto_mute to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %suppress_auto_mute, align 4
  %bf.set = or i64 %bf.load, 281474976710656
  store i64 %bf.set, ptr %suppress_auto_mute, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc256_fixup_set_coef_defaults(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc256_fixup_set_coef_defaults_coefs)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc233_fixup_no_audio_jack(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc233_fixup_no_audio_jack_coefs)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc256_fixup_mic_no_presence_and_resume(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 283902550, i32 %1)
  %cmp = icmp eq i32 %1, 283902550
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 16, i32 noundef 512, i32 noundef 0)
  %call = tail call i32 @snd_hda_codec_set_pincfg(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 77664544) #13
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call1 = tail call i32 @snd_hda_codec_set_pincfg(ptr noundef %codec, i16 noundef zeroext 26, i32 noundef 77664572) #13
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc287_fixup_legion_16achg6_speakers(ptr noundef %cdc, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec2 = getelementptr inbounds %struct.hda_codec, ptr %cdc, i32 0, i32 11
  %0 = ptrtoint ptr %spec2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec2, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cond = icmp eq i32 %action, 0
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %match = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 32
  tail call void @component_match_add_release(ptr noundef %cdc, ptr noundef %match, ptr noundef null, ptr noundef nonnull @comp_match_dev_name, ptr noundef nonnull @.str.695) #13
  tail call void @component_match_add_release(ptr noundef %cdc, ptr noundef %match, ptr noundef null, ptr noundef nonnull @comp_match_dev_name, ptr noundef nonnull @.str.696) #13
  %2 = ptrtoint ptr %match to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %match, align 8
  %call = tail call i32 @component_master_add_with_match(ptr noundef %cdc, ptr noundef nonnull @comp_master_ops, ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else, label %do.end

do.end:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %cdc, ptr noundef nonnull @.str.697, i32 noundef %call) #17
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %pcm_playback_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 79
  %4 = ptrtoint ptr %pcm_playback_hook to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @alc287_legion_16achg6_playback_hook, ptr %pcm_playback_hook, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else, %do.end, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cs35l41_fixup_i2c_two(ptr noundef %cdc, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec2.i = getelementptr inbounds %struct.hda_codec, ptr %cdc, i32 0, i32 11
  %0 = ptrtoint ptr %spec2.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec2.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cond.i = icmp eq i32 %action, 0
  br i1 %cond.i, label %for.cond.preheader.i, label %entry.cs35l41_generic_fixup.exit_crit_edge

entry.cs35l41_generic_fixup.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cs35l41_generic_fixup.exit

for.cond.preheader.i:                             ; preds = %entry
  %match.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 32
  %call.i = tail call noalias ptr (ptr, i32, ptr, ...) @devm_kasprintf(ptr noundef %cdc, i32 noundef 3264, ptr noundef nonnull @.str.701, ptr noundef nonnull @.str.699, ptr noundef nonnull @.str.700, i32 noundef 0) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %for.cond.preheader.i.cs35l41_generic_fixup.exit_crit_edge, label %if.end.i

for.cond.preheader.i.cs35l41_generic_fixup.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cs35l41_generic_fixup.exit

if.end.i:                                         ; preds = %for.cond.preheader.i
  tail call void @component_match_add_release(ptr noundef %cdc, ptr noundef %match.i, ptr noundef null, ptr noundef nonnull @comp_match_dev_name, ptr noundef nonnull %call.i) #13
  %call.1.i = tail call noalias ptr (ptr, i32, ptr, ...) @devm_kasprintf(ptr noundef %cdc, i32 noundef 3264, ptr noundef nonnull @.str.701, ptr noundef nonnull @.str.699, ptr noundef nonnull @.str.700, i32 noundef 1) #13
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %if.end.i.cs35l41_generic_fixup.exit_crit_edge, label %if.end.1.i

if.end.i.cs35l41_generic_fixup.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cs35l41_generic_fixup.exit

if.end.1.i:                                       ; preds = %if.end.i
  tail call void @component_match_add_release(ptr noundef %cdc, ptr noundef %match.i, ptr noundef null, ptr noundef nonnull @comp_match_dev_name, ptr noundef nonnull %call.1.i) #13
  %2 = ptrtoint ptr %match.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %match.i, align 8
  %call4.i = tail call i32 @component_master_add_with_match(ptr noundef %cdc, ptr noundef nonnull @comp_master_ops, ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %do.end.i

do.end.i:                                         ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %cdc, ptr noundef nonnull @.str.697, i32 noundef %call4.i) #17
  br label %cs35l41_generic_fixup.exit

if.else.i:                                        ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #15
  %pcm_playback_hook.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 79
  %4 = ptrtoint ptr %pcm_playback_hook.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @comp_generic_playback_hook, ptr %pcm_playback_hook.i, align 4
  br label %cs35l41_generic_fixup.exit

cs35l41_generic_fixup.exit:                       ; preds = %if.else.i, %do.end.i, %if.end.i.cs35l41_generic_fixup.exit_crit_edge, %for.cond.preheader.i.cs35l41_generic_fixup.exit_crit_edge, %entry.cs35l41_generic_fixup.exit_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_sequence_write(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_quanta_automute(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @snd_hda_gen_update_outputs(ptr noundef %codec) #13
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 12) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 1664) #13
  %2 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %4 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i4 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i5 = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i5, i32 noundef 0) #13
  %call.i.i.i6 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 12) #13
  %call.i4.i.i7 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 1152) #13
  %6 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i8 = getelementptr inbounds %struct.alc_spec, ptr %7, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i8) #13
  %call.i5.i9 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_gen_update_outputs(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_codec_set_pincfg(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vref_mute_led_set(ptr nocapture noundef readonly %led_cdev, i32 noundef %brightness) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.led_classdev, ptr %led_cdev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %mute_led_nid to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %mute_led_nid, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i, label %entry.alc_update_vref_led.exit_crit_edge, label %if.end.i

entry.alc_update_vref_led.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_vref_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %brightness)
  %tobool2 = icmp ne i32 %brightness, 0
  %mute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 7
  %8 = ptrtoint ptr %mute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mute_led_polarity, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool = icmp ne i32 %9, 0
  %spec.select.i = xor i1 %tobool2, %tobool
  %call.i = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %3, i16 noundef zeroext %7) #13
  %and.i = and i32 %call.i, -8
  %cond.i = select i1 %spec.select.i, i32 4, i32 0
  %or.i = or i32 %cond.i, %and.i
  %call8.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %3) #13
  %call.i.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %3, i16 noundef zeroext %7, i32 noundef %or.i, i1 noundef zeroext true) #13
  %call11.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %3) #13
  br label %alc_update_vref_led.exit

alc_update_vref_led.exit:                         ; preds = %if.end.i, %entry.alc_update_vref_led.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @led_power_filter(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %power_state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %power_state)
  %cmp.not = icmp ne i32 %power_state, 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %nid)
  %cmp2 = icmp eq i16 %nid, 0
  %or.cond = or i1 %cmp2, %cmp.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %lor.lhs.false4

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false4:                                   ; preds = %entry
  %mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %mute_led_nid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %mute_led_nid, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %nid)
  %cmp7.not = icmp eq i16 %3, %nid
  br i1 %cmp7.not, label %lor.lhs.false4.if.end_crit_edge, label %land.lhs.true

lor.lhs.false4.if.end_crit_edge:                  ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false4
  %cap_mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 10
  %4 = ptrtoint ptr %cap_mute_led_nid to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %cap_mute_led_nid, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %nid)
  %cmp11.not = icmp eq i16 %5, %nid
  br i1 %cmp11.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %lor.lhs.false4.if.end_crit_edge
  %call = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext %nid) #13
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef %call, i1 noundef zeroext false) #13
  %call14 = tail call i32 @snd_hda_gen_path_power_filter(ptr noundef %codec, i16 noundef zeroext %nid, i32 noundef 3) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call14, %if.end ], [ 3, %land.lhs.true.cleanup_crit_edge ], [ %power_state, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_codec_get_pin_target(ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_snd_hda_set_pin_ctl(ptr noundef, i16 noundef zeroext, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_path_power_filter(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gpio_mute_led_set(ptr nocapture noundef readonly %led_cdev, i32 noundef %brightness) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.led_classdev, ptr %led_cdev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %gpio_mute_led_mask = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %gpio_mute_led_mask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_mute_led_mask, align 4
  %mute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 7
  %8 = ptrtoint ptr %mute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mute_led_polarity, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %brightness)
  %tobool.not = icmp eq i32 %brightness, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  %lnot4.i = xor i1 %tobool.not, %tobool.not.i
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 5
  %10 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %gpio_data.i.i, align 8
  %neg.i.i = xor i32 %7, -1
  %and.i.i = and i32 %11, %neg.i.i
  %or.i.i = or i32 %11, %7
  %storemerge.i.i = select i1 %lnot4.i, i32 %or.i.i, i32 %and.i.i
  store i32 %storemerge.i.i, ptr %gpio_data.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %storemerge.i.i)
  %cmp.not.i.i = icmp eq i32 %11, %storemerge.i.i
  br i1 %cmp.not.i.i, label %entry.alc_update_gpio_led.exit_crit_edge, label %if.then5.i.i

entry.alc_update_gpio_led.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_led.exit

if.then5.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %12 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %gpio_data.i.i.i, align 8
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %3, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %15) #13
  br label %alc_update_gpio_led.exit

alc_update_gpio_led.exit:                         ; preds = %if.then5.i.i, %entry.alc_update_gpio_led.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_add_micmute_led_cdev(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @micmute_led_set(ptr nocapture noundef readonly %led_cdev, i32 noundef %brightness) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.led_classdev, ptr %led_cdev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %gpio_mic_led_mask = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %gpio_mic_led_mask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_mic_led_mask, align 8
  %micmute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 8
  %8 = ptrtoint ptr %micmute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %micmute_led_polarity, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %brightness)
  %tobool.not = icmp eq i32 %brightness, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  %lnot4.i = xor i1 %tobool.not, %tobool.not.i
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 5
  %10 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %gpio_data.i.i, align 8
  %neg.i.i = xor i32 %7, -1
  %and.i.i = and i32 %11, %neg.i.i
  %or.i.i = or i32 %11, %7
  %storemerge.i.i = select i1 %lnot4.i, i32 %or.i.i, i32 %and.i.i
  store i32 %storemerge.i.i, ptr %gpio_data.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %storemerge.i.i)
  %cmp.not.i.i = icmp eq i32 %11, %storemerge.i.i
  br i1 %cmp.not.i.i, label %entry.alc_update_gpio_led.exit_crit_edge, label %if.then5.i.i

entry.alc_update_gpio_led.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_led.exit

if.then5.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %12 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %gpio_data.i.i.i, align 8
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %3, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %15) #13
  br label %alc_update_gpio_led.exit

alc_update_gpio_led.exit:                         ; preds = %if.then5.i.i, %entry.alc_update_gpio_led.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vref_micmute_led_set(ptr nocapture noundef readonly %led_cdev, i32 noundef %brightness) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.led_classdev, ptr %led_cdev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %cap_mute_led_nid = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %cap_mute_led_nid to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %cap_mute_led_nid, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i, label %entry.alc_update_vref_led.exit_crit_edge, label %if.end.i

entry.alc_update_vref_led.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_vref_led.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %brightness)
  %tobool2 = icmp ne i32 %brightness, 0
  %micmute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 8
  %8 = ptrtoint ptr %micmute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %micmute_led_polarity, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool = icmp ne i32 %9, 0
  %spec.select.i = xor i1 %tobool2, %tobool
  %call.i = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %3, i16 noundef zeroext %7) #13
  %and.i = and i32 %call.i, -8
  %cond.i = select i1 %spec.select.i, i32 4, i32 0
  %or.i = or i32 %cond.i, %and.i
  %call8.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %3) #13
  %call.i.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %3, i16 noundef zeroext %7, i32 noundef %or.i, i1 noundef zeroext true) #13
  %call11.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %3) #13
  br label %alc_update_vref_led.exit

alc_update_vref_led.exit:                         ; preds = %if.end.i, %entry.alc_update_vref_led.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_override_amp_caps(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_update_headset_mode(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %cur_mux = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 28
  %2 = ptrtoint ptr %cur_mux to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cur_mux, align 4
  %arrayidx3 = getelementptr %struct.hda_gen_spec, ptr %1, i32 0, i32 36, i32 %3
  %4 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %arrayidx3, align 2
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %6 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.alc_get_hp_pin.exit_crit_edge

entry.alc_get_hp_pin.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %8 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %cmp.i = icmp eq i32 %9, 2
  br i1 %cmp.i, label %if.then7.i, label %if.end.i.alc_get_hp_pin.exit_crit_edge

if.end.i.alc_get_hp_pin.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %10 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %line_out_pins.i, align 4
  br label %alc_get_hp_pin.exit

alc_get_hp_pin.exit:                              ; preds = %if.then7.i, %if.end.i.alc_get_hp_pin.exit_crit_edge, %entry.alc_get_hp_pin.exit_crit_edge
  %retval.0.i = phi i16 [ %11, %if.then7.i ], [ %7, %entry.alc_get_hp_pin.exit_crit_edge ], [ 0, %if.end.i.alc_get_hp_pin.exit_crit_edge ]
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext %retval.0.i, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i.not, label %alc_get_hp_pin.exit.if.end16_crit_edge, label %if.else

alc_get_hp_pin.exit.if.end16_crit_edge:           ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.else:                                          ; preds = %alc_get_hp_pin.exit
  %headset_mic_pin = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 16
  %12 = ptrtoint ptr %headset_mic_pin to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %headset_mic_pin, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %13)
  %cmp = icmp eq i16 %5, %13
  br i1 %cmp, label %if.else.if.end16_crit_edge, label %if.else8

if.else.if.end16_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.else8:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %headphone_mic_pin = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 17
  %14 = ptrtoint ptr %headphone_mic_pin to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %headphone_mic_pin, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %15)
  %cmp11 = icmp eq i16 %5, %15
  %.115 = select i1 %cmp11, i32 3, i32 4
  br label %if.end16

if.end16:                                         ; preds = %if.else8, %if.else.if.end16_crit_edge, %alc_get_hp_pin.exit.if.end16_crit_edge
  %cmp58.not = phi i1 [ false, %alc_get_hp_pin.exit.if.end16_crit_edge ], [ false, %if.else.if.end16_crit_edge ], [ %cmp11, %if.else8 ]
  %new_headset_mode.0 = phi i32 [ 1, %alc_get_hp_pin.exit.if.end16_crit_edge ], [ 2, %if.else.if.end16_crit_edge ], [ %.115, %if.else8 ]
  %current_headset_mode = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 18
  %16 = ptrtoint ptr %current_headset_mode to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %current_headset_mode, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %new_headset_mode.0, i32 %17)
  %cmp17 = icmp eq i32 %new_headset_mode.0, %17
  br i1 %cmp17, label %if.end16.cleanup_crit_edge, label %if.end20

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end20:                                         ; preds = %if.end16
  %18 = zext i32 %new_headset_mode.0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.1255)
  switch i32 %new_headset_mode.0, label %if.end20.sw.epilog_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb45
    i32 4, label %sw.bb52
  ]

if.end20.sw.epilog_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_headset_mode_unplugged(ptr noundef %codec)
  %19 = ptrtoint ptr %current_headset_mode to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %current_headset_mode, align 4
  %current_headset_type = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 19
  %20 = ptrtoint ptr %current_headset_type to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %current_headset_type, align 8
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %21 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %21, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  %bf.clear = and i64 %bf.load, 9223372036854775807
  store i64 %bf.clear, ptr %hp_jack_present, align 4
  br label %sw.epilog

sw.bb23:                                          ; preds = %if.end20
  %current_headset_type24 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 19
  %22 = ptrtoint ptr %current_headset_type24 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %current_headset_type24, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp25 = icmp eq i32 %23, 0
  br i1 %cmp25, label %if.then27, label %sw.bb23.if.end28_crit_edge

sw.bb23.if.end28_crit_edge:                       ; preds = %sw.bb23
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.then27:                                        ; preds = %sw.bb23
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_determine_headset_type(ptr noundef %codec)
  %24 = ptrtoint ptr %current_headset_type24 to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pr = load i32, ptr %current_headset_type24, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %sw.bb23.if.end28_crit_edge
  %25 = phi i32 [ %.pr, %if.then27 ], [ %23, %sw.bb23.if.end28_crit_edge ]
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.1256)
  switch i32 %25, label %if.end28.if.end39_crit_edge [
    i32 1, label %if.then32
    i32 2, label %if.then37
  ]

if.end28.if.end39_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end39

if.then32:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_headset_mode_ctia(ptr noundef %codec)
  br label %if.end39

if.then37:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_headset_mode_omtp(ptr noundef %codec)
  br label %if.end39

if.end39:                                         ; preds = %if.then37, %if.then32, %if.end28.if.end39_crit_edge
  %hp_jack_present41 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %27 = ptrtoint ptr %hp_jack_present41 to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %bf.load42 = load i64, ptr %hp_jack_present41, align 4
  %bf.set44 = or i64 %bf.load42, -9223372036854775808
  store i64 %bf.set44, ptr %hp_jack_present41, align 4
  br label %sw.epilog

sw.bb45:                                          ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  %headphone_mic_pin46 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 17
  %28 = ptrtoint ptr %headphone_mic_pin46 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %headphone_mic_pin46, align 2
  tail call fastcc void @alc_headset_mode_mic_in(ptr noundef %codec, i16 noundef zeroext %retval.0.i, i16 noundef zeroext %29)
  %hp_jack_present48 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %30 = ptrtoint ptr %hp_jack_present48 to i32
  call void @__asan_loadN_noabort(i32 %30, i32 8)
  %bf.load49 = load i64, ptr %hp_jack_present48, align 4
  %bf.clear50 = and i64 %bf.load49, 9223372036854775807
  store i64 %bf.clear50, ptr %hp_jack_present48, align 4
  br label %sw.epilog

sw.bb52:                                          ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_headset_mode_default(ptr noundef %codec)
  %hp_jack_present54 = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %31 = ptrtoint ptr %hp_jack_present54 to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %bf.load55 = load i64, ptr %hp_jack_present54, align 4
  %bf.set57 = or i64 %bf.load55, -9223372036854775808
  store i64 %bf.set57, ptr %hp_jack_present54, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb52, %sw.bb45, %if.end39, %sw.bb, %if.end20.sw.epilog_crit_edge
  br i1 %cmp58.not, label %sw.epilog.if.end73_crit_edge, label %if.then60

sw.epilog.if.end73_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end73

if.then60:                                        ; preds = %sw.epilog
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %retval.0.i, i32 noundef 192, i1 noundef zeroext true) #13
  %headphone_mic_pin62 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 17
  %32 = ptrtoint ptr %headphone_mic_pin62 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %headphone_mic_pin62, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %33)
  %tobool.not = icmp eq i16 %33, 0
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %retval.0.i)
  %cmp67.not = icmp eq i16 %33, %retval.0.i
  %or.cond = or i1 %tobool.not, %cmp67.not
  br i1 %or.cond, label %if.then60.if.end73_crit_edge, label %if.then69

if.then60.if.end73_crit_edge:                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end73

if.then69:                                        ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #15
  %call.i116 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %33, i32 noundef 32, i1 noundef zeroext true) #13
  br label %if.end73

if.end73:                                         ; preds = %if.then69, %if.then60.if.end73_crit_edge, %sw.epilog.if.end73_crit_edge
  %34 = ptrtoint ptr %current_headset_mode to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %new_headset_mode.0, ptr %current_headset_mode, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end73, %if.end16.cleanup_crit_edge
  tail call void @snd_hda_gen_update_outputs(ptr noundef %codec) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_update_headset_mode_hook(ptr noundef %codec, ptr nocapture noundef readnone %kcontrol, ptr nocapture noundef readnone %ucontrol) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @alc_update_headset_mode(ptr noundef %codec)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_update_headset_jack_cb(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  tail call void @alc_update_headset_mode(ptr noundef %codec)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_gen_hp_automute(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_headset_mode_unplugged(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %no_internal_mic_pin = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %no_internal_mic_pin to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %no_internal_mic_pin, align 8
  %3 = and i8 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 69, i32 noundef 62464, i32 noundef 20480)
  br label %cleanup

if.end:                                           ; preds = %entry
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %4 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vendor_id, align 8
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.1257)
  switch i32 %5, label %if.end.do.body_crit_edge [
    i32 283902549, label %sw.bb
    i32 283902512, label %if.end.sw.bb2_crit_edge
    i32 283902518, label %if.end.sw.bb2_crit_edge35
    i32 283902550, label %if.end.sw.bb2_crit_edge36
    i32 283902516, label %if.end.sw.bb3_crit_edge
    i32 283902580, label %if.end.sw.bb3_crit_edge37
    i32 283902612, label %if.end.sw.bb3_crit_edge38
    i32 283902515, label %if.end.sw.bb4_crit_edge
    i32 283902595, label %if.end.sw.bb4_crit_edge39
    i32 283902598, label %if.end.sw.bb5_crit_edge
    i32 283902600, label %if.end.sw.bb5_crit_edge40
    i32 283902616, label %sw.bb6
    i32 283902610, label %sw.bb7
    i32 283902611, label %sw.bb8
    i32 283903592, label %sw.bb9
    i32 283902485, label %if.end.sw.bb10_crit_edge
    i32 283902501, label %if.end.sw.bb10_crit_edge41
    i32 283902597, label %if.end.sw.bb10_crit_edge42
    i32 283902613, label %if.end.sw.bb10_crit_edge43
    i32 283902601, label %if.end.sw.bb10_crit_edge44
    i32 283902617, label %if.end.sw.bb10_crit_edge45
    i32 283904103, label %sw.bb11
  ]

if.end.sw.bb10_crit_edge45:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb10

if.end.sw.bb10_crit_edge44:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb10

if.end.sw.bb10_crit_edge43:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb10

if.end.sw.bb10_crit_edge42:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb10

if.end.sw.bb10_crit_edge41:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb10

if.end.sw.bb10_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb10

if.end.sw.bb5_crit_edge40:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

if.end.sw.bb5_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

if.end.sw.bb4_crit_edge39:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb4

if.end.sw.bb4_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb4

if.end.sw.bb3_crit_edge38:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

if.end.sw.bb3_crit_edge37:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

if.end.sw.bb3_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

if.end.sw.bb2_crit_edge36:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb2_crit_edge35:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb2_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0255)
  br label %do.body

sw.bb2:                                           ; preds = %if.end.sw.bb2_crit_edge, %if.end.sw.bb2_crit_edge35, %if.end.sw.bb2_crit_edge36
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0256)
  br label %do.body

sw.bb3:                                           ; preds = %if.end.sw.bb3_crit_edge, %if.end.sw.bb3_crit_edge37, %if.end.sw.bb3_crit_edge38
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0274)
  br label %do.body

sw.bb4:                                           ; preds = %if.end.sw.bb4_crit_edge, %if.end.sw.bb4_crit_edge39
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0233)
  br label %do.body

sw.bb5:                                           ; preds = %if.end.sw.bb5_crit_edge, %if.end.sw.bb5_crit_edge40
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0288)
  br label %do.body

sw.bb6:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0298)
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0288)
  br label %do.body

sw.bb7:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0292)
  br label %do.body

sw.bb8:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0293)
  br label %do.body

sw.bb9:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0668)
  br label %do.body

sw.bb10:                                          ; preds = %if.end.sw.bb10_crit_edge, %if.end.sw.bb10_crit_edge41, %if.end.sw.bb10_crit_edge42, %if.end.sw.bb10_crit_edge43, %if.end.sw.bb10_crit_edge44, %if.end.sw.bb10_crit_edge45
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc225_pre_hsmode)
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_unplugged.coef0225)
  br label %do.body

sw.bb11:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 5, i32 noundef 16384, i32 noundef 0)
  br label %do.body

do.body:                                          ; preds = %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb, %if.end.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_headset_mode_unplugged.__UNIQUE_ID_ddebug256, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_headset_mode_unplugged, %if.then15)) #13
          to label %cleanup [label %if.then15], !srcloc !2188

if.then15:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_headset_mode_unplugged.__UNIQUE_ID_ddebug256, ptr noundef %codec, ptr noundef nonnull @.str.659) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %do.body, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_determine_headset_type(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %no_internal_mic_pin = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %no_internal_mic_pin to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %no_internal_mic_pin, align 8
  %3 = and i8 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 69, i32 noundef 62464, i32 noundef 20480)
  br label %cleanup

if.end:                                           ; preds = %entry
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %4 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vendor_id, align 8
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.1258)
  switch i32 %5, label %if.end.do.body_crit_edge [
    i32 283902549, label %sw.bb
    i32 283902512, label %if.end.sw.bb2_crit_edge
    i32 283902518, label %if.end.sw.bb2_crit_edge307
    i32 283902550, label %if.end.sw.bb2_crit_edge308
    i32 283902516, label %if.end.sw.bb11_crit_edge
    i32 283902580, label %if.end.sw.bb11_crit_edge309
    i32 283902612, label %if.end.sw.bb11_crit_edge310
    i32 283902515, label %if.end.sw.bb16_crit_edge
    i32 283902595, label %if.end.sw.bb16_crit_edge311
    i32 283902616, label %sw.bb21
    i32 283902598, label %if.end.sw.bb39_crit_edge
    i32 283902600, label %if.end.sw.bb39_crit_edge312
    i32 283902610, label %sw.bb44
    i32 283902611, label %sw.bb49
    i32 283903592, label %sw.bb54
    i32 283902485, label %if.end.sw.bb59_crit_edge
    i32 283902501, label %if.end.sw.bb59_crit_edge313
    i32 283902597, label %if.end.sw.bb59_crit_edge314
    i32 283902613, label %if.end.sw.bb59_crit_edge315
    i32 283902601, label %if.end.sw.bb59_crit_edge316
    i32 283902617, label %if.end.sw.bb59_crit_edge317
    i32 283904103, label %sw.bb78
  ]

if.end.sw.bb59_crit_edge317:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb59

if.end.sw.bb59_crit_edge316:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb59

if.end.sw.bb59_crit_edge315:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb59

if.end.sw.bb59_crit_edge314:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb59

if.end.sw.bb59_crit_edge313:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb59

if.end.sw.bb59_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb59

if.end.sw.bb39_crit_edge312:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb39

if.end.sw.bb39_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb39

if.end.sw.bb16_crit_edge311:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb16

if.end.sw.bb16_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb16

if.end.sw.bb11_crit_edge310:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

if.end.sw.bb11_crit_edge309:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

if.end.sw.bb11_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

if.end.sw.bb2_crit_edge308:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb2_crit_edge307:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.sw.bb2_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0255)
  tail call void @msleep(i32 noundef 300) #13
  %7 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 70) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %9 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and = and i32 %call.i4.i.i, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %and)
  %cmp = icmp eq i32 %and, 112
  br label %do.body

sw.bb2:                                           ; preds = %if.end.sw.bb2_crit_edge, %if.end.sw.bb2_crit_edge307, %if.end.sw.bb2_crit_edge308
  %call.i.i173 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i174 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i174, i32 noundef 0) #13
  %call.i.i.i175 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 27) #13
  %call.i4.i.i176 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 3659) #13
  %11 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i177 = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i177) #13
  %call.i5.i178 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %13 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1, align 8
  %call.i.i180 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i181 = getelementptr inbounds %struct.alc_spec, ptr %14, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i181, i32 noundef 0) #13
  %call.i.i.i182 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 6) #13
  %call.i4.i.i183 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 24836) #13
  %15 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i184 = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i184) #13
  %call.i5.i185 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %17 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spec1, align 8
  %call.i.i187 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i188 = getelementptr inbounds %struct.alc_spec, ptr %18, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i188, i32 noundef 0) #13
  %call.i.i.i189 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 0, i32 noundef 1280, i32 noundef 3) #13
  %call.i4.i.i190 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 0, i32 noundef 1024, i32 noundef 2467) #13
  %19 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i191 = getelementptr inbounds %struct.alc_spec, ptr %20, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i191) #13
  %call.i5.i192 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 80) #13
  %call.i193 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0255)
  tail call void @msleep(i32 noundef 300) #13
  %21 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %spec1, align 8
  %call.i.i195 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i196 = getelementptr inbounds %struct.alc_spec, ptr %22, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i196, i32 noundef 0) #13
  %call.i.i.i197 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 70) #13
  %call.i4.i.i198 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %23 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i199 = getelementptr inbounds %struct.alc_spec, ptr %24, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i199) #13
  %call.i5.i200 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and6 = and i32 %call.i4.i.i198, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %and6)
  %cmp7 = icmp eq i32 %and6, 112
  %25 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %spec1, align 8
  %call.i.i202 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i203 = getelementptr inbounds %struct.alc_spec, ptr %26, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i203, i32 noundef 0) #13
  %call.i.i.i204 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 0, i32 noundef 1280, i32 noundef 3) #13
  %call.i4.i.i205 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 0, i32 noundef 1024, i32 noundef 3491) #13
  %27 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i206 = getelementptr inbounds %struct.alc_spec, ptr %28, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i206) #13
  %call.i5.i207 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 5, i32 noundef 16384, i32 noundef 0)
  %call.i208 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  tail call void @msleep(i32 noundef 80) #13
  %call.i209 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 768, i32 noundef 45056) #13
  br label %do.body

sw.bb11:                                          ; preds = %if.end.sw.bb11_crit_edge, %if.end.sw.bb11_crit_edge309, %if.end.sw.bb11_crit_edge310
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0274)
  tail call void @msleep(i32 noundef 850) #13
  %29 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %spec1, align 8
  %call.i.i211 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i212 = getelementptr inbounds %struct.alc_spec, ptr %30, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i212, i32 noundef 0) #13
  %call.i.i.i213 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 70) #13
  %call.i4.i.i214 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %31 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i215 = getelementptr inbounds %struct.alc_spec, ptr %32, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i215) #13
  %call.i5.i216 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and13 = and i32 %call.i4.i.i214, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 240, i32 %and13)
  %cmp14 = icmp eq i32 %and13, 240
  br label %do.body

sw.bb16:                                          ; preds = %if.end.sw.bb16_crit_edge, %if.end.sw.bb16_crit_edge311
  %call.i.i218 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i219 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i219, i32 noundef 0) #13
  %call.i.i.i220 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i221 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 53289) #13
  %33 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i222 = getelementptr inbounds %struct.alc_spec, ptr %34, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i222) #13
  %call.i5.i223 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call void @msleep(i32 noundef 300) #13
  %35 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %spec1, align 8
  %call.i.i225 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i226 = getelementptr inbounds %struct.alc_spec, ptr %36, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i226, i32 noundef 0) #13
  %call.i.i.i227 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 70) #13
  %call.i4.i.i228 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %37 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i229 = getelementptr inbounds %struct.alc_spec, ptr %38, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i229) #13
  %call.i5.i230 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and18 = and i32 %call.i4.i.i228, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %and18)
  %cmp19 = icmp eq i32 %and18, 112
  br label %do.body

sw.bb21:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i231 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 100) #13
  %call.i232 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  tail call void @msleep(i32 noundef 200) #13
  %39 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %spec1, align 8
  %call.i.i234 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i235 = getelementptr inbounds %struct.alc_spec, ptr %40, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i235, i32 noundef 0) #13
  %call.i.i.i236 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 80) #13
  %call.i4.i.i237 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %41 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i238 = getelementptr inbounds %struct.alc_spec, ptr %42, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i238) #13
  %call.i5.i239 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and25 = and i32 %call.i4.i.i237, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  %. = select i1 %tobool26.not, i32 16, i32 32
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 142, i32 noundef 112, i32 noundef %.)
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0288)
  tail call void @msleep(i32 noundef 350) #13
  %call32 = tail call fastcc i32 @alc_read_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 80)
  %is_ctia.0.in = and i32 %call32, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %is_ctia.0.in)
  %is_ctia.0 = icmp eq i32 %is_ctia.0.in, 112
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0298)
  %call.i240 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 1799, i32 noundef 192) #13
  tail call void @msleep(i32 noundef 75) #13
  %call.i241 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 768, i32 noundef 45056) #13
  br label %do.body

sw.bb39:                                          ; preds = %if.end.sw.bb39_crit_edge, %if.end.sw.bb39_crit_edge312
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0288)
  tail call void @msleep(i32 noundef 350) #13
  %43 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %spec1, align 8
  %call.i.i243 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i244 = getelementptr inbounds %struct.alc_spec, ptr %44, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i244, i32 noundef 0) #13
  %call.i.i.i245 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 80) #13
  %call.i4.i.i246 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %45 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i247 = getelementptr inbounds %struct.alc_spec, ptr %46, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i247) #13
  %call.i5.i248 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and41 = and i32 %call.i4.i.i246, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %and41)
  %cmp42 = icmp eq i32 %and41, 112
  br label %do.body

sw.bb44:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i250 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i251 = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i251, i32 noundef 0) #13
  %call.i.i.i252 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 107) #13
  %call.i4.i.i253 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 54313) #13
  %47 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i254 = getelementptr inbounds %struct.alc_spec, ptr %48, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i254) #13
  %call.i5.i255 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call void @msleep(i32 noundef 300) #13
  %49 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %spec1, align 8
  %call.i.i257 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i258 = getelementptr inbounds %struct.alc_spec, ptr %50, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i258, i32 noundef 0) #13
  %call.i.i.i259 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 108) #13
  %call.i4.i.i260 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %51 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i261 = getelementptr inbounds %struct.alc_spec, ptr %52, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i261) #13
  %call.i5.i262 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and46 = and i32 %call.i4.i.i260, 28
  call void @__sanitizer_cov_trace_const_cmp4(i32 28, i32 %and46)
  %cmp47 = icmp eq i32 %and46, 28
  br label %do.body

sw.bb49:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0293)
  tail call void @msleep(i32 noundef 300) #13
  %53 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %spec1, align 8
  %call.i.i264 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i265 = getelementptr inbounds %struct.alc_spec, ptr %54, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i265, i32 noundef 0) #13
  %call.i.i.i266 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 70) #13
  %call.i4.i.i267 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %55 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i268 = getelementptr inbounds %struct.alc_spec, ptr %56, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i268) #13
  %call.i5.i269 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and51 = and i32 %call.i4.i.i267, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %and51)
  %cmp52 = icmp eq i32 %and51, 112
  br label %do.body

sw.bb54:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_determine_headset_type.coef0688)
  tail call void @msleep(i32 noundef 300) #13
  %57 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %spec1, align 8
  %call.i.i271 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i272 = getelementptr inbounds %struct.alc_spec, ptr %58, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i272, i32 noundef 0) #13
  %call.i.i.i273 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 190) #13
  %call.i4.i.i274 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %59 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i275 = getelementptr inbounds %struct.alc_spec, ptr %60, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i275) #13
  %call.i5.i276 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and56 = and i32 %call.i4.i.i274, 7170
  call void @__sanitizer_cov_trace_const_cmp4(i32 7170, i32 %and56)
  %cmp57 = icmp eq i32 %and56, 7170
  br label %do.body

sw.bb59:                                          ; preds = %if.end.sw.bb59_crit_edge, %if.end.sw.bb59_crit_edge313, %if.end.sw.bb59_crit_edge314, %if.end.sw.bb59_crit_edge315, %if.end.sw.bb59_crit_edge316, %if.end.sw.bb59_crit_edge317
  %call.i277 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 80) #13
  %call.i278 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 1799, i32 noundef 0) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc225_pre_hsmode)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 103, i32 noundef 61440, i32 noundef 4096)
  %61 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %spec1, align 8
  %call.i.i280 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i281 = getelementptr inbounds %struct.alc_spec, ptr %62, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i281, i32 noundef 0) #13
  %call.i.i.i282 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i283 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %63 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i284 = getelementptr inbounds %struct.alc_spec, ptr %64, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i284) #13
  %call.i5.i285 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and63 = and i32 %call.i4.i.i283, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63)
  %tobool64.not = icmp eq i32 %and63, 0
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 69, i32 noundef 64512, i32 noundef 53248)
  %.306 = select i1 %tobool64.not, i32 256, i32 512
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 73, i32 noundef 768, i32 noundef %.306)
  tail call void @msleep(i32 noundef 800) #13
  %65 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %spec1, align 8
  %call.i.i294 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i295 = getelementptr inbounds %struct.alc_spec, ptr %66, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i295, i32 noundef 0) #13
  %call.i.i.i296 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 70) #13
  %call.i4.i.i297 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %67 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %spec1, align 8
  %coef_mutex.i4.i298 = getelementptr inbounds %struct.alc_spec, ptr %68, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i298) #13
  %call.i5.i299 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %is_ctia.1.in = and i32 %call.i4.i.i297, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 240, i32 %is_ctia.1.in)
  %is_ctia.1 = icmp eq i32 %is_ctia.1.in, 240
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 448, i32 noundef 448)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 74, i32 noundef 48, i32 noundef 48)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 103, i32 noundef 61440, i32 noundef 12288)
  %call.i300 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 1799, i32 noundef 64) #13
  tail call void @msleep(i32 noundef 80) #13
  %call.i301 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, i32 noundef 768, i32 noundef 45056) #13
  br label %do.body

sw.bb78:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.body:                                          ; preds = %sw.bb78, %sw.bb59, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb39, %sw.bb21, %sw.bb16, %sw.bb11, %sw.bb2, %sw.bb, %if.end.do.body_crit_edge
  %is_ctia.2.off0 = phi i1 [ false, %if.end.do.body_crit_edge ], [ true, %sw.bb78 ], [ %is_ctia.1, %sw.bb59 ], [ %cmp57, %sw.bb54 ], [ %cmp52, %sw.bb49 ], [ %cmp47, %sw.bb44 ], [ %cmp42, %sw.bb39 ], [ %is_ctia.0, %sw.bb21 ], [ %cmp19, %sw.bb16 ], [ %cmp14, %sw.bb11 ], [ %cmp7, %sw.bb2 ], [ %cmp, %sw.bb ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_determine_headset_type.__UNIQUE_ID_ddebug261, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_determine_headset_type, %if.then84)) #13
          to label %do.end [label %if.then84], !srcloc !2188

if.then84:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %cond = select i1 %is_ctia.2.off0, ptr @.str.662, ptr @.str.663
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_determine_headset_type.__UNIQUE_ID_ddebug261, ptr noundef %codec, ptr noundef nonnull @.str.661, ptr noundef nonnull %cond) #13
  br label %do.end

do.end:                                           ; preds = %if.then84, %do.body
  %cond89 = select i1 %is_ctia.2.off0, i32 1, i32 2
  %current_headset_type = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 19
  %69 = ptrtoint ptr %current_headset_type to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %cond89, ptr %current_headset_type, align 8
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_headset_mode_ctia(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1259)
  switch i32 %1, label %entry.do.body_crit_edge [
    i32 283902549, label %sw.bb
    i32 283902512, label %entry.sw.bb1_crit_edge
    i32 283902518, label %entry.sw.bb1_crit_edge59
    i32 283902550, label %entry.sw.bb1_crit_edge60
    i32 283902516, label %entry.sw.bb2_crit_edge
    i32 283902580, label %entry.sw.bb2_crit_edge61
    i32 283902612, label %entry.sw.bb2_crit_edge62
    i32 283902515, label %entry.sw.bb3_crit_edge
    i32 283902595, label %entry.sw.bb3_crit_edge63
    i32 283902616, label %sw.bb4
    i32 283902598, label %entry.sw.bb5_crit_edge
    i32 283902600, label %entry.sw.bb5_crit_edge64
    i32 283902610, label %sw.bb6
    i32 283902611, label %sw.bb7
    i32 283903592, label %sw.bb8
    i32 283902485, label %entry.sw.bb9_crit_edge
    i32 283902501, label %entry.sw.bb9_crit_edge65
    i32 283902597, label %entry.sw.bb9_crit_edge66
    i32 283902613, label %entry.sw.bb9_crit_edge67
    i32 283902601, label %entry.sw.bb9_crit_edge68
    i32 283902617, label %entry.sw.bb9_crit_edge69
    i32 283904103, label %sw.bb16
  ]

entry.sw.bb9_crit_edge69:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge68:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge67:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge66:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge65:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb5_crit_edge64:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb3_crit_edge63:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb2_crit_edge62:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge61:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb1_crit_edge60:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge59:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0255)
  br label %do.body

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge59, %entry.sw.bb1_crit_edge60
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0256)
  br label %do.body

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge61, %entry.sw.bb2_crit_edge62
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %3 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 54921) #13
  %5 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %do.body

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge63
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0233)
  br label %do.body

sw.bb4:                                           ; preds = %entry
  %spec1.i.i44 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %7 = ptrtoint ptr %spec1.i.i44 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i.i44, align 8
  %call.i.i45 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i46 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i46, i32 noundef 0) #13
  %call.i.i.i47 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 80) #13
  %call.i4.i.i48 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %9 = ptrtoint ptr %spec1.i.i44 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1.i.i44, align 8
  %coef_mutex.i4.i49 = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i49) #13
  %call.i5.i50 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and = and i32 %call.i4.i.i48, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 142, i32 noundef 112, i32 noundef 32)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 79, i32 noundef 64704, i32 noundef 54272)
  tail call void @msleep(i32 noundef 300) #13
  br label %do.body

if.else:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 142, i32 noundef 112, i32 noundef 16)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 79, i32 noundef 64704, i32 noundef 54272)
  tail call void @msleep(i32 noundef 300) #13
  br label %do.body

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge64
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 79, i32 noundef 64704, i32 noundef 54272)
  tail call void @msleep(i32 noundef 300) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0288)
  br label %do.body

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0292)
  br label %do.body

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0293)
  br label %do.body

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0688)
  br label %do.body

sw.bb9:                                           ; preds = %entry.sw.bb9_crit_edge, %entry.sw.bb9_crit_edge65, %entry.sw.bb9_crit_edge66, %entry.sw.bb9_crit_edge67, %entry.sw.bb9_crit_edge68, %entry.sw.bb9_crit_edge69
  %spec1.i.i51 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %11 = ptrtoint ptr %spec1.i.i51 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1.i.i51, align 8
  %call.i.i52 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i53 = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i53, i32 noundef 0) #13
  %call.i.i.i54 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i55 = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 3072, i32 noundef 0) #13
  %13 = ptrtoint ptr %spec1.i.i51 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1.i.i51, align 8
  %coef_mutex.i4.i56 = getelementptr inbounds %struct.alc_spec, ptr %14, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i56) #13
  %call.i5.i57 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %and11 = and i32 %call.i4.i.i55, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.else14, label %if.then13

if.then13:                                        ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0225_2)
  br label %do.body

if.else14:                                        ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_ctia.coef0225_1)
  br label %do.body

sw.bb16:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 5, i32 noundef 16384, i32 noundef 0)
  br label %do.body

do.body:                                          ; preds = %sw.bb16, %if.else14, %if.then13, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %if.else, %if.then, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %entry.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_headset_mode_ctia.__UNIQUE_ID_ddebug259, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_headset_mode_ctia, %if.then21)) #13
          to label %do.end [label %if.then21], !srcloc !2188

if.then21:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_headset_mode_ctia.__UNIQUE_ID_ddebug259, ptr noundef %codec, ptr noundef nonnull @.str.665) #13
  br label %do.end

do.end:                                           ; preds = %if.then21, %do.body
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_headset_mode_omtp(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1260)
  switch i32 %1, label %entry.do.body_crit_edge [
    i32 283902549, label %sw.bb
    i32 283902512, label %entry.sw.bb1_crit_edge
    i32 283902518, label %entry.sw.bb1_crit_edge27
    i32 283902550, label %entry.sw.bb1_crit_edge28
    i32 283902516, label %entry.sw.bb2_crit_edge
    i32 283902580, label %entry.sw.bb2_crit_edge29
    i32 283902612, label %entry.sw.bb2_crit_edge30
    i32 283902515, label %entry.sw.bb3_crit_edge
    i32 283902595, label %entry.sw.bb3_crit_edge31
    i32 283902616, label %sw.bb4
    i32 283902598, label %entry.sw.bb5_crit_edge
    i32 283902600, label %entry.sw.bb5_crit_edge32
    i32 283902610, label %sw.bb6
    i32 283902611, label %sw.bb7
    i32 283903592, label %sw.bb8
    i32 283902485, label %entry.sw.bb9_crit_edge
    i32 283902501, label %entry.sw.bb9_crit_edge33
    i32 283902597, label %entry.sw.bb9_crit_edge34
    i32 283902613, label %entry.sw.bb9_crit_edge35
    i32 283902601, label %entry.sw.bb9_crit_edge36
    i32 283902617, label %entry.sw.bb9_crit_edge37
  ]

entry.sw.bb9_crit_edge37:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge36:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge35:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge34:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge33:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb9_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9

entry.sw.bb5_crit_edge32:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb3_crit_edge31:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb2_crit_edge30:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge29:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb1_crit_edge28:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge27:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0255)
  br label %do.body

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge27, %entry.sw.bb1_crit_edge28
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0256)
  br label %do.body

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge29, %entry.sw.bb2_crit_edge30
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %3 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 59017) #13
  %5 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %do.body

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge31
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0233)
  br label %do.body

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 142, i32 noundef 112, i32 noundef 16)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 79, i32 noundef 64704, i32 noundef 58368)
  tail call void @msleep(i32 noundef 300) #13
  br label %do.body

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge32
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 79, i32 noundef 64704, i32 noundef 58368)
  tail call void @msleep(i32 noundef 300) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0288)
  br label %do.body

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0292)
  br label %do.body

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0293)
  br label %do.body

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0688)
  br label %do.body

sw.bb9:                                           ; preds = %entry.sw.bb9_crit_edge, %entry.sw.bb9_crit_edge33, %entry.sw.bb9_crit_edge34, %entry.sw.bb9_crit_edge35, %entry.sw.bb9_crit_edge36, %entry.sw.bb9_crit_edge37
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_omtp.coef0225)
  br label %do.body

do.body:                                          ; preds = %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %entry.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_headset_mode_omtp.__UNIQUE_ID_ddebug260, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_headset_mode_omtp, %if.then)) #13
          to label %do.end [label %if.then], !srcloc !2188

if.then:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_headset_mode_omtp.__UNIQUE_ID_ddebug260, ptr noundef %codec, ptr noundef nonnull @.str.667) #13
  br label %do.end

do.end:                                           ; preds = %if.then, %do.body
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_headset_mode_mic_in(ptr noundef %codec, i16 noundef zeroext %hp_pin, i16 noundef zeroext %mic_pin) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1261)
  switch i32 %1, label %entry.do.body_crit_edge [
    i32 283902549, label %sw.bb
    i32 283902512, label %entry.sw.bb2_crit_edge
    i32 283902518, label %entry.sw.bb2_crit_edge142
    i32 283902550, label %entry.sw.bb2_crit_edge143
    i32 283902516, label %entry.sw.bb5_crit_edge
    i32 283902580, label %entry.sw.bb5_crit_edge144
    i32 283902612, label %entry.sw.bb5_crit_edge145
    i32 283902515, label %entry.sw.bb8_crit_edge
    i32 283902595, label %entry.sw.bb8_crit_edge146
    i32 283902598, label %entry.sw.bb11_crit_edge
    i32 283902600, label %entry.sw.bb11_crit_edge147
    i32 283902616, label %entry.sw.bb11_crit_edge148
    i32 283902610, label %sw.bb14
    i32 283902611, label %sw.bb16
    i32 283904103, label %sw.bb19
    i32 283902497, label %entry.sw.bb20_crit_edge
    i32 283903586, label %entry.sw.bb20_crit_edge149
    i32 283903592, label %sw.bb23
    i32 283902485, label %entry.sw.bb26_crit_edge
    i32 283902501, label %entry.sw.bb26_crit_edge150
    i32 283902597, label %entry.sw.bb26_crit_edge151
    i32 283902613, label %entry.sw.bb26_crit_edge152
    i32 283902601, label %entry.sw.bb26_crit_edge153
    i32 283902617, label %entry.sw.bb26_crit_edge154
  ]

entry.sw.bb26_crit_edge154:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

entry.sw.bb26_crit_edge153:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

entry.sw.bb26_crit_edge152:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

entry.sw.bb26_crit_edge151:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

entry.sw.bb26_crit_edge150:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

entry.sw.bb26_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

entry.sw.bb20_crit_edge149:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

entry.sw.bb20_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

entry.sw.bb11_crit_edge148:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

entry.sw.bb11_crit_edge147:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

entry.sw.bb11_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

entry.sw.bb8_crit_edge146:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb8

entry.sw.bb8_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb8

entry.sw.bb5_crit_edge145:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb5_crit_edge144:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb2_crit_edge143:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge142:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %3 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 50313) #13
  %5 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0255)
  %call.i88 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge142, %entry.sw.bb2_crit_edge143
  %spec1.i.i89 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %7 = ptrtoint ptr %spec1.i.i89 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i.i89, align 8
  %call.i.i90 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i91 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i91, i32 noundef 0) #13
  %call.i.i.i92 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i93 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 50313) #13
  %9 = ptrtoint ptr %spec1.i.i89 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1.i.i89, align 8
  %coef_mutex.i4.i94 = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i94) #13
  %call.i5.i95 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i96 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0256)
  %call.i97 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge144, %entry.sw.bb5_crit_edge145
  %spec1.i.i98 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %11 = ptrtoint ptr %spec1.i.i98 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %spec1.i.i98, align 8
  %call.i.i99 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i100 = getelementptr inbounds %struct.alc_spec, ptr %12, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i100, i32 noundef 0) #13
  %call.i.i.i101 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i102 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 18057) #13
  %13 = ptrtoint ptr %spec1.i.i98 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1.i.i98, align 8
  %coef_mutex.i4.i103 = getelementptr inbounds %struct.alc_spec, ptr %14, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i103) #13
  %call.i5.i104 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i105 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0274)
  %call.i106 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb8:                                           ; preds = %entry.sw.bb8_crit_edge, %entry.sw.bb8_crit_edge146
  %spec1.i.i107 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %15 = ptrtoint ptr %spec1.i.i107 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spec1.i.i107, align 8
  %call.i.i108 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i109 = getelementptr inbounds %struct.alc_spec, ptr %16, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i109, i32 noundef 0) #13
  %call.i.i.i110 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i111 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 50217) #13
  %17 = ptrtoint ptr %spec1.i.i107 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spec1.i.i107, align 8
  %coef_mutex.i4.i112 = getelementptr inbounds %struct.alc_spec, ptr %18, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i112) #13
  %call.i5.i113 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i114 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0233)
  %call.i115 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb11:                                          ; preds = %entry.sw.bb11_crit_edge, %entry.sw.bb11_crit_edge147, %entry.sw.bb11_crit_edge148
  %call.i116 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0288)
  %call.i117 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb14:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i118 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0292)
  br label %do.body

sw.bb16:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i119 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %19 = ptrtoint ptr %spec1.i.i119 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %spec1.i.i119, align 8
  %call.i.i120 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i121 = getelementptr inbounds %struct.alc_spec, ptr %20, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i121, i32 noundef 0) #13
  %call.i.i.i122 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i123 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 50217) #13
  %21 = ptrtoint ptr %spec1.i.i119 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %spec1.i.i119, align 8
  %coef_mutex.i4.i124 = getelementptr inbounds %struct.alc_spec, ptr %22, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i124) #13
  %call.i5.i125 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i126 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0293)
  %call.i127 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb19:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 5, i32 noundef 0, i32 noundef 16384)
  br label %sw.bb20

sw.bb20:                                          ; preds = %sw.bb19, %entry.sw.bb20_crit_edge, %entry.sw.bb20_crit_edge149
  %call.i128 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  %call.i129 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb23:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i130 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %23 = ptrtoint ptr %spec1.i.i130 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %spec1.i.i130, align 8
  %call.i.i131 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i132 = getelementptr inbounds %struct.alc_spec, ptr %24, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i132, i32 noundef 0) #13
  %call.i.i.i133 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 17) #13
  %call.i4.i.i134 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 1) #13
  %25 = ptrtoint ptr %spec1.i.i130 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %spec1.i.i130, align 8
  %coef_mutex.i4.i135 = getelementptr inbounds %struct.alc_spec, ptr %26, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i135) #13
  %call.i5.i136 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %call.i137 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0688)
  %call.i138 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

sw.bb26:                                          ; preds = %entry.sw.bb26_crit_edge, %entry.sw.bb26_crit_edge150, %entry.sw.bb26_crit_edge151, %entry.sw.bb26_crit_edge152, %entry.sw.bb26_crit_edge153, %entry.sw.bb26_crit_edge154
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc225_pre_hsmode)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 69, i32 noundef 64512, i32 noundef 50176)
  %call.i139 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %hp_pin, i32 noundef 0, i1 noundef zeroext true) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_mic_in.coef0225)
  %call.i140 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %mic_pin, i32 noundef 33, i1 noundef zeroext true) #13
  br label %do.body

do.body:                                          ; preds = %sw.bb26, %sw.bb23, %sw.bb20, %sw.bb16, %sw.bb14, %sw.bb11, %sw.bb8, %sw.bb5, %sw.bb2, %sw.bb, %entry.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_headset_mode_mic_in.__UNIQUE_ID_ddebug257, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_headset_mode_mic_in, %if.then)) #13
          to label %do.end [label %if.then], !srcloc !2188

if.then:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_headset_mode_mic_in.__UNIQUE_ID_ddebug257, ptr noundef %codec, ptr noundef nonnull @.str.669) #13
  br label %do.end

do.end:                                           ; preds = %if.then, %do.body
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_headset_mode_default(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1262)
  switch i32 %1, label %entry.do.body_crit_edge [
    i32 283902485, label %entry.sw.bb_crit_edge
    i32 283902501, label %entry.sw.bb_crit_edge35
    i32 283902597, label %entry.sw.bb_crit_edge36
    i32 283902613, label %entry.sw.bb_crit_edge37
    i32 283902601, label %entry.sw.bb_crit_edge38
    i32 283902617, label %entry.sw.bb_crit_edge39
    i32 283902549, label %sw.bb1
    i32 283902512, label %entry.sw.bb2_crit_edge
    i32 283902518, label %entry.sw.bb2_crit_edge40
    i32 283902550, label %entry.sw.bb2_crit_edge41
    i32 283902516, label %entry.sw.bb3_crit_edge
    i32 283902580, label %entry.sw.bb3_crit_edge42
    i32 283902612, label %entry.sw.bb3_crit_edge43
    i32 283902515, label %entry.sw.bb4_crit_edge
    i32 283902595, label %entry.sw.bb4_crit_edge44
    i32 283902598, label %entry.sw.bb5_crit_edge
    i32 283902600, label %entry.sw.bb5_crit_edge45
    i32 283902616, label %entry.sw.bb5_crit_edge46
    i32 283902610, label %sw.bb6
    i32 283902611, label %sw.bb7
    i32 283903592, label %sw.bb8
    i32 283904103, label %sw.bb9
  ]

entry.sw.bb5_crit_edge46:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb5_crit_edge45:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb5

entry.sw.bb4_crit_edge44:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb4

entry.sw.bb3_crit_edge43:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb3_crit_edge42:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

entry.sw.bb2_crit_edge41:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge40:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2

entry.sw.bb_crit_edge39:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge38:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge37:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge36:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge35:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge35, %entry.sw.bb_crit_edge36, %entry.sw.bb_crit_edge37, %entry.sw.bb_crit_edge38, %entry.sw.bb_crit_edge39
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc225_pre_hsmode)
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0225)
  br label %do.body

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0255)
  br label %do.body

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge40, %entry.sw.bb2_crit_edge41
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %3 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 27) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 3659) #13
  %5 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  %7 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i28 = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i29 = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i29, i32 noundef 0) #13
  %call.i.i.i30 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 69) #13
  %call.i4.i.i31 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 49289) #13
  %9 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i32 = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i32) #13
  %call.i5.i33 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call void @msleep(i32 noundef 50) #13
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0256)
  br label %do.body

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge42, %entry.sw.bb3_crit_edge43
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0274)
  br label %do.body

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge44
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0233)
  br label %do.body

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge45, %entry.sw.bb5_crit_edge46
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0288)
  br label %do.body

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0292)
  br label %do.body

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0293)
  br label %do.body

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc_headset_mode_default.coef0688)
  br label %do.body

sw.bb9:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 87, i32 noundef 5, i32 noundef 16384, i32 noundef 0)
  br label %do.body

do.body:                                          ; preds = %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %entry.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_headset_mode_default.__UNIQUE_ID_ddebug258, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_headset_mode_default, %if.then)) #13
          to label %do.end [label %if.then], !srcloc !2188

if.then:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_headset_mode_default.__UNIQUE_ID_ddebug258, ptr noundef %codec, ptr noundef nonnull @.str.671) #13
  br label %do.end

do.end:                                           ; preds = %if.then, %do.body
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc269_x101_hp_automute_hook(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @msleep(i32 noundef 200) #13
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %bf.load)
  %tobool.not = icmp sgt i64 %bf.load, -1
  %cond = select i1 %tobool.not, i32 0, i32 36
  tail call void @msleep(i32 noundef 100) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef 0, i32 noundef 1799, i32 noundef %cond) #13
  tail call void @msleep(i32 noundef 500) #13
  %call.i7 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef 0, i32 noundef 1799, i32 noundef %cond) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_jack_set_gating_jack(ptr noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc283_hp_automute_hook(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @msleep(i32 noundef 200) #13
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %bf.load)
  %tobool.not = icmp sgt i64 %bf.load, -1
  %cond = select i1 %tobool.not, i32 0, i32 36
  tail call void @msleep(i32 noundef 600) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 0, i32 noundef 1799, i32 noundef %cond) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_apply_pincfgs(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_tx300_automute(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @snd_hda_gen_update_outputs(ptr noundef %codec) #13
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %mute_bits = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 60
  %2 = ptrtoint ptr %mute_bits to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %mute_bits, align 8
  %or = or i64 %3, 1048576
  store i64 %or, ptr %mute_bits, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_hda_find_mixer_ctl(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_override_conn_list(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc255_set_default_jack_type(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1263)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 283902549, label %entry.sw.epilog.sink.split_crit_edge
    i32 283902512, label %entry.sw.bb1_crit_edge
    i32 283902518, label %entry.sw.bb1_crit_edge4
    i32 283902550, label %entry.sw.bb1_crit_edge5
  ]

entry.sw.bb1_crit_edge5:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge4:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge4, %entry.sw.bb1_crit_edge5
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb1, %entry.sw.epilog.sink.split_crit_edge
  %alc255_set_default_jack_type.alc256fw.sink = phi ptr [ @alc255_set_default_jack_type.alc256fw, %sw.bb1 ], [ @alc255_set_default_jack_type.alc255fw, %entry.sw.epilog.sink.split_crit_edge ]
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull %alc255_set_default_jack_type.alc256fw.sink)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  tail call void @msleep(i32 noundef 30) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc_register_micmute_input_device(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %call = tail call ptr @input_allocate_device() #13
  %kb_dev = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 30
  %2 = ptrtoint ptr %kb_dev to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call, ptr %kb_dev, align 8
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.675) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %alc_mute_keycode_map = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 31
  %3 = ptrtoint ptr %alc_mute_keycode_map to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 -8, ptr %alc_mute_keycode_map, align 4
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @.str.679, ptr %call, align 8
  %5 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %kb_dev, align 8
  %evbit = getelementptr inbounds %struct.input_dev, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %evbit to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 2, ptr %evbit, align 8
  %8 = load ptr, ptr %kb_dev, align 8
  %keycodesize = getelementptr inbounds %struct.input_dev, ptr %8, i32 0, i32 16
  %9 = ptrtoint ptr %keycodesize to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %keycodesize, align 8
  %10 = load ptr, ptr %kb_dev, align 8
  %keycodemax = getelementptr inbounds %struct.input_dev, ptr %10, i32 0, i32 15
  %11 = ptrtoint ptr %keycodemax to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %keycodemax, align 4
  %12 = load ptr, ptr %kb_dev, align 8
  %keycode = getelementptr inbounds %struct.input_dev, ptr %12, i32 0, i32 17
  %13 = ptrtoint ptr %keycode to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %alc_mute_keycode_map, ptr %keycode, align 4
  %14 = load i8, ptr %alc_mute_keycode_map, align 1
  %conv = zext i8 %14 to i32
  %15 = load ptr, ptr %kb_dev, align 8
  %keybit = getelementptr inbounds %struct.input_dev, ptr %15, i32 0, i32 6
  tail call void @_set_bit(i32 noundef %conv, ptr noundef %keybit) #13
  %16 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %kb_dev, align 8
  %call15 = tail call i32 @input_register_device(ptr noundef %17) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end.cleanup_crit_edge, label %do.end20

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end20:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %codec, ptr noundef nonnull @.str.681) #17
  %18 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %kb_dev, align 8
  tail call void @input_free_device(ptr noundef %19) #13
  %20 = ptrtoint ptr %kb_dev to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %kb_dev, align 8
  br label %cleanup

cleanup:                                          ; preds = %do.end20, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -12, %do.end20 ], [ -12, %do.end ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gpio2_mic_hotkey_event(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %event) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %kb_dev = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 30
  %2 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %kb_dev, align 8
  %alc_mute_keycode_map = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 31
  %4 = ptrtoint ptr %alc_mute_keycode_map to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %alc_mute_keycode_map, align 4
  %conv = zext i8 %5 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef %conv, i32 noundef 1) #13
  %6 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %kb_dev, align 8
  tail call void @input_event(ptr noundef %7, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  %8 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %kb_dev, align 8
  %10 = ptrtoint ptr %alc_mute_keycode_map to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %alc_mute_keycode_map, align 4
  %conv6 = zext i8 %11 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 1, i32 noundef %conv6, i32 noundef 0) #13
  %12 = ptrtoint ptr %kb_dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %kb_dev, align 8
  tail call void @input_event(ptr noundef %13, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_unregister_device(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @input_allocate_device() local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @input_register_device(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_free_device(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_regmap_write_raw(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_event(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc280_hp_gpio4_automute_hook(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  %mute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %mute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mute_led_polarity, align 8
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %4 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %bf.load)
  %tobool.not = icmp sgt i64 %bf.load, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  %lnot4.i = xor i1 %tobool.not.i, %tobool.not
  %5 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_data.i.i, align 8
  %and.i.i = and i32 %8, -17
  %masksel = select i1 %lnot4.i, i32 16, i32 0
  %storemerge.i.i = or i32 %and.i.i, %masksel
  store i32 %storemerge.i.i, ptr %gpio_data.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %storemerge.i.i)
  %cmp.not.i.i = icmp eq i32 %8, %storemerge.i.i
  br i1 %cmp.not.i.i, label %entry.alc_update_gpio_led.exit_crit_edge, label %if.then5.i.i

entry.alc_update_gpio_led.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_led.exit

if.then5.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_data.i.i.i, align 8
  %call.i.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %12) #13
  br label %alc_update_gpio_led.exit

alc_update_gpio_led.exit:                         ; preds = %if.then5.i.i, %entry.alc_update_gpio_led.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc288_update_headset_jack_cb(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  tail call void @alc_update_headset_mode(ptr noundef %codec) #13
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  %3 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1, align 8
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gpio_data.i, align 8
  %and.i = and i32 %6, -65
  %7 = lshr i64 %bf.load, 57
  %8 = trunc i64 %7 to i32
  %9 = and i32 %8, 64
  %storemerge.i = or i32 %and.i, %9
  store i32 %storemerge.i, ptr %gpio_data.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %storemerge.i)
  %cmp.not.i = icmp eq i32 %6, %storemerge.i
  br i1 %cmp.not.i, label %entry.alc_update_gpio_data.exit_crit_edge, label %if.then5.i

entry.alc_update_gpio_data.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_data.exit

if.then5.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %10 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gpio_data.i.i, align 8
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %13) #13
  br label %alc_update_gpio_data.exit

alc_update_gpio_data.exit:                        ; preds = %if.then5.i, %entry.alc_update_gpio_data.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_codec_set_pin_target(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_shutup_dell_xps13(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %2 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.alc_get_hp_pin.exit_crit_edge

entry.alc_get_hp_pin.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.end.i:                                         ; preds = %entry
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %4 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.i = icmp eq i32 %5, 2
  br i1 %cmp.i, label %if.then7.i, label %if.end.i.alc_get_hp_pin.exit_crit_edge

if.end.i.alc_get_hp_pin.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_get_hp_pin.exit

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %line_out_pins.i, align 4
  br label %alc_get_hp_pin.exit

alc_get_hp_pin.exit:                              ; preds = %if.then7.i, %if.end.i.alc_get_hp_pin.exit_crit_edge, %entry.alc_get_hp_pin.exit_crit_edge
  %retval.0.i = phi i16 [ %7, %if.then7.i ], [ %3, %entry.alc_get_hp_pin.exit_crit_edge ], [ 0, %if.end.i.alc_get_hp_pin.exit_crit_edge ]
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %retval.0.i, i32 noundef 0, i32 noundef 768, i32 noundef 45184) #13
  tail call void @msleep(i32 noundef 20) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alc_combo_jack_hp_jd_restart(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1264)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 283902580, label %entry.sw.epilog.sink.split_crit_edge
    i32 283902612, label %entry.sw.epilog.sink.split_crit_edge7
    i32 283902501, label %entry.sw.epilog.sink.split_crit_edge8
    i32 283902613, label %entry.sw.epilog.sink.split_crit_edge9
    i32 283902617, label %entry.sw.epilog.sink.split_crit_edge10
    i32 283902512, label %entry.sw.bb1_crit_edge
    i32 283902517, label %entry.sw.bb1_crit_edge11
    i32 283902518, label %entry.sw.bb1_crit_edge12
    i32 283902549, label %entry.sw.bb1_crit_edge13
    i32 283902550, label %entry.sw.bb1_crit_edge14
  ]

entry.sw.bb1_crit_edge14:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge13:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge12:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge11:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb1

entry.sw.epilog.sink.split_crit_edge10:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge9:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge8:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge7:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge11, %entry.sw.bb1_crit_edge12, %entry.sw.bb1_crit_edge13, %entry.sw.bb1_crit_edge14
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb1, %entry.sw.epilog.sink.split_crit_edge, %entry.sw.epilog.sink.split_crit_edge7, %entry.sw.epilog.sink.split_crit_edge8, %entry.sw.epilog.sink.split_crit_edge9, %entry.sw.epilog.sink.split_crit_edge10
  %.sink6 = phi i32 [ 27, %sw.bb1 ], [ 74, %entry.sw.epilog.sink.split_crit_edge ], [ 74, %entry.sw.epilog.sink.split_crit_edge7 ], [ 74, %entry.sw.epilog.sink.split_crit_edge8 ], [ 74, %entry.sw.epilog.sink.split_crit_edge9 ], [ 74, %entry.sw.epilog.sink.split_crit_edge10 ]
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef %.sink6, i32 noundef 32768, i32 noundef 32768)
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef %.sink6, i32 noundef 32768, i32 noundef 0)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_headset_btn_callback(ptr noundef %codec, ptr nocapture noundef readonly %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %unsol_res = getelementptr inbounds %struct.hda_jack_callback, ptr %jack, i32 0, i32 4
  %0 = ptrtoint ptr %unsol_res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %unsol_res, align 4
  %and = and i32 %1, 57344
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 16384
  %and2 = and i32 %1, 66304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %or5 = or i32 %spec.select, 8192
  %report.1 = select i1 %tobool3.not, i32 %spec.select, i32 %or5
  %and8 = and i32 %1, 58720256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  %or11 = or i32 %report.1, 4096
  %report.2 = select i1 %tobool9.not, i32 %report.1, i32 %or11
  %and14 = and i32 %1, 7168
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  %or17 = or i32 %report.2, 2048
  %report.3 = select i1 %tobool15.not, i32 %report.2, i32 %or17
  %2 = ptrtoint ptr %jack to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %jack, align 4
  tail call void @snd_hda_jack_set_button_state(ptr noundef %codec, i16 noundef zeroext %3, i32 noundef %report.3) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_jack_bind_keymap(ptr noundef, i16 noundef zeroext, ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_hda_jack_set_button_state(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_jack_add_kctl_mst(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef, i1 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_jack_detectable(ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc294_gx502_toggle_output(ptr noundef %codec, ptr nocapture noundef readnone %cb) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp = icmp eq i32 %call.i, 1
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 16) #13
  %. = select i1 %cmp, i32 35360, i32 2592
  %call.i4.i.i7 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %.) #13
  %2 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i8 = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i8) #13
  %call.i5.i9 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc294_gu502_toggle_output(ptr noundef %codec, ptr nocapture noundef readnone %cb) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp = icmp eq i32 %call.i, 1
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 16) #13
  %. = select i1 %cmp, i32 33824, i32 2592
  %call.i4.i.i7 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef %.) #13
  %2 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i8 = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i8) #13
  %call.i5.i9 = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @coef_mute_led_set(ptr nocapture noundef readonly %led_cdev, i32 noundef %brightness) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.led_classdev, ptr %led_cdev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %mute_led_coef = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 13
  %mute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 7
  %6 = ptrtoint ptr %mute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mute_led_polarity, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool = icmp ne i32 %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %brightness)
  %tobool2 = icmp ne i32 %brightness, 0
  %spec.select.i = xor i1 %tobool2, %tobool
  %8 = ptrtoint ptr %mute_led_coef to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mute_led_coef, align 4
  %mask.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 13, i32 1
  %10 = ptrtoint ptr %mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mask.i, align 4
  %on5.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 13, i32 2
  %off.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 13, i32 3
  %cond.in.i = select i1 %spec.select.i, ptr %on5.i, ptr %off.i
  %12 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %cond.i = load i32, ptr %cond.in.i, align 4
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %3, i16 noundef zeroext 32, i32 noundef %9, i32 noundef %11, i32 noundef %cond.i) #13
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @coef_micmute_led_set(ptr nocapture noundef readonly %led_cdev, i32 noundef %brightness) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.led_classdev, ptr %led_cdev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec1, align 8
  %mic_led_coef = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 14
  %micmute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %micmute_led_polarity to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %micmute_led_polarity, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool = icmp ne i32 %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %brightness)
  %tobool2 = icmp ne i32 %brightness, 0
  %spec.select.i = xor i1 %tobool2, %tobool
  %8 = ptrtoint ptr %mic_led_coef to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mic_led_coef, align 4
  %mask.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 14, i32 1
  %10 = ptrtoint ptr %mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mask.i, align 4
  %on5.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 14, i32 2
  %off.i = getelementptr inbounds %struct.alc_spec, ptr %5, i32 0, i32 14, i32 3
  %cond.in.i = select i1 %spec.select.i, ptr %on5.i, ptr %off.i
  %12 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %cond.i = load i32, ptr %cond.in.i, align 4
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %3, i16 noundef zeroext 32, i32 noundef %9, i32 noundef %11, i32 noundef %cond.i) #13
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc274_hp_envy_pcm_hook(ptr nocapture noundef readnone %hinfo, ptr noundef %codec, ptr nocapture noundef readnone %substream, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1265)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1.i, align 8
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 5
  %3 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gpio_data.i, align 8
  %or.i = or i32 %4, 4
  store i32 %or.i, ptr %gpio_data.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %or.i)
  %cmp.not.i = icmp eq i32 %4, %or.i
  br i1 %cmp.not.i, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.sw.epilog.sink.split_crit_edge

sw.bb.sw.epilog.sink.split_crit_edge:             ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %spec1.i3 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %5 = ptrtoint ptr %spec1.i3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1.i3, align 8
  %gpio_data.i4 = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %gpio_data.i4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_data.i4, align 8
  %and.i5 = and i32 %8, -5
  store i32 %and.i5, ptr %gpio_data.i4, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %and.i5)
  %cmp.not.i7 = icmp eq i32 %8, %and.i5
  br i1 %cmp.not.i7, label %sw.bb1.sw.epilog_crit_edge, label %sw.bb1.sw.epilog.sink.split_crit_edge

sw.bb1.sw.epilog.sink.split_crit_edge:            ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

sw.bb1.sw.epilog_crit_edge:                       ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.epilog.sink.split:                             ; preds = %sw.bb1.sw.epilog.sink.split_crit_edge, %sw.bb.sw.epilog.sink.split_crit_edge
  %spec1.i3.sink = phi ptr [ %spec1.i, %sw.bb.sw.epilog.sink.split_crit_edge ], [ %spec1.i3, %sw.bb1.sw.epilog.sink.split_crit_edge ]
  %9 = ptrtoint ptr %spec1.i3.sink to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %spec1.i3.sink, align 8
  %gpio_data.i.i8 = getelementptr inbounds %struct.alc_spec, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %gpio_data.i.i8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_data.i.i8, align 8
  %call.i.i.i9 = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %12) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %sw.bb1.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_add_verbs(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @comp_match_dev_name(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %data) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %0 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.dev_name.exit_crit_edge

entry.dev_name.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %dev_name.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %entry.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %if.end.i ], [ %1, %entry.dev_name.exit_crit_edge ]
  %call1 = tail call i32 @strcmp(ptr noundef %retval.0.i, ptr noundef %data) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp eq i32 %call1, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @component_master_add_with_match(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc287_legion_16achg6_playback_hook(ptr nocapture noundef readnone %hinfo, ptr nocapture noundef readonly %cdc, ptr nocapture noundef readnone %sub, i32 noundef %action) #2 align 64 {
entry:
  %rx_slot = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %cdc, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rx_slot) #13
  %2 = ptrtoint ptr %rx_slot to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %rx_slot, align 4, !annotation !2189
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cond = icmp eq i32 %action, 1
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %3 = ptrtoint ptr %rx_slot to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %rx_slot, align 4
  %name1.i = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 0, i32 1
  %call.i = tail call i32 @strcmp(ptr noundef %name1.i, ptr noundef nonnull dereferenceable(30) @.str.695) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2.i = icmp eq i32 %call.i, 0
  br i1 %cmp2.i, label %sw.bb.if.then_crit_edge, label %for.inc.i

sw.bb.if.then_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

for.inc.i:                                        ; preds = %sw.bb
  %name1.1.i = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 1, i32 1
  %call.1.i = tail call i32 @strcmp(ptr noundef %name1.1.i, ptr noundef nonnull dereferenceable(30) @.str.695) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1.i)
  %cmp2.1.i = icmp eq i32 %call.1.i, 0
  br i1 %cmp2.1.i, label %for.inc.i.if.then_crit_edge, label %for.inc.1.i

for.inc.i.if.then_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

for.inc.1.i:                                      ; preds = %for.inc.i
  %name1.2.i = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 2, i32 1
  %call.2.i = tail call i32 @strcmp(ptr noundef %name1.2.i, ptr noundef nonnull dereferenceable(30) @.str.695) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.2.i)
  %cmp2.2.i = icmp eq i32 %call.2.i, 0
  br i1 %cmp2.2.i, label %for.inc.1.i.if.then_crit_edge, label %for.inc.2.i

for.inc.1.i.if.then_crit_edge:                    ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

for.inc.2.i:                                      ; preds = %for.inc.1.i
  %name1.3.i = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 3, i32 1
  %call.3.i = tail call i32 @strcmp(ptr noundef %name1.3.i, ptr noundef nonnull dereferenceable(30) @.str.695) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.3.i)
  %cmp2.3.i = icmp eq i32 %call.3.i, 0
  br i1 %cmp2.3.i, label %for.inc.2.i.if.then_crit_edge, label %for.inc.2.i.if.end_crit_edge

for.inc.2.i.if.end_crit_edge:                     ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.inc.2.i.if.then_crit_edge:                    ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then:                                          ; preds = %for.inc.2.i.if.then_crit_edge, %for.inc.1.i.if.then_crit_edge, %for.inc.i.if.then_crit_edge, %sw.bb.if.then_crit_edge
  %retval.0.i.ph = phi i32 [ 2, %for.inc.1.i.if.then_crit_edge ], [ 1, %for.inc.i.if.then_crit_edge ], [ 0, %sw.bb.if.then_crit_edge ], [ 3, %for.inc.2.i.if.then_crit_edge ]
  %arrayidx = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 %retval.0.i.ph
  %set_channel_map = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 %retval.0.i.ph, i32 3
  %4 = ptrtoint ptr %set_channel_map to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %set_channel_map, align 4
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %call4 = call i32 %5(ptr noundef %7, i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull %rx_slot) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %for.inc.2.i.if.end_crit_edge
  %8 = ptrtoint ptr %rx_slot to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %rx_slot, align 4
  %call.i29 = call i32 @strcmp(ptr noundef %name1.i, ptr noundef nonnull dereferenceable(30) @.str.696) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i29)
  %cmp2.i30 = icmp eq i32 %call.i29, 0
  br i1 %cmp2.i30, label %if.end.if.then7_crit_edge, label %for.inc.i34

if.end.if.then7_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

for.inc.i34:                                      ; preds = %if.end
  %name1.1.i31 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 1, i32 1
  %call.1.i32 = call i32 @strcmp(ptr noundef %name1.1.i31, ptr noundef nonnull dereferenceable(30) @.str.696) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1.i32)
  %cmp2.1.i33 = icmp eq i32 %call.1.i32, 0
  br i1 %cmp2.1.i33, label %for.inc.i34.if.then7_crit_edge, label %for.inc.1.i38

for.inc.i34.if.then7_crit_edge:                   ; preds = %for.inc.i34
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

for.inc.1.i38:                                    ; preds = %for.inc.i34
  %name1.2.i35 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 2, i32 1
  %call.2.i36 = call i32 @strcmp(ptr noundef %name1.2.i35, ptr noundef nonnull dereferenceable(30) @.str.696) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.2.i36)
  %cmp2.2.i37 = icmp eq i32 %call.2.i36, 0
  br i1 %cmp2.2.i37, label %for.inc.1.i38.if.then7_crit_edge, label %for.inc.2.i43

for.inc.1.i38.if.then7_crit_edge:                 ; preds = %for.inc.1.i38
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

for.inc.2.i43:                                    ; preds = %for.inc.1.i38
  %name1.3.i39 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 3, i32 1
  %call.3.i40 = call i32 @strcmp(ptr noundef %name1.3.i39, ptr noundef nonnull dereferenceable(30) @.str.696) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.3.i40)
  %cmp2.3.i41 = icmp eq i32 %call.3.i40, 0
  br i1 %cmp2.3.i41, label %for.inc.2.i43.if.then7_crit_edge, label %for.inc.2.i43.sw.epilog_crit_edge

for.inc.2.i43.sw.epilog_crit_edge:                ; preds = %for.inc.2.i43
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.inc.2.i43.if.then7_crit_edge:                 ; preds = %for.inc.2.i43
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

if.then7:                                         ; preds = %for.inc.2.i43.if.then7_crit_edge, %for.inc.1.i38.if.then7_crit_edge, %for.inc.i34.if.then7_crit_edge, %if.end.if.then7_crit_edge
  %retval.0.i44.ph = phi i32 [ 2, %for.inc.1.i38.if.then7_crit_edge ], [ 1, %for.inc.i34.if.then7_crit_edge ], [ 0, %if.end.if.then7_crit_edge ], [ 3, %for.inc.2.i43.if.then7_crit_edge ]
  %arrayidx9 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 %retval.0.i44.ph
  %set_channel_map10 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 %retval.0.i44.ph, i32 3
  %9 = ptrtoint ptr %set_channel_map10 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %set_channel_map10, align 4
  %11 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx9, align 4
  %call14 = call i32 %10(ptr noundef %12, i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull %rx_slot) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then7, %for.inc.2.i43.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %13 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %spec1, align 8
  %arrayidx.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 0
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %sw.epilog.for.inc.i46_crit_edge, label %if.then.i

sw.epilog.for.inc.i46_crit_edge:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i46

if.then.i:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 0, i32 2
  %17 = ptrtoint ptr %playback_hook.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %playback_hook.i, align 4
  call void %18(ptr noundef nonnull %16, i32 noundef %action) #13
  br label %for.inc.i46

for.inc.i46:                                      ; preds = %if.then.i, %sw.epilog.for.inc.i46_crit_edge
  %arrayidx.1.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 1
  %19 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx.1.i, align 4
  %tobool.not.1.i = icmp eq ptr %20, null
  br i1 %tobool.not.1.i, label %for.inc.i46.for.inc.1.i47_crit_edge, label %if.then.1.i

for.inc.i46.for.inc.1.i47_crit_edge:              ; preds = %for.inc.i46
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.1.i47

if.then.1.i:                                      ; preds = %for.inc.i46
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.1.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 1, i32 2
  %21 = ptrtoint ptr %playback_hook.1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %playback_hook.1.i, align 4
  call void %22(ptr noundef nonnull %20, i32 noundef %action) #13
  br label %for.inc.1.i47

for.inc.1.i47:                                    ; preds = %if.then.1.i, %for.inc.i46.for.inc.1.i47_crit_edge
  %arrayidx.2.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 2
  %23 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx.2.i, align 4
  %tobool.not.2.i = icmp eq ptr %24, null
  br i1 %tobool.not.2.i, label %for.inc.1.i47.for.inc.2.i48_crit_edge, label %if.then.2.i

for.inc.1.i47.for.inc.2.i48_crit_edge:            ; preds = %for.inc.1.i47
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.2.i48

if.then.2.i:                                      ; preds = %for.inc.1.i47
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.2.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 2, i32 2
  %25 = ptrtoint ptr %playback_hook.2.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %playback_hook.2.i, align 4
  call void %26(ptr noundef nonnull %24, i32 noundef %action) #13
  br label %for.inc.2.i48

for.inc.2.i48:                                    ; preds = %if.then.2.i, %for.inc.1.i47.for.inc.2.i48_crit_edge
  %arrayidx.3.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 3
  %27 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx.3.i, align 4
  %tobool.not.3.i = icmp eq ptr %28, null
  br i1 %tobool.not.3.i, label %for.inc.2.i48.comp_generic_playback_hook.exit_crit_edge, label %if.then.3.i

for.inc.2.i48.comp_generic_playback_hook.exit_crit_edge: ; preds = %for.inc.2.i48
  call void @__sanitizer_cov_trace_pc() #15
  br label %comp_generic_playback_hook.exit

if.then.3.i:                                      ; preds = %for.inc.2.i48
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.3.i = getelementptr %struct.alc_spec, ptr %14, i32 0, i32 33, i32 3, i32 2
  %29 = ptrtoint ptr %playback_hook.3.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %playback_hook.3.i, align 4
  call void %30(ptr noundef nonnull %28, i32 noundef %action) #13
  br label %comp_generic_playback_hook.exit

comp_generic_playback_hook.exit:                  ; preds = %if.then.3.i, %for.inc.2.i48.comp_generic_playback_hook.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rx_slot) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @component_match_add_release(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @comp_bind(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %comps = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 33
  %call = tail call i32 @component_bind_all(ptr noundef %dev, ptr noundef %comps) #13
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @comp_unbind(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %comps = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 33
  tail call void @component_unbind_all(ptr noundef %dev, ptr noundef %comps) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @component_bind_all(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @component_unbind_all(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @comp_generic_playback_hook(ptr nocapture noundef readnone %hinfo, ptr nocapture noundef readonly %cdc, ptr nocapture noundef readnone %sub, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %cdc, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %arrayidx = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 0
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.for.inc_crit_edge, label %if.then

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 0, i32 2
  %4 = ptrtoint ptr %playback_hook to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %playback_hook, align 4
  tail call void %5(ptr noundef nonnull %3, i32 noundef %action) #13
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry.for.inc_crit_edge
  %arrayidx.1 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.1, align 4
  %tobool.not.1 = icmp eq ptr %7, null
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.1 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 1, i32 2
  %8 = ptrtoint ptr %playback_hook.1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %playback_hook.1, align 4
  tail call void %9(ptr noundef nonnull %7, i32 noundef %action) #13
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc.for.inc.1_crit_edge
  %arrayidx.2 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 2
  %10 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.2, align 4
  %tobool.not.2 = icmp eq ptr %11, null
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.2

if.then.2:                                        ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.2 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 2, i32 2
  %12 = ptrtoint ptr %playback_hook.2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %playback_hook.2, align 4
  tail call void %13(ptr noundef nonnull %11, i32 noundef %action) #13
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1.for.inc.2_crit_edge
  %arrayidx.3 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 3
  %14 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.3, align 4
  %tobool.not.3 = icmp eq ptr %15, null
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.3

if.then.3:                                        ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #15
  %playback_hook.3 = getelementptr %struct.alc_spec, ptr %1, i32 0, i32 33, i32 3, i32 2
  %16 = ptrtoint ptr %playback_hook.3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %playback_hook.3, align 4
  tail call void %17(ptr noundef nonnull %15, i32 noundef %action) #13
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2.for.inc.3_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kasprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_pci_quirk_lookup(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_parse_pin_defcfg(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_gen_parse_auto_config(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr nocapture noundef readonly %ports) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %fixup = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1, i32 5
  %2 = ptrtoint ptr %fixup to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %fixup, align 8
  %3 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end4, label %if.then

if.then:                                          ; preds = %entry
  %cdefine = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %cdefine to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cdefine, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp = icmp eq i32 %5, 2
  br i1 %cmp, label %if.then.cleanup101_crit_edge, label %if.then.do.body51_crit_edge

if.then.do.body51_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body51

if.then.cleanup101_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

if.end4:                                          ; preds = %entry
  %bus = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 1
  %6 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bus, align 8
  %pci = getelementptr inbounds %struct.hda_bus, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %pci to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pci, align 4
  %tobool5.not = icmp eq ptr %9, null
  br i1 %tobool5.not, label %if.end4.if.end14_crit_edge, label %land.lhs.true

if.end4.if.end14_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

land.lhs.true:                                    ; preds = %if.end4
  %subsystem_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 8
  %10 = ptrtoint ptr %subsystem_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %subsystem_id, align 4
  %and = and i32 %11, 65535
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 10
  %12 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %subsystem_device, align 2
  %14 = trunc i32 %11 to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %14)
  %cmp8.not = icmp eq i16 %13, %14
  %and11 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  %or.cond = or i1 %cmp8.not, %tobool12.not
  br i1 %or.cond, label %land.lhs.true.if.end14_crit_edge, label %land.lhs.true.do.body51_crit_edge

land.lhs.true.do.body51_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body51

land.lhs.true.if.end14_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.end14:                                         ; preds = %land.lhs.true.if.end14_crit_edge, %if.end4.if.end14_crit_edge
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %15 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vendor_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 283902560, i32 %16)
  %cmp16 = icmp eq i32 %16, 283902560
  %spec.store.select = select i1 %cmp16, i32 23, i32 29
  %conv20 = trunc i32 %spec.store.select to i16
  %call = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext %conv20) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_subsystem_id.__UNIQUE_ID_ddebug252, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_subsystem_id, %if.then26)) #13
          to label %do.end [label %if.then26], !srcloc !2188

if.then26:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_subsystem_id.__UNIQUE_ID_ddebug252, ptr noundef %codec, ptr noundef nonnull @.str.831, i32 noundef %call, i32 noundef %spec.store.select) #13
  br label %do.end

do.end:                                           ; preds = %if.then26, %if.end14
  %17 = and i32 %call, -1073741823
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741825, i32 %17)
  %18 = icmp eq i32 %17, 1073741825
  br i1 %18, label %for.body.preheader, label %do.end.cleanup101_crit_edge

do.end.cleanup101_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

for.body.preheader:                               ; preds = %do.end
  %19 = lshr i32 %call, 1
  %20 = and i32 %19, 1
  %21 = lshr i32 %call, 2
  %22 = and i32 %21, 1
  %spec.select.1 = add nuw nsw i32 %22, %20
  %23 = lshr i32 %call, 3
  %24 = and i32 %23, 1
  %spec.select.2 = add nuw nsw i32 %24, %spec.select.1
  %25 = lshr i32 %call, 4
  %26 = and i32 %25, 1
  %spec.select.3 = add nuw nsw i32 %26, %spec.select.2
  %27 = lshr i32 %call, 5
  %28 = and i32 %27, 1
  %spec.select.4 = add nuw nsw i32 %28, %spec.select.3
  %29 = lshr i32 %call, 6
  %30 = and i32 %29, 1
  %spec.select.5 = add nuw nsw i32 %30, %spec.select.4
  %31 = lshr i32 %call, 7
  %32 = and i32 %31, 1
  %spec.select.6 = add nuw nsw i32 %32, %spec.select.5
  %33 = lshr i32 %call, 8
  %34 = and i32 %33, 1
  %spec.select.7 = add nuw nsw i32 %34, %spec.select.6
  %35 = lshr i32 %call, 9
  %36 = and i32 %35, 1
  %spec.select.8 = add nuw nsw i32 %36, %spec.select.7
  %37 = lshr i32 %call, 10
  %38 = and i32 %37, 1
  %spec.select.9 = add nuw nsw i32 %38, %spec.select.8
  %39 = lshr i32 %call, 11
  %40 = and i32 %39, 1
  %spec.select.10 = add nuw nsw i32 %40, %spec.select.9
  %41 = lshr i32 %call, 12
  %42 = and i32 %41, 1
  %spec.select.11 = add nuw nsw i32 %42, %spec.select.10
  %43 = lshr i32 %call, 13
  %44 = and i32 %43, 1
  %spec.select.12 = add nuw nsw i32 %44, %spec.select.11
  %45 = lshr i32 %call, 14
  %46 = and i32 %45, 1
  %spec.select.13 = add nuw nsw i32 %46, %spec.select.12
  %47 = lshr i32 %call, 15
  %48 = and i32 %47, 1
  %spec.select.14 = add nuw nsw i32 %48, %spec.select.13
  %shr45 = lshr i32 %call, 16
  %and46 = and i32 %shr45, 15
  call void @__sanitizer_cov_trace_cmp4(i32 %and46, i32 %spec.select.14)
  %cmp47.not = icmp eq i32 %and46, %spec.select.14
  br i1 %cmp47.not, label %for.body.preheader.do.body51_crit_edge, label %for.body.preheader.cleanup101_crit_edge

for.body.preheader.cleanup101_crit_edge:          ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

for.body.preheader.do.body51_crit_edge:           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body51

do.body51:                                        ; preds = %for.body.preheader.do.body51_crit_edge, %land.lhs.true.do.body51_crit_edge, %if.then.do.body51_crit_edge
  %ass.0 = phi i32 [ %5, %if.then.do.body51_crit_edge ], [ %call, %for.body.preheader.do.body51_crit_edge ], [ %and, %land.lhs.true.do.body51_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_subsystem_id.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc_subsystem_id, %if.then63)) #13
          to label %do.end71 [label %if.then63], !srcloc !2188

if.then63:                                        ; preds = %do.body51
  call void @__sanitizer_cov_trace_pc() #15
  %and66 = and i32 %ass.0, 65535
  %vendor_id68 = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %49 = ptrtoint ptr %vendor_id68 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %vendor_id68, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_subsystem_id.__UNIQUE_ID_ddebug253, ptr noundef %codec, ptr noundef nonnull @.str.832, i32 noundef %and66, i32 noundef %50) #13
  br label %do.end71

do.end71:                                         ; preds = %if.then63, %do.body51
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %51 = ptrtoint ptr %init_amp to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %init_amp, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %cmp74 = icmp eq i32 %52, 0
  br i1 %cmp74, label %if.then76, label %do.end71.if.end81_crit_edge

do.end71.if.end81_crit_edge:                      ; preds = %do.end71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end81

if.then76:                                        ; preds = %do.end71
  %and72 = lshr i32 %ass.0, 3
  %shr73 = and i32 %and72, 7
  %53 = zext i32 %shr73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %53, ptr @__sancov_gen_cov_switch_values.1266)
  switch i32 %shr73, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb77
    i32 7, label %sw.bb78
  ]

sw.bb:                                            ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #15
  %54 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %spec1, align 8
  %gpio_mask.i = getelementptr inbounds %struct.alc_spec, ptr %55, i32 0, i32 3
  %56 = ptrtoint ptr %gpio_mask.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %gpio_mask.i, align 8
  %or.i = or i32 %57, 1
  store i32 %or.i, ptr %gpio_mask.i, align 8
  %gpio_dir.i = getelementptr inbounds %struct.alc_spec, ptr %55, i32 0, i32 4
  %58 = ptrtoint ptr %gpio_dir.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %gpio_dir.i, align 4
  %or2.i = or i32 %59, 1
  store i32 %or2.i, ptr %gpio_dir.i, align 4
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %55, i32 0, i32 5
  %60 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %gpio_data.i, align 8
  %or3.i = or i32 %61, 1
  store i32 %or3.i, ptr %gpio_data.i, align 8
  br label %if.end81

sw.bb77:                                          ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #15
  %62 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %spec1, align 8
  %gpio_mask.i148 = getelementptr inbounds %struct.alc_spec, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %gpio_mask.i148 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %gpio_mask.i148, align 8
  %or.i149 = or i32 %65, 2
  store i32 %or.i149, ptr %gpio_mask.i148, align 8
  %gpio_dir.i150 = getelementptr inbounds %struct.alc_spec, ptr %63, i32 0, i32 4
  %66 = ptrtoint ptr %gpio_dir.i150 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %gpio_dir.i150, align 4
  %or2.i151 = or i32 %67, 2
  store i32 %or2.i151, ptr %gpio_dir.i150, align 4
  %gpio_data.i152 = getelementptr inbounds %struct.alc_spec, ptr %63, i32 0, i32 5
  %68 = ptrtoint ptr %gpio_data.i152 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %gpio_data.i152, align 8
  %or3.i153 = or i32 %69, 2
  store i32 %or3.i153, ptr %gpio_data.i152, align 8
  br label %if.end81

sw.bb78:                                          ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #15
  %70 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %spec1, align 8
  %gpio_mask.i155 = getelementptr inbounds %struct.alc_spec, ptr %71, i32 0, i32 3
  %72 = ptrtoint ptr %gpio_mask.i155 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %gpio_mask.i155, align 8
  %or.i156 = or i32 %73, 3
  store i32 %or.i156, ptr %gpio_mask.i155, align 8
  %gpio_dir.i157 = getelementptr inbounds %struct.alc_spec, ptr %71, i32 0, i32 4
  %74 = ptrtoint ptr %gpio_dir.i157 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %gpio_dir.i157, align 4
  %or2.i158 = or i32 %75, 3
  store i32 %or2.i158, ptr %gpio_dir.i157, align 4
  %gpio_data.i159 = getelementptr inbounds %struct.alc_spec, ptr %71, i32 0, i32 5
  %76 = ptrtoint ptr %gpio_data.i159 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %gpio_data.i159, align 8
  %or3.i160 = or i32 %77, 3
  store i32 %or3.i160, ptr %gpio_data.i159, align 8
  br label %if.end81

sw.default:                                       ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #15
  %78 = ptrtoint ptr %init_amp to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 2, ptr %init_amp, align 8
  br label %if.end81

if.end81:                                         ; preds = %sw.default, %sw.bb78, %sw.bb77, %sw.bb, %do.end71.if.end81_crit_edge
  %and82 = and i32 %ass.0, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and82)
  %tobool83.not = icmp eq i32 %and82, 0
  br i1 %tobool83.not, label %if.end81.cleanup101_crit_edge, label %if.end85

if.end81.cleanup101_crit_edge:                    ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

if.end85:                                         ; preds = %if.end81
  %hp_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %79 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %hp_pins.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %80)
  %tobool.not.i = icmp eq i16 %80, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end85.cleanup101_crit_edge

if.end85.cleanup101_crit_edge:                    ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

if.end.i:                                         ; preds = %if.end85
  %line_out_type.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 5
  %81 = ptrtoint ptr %line_out_type.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %line_out_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %82)
  %cmp.i = icmp eq i32 %82, 2
  br i1 %cmp.i, label %alc_get_hp_pin.exit, label %if.end.i.if.then88_crit_edge

if.end.i.if.then88_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then88

alc_get_hp_pin.exit:                              ; preds = %if.end.i
  %line_out_pins.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %83 = ptrtoint ptr %line_out_pins.i to i32
  call void @__asan_load2_noabort(i32 %83)
  %84 = load i16, ptr %line_out_pins.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %84)
  %tobool87.not = icmp eq i16 %84, 0
  br i1 %tobool87.not, label %alc_get_hp_pin.exit.if.then88_crit_edge, label %alc_get_hp_pin.exit.cleanup101_crit_edge

alc_get_hp_pin.exit.cleanup101_crit_edge:         ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

alc_get_hp_pin.exit.if.then88_crit_edge:          ; preds = %alc_get_hp_pin.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then88

if.then88:                                        ; preds = %alc_get_hp_pin.exit.if.then88_crit_edge, %if.end.i.if.then88_crit_edge
  %shr90 = lshr i32 %ass.0, 11
  %and91 = and i32 %shr90, 3
  %arrayidx = getelementptr i16, ptr %ports, i32 %and91
  %85 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %arrayidx, align 2
  %autocfg = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33
  %line_out_pins = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 1
  %87 = ptrtoint ptr %autocfg to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %autocfg, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %cmp7.i.i = icmp sgt i32 %88, 0
  br i1 %cmp7.i.i, label %if.then88.for.body.i.i_crit_edge, label %if.then88.if.end96_crit_edge

if.then88.if.end96_crit_edge:                     ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end96

if.then88.for.body.i.i_crit_edge:                 ; preds = %if.then88
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.then88.for.body.i.i_crit_edge
  %i.08.i.i = phi i32 [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %if.then88.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr i16, ptr %line_out_pins, i32 %i.08.i.i
  %89 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %arrayidx.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %90, i16 %86)
  %cmp2.i.i = icmp eq i16 %90, %86
  br i1 %cmp2.i.i, label %for.body.i.i.cleanup101_crit_edge, label %for.inc.i.i

for.body.i.i.cleanup101_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup101

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.08.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %88
  br i1 %exitcond.not.i.i, label %for.inc.i.i.if.end96_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

for.inc.i.i.if.end96_crit_edge:                   ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end96

if.end96:                                         ; preds = %for.inc.i.i.if.end96_crit_edge, %if.then88.if.end96_crit_edge
  %91 = ptrtoint ptr %hp_pins.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %86, ptr %hp_pins.i, align 8
  br label %cleanup101

cleanup101:                                       ; preds = %if.end96, %for.body.i.i.cleanup101_crit_edge, %alc_get_hp_pin.exit.cleanup101_crit_edge, %if.end85.cleanup101_crit_edge, %if.end81.cleanup101_crit_edge, %for.body.preheader.cleanup101_crit_edge, %do.end.cleanup101_crit_edge, %if.then.cleanup101_crit_edge
  %retval.1 = phi i32 [ 0, %if.then.cleanup101_crit_edge ], [ 0, %do.end.cleanup101_crit_edge ], [ 0, %for.body.preheader.cleanup101_crit_edge ], [ 1, %if.end81.cleanup101_crit_edge ], [ 1, %if.end96 ], [ 1, %alc_get_hp_pin.exit.cleanup101_crit_edge ], [ 1, %if.end85.cleanup101_crit_edge ], [ 1, %for.body.i.i.cleanup101_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_hda_gen_add_kctl(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_volume_info(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_volume_get(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_volume_put(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_tlv(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_switch_info(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_switch_get_beep(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_switch_put_beep(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_eapd_shutup(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %entry
  %2 = phi i16 [ 15, %entry ], [ %16, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %entry ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %2 to i32
  %3 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %4 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %4, i16 %2)
  %cmp.i.i.i = icmp ugt i16 %4, %2
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %5 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %6, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %7 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %8, i32 %sub.i.i.i
  %9 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i.i.i, align 4
  %11 = and i32 %10, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %11)
  %cmp.not.i.i = icmp eq i32 %11, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %12 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %2, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %13 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %14, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %2, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %15 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i = icmp eq i16 %16, 0
  br i1 %tobool.not.i, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  %no_depop_delay = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %17 = ptrtoint ptr %no_depop_delay to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load = load i8, ptr %no_depop_delay, align 8
  %18 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not = icmp eq i8 %18, 0
  br i1 %tobool.not, label %if.then, label %alc_auto_setup_eapd.exit.if.end_crit_edge

alc_auto_setup_eapd.exit.if.end_crit_edge:        ; preds = %alc_auto_setup_eapd.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %alc_auto_setup_eapd.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @msleep(i32 noundef 200) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %alc_auto_setup_eapd.exit.if.end_crit_edge
  call fastcc void @alc_shutup_pins(ptr noundef %codec)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_gpio1(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc_fixup_gpio.exit_crit_edge

entry.alc_fixup_gpio.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_gpio.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %gpio_mask.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i, align 8
  %or.i.i = or i32 %3, 1
  store i32 %or.i.i, ptr %gpio_mask.i.i, align 8
  %gpio_dir.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i, align 4
  %or2.i.i = or i32 %5, 1
  store i32 %or2.i.i, ptr %gpio_dir.i.i, align 4
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i, align 8
  %or3.i.i = or i32 %7, 1
  store i32 %or3.i.i, ptr %gpio_data.i.i, align 8
  br label %alc_fixup_gpio.exit

alc_fixup_gpio.exit:                              ; preds = %if.then.i, %entry.alc_fixup_gpio.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc260_fixup_gpio1_toggle(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp = icmp eq i32 %action, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 77
  %2 = ptrtoint ptr %automute_hook to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc260_gpio1_automute, ptr %automute_hook, align 4
  %detect_hp = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %3 = ptrtoint ptr %detect_hp to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load = load i64, ptr %detect_hp, align 4
  %bf.set6 = or i64 %bf.load, 360287970189639680
  store i64 %bf.set6, ptr %detect_hp, align 4
  %hp_pins = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 33, i32 6
  %4 = ptrtoint ptr %hp_pins to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 15, ptr %hp_pins, align 8
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 15, i32 noundef 0, ptr noundef nonnull @snd_hda_gen_hp_automute) #13
  %5 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spec1, align 8
  %gpio_mask.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %gpio_mask.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_mask.i, align 8
  %or.i = or i32 %8, 1
  store i32 %or.i, ptr %gpio_mask.i, align 8
  %gpio_dir.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 4
  %9 = ptrtoint ptr %gpio_dir.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gpio_dir.i, align 4
  %or2.i = or i32 %10, 1
  store i32 %or2.i, ptr %gpio_dir.i, align 4
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %6, i32 0, i32 5
  %11 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gpio_data.i, align 8
  %or3.i = or i32 %12, 1
  store i32 %or3.i, ptr %gpio_data.i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc260_fixup_kn1(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cond = icmp eq i32 %action, 0
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc260_fixup_kn1.pincfgs) #13
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %init_amp to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %init_amp, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc260_fixup_fsc_s7020(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %init_amp = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %init_amp to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %init_amp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc260_fixup_fsc_s7020_jwse(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %add_jack_modes = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %add_jack_modes to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %add_jack_modes, align 4
  %bf.set5 = or i64 %bf.load, 35186519572480
  store i64 %bf.set5, ptr %add_jack_modes, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc260_gpio1_automute(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %3 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gpio_data.i, align 8
  %and.i = and i32 %4, -2
  %bf.load.lobit = lshr i64 %bf.load, 63
  %5 = trunc i64 %bf.load.lobit to i32
  %storemerge.i = or i32 %and.i, %5
  store i32 %storemerge.i, ptr %gpio_data.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %storemerge.i)
  %cmp.not.i = icmp eq i32 %4, %storemerge.i
  br i1 %cmp.not.i, label %entry.alc_update_gpio_data.exit_crit_edge, label %if.then5.i

entry.alc_update_gpio_data.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_update_gpio_data.exit

if.then5.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %6 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %spec1, align 8
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %gpio_data.i.i, align 8
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 1, i32 noundef 0, i32 noundef 1813, i32 noundef %9) #13
  br label %alc_update_gpio_data.exit

alc_update_gpio_data.exit:                        ; preds = %if.then5.i, %entry.alc_update_gpio_data.exit_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_no_depop_delay(ptr nocapture noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp = icmp eq i32 %action, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %no_depop_delay = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %no_depop_delay to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %no_depop_delay, align 8
  %bf.set = or i8 %bf.load, 64
  store i8 %bf.set, ptr %no_depop_delay, align 8
  %depop_delay = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 40
  %3 = ptrtoint ptr %depop_delay to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %depop_delay, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @query_amp_caps(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_switch_get(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @alc268_beep_switch_put(ptr noundef %kcontrol, ptr noundef %ucontrol) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %control_mutex = getelementptr inbounds %struct.hda_codec, ptr %1, i32 0, i32 19
  tail call void @mutex_lock_nested(ptr noundef %control_mutex, i32 noundef 0) #13
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %2 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %private_value, align 4
  %and = and i32 %3, -256
  %or = or i32 %and, 15
  store i32 %or, ptr %private_value, align 4
  %call = tail call i32 @snd_hda_mixer_amp_switch_put(ptr noundef %kcontrol, ptr noundef %ucontrol) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %or3 = or i32 %and, 16
  %4 = ptrtoint ptr %private_value to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or3, ptr %private_value, align 4
  %call5 = tail call i32 @snd_hda_mixer_amp_switch_put(ptr noundef %kcontrol, ptr noundef %ucontrol) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %err.0 = phi i32 [ %call5, %if.then ], [ %call, %entry.if.end_crit_edge ]
  %5 = ptrtoint ptr %private_value to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %3, ptr %private_value, align 4
  tail call void @mutex_unlock(ptr noundef %control_mutex) #13
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hda_mixer_amp_switch_put(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc668_restore_default_value(ptr noundef %codec) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc668_coefs)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alc662_parse_auto_config(ptr noundef %codec) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor_id = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 7
  %0 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vendor_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.1267)
  switch i32 %1, label %if.else [
    i32 283902578, label %entry.if.end_crit_edge
    i32 283903587, label %entry.if.end_crit_edge21
    i32 283903589, label %entry.if.end_crit_edge22
    i32 283903600, label %entry.if.end_crit_edge23
    i32 283903601, label %entry.if.end_crit_edge24
  ]

entry.if.end_crit_edge24:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

entry.if.end_crit_edge23:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

entry.if.end_crit_edge22:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

entry.if.end_crit_edge21:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge, %entry.if.end_crit_edge21, %entry.if.end_crit_edge22, %entry.if.end_crit_edge23, %entry.if.end_crit_edge24
  %ssids.0 = phi ptr [ @alc662_parse_auto_config.alc662_ssids, %if.else ], [ @alc662_parse_auto_config.alc663_ssids, %entry.if.end_crit_edge ], [ @alc662_parse_auto_config.alc663_ssids, %entry.if.end_crit_edge21 ], [ @alc662_parse_auto_config.alc663_ssids, %entry.if.end_crit_edge22 ], [ @alc662_parse_auto_config.alc663_ssids, %entry.if.end_crit_edge23 ], [ @alc662_parse_auto_config.alc663_ssids, %entry.if.end_crit_edge24 ]
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %3 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1.i, align 8
  %autocfg.i = getelementptr inbounds %struct.hda_gen_spec, ptr %4, i32 0, i32 33
  %parse_flags.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %parse_flags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %parse_flags.i, align 4
  %call.i = tail call i32 @snd_hda_parse_pin_defcfg(ptr noundef %codec, ptr noundef %autocfg.i, ptr noundef nonnull @alc662_parse_auto_config.alc662_ignore, i32 noundef %6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.end.alc_parse_auto_config.exit_crit_edge, label %if.end.i

if.end.alc_parse_auto_config.exit_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_parse_auto_config.exit

if.end.i:                                         ; preds = %if.end
  %call.i.i = tail call fastcc i32 @alc_subsystem_id(ptr noundef %codec, ptr noundef nonnull %ssids.0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.i.if.end3.i_crit_edge

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then.i.i:                                      ; preds = %if.end.i
  %7 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %spec1.i, align 8
  %init_amp.i.i = getelementptr inbounds %struct.alc_spec, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %init_amp.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %init_amp.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i, label %do.body.i.i, label %if.then.i.i.if.end3.i_crit_edge

if.then.i.i.if.end3.i_crit_edge:                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

do.body.i.i:                                      ; preds = %if.then.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alc662_parse_auto_config, %if.then7.i.i)) #13
          to label %do.end.i.i [label %if.then7.i.i], !srcloc !2188

if.then7.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @alc_ssid_check.__UNIQUE_ID_ddebug254, ptr noundef %codec, ptr noundef nonnull @.str.829) #13
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then7.i.i, %do.body.i.i
  %11 = ptrtoint ptr %init_amp.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 2, ptr %init_amp.i.i, align 8
  br label %if.end3.i

if.end3.i:                                        ; preds = %do.end.i.i, %if.then.i.i.if.end3.i_crit_edge, %if.end.i.if.end3.i_crit_edge
  %call4.i = tail call i32 @snd_hda_gen_parse_auto_config(ptr noundef %codec, ptr noundef %autocfg.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %cmp5.i = icmp slt i32 %call4.i, 0
  %call4..i = select i1 %cmp5.i, i32 %call4.i, i32 1
  br label %alc_parse_auto_config.exit

alc_parse_auto_config.exit:                       ; preds = %if.end3.i, %if.end.alc_parse_auto_config.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %if.end.alc_parse_auto_config.exit_crit_edge ], [ %call4..i, %if.end3.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc662_fixup_led_gpio1(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %3, 1
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %5, 1
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %7, 1
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  %gpio_mute_led_mask.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %gpio_mute_led_mask.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %gpio_mute_led_mask.i, align 4
  %call.i = tail call i32 @snd_hda_gen_add_mute_led_cdev(ptr noundef %codec, ptr noundef nonnull @gpio_mute_led_set) #13
  %mute_led_polarity = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 7
  %9 = ptrtoint ptr %mute_led_polarity to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %mute_led_polarity, align 8
  %power_filter = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 35
  %10 = ptrtoint ptr %power_filter to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @gpio_led_power_filter, ptr %power_filter, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc272_fixup_mario(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.not = icmp eq i32 %action, 0
  br i1 %cmp.not, label %if.end, label %entry.if.end2_crit_edge

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2

if.end:                                           ; preds = %entry
  %call = tail call i32 @snd_hda_override_amp_caps(ptr noundef %codec, i16 noundef zeroext 2, i32 noundef 1, i32 noundef 211771) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end.if.end2_crit_edge, label %do.end

if.end.if.end2_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %codec, ptr noundef nonnull @.str.989) #17
  br label %if.end2

if.end2:                                          ; preds = %do.end, %if.end.if.end2_crit_edge, %entry.if.end2_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_no_jack_detect(ptr nocapture noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %no_jack_detect = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %0 = ptrtoint ptr %no_jack_detect to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %no_jack_detect, align 4
  %bf.set = or i32 %bf.load, 2097152
  store i32 %bf.set, ptr %no_jack_detect, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode_alc662(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags, align 4
  %or = or i32 %3, 4
  store i32 %or, ptr %parse_flags, align 4
  %hp_mic = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %4 = ptrtoint ptr %hp_mic to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load = load i64, ptr %hp_mic, align 4
  %bf.set = or i64 %bf.load, 35184372088832
  store i64 %bf.set, ptr %hp_mic, align 4
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0, i32 noundef 768, i32 noundef 28672) #13
  %start_nid.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %5 = ptrtoint ptr %start_nid.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %start_nid.i, align 4
  %conv1.i = zext i16 %6 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 27, i16 %6)
  %cmp.i = icmp ugt i16 %6, 27
  br i1 %cmp.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

lor.lhs.false.i:                                  ; preds = %if.then
  %num_nodes.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %7 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_nodes.i, align 8
  %add.i = add i32 %8, %conv1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %add.i)
  %cmp8.not.i = icmp ugt i32 %add.i, 27
  br i1 %cmp8.not.i, label %if.end.i, label %lor.lhs.false.i.land.lhs.true.i_crit_edge

lor.lhs.false.i.land.lhs.true.i_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  %wcaps.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %9 = ptrtoint ptr %wcaps.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wcaps.i, align 4
  %sub.i = sub nsw i32 27, %conv1.i
  %arrayidx.i = getelementptr i32, ptr %10, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %phi.bo = and i32 %12, -3
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.i, %lor.lhs.false.i.land.lhs.true.i_crit_edge
  %retval.0.i.ph = phi i32 [ 0, %lor.lhs.false.i.land.lhs.true.i_crit_edge ], [ %phi.bo, %if.end.i ]
  %13 = ptrtoint ptr %num_nodes.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_nodes.i, align 8
  %add.i12 = add i32 %14, %conv1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %add.i12)
  %cmp8.i = icmp ugt i32 %add.i12, 27
  br i1 %cmp8.i, label %if.then.i, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %wcaps.i13 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  %15 = ptrtoint ptr %wcaps.i13 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %wcaps.i13, align 4
  %sub.i14 = sub nsw i32 27, %conv1.i
  %arrayidx.i15 = getelementptr i32, ptr %16, i32 %sub.i14
  %17 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %retval.0.i.ph, ptr %arrayidx.i15, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.i, %land.lhs.true.i.if.end_crit_edge, %if.then.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_fixup_headset_mode_alc668(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 196) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 32768) #13
  %2 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 194, i32 noundef -255, i32 noundef 0)
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef 0, i1 noundef zeroext true) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_bass_chmap(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %action)
  %cmp = icmp eq i32 %action, 3
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %pcm_rec = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 32
  %2 = ptrtoint ptr %pcm_rec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pcm_rec, align 4
  %chmap = getelementptr inbounds %struct.hda_pcm, ptr %3, i32 0, i32 1, i32 0, i32 7
  %4 = ptrtoint ptr %chmap to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @asus_pcm_2_1_chmaps, ptr %chmap, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc662_fixup_usi_headset_mic(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags, align 4
  %or = or i32 %3, 4
  store i32 %or, ptr %parse_flags, align 4
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %4 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @alc662_usi_automute_hook, ptr %hp_automute_hook, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc662_fixup_aspire_ethos_hp(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @is_jack_detectable(ptr noundef %codec, i16 noundef zeroext 27) #13
  br i1 %call, label %if.end, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end:                                           ; preds = %entry
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1268)
  switch i32 %action, label %if.end.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0, ptr noundef nonnull @alc662_aspire_ethos_mute_speakers) #13
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1.i, align 8
  %gpio_mask.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %gpio_mask.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gpio_mask.i, align 8
  %or.i = or i32 %4, 2
  store i32 %or.i, ptr %gpio_mask.i, align 8
  %gpio_dir.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 4
  %5 = ptrtoint ptr %gpio_dir.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gpio_dir.i, align 4
  %or2.i = or i32 %6, 2
  store i32 %or2.i, ptr %gpio_dir.i, align 4
  %gpio_data.i = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %gpio_data.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_data.i, align 8
  %or3.i = or i32 %8, 2
  store i32 %or3.i, ptr %gpio_data.i, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp eq i32 %call.i.i, 1
  %..i = select i1 %cmp.i, i32 0, i32 64
  %call.i11.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 21, i32 noundef %..i, i1 noundef zeroext true) #13
  %call.i12.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef %..i, i1 noundef zeroext true) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %if.end.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc671_fixup_hp_headset_mic2(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1269)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1, align 8
  %mixer_nid = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 18
  %3 = ptrtoint ptr %mixer_nid to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 0, ptr %mixer_nid, align 2
  %parse_flags = getelementptr inbounds %struct.alc_spec, ptr %2, i32 0, i32 2
  %4 = ptrtoint ptr %parse_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %parse_flags, align 4
  %or = or i32 %5, 4
  store i32 %or, ptr %parse_flags, align 4
  tail call void @snd_hda_apply_pincfgs(ptr noundef %codec, ptr noundef nonnull @alc671_fixup_hp_headset_mic2.pincfgs) #13
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %6 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %spec1.i.i, align 8
  %call.i.i = tail call i32 @snd_hdac_power_up_pm(ptr noundef %codec) #13
  %coef_mutex.i.i = getelementptr inbounds %struct.alc_spec, ptr %7, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %coef_mutex.i.i, i32 noundef 0) #13
  %call.i.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1280, i32 noundef 25) #13
  %call.i4.i.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 0, i32 noundef 1024, i32 noundef 41044) #13
  %8 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec1.i.i, align 8
  %coef_mutex.i4.i = getelementptr inbounds %struct.alc_spec, ptr %9, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %coef_mutex.i4.i) #13
  %call.i5.i = tail call i32 @snd_hdac_power_down_pm(ptr noundef %codec) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc897_fixup_lenovo_headset_mic(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %2 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc897_hp_automute_hook, ptr %hp_automute_hook, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @gpio_led_power_filter(ptr nocapture noundef readonly %codec, i16 noundef zeroext %nid, i32 noundef %power_state) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %afg = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 5
  %0 = ptrtoint ptr %afg to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %afg, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %nid)
  %cmp = icmp eq i16 %1, %nid
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %power_state)
  %cmp4 = icmp eq i32 %power_state, 3
  %or.cond = and i1 %cmp4, %cmp
  br i1 %or.cond, label %land.lhs.true6, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true6:                                   ; preds = %entry
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %2 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec1, align 8
  %gpio_data = getelementptr inbounds %struct.alc_spec, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %gpio_data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_data, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %land.lhs.true6.if.end_crit_edge, label %land.lhs.true6.cleanup_crit_edge

land.lhs.true6.cleanup_crit_edge:                 ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true6.if.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %land.lhs.true6.if.end_crit_edge, %entry.if.end_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end, %land.lhs.true6.cleanup_crit_edge
  %retval.0 = phi i32 [ %power_state, %if.end ], [ 0, %land.lhs.true6.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc662_usi_automute_hook(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @msleep(i32 noundef 200) #13
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %bf.load)
  %tobool.not = icmp sgt i64 %bf.load, -1
  %cond = select i1 %tobool.not, i32 0, i32 36
  tail call void @msleep(i32 noundef 100) #13
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 0, i32 noundef 1799, i32 noundef %cond) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc662_aspire_ethos_mute_speakers(ptr noundef %codec, ptr nocapture noundef readnone %cb) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @snd_hda_jack_detect_state_mst(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp = icmp eq i32 %call.i, 1
  %. = select i1 %cmp, i32 0, i32 64
  %call.i11 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 21, i32 noundef %., i1 noundef zeroext true) #13
  %call.i12 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef %., i1 noundef zeroext true) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc897_hp_automute_hook(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %bf.load)
  %tobool.not = icmp sgt i64 %bf.load, -1
  %cond = select i1 %tobool.not, i32 192, i32 197
  %call.i = tail call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 0, i32 noundef 1799, i32 noundef %cond) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_power_eapd(ptr noundef %codec) #2 align 64 {
entry:
  %val.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %start_nid.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 18
  %num_nodes.i.i.i = getelementptr inbounds %struct.hdac_device, ptr %codec, i32 0, i32 17
  %wcaps.i.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 14
  br label %for.body.i

for.body.i:                                       ; preds = %set_eapd.exit.i.for.body.i_crit_edge, %entry
  %0 = phi i16 [ 15, %entry ], [ %14, %set_eapd.exit.i.for.body.i_crit_edge ]
  %p.04.i = phi ptr [ @alc_auto_setup_eapd.pins, %entry ], [ %incdec.ptr.i, %set_eapd.exit.i.for.body.i_crit_edge ]
  %conv.i.i.i = zext i16 %0 to i32
  %1 = ptrtoint ptr %start_nid.i.i.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %start_nid.i.i.i, align 4
  %conv1.i.i.i = zext i16 %2 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %2, i16 %0)
  %cmp.i.i.i = icmp ugt i16 %2, %0
  br i1 %cmp.i.i.i, label %for.body.i.set_eapd.exit.i_crit_edge, label %lor.lhs.false.i.i.i

for.body.i.set_eapd.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i
  %3 = ptrtoint ptr %num_nodes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_nodes.i.i.i, align 8
  %add.i.i.i = add i32 %4, %conv1.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %conv.i.i.i)
  %cmp8.not.i.i.i = icmp ugt i32 %add.i.i.i, %conv.i.i.i
  br i1 %cmp8.not.i.i.i, label %get_wcaps.exit.i.i, label %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge

lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

get_wcaps.exit.i.i:                               ; preds = %lor.lhs.false.i.i.i
  %5 = ptrtoint ptr %wcaps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %wcaps.i.i.i, align 4
  %sub.i.i.i = sub nsw i32 %conv.i.i.i, %conv1.i.i.i
  %arrayidx.i.i.i = getelementptr i32, ptr %6, i32 %sub.i.i.i
  %7 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i.i.i, align 4
  %9 = and i32 %8, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %9)
  %cmp.not.i.i = icmp eq i32 %9, 4194304
  br i1 %cmp.not.i.i, label %if.end.i.i, label %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge

get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge:     ; preds = %get_wcaps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.end.i.i:                                       ; preds = %get_wcaps.exit.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %10 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %val.i.i.i.i, align 4, !annotation !2189
  %call.i.i.i.i = call i32 @_snd_hdac_read_parm(ptr noundef %codec, i16 noundef zeroext %0, i32 noundef 12, ptr noundef nonnull %val.i.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %snd_hda_query_pin_caps.exit.thread.i.i, label %snd_hda_query_pin_caps.exit.i.i

snd_hda_query_pin_caps.exit.thread.i.i:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i:                  ; preds = %if.end.i.i
  %11 = ptrtoint ptr %val.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i.i) #13
  %and.i.i = and i32 %12, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, label %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge

snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then3.i.i

snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge: ; preds = %snd_hda_query_pin_caps.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_eapd.exit.i

if.then3.i.i:                                     ; preds = %snd_hda_query_pin_caps.exit.i.i.if.then3.i.i_crit_edge, %snd_hda_query_pin_caps.exit.thread.i.i
  %call.i.i.i = call i32 @snd_hdac_codec_write(ptr noundef %codec, i16 noundef zeroext %0, i32 noundef 0, i32 noundef 1804, i32 noundef 0) #13
  br label %set_eapd.exit.i

set_eapd.exit.i:                                  ; preds = %if.then3.i.i, %snd_hda_query_pin_caps.exit.i.i.set_eapd.exit.i_crit_edge, %get_wcaps.exit.i.i.set_eapd.exit.i_crit_edge, %lor.lhs.false.i.i.i.set_eapd.exit.i_crit_edge, %for.body.i.set_eapd.exit.i_crit_edge
  %incdec.ptr.i = getelementptr i16, ptr %p.04.i, i32 1
  %13 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %incdec.ptr.i, align 2
  %tobool.not.i = icmp eq i16 %14, 0
  br i1 %tobool.not.i, label %alc_auto_setup_eapd.exit, label %set_eapd.exit.i.for.body.i_crit_edge

set_eapd.exit.i.for.body.i_crit_edge:             ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

alc_auto_setup_eapd.exit:                         ; preds = %set_eapd.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc861_fixup_asus_amp_vref_0f(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp.not = icmp eq i32 %action, 2
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %call = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext 15) #13
  %and = and i32 %call, 96
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %or = or i32 %call, 32
  %spec.select = select i1 %tobool.not, i32 %or, i32 %call
  %or4 = or i32 %spec.select, 1
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 15, i32 noundef %or4, i1 noundef zeroext false) #13
  %keep_vref_in_automute = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %keep_vref_in_automute to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %keep_vref_in_automute, align 4
  %bf.set = or i64 %bf.load, 2251799813685248
  store i64 %bf.set, ptr %keep_vref_in_automute, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc660vd_fixup_asus_gpio1(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then.i, label %entry.alc_fixup_gpio.exit_crit_edge

entry.alc_fixup_gpio.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_gpio.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_mask = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask, align 8
  %or = or i32 %3, 2
  store i32 %or, ptr %gpio_mask, align 8
  %4 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %gpio_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gpio_mask.i.i, align 8
  %or.i.i = or i32 %6, 1
  store i32 %or.i.i, ptr %gpio_mask.i.i, align 8
  %gpio_dir.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 4
  %7 = ptrtoint ptr %gpio_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_dir.i.i, align 4
  %or2.i.i = or i32 %8, 1
  store i32 %or2.i.i, ptr %gpio_dir.i.i, align 4
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 5
  %9 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gpio_data.i.i, align 8
  %or3.i.i = or i32 %10, 1
  store i32 %or3.i.i, ptr %gpio_data.i.i, align 8
  br label %alc_fixup_gpio.exit

alc_fixup_gpio.exit:                              ; preds = %if.then.i, %entry.alc_fixup_gpio.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc861vd_fixup_dallas(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call i32 @snd_hdac_override_parm(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef 12, i32 noundef 1844) #13
  %call.i3 = tail call i32 @snd_hdac_override_parm(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef 12, i32 noundef 1852) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_hdac_override_parm(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc_fixup_gpio3(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i = icmp eq i32 %action, 0
  br i1 %cmp.i, label %if.then.i, label %entry.alc_fixup_gpio.exit_crit_edge

entry.alc_fixup_gpio.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_gpio.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i.i, align 8
  %gpio_mask.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gpio_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gpio_mask.i.i, align 8
  %or.i.i = or i32 %3, 3
  store i32 %or.i.i, ptr %gpio_mask.i.i, align 8
  %gpio_dir.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gpio_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpio_dir.i.i, align 4
  %or2.i.i = or i32 %5, 3
  store i32 %or2.i.i, ptr %gpio_dir.i.i, align 4
  %gpio_data.i.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %gpio_data.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gpio_data.i.i, align 8
  %or3.i.i = or i32 %7, 3
  store i32 %or3.i.i, ptr %gpio_data.i.i, align 8
  br label %alc_fixup_gpio.exit

alc_fixup_gpio.exit:                              ; preds = %if.then.i, %entry.alc_fixup_gpio.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc889_fixup_coef(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp.not = icmp eq i32 %action, 2
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 8240)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc885_fixup_macpro_gpio(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %gpio_write_delay = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %gpio_write_delay to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %gpio_write_delay, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.i.i = icmp eq i32 %action, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %entry.alc_fixup_gpio3.exit_crit_edge

entry.alc_fixup_gpio3.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %alc_fixup_gpio3.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spec1, align 8
  %gpio_mask.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %gpio_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gpio_mask.i.i.i, align 8
  %or.i.i.i = or i32 %6, 3
  store i32 %or.i.i.i, ptr %gpio_mask.i.i.i, align 8
  %gpio_dir.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 4
  %7 = ptrtoint ptr %gpio_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gpio_dir.i.i.i, align 4
  %or2.i.i.i = or i32 %8, 3
  store i32 %or2.i.i.i, ptr %gpio_dir.i.i.i, align 4
  %gpio_data.i.i.i = getelementptr inbounds %struct.alc_spec, ptr %4, i32 0, i32 5
  %9 = ptrtoint ptr %gpio_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gpio_data.i.i.i, align 8
  %or3.i.i.i = or i32 %10, 3
  store i32 %or3.i.i.i, ptr %gpio_data.i.i.i, align 8
  br label %alc_fixup_gpio3.exit

alc_fixup_gpio3.exit:                             ; preds = %if.then.i.i, %entry.alc_fixup_gpio3.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc889_fixup_dac_route(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1270)
  switch i32 %action, label %entry.if.end10_crit_edge [
    i32 0, label %if.then
    i32 1, label %if.then5
  ]

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 2, ptr noundef nonnull @alc889_fixup_dac_route.conn1) #13
  %call1 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 21, i32 noundef 2, ptr noundef nonnull @alc889_fixup_dac_route.conn1) #13
  %call2 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef 2, ptr noundef nonnull @alc889_fixup_dac_route.conn2) #13
  %call3 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 26, i32 noundef 2, ptr noundef nonnull @alc889_fixup_dac_route.conn2) #13
  br label %if.end10

if.then5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call6 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 5, ptr noundef nonnull @alc889_fixup_dac_route.conn) #13
  %call7 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 21, i32 noundef 5, ptr noundef nonnull @alc889_fixup_dac_route.conn) #13
  %call8 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef 5, ptr noundef nonnull @alc889_fixup_dac_route.conn) #13
  %call9 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 26, i32 noundef 5, ptr noundef nonnull @alc889_fixup_dac_route.conn) #13
  br label %if.end10

if.end10:                                         ; preds = %if.then5, %if.then, %entry.if.end10_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc889_fixup_mbp_vref(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp.not = icmp eq i32 %action, 2
  br i1 %cmp.not, label %for.body.preheader, label %entry.cleanup10_crit_edge

entry.cleanup10_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup10

for.body.preheader:                               ; preds = %entry
  %call = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext 20) #13
  %2 = and i32 %call, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %2)
  %cmp3.not = icmp eq i32 %2, 2097152
  br i1 %cmp3.not, label %for.body.preheader.cleanup_crit_edge, label %for.cond

for.body.preheader.cleanup_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond:                                         ; preds = %for.body.preheader
  %call.1 = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext 21) #13
  %3 = and i32 %call.1, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %3)
  %cmp3.not.1 = icmp eq i32 %3, 2097152
  br i1 %cmp3.not.1, label %for.cond.cleanup_crit_edge, label %for.cond.1

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond.1:                                       ; preds = %for.cond
  %call.2 = tail call i32 @snd_hda_codec_get_pincfg(ptr noundef %codec, i16 noundef zeroext 25) #13
  %4 = and i32 %call.2, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %4)
  %cmp3.not.2 = icmp eq i32 %4, 2097152
  br i1 %cmp3.not.2, label %for.cond.1.cleanup_crit_edge, label %for.cond.1.cleanup10_crit_edge

for.cond.1.cleanup10_crit_edge:                   ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup10

for.cond.1.cleanup_crit_edge:                     ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

cleanup:                                          ; preds = %for.cond.1.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %for.body.preheader.cleanup_crit_edge
  %.lcssa = phi i16 [ 20, %for.body.preheader.cleanup_crit_edge ], [ 21, %for.cond.cleanup_crit_edge ], [ 25, %for.cond.1.cleanup_crit_edge ]
  %call7 = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext %.lcssa) #13
  %or = or i32 %call7, 4
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext %.lcssa, i32 noundef %or, i1 noundef zeroext false) #13
  %keep_vref_in_automute = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %5 = ptrtoint ptr %keep_vref_in_automute to i32
  call void @__asan_loadN_noabort(i32 %5, i32 8)
  %bf.load = load i64, ptr %keep_vref_in_automute, align 4
  %bf.set = or i64 %bf.load, 2251799813685248
  store i64 %bf.set, ptr %keep_vref_in_automute, align 4
  br label %cleanup10

cleanup10:                                        ; preds = %cleanup, %for.cond.1.cleanup10_crit_edge, %entry.cleanup10_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc889_fixup_imac91_vref(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp = icmp eq i32 %action, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext 24) #13
  %or.i = or i32 %call.i, 1
  %call.i.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef %or.i, i1 noundef zeroext false) #13
  %call.i.1 = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext 26) #13
  %or.i.1 = or i32 %call.i.1, 1
  %call.i.i.1 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 26, i32 noundef %or.i.1, i1 noundef zeroext false) #13
  %keep_vref_in_automute.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %keep_vref_in_automute.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i = load i64, ptr %keep_vref_in_automute.i, align 4
  %bf.set.i = or i64 %bf.load.i, 2251799813685248
  store i64 %bf.set.i, ptr %keep_vref_in_automute.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc889_fixup_mba11_vref(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp = icmp eq i32 %action, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext 24) #13
  %or.i = or i32 %call.i, 1
  %call.i.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef %or.i, i1 noundef zeroext false) #13
  %keep_vref_in_automute.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %keep_vref_in_automute.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i = load i64, ptr %keep_vref_in_automute.i, align 4
  %bf.set.i = or i64 %bf.load.i, 2251799813685248
  store i64 %bf.set.i, ptr %keep_vref_in_automute.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc889_fixup_mba21_vref(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %action)
  %cmp = icmp eq i32 %action, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %call.i = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext 24) #13
  %or.i = or i32 %call.i, 1
  %call.i.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 24, i32 noundef %or.i, i1 noundef zeroext false) #13
  %call.i.1 = tail call i32 @snd_hda_codec_get_pin_target(ptr noundef %codec, i16 noundef zeroext 25) #13
  %or.i.1 = or i32 %call.i.1, 1
  %call.i.i.1 = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef %or.i.1, i1 noundef zeroext false) #13
  %keep_vref_in_automute.i = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %keep_vref_in_automute.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i = load i64, ptr %keep_vref_in_automute.i, align 4
  %bf.set.i = or i64 %bf.load.i, 2251799813685248
  store i64 %bf.set.i, ptr %keep_vref_in_automute.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @alc882_fixup_no_primary_hp(ptr nocapture noundef readonly %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp = icmp eq i32 %action, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %no_primary_hp = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %no_primary_hp to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %no_primary_hp, align 4
  %bf.set5 = or i64 %bf.load, 13194139533312
  store i64 %bf.set5, ptr %no_primary_hp, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc1220_fixup_gb_dual_codecs(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1271)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %alc_fixup_dual_codecs.exit.thread
    i32 3, label %sw.bb1
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

alc_fixup_dual_codecs.exit.thread:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %1 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %spec1.i, align 8
  %suppress_vmaster.i = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 58
  %3 = ptrtoint ptr %suppress_vmaster.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load.i = load i64, ptr %suppress_vmaster.i, align 4
  %bf.set9.i = or i64 %bf.load.i, 422212733501440
  store i64 %bf.set9.i, ptr %suppress_vmaster.i, align 4
  %mixer_nid.i = getelementptr inbounds %struct.hda_gen_spec, ptr %2, i32 0, i32 18
  %4 = ptrtoint ptr %mixer_nid.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 0, ptr %mixer_nid.i, align 2
  %force_pin_prefix.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 31
  %5 = ptrtoint ptr %force_pin_prefix.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %bf.load11.i = load i32, ptr %force_pin_prefix.i, align 4
  %bf.set13.i = or i32 %bf.load11.i, 4096
  store i32 %bf.set13.i, ptr %force_pin_prefix.i, align 4
  %card = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 2
  %6 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %card, align 4
  %longname = getelementptr inbounds %struct.snd_card, ptr %7, i32 0, i32 4
  %8 = call ptr @memcpy(ptr %longname, ptr @.str.1160, i32 35)
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %addr = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 3
  %9 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %addr, align 8
  %call.i = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.684) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %sw.bb1.rename_ctl.exit_crit_edge, label %if.then.i

sw.bb1.rename_ctl.exit_crit_edge:                 ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #15
  br label %rename_ctl.exit

if.then.i:                                        ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  %cond = select i1 %cmp, ptr @.str.685, ptr @.str.686
  %name.i = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i, i32 0, i32 1, i32 4
  %call1.i = tail call ptr @strcpy(ptr noundef %name.i, ptr noundef nonnull %cond) #19
  br label %rename_ctl.exit

rename_ctl.exit:                                  ; preds = %if.then.i, %sw.bb1.rename_ctl.exit_crit_edge
  %11 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %addr, align 8
  %call.i12 = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.687) #13
  %tobool.not.i13 = icmp eq ptr %call.i12, null
  br i1 %tobool.not.i13, label %rename_ctl.exit.sw.epilog_crit_edge, label %if.then.i16

rename_ctl.exit.sw.epilog_crit_edge:              ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then.i16:                                      ; preds = %rename_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3 = icmp eq i32 %12, 0
  %cond4 = select i1 %cmp3, ptr @.str.688, ptr @.str.689
  %name.i14 = getelementptr inbounds %struct.snd_kcontrol, ptr %call.i12, i32 0, i32 1, i32 4
  %call1.i15 = tail call ptr @strcpy(ptr noundef %name.i14, ptr noundef nonnull %cond4) #19
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.i16, %rename_ctl.exit.sw.epilog_crit_edge, %alc_fixup_dual_codecs.exit.thread, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc1220_fixup_gb_x570(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %action to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.1272)
  switch i32 %action, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 1, ptr noundef nonnull @alc1220_fixup_gb_x570.conn1) #13
  %call1 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 1, ptr noundef nonnull @alc1220_fixup_gb_x570.conn1) #13
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_process_coef_fw(ptr noundef %codec, ptr noundef nonnull @alc1220_fixup_gb_x570.gb_x570_coefs)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc1220_fixup_clevo_p950(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.not = icmp eq i32 %action, 0
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 963)
  %call = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 1, ptr noundef nonnull @alc1220_fixup_clevo_p950.conn1) #13
  %call1 = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 1, ptr noundef nonnull @alc1220_fixup_clevo_p950.conn1) #13
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc1220_fixup_clevo_pb51ed(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %action)
  %cmp.not.i = icmp eq i32 %action, 0
  br i1 %cmp.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @alc_update_coefex_idx(ptr noundef %codec, i16 noundef zeroext 32, i32 noundef 7, i32 noundef 0, i32 noundef 963) #13
  %call.i = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 20, i32 noundef 1, ptr noundef nonnull @alc1220_fixup_clevo_p950.conn1) #13
  %call1.i = tail call i32 @snd_hda_override_conn_list(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 1, ptr noundef nonnull @alc1220_fixup_clevo_p950.conn1) #13
  %spec1.i = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1.i, align 8
  %parse_flags.i = getelementptr inbounds %struct.alc_spec, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %parse_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %parse_flags.i, align 4
  %or.i = or i32 %3, 4
  store i32 %or.i, ptr %parse_flags.i, align 4
  br label %alc_fixup_headset_mode_no_hp_mic.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @alc_fixup_headset_mode(ptr noundef %codec, ptr noundef %fix, i32 noundef %action) #13
  br label %alc_fixup_headset_mode_no_hp_mic.exit

alc_fixup_headset_mode_no_hp_mic.exit:            ; preds = %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc887_fixup_asus_jack(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp.not = icmp eq i32 %action, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 27, i32 noundef 192, i1 noundef zeroext true) #13
  %hp_automute_hook = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 81
  %2 = ptrtoint ptr %hp_automute_hook to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @alc887_asus_hp_automute_hook, ptr %hp_automute_hook, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc887_asus_hp_automute_hook(ptr noundef %codec, ptr noundef %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %spec1 = getelementptr inbounds %struct.hda_codec, ptr %codec, i32 0, i32 11
  %0 = ptrtoint ptr %spec1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spec1, align 8
  tail call void @snd_hda_gen_hp_automute(ptr noundef %codec, ptr noundef %jack) #13
  %hp_jack_present = getelementptr inbounds %struct.hda_gen_spec, ptr %1, i32 0, i32 58
  %2 = ptrtoint ptr %hp_jack_present to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %hp_jack_present, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %bf.load)
  %tobool.not = icmp sgt i64 %bf.load, -1
  %. = select i1 %tobool.not, i32 192, i32 196
  %call.i = tail call i32 @_snd_hda_set_pin_ctl(ptr noundef %codec, i16 noundef zeroext 25, i32 noundef %., i1 noundef zeroext false) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc880_unsol_event(ptr noundef %codec, i32 noundef %res) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %shr = lshr i32 %res, 2
  tail call void @snd_hda_jack_unsol_event(ptr noundef %codec, i32 noundef %shr) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc880_fixup_vol_knob(ptr noundef %codec, ptr nocapture noundef readnone %fix, i32 noundef %action) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %action)
  %cmp = icmp eq i32 %action, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call ptr @snd_hda_jack_detect_enable_callback_mst(ptr noundef %codec, i16 noundef zeroext 33, i32 noundef 0, ptr noundef nonnull @alc_update_knob_master) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @alc_update_knob_master(ptr noundef %codec, ptr nocapture noundef readonly %jack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @snd_hda_find_mixer_ctl(ptr noundef %codec, ptr noundef nonnull @.str.1225) #13
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 712) #16
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %1 = ptrtoint ptr %jack to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %jack, align 4
  %call.i = tail call i32 @snd_hdac_codec_read(ptr noundef %codec, i16 noundef zeroext %2, i32 noundef 0, i32 noundef 3855, i32 noundef 0) #13
  %and = and i32 %call.i, 127
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %call7.i.i, i32 0, i32 2
  %3 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %and, ptr %value, align 8
  %arrayidx7 = getelementptr [128 x i32], ptr %value, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and, ptr %arrayidx7, align 4
  %put = getelementptr inbounds %struct.snd_kcontrol, ptr %call, i32 0, i32 5
  %5 = ptrtoint ptr %put to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %put, align 4
  %call8 = tail call i32 %6(ptr noundef nonnull %call, ptr noundef nonnull %call7.i.i) #13
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #13

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #14 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 1382)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #14 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 1382)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nounwind }
attributes #14 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #15 = { nomerge }
attributes #16 = { nounwind allocsize(2) }
attributes #17 = { cold nounwind }
attributes #18 = { nobuiltin }
attributes #19 = { nobuiltin nounwind }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !8, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !83, !85, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !168, !169, !170, !172, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !261, !263, !265, !267, !269, !271, !273, !275, !277, !279, !281, !283, !285, !287, !289, !291, !293, !295, !297, !299, !301, !303, !305, !307, !309, !311, !313, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !337, !339, !341, !343, !345, !347, !349, !351, !353, !355, !357, !359, !361, !363, !365, !367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !403, !405, !407, !409, !411, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !447, !449, !451, !453, !455, !457, !459, !461, !463, !465, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !487, !489, !491, !493, !495, !497, !499, !501, !503, !505, !507, !509, !511, !513, !515, !517, !519, !521, !523, !525, !527, !529, !531, !533, !535, !537, !539, !541, !543, !545, !547, !549, !551, !553, !555, !557, !559, !561, !563, !565, !567, !569, !571, !573, !575, !577, !579, !581, !583, !585, !587, !589, !591, !593, !595, !597, !599, !601, !603, !605, !607, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !635, !637, !639, !641, !643, !645, !647, !649, !651, !653, !655, !657, !659, !661, !663, !665, !667, !669, !671, !673, !675, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !705, !707, !709, !711, !713, !715, !717, !719, !721, !723, !725, !727, !729, !731, !733, !735, !737, !739, !741, !743, !745, !747, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767, !769, !771, !773, !775, !777, !779, !781, !783, !785, !787, !789, !791, !793, !795, !797, !799, !801, !803, !805, !807, !809, !811, !813, !815, !817, !819, !821, !823, !825, !827, !829, !831, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917, !919, !921, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941, !943, !945, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1037, !1039, !1041, !1043, !1045, !1047, !1049, !1051, !1053, !1055, !1057, !1059, !1061, !1063, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101, !1103, !1105, !1107, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1146, !1147, !1149, !1151, !1153, !1155, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1170, !1171, !1173, !1175, !1177, !1179, !1181, !1183, !1185, !1187, !1188, !1189, !1190, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1205, !1207, !1209, !1211, !1212, !1213, !1215, !1217, !1219, !1221, !1223, !1225, !1227, !1229, !1231, !1232, !1233, !1235, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1254, !1255, !1257, !1259, !1261, !1263, !1265, !1267, !1269, !1271, !1273, !1275, !1276, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1296, !1297, !1298, !1299, !1300, !1302, !1304, !1305, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1379, !1380, !1381, !1383, !1385, !1387, !1389, !1391, !1392, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1422, !1423, !1424, !1425, !1427, !1428, !1430, !1431, !1433, !1434, !1436, !1437, !1439, !1440, !1442, !1443, !1445, !1446, !1448, !1449, !1451, !1452, !1454, !1456, !1458, !1460, !1462, !1464, !1466, !1468, !1470, !1472, !1473, !1474, !1476, !1477, !1478, !1480, !1481, !1483, !1485, !1487, !1489, !1491, !1493, !1495, !1497, !1499, !1501, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1529, !1531, !1533, !1535, !1537, !1539, !1541, !1543, !1545, !1547, !1549, !1551, !1553, !1555, !1557, !1559, !1561, !1563, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1655, !1657, !1659, !1661, !1663, !1665, !1667, !1669, !1671, !1673, !1675, !1677, !1679, !1681, !1683, !1685, !1687, !1689, !1691, !1693, !1695, !1697, !1699, !1701, !1703, !1705, !1707, !1709, !1711, !1713, !1715, !1717, !1719, !1721, !1723, !1725, !1727, !1729, !1731, !1733, !1735, !1737, !1739, !1741, !1743, !1745, !1747, !1749, !1750, !1751, !1752, !1753, !1755, !1757, !1759, !1761, !1763, !1765, !1767, !1769, !1771, !1773, !1775, !1777, !1779, !1781, !1783, !1785, !1787, !1789, !1791, !1793, !1795, !1797, !1799, !1801, !1803, !1805, !1807, !1809, !1811, !1813, !1815, !1817, !1819, !1821, !1823, !1825, !1827, !1829, !1831, !1833, !1835, !1837, !1839, !1841, !1843, !1845, !1847, !1849, !1851, !1853, !1855, !1857, !1859, !1861, !1863, !1865, !1867, !1869, !1871, !1873, !1875, !1877, !1879, !1881, !1883, !1885, !1887, !1889, !1891, !1893, !1895, !1897, !1899, !1901, !1903, !1905, !1907, !1909, !1911, !1913, !1915, !1917, !1919, !1921, !1923, !1925, !1927, !1929, !1931, !1933, !1935, !1937, !1939, !1941, !1943, !1945, !1947, !1949, !1951, !1953, !1955, !1957, !1959, !1961, !1963, !1965, !1967, !1969, !1971, !1973, !1975, !1977, !1979, !1981, !1983, !1985, !1987, !1989, !1991, !1993, !1995, !1997, !1999, !2001, !2003, !2005, !2007, !2009, !2011, !2013, !2015, !2017, !2019, !2021, !2023, !2025, !2027, !2029, !2031, !2033, !2035, !2037, !2039, !2041, !2043, !2045, !2047, !2049, !2051, !2053, !2055, !2057, !2059, !2061, !2063, !2065, !2067, !2069, !2071, !2073, !2075, !2077, !2079, !2081, !2083, !2085, !2087, !2089, !2091, !2093, !2095, !2097, !2099, !2101, !2103, !2105, !2107, !2109, !2111, !2113, !2115, !2117, !2119, !2121, !2123, !2125, !2127, !2129, !2131, !2133, !2135, !2137, !2139, !2141, !2143, !2145, !2147, !2149, !2151, !2153, !2155, !2157, !2159, !2161, !2163, !2165, !2167, !2169, !2171, !2173, !2175, !2177}
!llvm.module.flags = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186}
!llvm.ident = !{!2187}

!0 = !{ptr @__UNIQUE_ID_file263, !1, !"__UNIQUE_ID_file263", i1 false, i1 false}
!1 = !{!"../sound/pci/hda/patch_realtek.c", i32 11450, i32 1}
!2 = !{ptr @__UNIQUE_ID_license264, !1, !"__UNIQUE_ID_license264", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_description265, !4, !"__UNIQUE_ID_description265", i1 false, i1 false}
!4 = !{!"../sound/pci/hda/patch_realtek.c", i32 11451, i32 1}
!5 = !{ptr @__initcall__kmod_snd_hda_codec_realtek__266_11457_realtek_driver_init6, !6, !"__initcall__kmod_snd_hda_codec_realtek__266_11457_realtek_driver_init6", i1 false, i1 false}
!6 = !{!"../sound/pci/hda/patch_realtek.c", i32 11457, i32 1}
!7 = !{ptr @__exitcall_realtek_driver_exit, !6, !"__exitcall_realtek_driver_exit", i1 false, i1 false}
!8 = !{ptr @.str, !6, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @realtek_driver, !10, !"realtek_driver", i1 false, i1 false}
!10 = !{!"../sound/pci/hda/patch_realtek.c", i32 11453, i32 32}
!11 = !{ptr @.str.1, !12, !"<string literal>", i1 false, i1 false}
!12 = !{!"../sound/pci/hda/patch_realtek.c", i32 11368, i32 2}
!13 = !{ptr @.str.2, !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"../sound/pci/hda/patch_realtek.c", i32 11369, i32 2}
!15 = !{ptr @.str.3, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../sound/pci/hda/patch_realtek.c", i32 11370, i32 2}
!17 = !{ptr @.str.4, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../sound/pci/hda/patch_realtek.c", i32 11371, i32 2}
!19 = !{ptr @.str.5, !20, !"<string literal>", i1 false, i1 false}
!20 = !{!"../sound/pci/hda/patch_realtek.c", i32 11372, i32 2}
!21 = !{ptr @.str.6, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../sound/pci/hda/patch_realtek.c", i32 11373, i32 2}
!23 = !{ptr @.str.7, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../sound/pci/hda/patch_realtek.c", i32 11374, i32 2}
!25 = !{ptr @.str.8, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../sound/pci/hda/patch_realtek.c", i32 11375, i32 2}
!27 = !{ptr @.str.9, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../sound/pci/hda/patch_realtek.c", i32 11378, i32 2}
!29 = !{ptr @.str.10, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../sound/pci/hda/patch_realtek.c", i32 11379, i32 2}
!31 = !{ptr @.str.11, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../sound/pci/hda/patch_realtek.c", i32 11380, i32 2}
!33 = !{ptr @.str.12, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../sound/pci/hda/patch_realtek.c", i32 11381, i32 2}
!35 = !{ptr @.str.13, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../sound/pci/hda/patch_realtek.c", i32 11382, i32 2}
!37 = !{ptr @.str.14, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../sound/pci/hda/patch_realtek.c", i32 11383, i32 2}
!39 = !{ptr @.str.15, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../sound/pci/hda/patch_realtek.c", i32 11384, i32 2}
!41 = !{ptr @.str.16, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../sound/pci/hda/patch_realtek.c", i32 11385, i32 2}
!43 = !{ptr @.str.17, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../sound/pci/hda/patch_realtek.c", i32 11386, i32 2}
!45 = !{ptr @.str.18, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../sound/pci/hda/patch_realtek.c", i32 11387, i32 2}
!47 = !{ptr @.str.19, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../sound/pci/hda/patch_realtek.c", i32 11388, i32 2}
!49 = !{ptr @.str.20, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../sound/pci/hda/patch_realtek.c", i32 11389, i32 2}
!51 = !{ptr @.str.21, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../sound/pci/hda/patch_realtek.c", i32 11390, i32 2}
!53 = !{ptr @.str.22, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../sound/pci/hda/patch_realtek.c", i32 11391, i32 2}
!55 = !{ptr @.str.23, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../sound/pci/hda/patch_realtek.c", i32 11392, i32 2}
!57 = !{ptr @.str.24, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../sound/pci/hda/patch_realtek.c", i32 11393, i32 2}
!59 = !{ptr @.str.25, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../sound/pci/hda/patch_realtek.c", i32 11394, i32 2}
!61 = !{ptr @.str.26, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../sound/pci/hda/patch_realtek.c", i32 11395, i32 2}
!63 = !{ptr @.str.27, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../sound/pci/hda/patch_realtek.c", i32 11396, i32 2}
!65 = !{ptr @.str.28, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../sound/pci/hda/patch_realtek.c", i32 11397, i32 2}
!67 = !{ptr @.str.29, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../sound/pci/hda/patch_realtek.c", i32 11398, i32 2}
!69 = !{ptr @.str.30, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../sound/pci/hda/patch_realtek.c", i32 11399, i32 2}
!71 = !{ptr @.str.31, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../sound/pci/hda/patch_realtek.c", i32 11400, i32 2}
!73 = !{ptr @.str.32, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../sound/pci/hda/patch_realtek.c", i32 11401, i32 2}
!75 = !{ptr @.str.33, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../sound/pci/hda/patch_realtek.c", i32 11402, i32 2}
!77 = !{ptr @.str.34, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../sound/pci/hda/patch_realtek.c", i32 11403, i32 2}
!79 = !{ptr @.str.35, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../sound/pci/hda/patch_realtek.c", i32 11404, i32 2}
!81 = !{ptr @.str.36, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../sound/pci/hda/patch_realtek.c", i32 11405, i32 2}
!83 = !{ptr @.str.37, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../sound/pci/hda/patch_realtek.c", i32 11406, i32 2}
!85 = !{ptr @.str.38, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../sound/pci/hda/patch_realtek.c", i32 11407, i32 2}
!87 = !{ptr @.str.39, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../sound/pci/hda/patch_realtek.c", i32 11408, i32 2}
!89 = !{ptr @.str.40, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../sound/pci/hda/patch_realtek.c", i32 11409, i32 2}
!91 = !{ptr @.str.41, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../sound/pci/hda/patch_realtek.c", i32 11410, i32 2}
!93 = !{ptr @.str.42, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../sound/pci/hda/patch_realtek.c", i32 11411, i32 2}
!95 = !{ptr @.str.43, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../sound/pci/hda/patch_realtek.c", i32 11412, i32 2}
!97 = !{ptr @.str.44, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../sound/pci/hda/patch_realtek.c", i32 11413, i32 2}
!99 = !{ptr @.str.45, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../sound/pci/hda/patch_realtek.c", i32 11414, i32 2}
!101 = !{ptr @.str.46, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../sound/pci/hda/patch_realtek.c", i32 11415, i32 2}
!103 = !{ptr @.str.47, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../sound/pci/hda/patch_realtek.c", i32 11416, i32 2}
!105 = !{ptr @.str.48, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../sound/pci/hda/patch_realtek.c", i32 11417, i32 2}
!107 = !{ptr @.str.49, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../sound/pci/hda/patch_realtek.c", i32 11418, i32 2}
!109 = !{ptr @.str.50, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../sound/pci/hda/patch_realtek.c", i32 11419, i32 2}
!111 = !{ptr @.str.51, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../sound/pci/hda/patch_realtek.c", i32 11420, i32 2}
!113 = !{ptr @.str.52, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../sound/pci/hda/patch_realtek.c", i32 11421, i32 2}
!115 = !{ptr @.str.53, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../sound/pci/hda/patch_realtek.c", i32 11422, i32 2}
!117 = !{ptr @.str.54, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../sound/pci/hda/patch_realtek.c", i32 11423, i32 2}
!119 = !{ptr @.str.55, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../sound/pci/hda/patch_realtek.c", i32 11424, i32 2}
!121 = !{ptr @.str.56, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../sound/pci/hda/patch_realtek.c", i32 11425, i32 2}
!123 = !{ptr @.str.57, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../sound/pci/hda/patch_realtek.c", i32 11426, i32 2}
!125 = !{ptr @.str.58, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../sound/pci/hda/patch_realtek.c", i32 11427, i32 2}
!127 = !{ptr @.str.59, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../sound/pci/hda/patch_realtek.c", i32 11428, i32 2}
!129 = !{ptr @.str.60, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../sound/pci/hda/patch_realtek.c", i32 11429, i32 2}
!131 = !{ptr @.str.61, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../sound/pci/hda/patch_realtek.c", i32 11430, i32 2}
!133 = !{ptr @.str.62, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../sound/pci/hda/patch_realtek.c", i32 11431, i32 2}
!135 = !{ptr @.str.63, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../sound/pci/hda/patch_realtek.c", i32 11432, i32 2}
!137 = !{ptr @.str.64, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../sound/pci/hda/patch_realtek.c", i32 11434, i32 2}
!139 = !{ptr @.str.65, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../sound/pci/hda/patch_realtek.c", i32 11435, i32 2}
!141 = !{ptr @.str.66, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../sound/pci/hda/patch_realtek.c", i32 11436, i32 2}
!143 = !{ptr @.str.67, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../sound/pci/hda/patch_realtek.c", i32 11437, i32 2}
!145 = !{ptr @.str.68, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../sound/pci/hda/patch_realtek.c", i32 11438, i32 2}
!147 = !{ptr @.str.69, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../sound/pci/hda/patch_realtek.c", i32 11439, i32 2}
!149 = !{ptr @.str.70, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../sound/pci/hda/patch_realtek.c", i32 11440, i32 2}
!151 = !{ptr @.str.71, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../sound/pci/hda/patch_realtek.c", i32 11441, i32 2}
!153 = !{ptr @.str.72, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../sound/pci/hda/patch_realtek.c", i32 11442, i32 2}
!155 = !{ptr @.str.73, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../sound/pci/hda/patch_realtek.c", i32 11443, i32 2}
!157 = !{ptr @.str.74, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../sound/pci/hda/patch_realtek.c", i32 11444, i32 2}
!159 = !{ptr @snd_hda_id_realtek, !160, !"snd_hda_id_realtek", i1 false, i1 false}
!160 = !{!"../sound/pci/hda/patch_realtek.c", i32 11367, i32 35}
!161 = !{ptr @.str.75, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../sound/pci/hda/patch_realtek.c", i32 9940, i32 11}
!163 = !{ptr @.str.76, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../sound/pci/hda/patch_realtek.c", i32 9947, i32 11}
!165 = !{ptr @.str.77, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../sound/pci/hda/patch_realtek.c", i32 10077, i32 3}
!167 = !{ptr @.str.78, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @.str.79, !166, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @patch_alc269.__UNIQUE_ID_ddebug262, !166, !"__UNIQUE_ID_ddebug262", i1 false, i1 false}
!170 = !{ptr @alc_alloc_spec.__key, !171, !"__key", i1 false, i1 false}
!171 = !{!"../sound/pci/hda/patch_realtek.c", i32 1203, i32 2}
!172 = !{ptr @.str.80, !171, !"<string literal>", i1 false, i1 false}
!173 = !{ptr @alc_patch_ops, !174, !"alc_patch_ops", i1 false, i1 false}
!174 = !{!"../sound/pci/hda/patch_realtek.c", i32 987, i32 35}
!175 = !{ptr @alc_auto_setup_eapd.pins, !176, !"pins", i1 false, i1 false}
!176 = !{!"../sound/pci/hda/patch_realtek.c", i32 544, i32 25}
!177 = !{ptr @.str.81, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../sound/pci/hda/patch_realtek.c", i32 944, i32 36}
!179 = !{ptr @.str.82, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../sound/pci/hda/patch_realtek.c", i32 1022, i32 32}
!181 = !{ptr @.str.83, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../sound/pci/hda/patch_realtek.c", i32 1023, i32 32}
!183 = !{ptr @.str.84, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../sound/pci/hda/patch_realtek.c", i32 1024, i32 32}
!185 = !{ptr @.str.85, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../sound/pci/hda/patch_realtek.c", i32 1025, i32 32}
!187 = !{ptr @.str.86, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../sound/pci/hda/patch_realtek.c", i32 1027, i32 32}
!189 = !{ptr @.str.87, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../sound/pci/hda/patch_realtek.c", i32 1028, i32 32}
!191 = !{ptr @.str.88, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../sound/pci/hda/patch_realtek.c", i32 1029, i32 32}
!193 = !{ptr @.str.89, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../sound/pci/hda/patch_realtek.c", i32 1030, i32 32}
!195 = !{ptr @.str.90, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../sound/pci/hda/patch_realtek.c", i32 1031, i32 32}
!197 = !{ptr @.str.91, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../sound/pci/hda/patch_realtek.c", i32 1032, i32 32}
!199 = !{ptr @.str.92, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../sound/pci/hda/patch_realtek.c", i32 1033, i32 32}
!201 = !{ptr @.str.93, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../sound/pci/hda/patch_realtek.c", i32 1034, i32 32}
!203 = !{ptr @.str.94, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../sound/pci/hda/patch_realtek.c", i32 1035, i32 32}
!205 = !{ptr @rename_tbl, !206, !"rename_tbl", i1 false, i1 false}
!206 = !{!"../sound/pci/hda/patch_realtek.c", i32 1020, i32 44}
!207 = !{ptr @.str.95, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../sound/pci/hda/patch_realtek.c", i32 1042, i32 27}
!209 = !{ptr @.str.96, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../sound/pci/hda/patch_realtek.c", i32 1043, i32 27}
!211 = !{ptr @.str.97, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../sound/pci/hda/patch_realtek.c", i32 1044, i32 27}
!213 = !{ptr @.str.98, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../sound/pci/hda/patch_realtek.c", i32 1045, i32 27}
!215 = !{ptr @.str.99, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../sound/pci/hda/patch_realtek.c", i32 1046, i32 27}
!217 = !{ptr @.str.100, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../sound/pci/hda/patch_realtek.c", i32 1047, i32 27}
!219 = !{ptr @.str.101, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../sound/pci/hda/patch_realtek.c", i32 1048, i32 27}
!221 = !{ptr @.str.102, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../sound/pci/hda/patch_realtek.c", i32 1049, i32 27}
!223 = !{ptr @.str.103, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../sound/pci/hda/patch_realtek.c", i32 1050, i32 27}
!225 = !{ptr @.str.104, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../sound/pci/hda/patch_realtek.c", i32 1051, i32 27}
!227 = !{ptr @.str.105, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../sound/pci/hda/patch_realtek.c", i32 1052, i32 27}
!229 = !{ptr @.str.106, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../sound/pci/hda/patch_realtek.c", i32 1053, i32 27}
!231 = !{ptr @.str.107, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../sound/pci/hda/patch_realtek.c", i32 1054, i32 27}
!233 = !{ptr @.str.108, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../sound/pci/hda/patch_realtek.c", i32 1055, i32 27}
!235 = !{ptr @.str.109, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../sound/pci/hda/patch_realtek.c", i32 1056, i32 27}
!237 = !{ptr @.str.110, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../sound/pci/hda/patch_realtek.c", i32 1057, i32 27}
!239 = !{ptr @.str.111, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../sound/pci/hda/patch_realtek.c", i32 1058, i32 27}
!241 = !{ptr @.str.112, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../sound/pci/hda/patch_realtek.c", i32 1059, i32 27}
!243 = !{ptr @.str.113, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../sound/pci/hda/patch_realtek.c", i32 1060, i32 27}
!245 = !{ptr @.str.114, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../sound/pci/hda/patch_realtek.c", i32 1061, i32 27}
!247 = !{ptr @.str.115, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../sound/pci/hda/patch_realtek.c", i32 1062, i32 27}
!249 = !{ptr @.str.116, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../sound/pci/hda/patch_realtek.c", i32 1063, i32 27}
!251 = !{ptr @.str.117, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../sound/pci/hda/patch_realtek.c", i32 1064, i32 27}
!253 = !{ptr @.str.118, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../sound/pci/hda/patch_realtek.c", i32 1065, i32 27}
!255 = !{ptr @.str.119, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../sound/pci/hda/patch_realtek.c", i32 1066, i32 27}
!257 = !{ptr @.str.120, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../sound/pci/hda/patch_realtek.c", i32 1067, i32 27}
!259 = !{ptr @.str.121, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../sound/pci/hda/patch_realtek.c", i32 1068, i32 27}
!261 = !{ptr @rename_pci_tbl, !262, !"rename_pci_tbl", i1 false, i1 false}
!262 = !{!"../sound/pci/hda/patch_realtek.c", i32 1041, i32 48}
!263 = !{ptr @alc282_coefs, !264, !"alc282_coefs", i1 false, i1 false}
!264 = !{!"../sound/pci/hda/patch_realtek.c", i32 3317, i32 29}
!265 = !{ptr @alc283_coefs, !266, !"alc283_coefs", i1 false, i1 false}
!266 = !{!"../sound/pci/hda/patch_realtek.c", i32 3429, i32 29}
!267 = !{ptr @.str.122, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../sound/pci/hda/patch_realtek.c", i32 9289, i32 36}
!269 = !{ptr @.str.123, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../sound/pci/hda/patch_realtek.c", i32 9290, i32 36}
!271 = !{ptr @.str.124, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../sound/pci/hda/patch_realtek.c", i32 9291, i32 43}
!273 = !{ptr @.str.125, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../sound/pci/hda/patch_realtek.c", i32 9292, i32 36}
!275 = !{ptr @.str.126, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../sound/pci/hda/patch_realtek.c", i32 9293, i32 40}
!277 = !{ptr @.str.127, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../sound/pci/hda/patch_realtek.c", i32 9294, i32 43}
!279 = !{ptr @.str.128, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../sound/pci/hda/patch_realtek.c", i32 9295, i32 44}
!281 = !{ptr @.str.129, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../sound/pci/hda/patch_realtek.c", i32 9296, i32 54}
!283 = !{ptr @.str.130, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../sound/pci/hda/patch_realtek.c", i32 9297, i32 43}
!285 = !{ptr @.str.131, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../sound/pci/hda/patch_realtek.c", i32 9298, i32 55}
!287 = !{ptr @.str.132, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../sound/pci/hda/patch_realtek.c", i32 9299, i32 43}
!289 = !{ptr @.str.133, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../sound/pci/hda/patch_realtek.c", i32 9300, i32 53}
!291 = !{ptr @.str.134, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../sound/pci/hda/patch_realtek.c", i32 9301, i32 53}
!293 = !{ptr @.str.135, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../sound/pci/hda/patch_realtek.c", i32 9302, i32 53}
!295 = !{ptr @.str.136, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../sound/pci/hda/patch_realtek.c", i32 9303, i32 53}
!297 = !{ptr @.str.137, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../sound/pci/hda/patch_realtek.c", i32 9304, i32 53}
!299 = !{ptr @.str.138, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../sound/pci/hda/patch_realtek.c", i32 9305, i32 43}
!301 = !{ptr @.str.139, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../sound/pci/hda/patch_realtek.c", i32 9306, i32 48}
!303 = !{ptr @.str.140, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../sound/pci/hda/patch_realtek.c", i32 9307, i32 43}
!305 = !{ptr @.str.141, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../sound/pci/hda/patch_realtek.c", i32 9308, i32 38}
!307 = !{ptr @.str.142, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../sound/pci/hda/patch_realtek.c", i32 9309, i32 38}
!309 = !{ptr @.str.143, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../sound/pci/hda/patch_realtek.c", i32 9310, i32 47}
!311 = !{ptr @.str.144, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../sound/pci/hda/patch_realtek.c", i32 9311, i32 43}
!313 = !{ptr @.str.145, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../sound/pci/hda/patch_realtek.c", i32 9312, i32 51}
!315 = !{ptr @.str.146, !316, !"<string literal>", i1 false, i1 false}
!316 = !{!"../sound/pci/hda/patch_realtek.c", i32 9313, i32 47}
!317 = !{ptr @.str.147, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../sound/pci/hda/patch_realtek.c", i32 9314, i32 41}
!319 = !{ptr @.str.148, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../sound/pci/hda/patch_realtek.c", i32 9315, i32 42}
!321 = !{ptr @.str.149, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../sound/pci/hda/patch_realtek.c", i32 9316, i32 42}
!323 = !{ptr @.str.150, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../sound/pci/hda/patch_realtek.c", i32 9317, i32 43}
!325 = !{ptr @.str.151, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../sound/pci/hda/patch_realtek.c", i32 9318, i32 41}
!327 = !{ptr @.str.152, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../sound/pci/hda/patch_realtek.c", i32 9319, i32 39}
!329 = !{ptr @.str.153, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../sound/pci/hda/patch_realtek.c", i32 9320, i32 40}
!331 = !{ptr @.str.154, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../sound/pci/hda/patch_realtek.c", i32 9321, i32 47}
!333 = !{ptr @.str.155, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../sound/pci/hda/patch_realtek.c", i32 9322, i32 47}
!335 = !{ptr @.str.156, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../sound/pci/hda/patch_realtek.c", i32 9323, i32 57}
!337 = !{ptr @.str.157, !338, !"<string literal>", i1 false, i1 false}
!338 = !{!"../sound/pci/hda/patch_realtek.c", i32 9324, i32 38}
!339 = !{ptr @.str.158, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../sound/pci/hda/patch_realtek.c", i32 9325, i32 38}
!341 = !{ptr @.str.159, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../sound/pci/hda/patch_realtek.c", i32 9326, i32 48}
!343 = !{ptr @.str.160, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../sound/pci/hda/patch_realtek.c", i32 9327, i32 48}
!345 = !{ptr @.str.161, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../sound/pci/hda/patch_realtek.c", i32 9328, i32 48}
!347 = !{ptr @.str.162, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../sound/pci/hda/patch_realtek.c", i32 9329, i32 48}
!349 = !{ptr @.str.163, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../sound/pci/hda/patch_realtek.c", i32 9330, i32 49}
!351 = !{ptr @.str.164, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../sound/pci/hda/patch_realtek.c", i32 9331, i32 41}
!353 = !{ptr @.str.165, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../sound/pci/hda/patch_realtek.c", i32 9332, i32 52}
!355 = !{ptr @.str.166, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../sound/pci/hda/patch_realtek.c", i32 9333, i32 50}
!357 = !{ptr @.str.167, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../sound/pci/hda/patch_realtek.c", i32 9334, i32 41}
!359 = !{ptr @.str.168, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../sound/pci/hda/patch_realtek.c", i32 9335, i32 48}
!361 = !{ptr @.str.169, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../sound/pci/hda/patch_realtek.c", i32 9336, i32 55}
!363 = !{ptr @.str.170, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../sound/pci/hda/patch_realtek.c", i32 9337, i32 42}
!365 = !{ptr @.str.171, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../sound/pci/hda/patch_realtek.c", i32 9338, i32 51}
!367 = !{ptr @.str.172, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../sound/pci/hda/patch_realtek.c", i32 9339, i32 46}
!369 = !{ptr @.str.173, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../sound/pci/hda/patch_realtek.c", i32 9340, i32 52}
!371 = !{ptr @.str.174, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../sound/pci/hda/patch_realtek.c", i32 9341, i32 48}
!373 = !{ptr @.str.175, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../sound/pci/hda/patch_realtek.c", i32 9342, i32 42}
!375 = !{ptr @.str.176, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../sound/pci/hda/patch_realtek.c", i32 9343, i32 39}
!377 = !{ptr @.str.177, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../sound/pci/hda/patch_realtek.c", i32 9344, i32 52}
!379 = !{ptr @.str.178, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../sound/pci/hda/patch_realtek.c", i32 9345, i32 48}
!381 = !{ptr @.str.179, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../sound/pci/hda/patch_realtek.c", i32 9346, i32 45}
!383 = !{ptr @.str.180, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../sound/pci/hda/patch_realtek.c", i32 9347, i32 50}
!385 = !{ptr @.str.181, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../sound/pci/hda/patch_realtek.c", i32 9348, i32 52}
!387 = !{ptr @.str.182, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../sound/pci/hda/patch_realtek.c", i32 9349, i32 52}
!389 = !{ptr @.str.183, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../sound/pci/hda/patch_realtek.c", i32 9350, i32 53}
!391 = !{ptr @.str.184, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../sound/pci/hda/patch_realtek.c", i32 9351, i32 53}
!393 = !{ptr @.str.185, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../sound/pci/hda/patch_realtek.c", i32 9352, i32 53}
!395 = !{ptr @.str.186, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../sound/pci/hda/patch_realtek.c", i32 9353, i32 43}
!397 = !{ptr @.str.187, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../sound/pci/hda/patch_realtek.c", i32 9354, i32 44}
!399 = !{ptr @.str.188, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../sound/pci/hda/patch_realtek.c", i32 9355, i32 46}
!401 = !{ptr @.str.189, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../sound/pci/hda/patch_realtek.c", i32 9356, i32 48}
!403 = !{ptr @.str.190, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../sound/pci/hda/patch_realtek.c", i32 9357, i32 40}
!405 = !{ptr @.str.191, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../sound/pci/hda/patch_realtek.c", i32 9359, i32 51}
!407 = !{ptr @.str.192, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../sound/pci/hda/patch_realtek.c", i32 9360, i32 44}
!409 = !{ptr @.str.193, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../sound/pci/hda/patch_realtek.c", i32 9361, i32 53}
!411 = !{ptr @.str.194, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../sound/pci/hda/patch_realtek.c", i32 9362, i32 40}
!413 = !{ptr @.str.195, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../sound/pci/hda/patch_realtek.c", i32 9363, i32 49}
!415 = !{ptr @.str.196, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../sound/pci/hda/patch_realtek.c", i32 9364, i32 53}
!417 = !{ptr @.str.197, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../sound/pci/hda/patch_realtek.c", i32 9365, i32 43}
!419 = !{ptr @.str.198, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../sound/pci/hda/patch_realtek.c", i32 9366, i32 40}
!421 = !{ptr @.str.199, !422, !"<string literal>", i1 false, i1 false}
!422 = !{!"../sound/pci/hda/patch_realtek.c", i32 9367, i32 55}
!423 = !{ptr @.str.200, !424, !"<string literal>", i1 false, i1 false}
!424 = !{!"../sound/pci/hda/patch_realtek.c", i32 9368, i32 53}
!425 = !{ptr @.str.201, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../sound/pci/hda/patch_realtek.c", i32 9369, i32 56}
!427 = !{ptr @.str.202, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../sound/pci/hda/patch_realtek.c", i32 9370, i32 40}
!429 = !{ptr @.str.203, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../sound/pci/hda/patch_realtek.c", i32 9371, i32 48}
!431 = !{ptr @.str.204, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../sound/pci/hda/patch_realtek.c", i32 9372, i32 55}
!433 = !{ptr @.str.205, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../sound/pci/hda/patch_realtek.c", i32 9373, i32 46}
!435 = !{ptr @.str.206, !436, !"<string literal>", i1 false, i1 false}
!436 = !{!"../sound/pci/hda/patch_realtek.c", i32 9374, i32 53}
!437 = !{ptr @.str.207, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../sound/pci/hda/patch_realtek.c", i32 9375, i32 44}
!439 = !{ptr @.str.208, !440, !"<string literal>", i1 false, i1 false}
!440 = !{!"../sound/pci/hda/patch_realtek.c", i32 9376, i32 48}
!441 = !{ptr @.str.209, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../sound/pci/hda/patch_realtek.c", i32 9377, i32 46}
!443 = !{ptr @.str.210, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../sound/pci/hda/patch_realtek.c", i32 9378, i32 44}
!445 = !{ptr @.str.211, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../sound/pci/hda/patch_realtek.c", i32 9379, i32 42}
!447 = !{ptr @.str.212, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../sound/pci/hda/patch_realtek.c", i32 9380, i32 60}
!449 = !{ptr @.str.213, !450, !"<string literal>", i1 false, i1 false}
!450 = !{!"../sound/pci/hda/patch_realtek.c", i32 9381, i32 43}
!451 = !{ptr @.str.214, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../sound/pci/hda/patch_realtek.c", i32 9383, i32 49}
!453 = !{ptr @.str.215, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../sound/pci/hda/patch_realtek.c", i32 9384, i32 40}
!455 = !{ptr @.str.216, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../sound/pci/hda/patch_realtek.c", i32 9385, i32 46}
!457 = !{ptr @.str.217, !458, !"<string literal>", i1 false, i1 false}
!458 = !{!"../sound/pci/hda/patch_realtek.c", i32 9386, i32 52}
!459 = !{ptr @.str.218, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../sound/pci/hda/patch_realtek.c", i32 9387, i32 61}
!461 = !{ptr @.str.219, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../sound/pci/hda/patch_realtek.c", i32 9388, i32 51}
!463 = !{ptr @.str.220, !464, !"<string literal>", i1 false, i1 false}
!464 = !{!"../sound/pci/hda/patch_realtek.c", i32 9389, i32 57}
!465 = !{ptr @.str.221, !466, !"<string literal>", i1 false, i1 false}
!466 = !{!"../sound/pci/hda/patch_realtek.c", i32 9390, i32 53}
!467 = !{ptr @.str.222, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../sound/pci/hda/patch_realtek.c", i32 9391, i32 50}
!469 = !{ptr @.str.223, !470, !"<string literal>", i1 false, i1 false}
!470 = !{!"../sound/pci/hda/patch_realtek.c", i32 9392, i32 48}
!471 = !{ptr @.str.224, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../sound/pci/hda/patch_realtek.c", i32 9393, i32 39}
!473 = !{ptr @.str.225, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../sound/pci/hda/patch_realtek.c", i32 9394, i32 44}
!475 = !{ptr @.str.226, !476, !"<string literal>", i1 false, i1 false}
!476 = !{!"../sound/pci/hda/patch_realtek.c", i32 9395, i32 43}
!477 = !{ptr @.str.227, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../sound/pci/hda/patch_realtek.c", i32 9396, i32 44}
!479 = !{ptr @.str.228, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../sound/pci/hda/patch_realtek.c", i32 9397, i32 49}
!481 = !{ptr @.str.229, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../sound/pci/hda/patch_realtek.c", i32 9398, i32 58}
!483 = !{ptr @.str.230, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../sound/pci/hda/patch_realtek.c", i32 9399, i32 60}
!485 = !{ptr @.str.231, !486, !"<string literal>", i1 false, i1 false}
!486 = !{!"../sound/pci/hda/patch_realtek.c", i32 9400, i32 50}
!487 = !{ptr @.str.232, !488, !"<string literal>", i1 false, i1 false}
!488 = !{!"../sound/pci/hda/patch_realtek.c", i32 9401, i32 38}
!489 = !{ptr @.str.233, !490, !"<string literal>", i1 false, i1 false}
!490 = !{!"../sound/pci/hda/patch_realtek.c", i32 9402, i32 43}
!491 = !{ptr @.str.234, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../sound/pci/hda/patch_realtek.c", i32 9403, i32 39}
!493 = !{ptr @.str.235, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../sound/pci/hda/patch_realtek.c", i32 9404, i32 47}
!495 = !{ptr @.str.236, !496, !"<string literal>", i1 false, i1 false}
!496 = !{!"../sound/pci/hda/patch_realtek.c", i32 9405, i32 51}
!497 = !{ptr @.str.237, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../sound/pci/hda/patch_realtek.c", i32 9406, i32 52}
!499 = !{ptr @.str.238, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../sound/pci/hda/patch_realtek.c", i32 9407, i32 56}
!501 = !{ptr @.str.239, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../sound/pci/hda/patch_realtek.c", i32 9408, i32 54}
!503 = !{ptr @.str.240, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../sound/pci/hda/patch_realtek.c", i32 9409, i32 48}
!505 = !{ptr @alc269_fixup_models, !506, !"alc269_fixup_models", i1 false, i1 false}
!506 = !{!"../sound/pci/hda/patch_realtek.c", i32 9288, i32 37}
!507 = !{ptr @.str.241, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../sound/pci/hda/patch_realtek.c", i32 8766, i32 2}
!509 = !{ptr @.str.242, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../sound/pci/hda/patch_realtek.c", i32 8767, i32 2}
!511 = !{ptr @.str.243, !512, !"<string literal>", i1 false, i1 false}
!512 = !{!"../sound/pci/hda/patch_realtek.c", i32 8768, i32 2}
!513 = !{ptr @.str.244, !514, !"<string literal>", i1 false, i1 false}
!514 = !{!"../sound/pci/hda/patch_realtek.c", i32 8769, i32 2}
!515 = !{ptr @.str.245, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../sound/pci/hda/patch_realtek.c", i32 8770, i32 2}
!517 = !{ptr @.str.246, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../sound/pci/hda/patch_realtek.c", i32 8771, i32 2}
!519 = !{ptr @.str.247, !520, !"<string literal>", i1 false, i1 false}
!520 = !{!"../sound/pci/hda/patch_realtek.c", i32 8772, i32 2}
!521 = !{ptr @.str.248, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../sound/pci/hda/patch_realtek.c", i32 8773, i32 2}
!523 = !{ptr @.str.249, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../sound/pci/hda/patch_realtek.c", i32 8774, i32 2}
!525 = !{ptr @.str.250, !526, !"<string literal>", i1 false, i1 false}
!526 = !{!"../sound/pci/hda/patch_realtek.c", i32 8775, i32 2}
!527 = !{ptr @.str.251, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../sound/pci/hda/patch_realtek.c", i32 8776, i32 2}
!529 = !{ptr @.str.252, !530, !"<string literal>", i1 false, i1 false}
!530 = !{!"../sound/pci/hda/patch_realtek.c", i32 8777, i32 2}
!531 = !{ptr @.str.253, !532, !"<string literal>", i1 false, i1 false}
!532 = !{!"../sound/pci/hda/patch_realtek.c", i32 8778, i32 2}
!533 = !{ptr @.str.254, !534, !"<string literal>", i1 false, i1 false}
!534 = !{!"../sound/pci/hda/patch_realtek.c", i32 8779, i32 2}
!535 = !{ptr @.str.255, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../sound/pci/hda/patch_realtek.c", i32 8780, i32 2}
!537 = !{ptr @.str.256, !538, !"<string literal>", i1 false, i1 false}
!538 = !{!"../sound/pci/hda/patch_realtek.c", i32 8781, i32 2}
!539 = !{ptr @.str.257, !540, !"<string literal>", i1 false, i1 false}
!540 = !{!"../sound/pci/hda/patch_realtek.c", i32 8782, i32 2}
!541 = !{ptr @.str.258, !542, !"<string literal>", i1 false, i1 false}
!542 = !{!"../sound/pci/hda/patch_realtek.c", i32 8783, i32 2}
!543 = !{ptr @.str.259, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../sound/pci/hda/patch_realtek.c", i32 8784, i32 2}
!545 = !{ptr @.str.260, !546, !"<string literal>", i1 false, i1 false}
!546 = !{!"../sound/pci/hda/patch_realtek.c", i32 8785, i32 2}
!547 = !{ptr @.str.261, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../sound/pci/hda/patch_realtek.c", i32 8786, i32 2}
!549 = !{ptr @.str.262, !550, !"<string literal>", i1 false, i1 false}
!550 = !{!"../sound/pci/hda/patch_realtek.c", i32 8787, i32 2}
!551 = !{ptr @.str.263, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../sound/pci/hda/patch_realtek.c", i32 8788, i32 2}
!553 = !{ptr @.str.264, !554, !"<string literal>", i1 false, i1 false}
!554 = !{!"../sound/pci/hda/patch_realtek.c", i32 8789, i32 2}
!555 = !{ptr @.str.265, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../sound/pci/hda/patch_realtek.c", i32 8790, i32 2}
!557 = !{ptr @.str.266, !558, !"<string literal>", i1 false, i1 false}
!558 = !{!"../sound/pci/hda/patch_realtek.c", i32 8791, i32 2}
!559 = !{ptr @.str.267, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../sound/pci/hda/patch_realtek.c", i32 8792, i32 2}
!561 = !{ptr @.str.268, !562, !"<string literal>", i1 false, i1 false}
!562 = !{!"../sound/pci/hda/patch_realtek.c", i32 8793, i32 2}
!563 = !{ptr @.str.269, !564, !"<string literal>", i1 false, i1 false}
!564 = !{!"../sound/pci/hda/patch_realtek.c", i32 8794, i32 2}
!565 = !{ptr @.str.270, !566, !"<string literal>", i1 false, i1 false}
!566 = !{!"../sound/pci/hda/patch_realtek.c", i32 8795, i32 2}
!567 = !{ptr @.str.271, !568, !"<string literal>", i1 false, i1 false}
!568 = !{!"../sound/pci/hda/patch_realtek.c", i32 8796, i32 2}
!569 = !{ptr @.str.272, !570, !"<string literal>", i1 false, i1 false}
!570 = !{!"../sound/pci/hda/patch_realtek.c", i32 8797, i32 2}
!571 = !{ptr @.str.273, !572, !"<string literal>", i1 false, i1 false}
!572 = !{!"../sound/pci/hda/patch_realtek.c", i32 8798, i32 2}
!573 = !{ptr @.str.274, !574, !"<string literal>", i1 false, i1 false}
!574 = !{!"../sound/pci/hda/patch_realtek.c", i32 8799, i32 2}
!575 = !{ptr @.str.275, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../sound/pci/hda/patch_realtek.c", i32 8800, i32 2}
!577 = !{ptr @.str.276, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../sound/pci/hda/patch_realtek.c", i32 8801, i32 2}
!579 = !{ptr @.str.277, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../sound/pci/hda/patch_realtek.c", i32 8802, i32 2}
!581 = !{ptr @.str.278, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../sound/pci/hda/patch_realtek.c", i32 8803, i32 2}
!583 = !{ptr @.str.279, !584, !"<string literal>", i1 false, i1 false}
!584 = !{!"../sound/pci/hda/patch_realtek.c", i32 8804, i32 2}
!585 = !{ptr @.str.280, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../sound/pci/hda/patch_realtek.c", i32 8805, i32 2}
!587 = !{ptr @.str.281, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../sound/pci/hda/patch_realtek.c", i32 8806, i32 2}
!589 = !{ptr @.str.282, !590, !"<string literal>", i1 false, i1 false}
!590 = !{!"../sound/pci/hda/patch_realtek.c", i32 8807, i32 2}
!591 = !{ptr @.str.283, !592, !"<string literal>", i1 false, i1 false}
!592 = !{!"../sound/pci/hda/patch_realtek.c", i32 8808, i32 2}
!593 = !{ptr @.str.284, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../sound/pci/hda/patch_realtek.c", i32 8809, i32 2}
!595 = !{ptr @.str.285, !596, !"<string literal>", i1 false, i1 false}
!596 = !{!"../sound/pci/hda/patch_realtek.c", i32 8810, i32 2}
!597 = !{ptr @.str.286, !598, !"<string literal>", i1 false, i1 false}
!598 = !{!"../sound/pci/hda/patch_realtek.c", i32 8813, i32 2}
!599 = !{ptr @.str.287, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../sound/pci/hda/patch_realtek.c", i32 8815, i32 2}
!601 = !{ptr @.str.288, !602, !"<string literal>", i1 false, i1 false}
!602 = !{!"../sound/pci/hda/patch_realtek.c", i32 8816, i32 2}
!603 = !{ptr @.str.289, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../sound/pci/hda/patch_realtek.c", i32 8817, i32 2}
!605 = !{ptr @.str.290, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../sound/pci/hda/patch_realtek.c", i32 8820, i32 2}
!607 = !{ptr @.str.291, !608, !"<string literal>", i1 false, i1 false}
!608 = !{!"../sound/pci/hda/patch_realtek.c", i32 8821, i32 2}
!609 = !{ptr @.str.292, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../sound/pci/hda/patch_realtek.c", i32 8822, i32 2}
!611 = !{ptr @.str.293, !612, !"<string literal>", i1 false, i1 false}
!612 = !{!"../sound/pci/hda/patch_realtek.c", i32 8831, i32 2}
!613 = !{ptr @.str.294, !614, !"<string literal>", i1 false, i1 false}
!614 = !{!"../sound/pci/hda/patch_realtek.c", i32 8832, i32 2}
!615 = !{ptr @.str.295, !616, !"<string literal>", i1 false, i1 false}
!616 = !{!"../sound/pci/hda/patch_realtek.c", i32 8833, i32 2}
!617 = !{ptr @.str.296, !618, !"<string literal>", i1 false, i1 false}
!618 = !{!"../sound/pci/hda/patch_realtek.c", i32 8834, i32 2}
!619 = !{ptr @.str.297, !620, !"<string literal>", i1 false, i1 false}
!620 = !{!"../sound/pci/hda/patch_realtek.c", i32 8835, i32 2}
!621 = !{ptr @.str.298, !622, !"<string literal>", i1 false, i1 false}
!622 = !{!"../sound/pci/hda/patch_realtek.c", i32 8836, i32 2}
!623 = !{ptr @.str.299, !624, !"<string literal>", i1 false, i1 false}
!624 = !{!"../sound/pci/hda/patch_realtek.c", i32 8837, i32 2}
!625 = !{ptr @.str.300, !626, !"<string literal>", i1 false, i1 false}
!626 = !{!"../sound/pci/hda/patch_realtek.c", i32 8838, i32 2}
!627 = !{ptr @.str.301, !628, !"<string literal>", i1 false, i1 false}
!628 = !{!"../sound/pci/hda/patch_realtek.c", i32 8841, i32 2}
!629 = !{ptr @.str.302, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../sound/pci/hda/patch_realtek.c", i32 8843, i32 2}
!631 = !{ptr @.str.303, !632, !"<string literal>", i1 false, i1 false}
!632 = !{!"../sound/pci/hda/patch_realtek.c", i32 8844, i32 2}
!633 = !{ptr @.str.304, !634, !"<string literal>", i1 false, i1 false}
!634 = !{!"../sound/pci/hda/patch_realtek.c", i32 8845, i32 2}
!635 = !{ptr @.str.305, !636, !"<string literal>", i1 false, i1 false}
!636 = !{!"../sound/pci/hda/patch_realtek.c", i32 8847, i32 2}
!637 = !{ptr @.str.306, !638, !"<string literal>", i1 false, i1 false}
!638 = !{!"../sound/pci/hda/patch_realtek.c", i32 8854, i32 2}
!639 = !{ptr @.str.307, !640, !"<string literal>", i1 false, i1 false}
!640 = !{!"../sound/pci/hda/patch_realtek.c", i32 8855, i32 2}
!641 = !{ptr @.str.308, !642, !"<string literal>", i1 false, i1 false}
!642 = !{!"../sound/pci/hda/patch_realtek.c", i32 8856, i32 2}
!643 = !{ptr @.str.309, !644, !"<string literal>", i1 false, i1 false}
!644 = !{!"../sound/pci/hda/patch_realtek.c", i32 8860, i32 2}
!645 = !{ptr @.str.310, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../sound/pci/hda/patch_realtek.c", i32 8867, i32 2}
!647 = !{ptr @.str.311, !648, !"<string literal>", i1 false, i1 false}
!648 = !{!"../sound/pci/hda/patch_realtek.c", i32 8917, i32 2}
!649 = !{ptr @.str.312, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../sound/pci/hda/patch_realtek.c", i32 8918, i32 2}
!651 = !{ptr @.str.313, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../sound/pci/hda/patch_realtek.c", i32 8921, i32 2}
!653 = !{ptr @.str.314, !654, !"<string literal>", i1 false, i1 false}
!654 = !{!"../sound/pci/hda/patch_realtek.c", i32 8923, i32 2}
!655 = !{ptr @.str.315, !656, !"<string literal>", i1 false, i1 false}
!656 = !{!"../sound/pci/hda/patch_realtek.c", i32 8925, i32 2}
!657 = !{ptr @.str.316, !658, !"<string literal>", i1 false, i1 false}
!658 = !{!"../sound/pci/hda/patch_realtek.c", i32 8926, i32 2}
!659 = !{ptr @.str.317, !660, !"<string literal>", i1 false, i1 false}
!660 = !{!"../sound/pci/hda/patch_realtek.c", i32 8927, i32 2}
!661 = !{ptr @.str.318, !662, !"<string literal>", i1 false, i1 false}
!662 = !{!"../sound/pci/hda/patch_realtek.c", i32 8928, i32 2}
!663 = !{ptr @.str.319, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../sound/pci/hda/patch_realtek.c", i32 8929, i32 2}
!665 = !{ptr @.str.320, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../sound/pci/hda/patch_realtek.c", i32 8930, i32 2}
!667 = !{ptr @.str.321, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../sound/pci/hda/patch_realtek.c", i32 8932, i32 2}
!669 = !{ptr @.str.322, !670, !"<string literal>", i1 false, i1 false}
!670 = !{!"../sound/pci/hda/patch_realtek.c", i32 8933, i32 2}
!671 = !{ptr @.str.323, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../sound/pci/hda/patch_realtek.c", i32 8934, i32 2}
!673 = !{ptr @.str.324, !674, !"<string literal>", i1 false, i1 false}
!674 = !{!"../sound/pci/hda/patch_realtek.c", i32 8936, i32 2}
!675 = !{ptr @.str.325, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../sound/pci/hda/patch_realtek.c", i32 8937, i32 2}
!677 = !{ptr @.str.326, !678, !"<string literal>", i1 false, i1 false}
!678 = !{!"../sound/pci/hda/patch_realtek.c", i32 8938, i32 2}
!679 = !{ptr @.str.327, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../sound/pci/hda/patch_realtek.c", i32 8939, i32 2}
!681 = !{ptr @.str.328, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../sound/pci/hda/patch_realtek.c", i32 8940, i32 2}
!683 = !{ptr @.str.329, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../sound/pci/hda/patch_realtek.c", i32 8942, i32 2}
!685 = !{ptr @.str.330, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../sound/pci/hda/patch_realtek.c", i32 8943, i32 2}
!687 = !{ptr @.str.331, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../sound/pci/hda/patch_realtek.c", i32 8948, i32 2}
!689 = !{ptr @.str.332, !690, !"<string literal>", i1 false, i1 false}
!690 = !{!"../sound/pci/hda/patch_realtek.c", i32 8950, i32 2}
!691 = !{ptr @.str.333, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../sound/pci/hda/patch_realtek.c", i32 8952, i32 2}
!693 = !{ptr @.str.334, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../sound/pci/hda/patch_realtek.c", i32 8954, i32 2}
!695 = !{ptr @.str.335, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../sound/pci/hda/patch_realtek.c", i32 8955, i32 2}
!697 = !{ptr @.str.336, !698, !"<string literal>", i1 false, i1 false}
!698 = !{!"../sound/pci/hda/patch_realtek.c", i32 8956, i32 2}
!699 = !{ptr @.str.337, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../sound/pci/hda/patch_realtek.c", i32 8957, i32 2}
!701 = !{ptr @.str.338, !702, !"<string literal>", i1 false, i1 false}
!702 = !{!"../sound/pci/hda/patch_realtek.c", i32 8960, i32 2}
!703 = !{ptr @.str.339, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../sound/pci/hda/patch_realtek.c", i32 8962, i32 2}
!705 = !{ptr @.str.340, !706, !"<string literal>", i1 false, i1 false}
!706 = !{!"../sound/pci/hda/patch_realtek.c", i32 8963, i32 2}
!707 = !{ptr @.str.341, !708, !"<string literal>", i1 false, i1 false}
!708 = !{!"../sound/pci/hda/patch_realtek.c", i32 8964, i32 2}
!709 = !{ptr @.str.342, !710, !"<string literal>", i1 false, i1 false}
!710 = !{!"../sound/pci/hda/patch_realtek.c", i32 8966, i32 2}
!711 = !{ptr @.str.343, !712, !"<string literal>", i1 false, i1 false}
!712 = !{!"../sound/pci/hda/patch_realtek.c", i32 8967, i32 2}
!713 = !{ptr @.str.344, !714, !"<string literal>", i1 false, i1 false}
!714 = !{!"../sound/pci/hda/patch_realtek.c", i32 8968, i32 2}
!715 = !{ptr @.str.345, !716, !"<string literal>", i1 false, i1 false}
!716 = !{!"../sound/pci/hda/patch_realtek.c", i32 8969, i32 2}
!717 = !{ptr @.str.346, !718, !"<string literal>", i1 false, i1 false}
!718 = !{!"../sound/pci/hda/patch_realtek.c", i32 8970, i32 2}
!719 = !{ptr @.str.347, !720, !"<string literal>", i1 false, i1 false}
!720 = !{!"../sound/pci/hda/patch_realtek.c", i32 8972, i32 2}
!721 = !{ptr @.str.348, !722, !"<string literal>", i1 false, i1 false}
!722 = !{!"../sound/pci/hda/patch_realtek.c", i32 8973, i32 2}
!723 = !{ptr @.str.349, !724, !"<string literal>", i1 false, i1 false}
!724 = !{!"../sound/pci/hda/patch_realtek.c", i32 8974, i32 2}
!725 = !{ptr @.str.350, !726, !"<string literal>", i1 false, i1 false}
!726 = !{!"../sound/pci/hda/patch_realtek.c", i32 8975, i32 2}
!727 = !{ptr @.str.351, !728, !"<string literal>", i1 false, i1 false}
!728 = !{!"../sound/pci/hda/patch_realtek.c", i32 8976, i32 2}
!729 = !{ptr @.str.352, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../sound/pci/hda/patch_realtek.c", i32 8978, i32 2}
!731 = !{ptr @.str.353, !732, !"<string literal>", i1 false, i1 false}
!732 = !{!"../sound/pci/hda/patch_realtek.c", i32 8979, i32 2}
!733 = !{ptr @.str.354, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../sound/pci/hda/patch_realtek.c", i32 8982, i32 2}
!735 = !{ptr @.str.355, !736, !"<string literal>", i1 false, i1 false}
!736 = !{!"../sound/pci/hda/patch_realtek.c", i32 8983, i32 2}
!737 = !{ptr @.str.356, !738, !"<string literal>", i1 false, i1 false}
!738 = !{!"../sound/pci/hda/patch_realtek.c", i32 8984, i32 2}
!739 = !{ptr @.str.357, !740, !"<string literal>", i1 false, i1 false}
!740 = !{!"../sound/pci/hda/patch_realtek.c", i32 8985, i32 2}
!741 = !{ptr @.str.358, !742, !"<string literal>", i1 false, i1 false}
!742 = !{!"../sound/pci/hda/patch_realtek.c", i32 8987, i32 2}
!743 = !{ptr @.str.359, !744, !"<string literal>", i1 false, i1 false}
!744 = !{!"../sound/pci/hda/patch_realtek.c", i32 8988, i32 2}
!745 = !{ptr @.str.360, !746, !"<string literal>", i1 false, i1 false}
!746 = !{!"../sound/pci/hda/patch_realtek.c", i32 8989, i32 2}
!747 = !{ptr @.str.361, !748, !"<string literal>", i1 false, i1 false}
!748 = !{!"../sound/pci/hda/patch_realtek.c", i32 8990, i32 2}
!749 = !{ptr @.str.362, !750, !"<string literal>", i1 false, i1 false}
!750 = !{!"../sound/pci/hda/patch_realtek.c", i32 8991, i32 2}
!751 = !{ptr @.str.363, !752, !"<string literal>", i1 false, i1 false}
!752 = !{!"../sound/pci/hda/patch_realtek.c", i32 8992, i32 2}
!753 = !{ptr @.str.364, !754, !"<string literal>", i1 false, i1 false}
!754 = !{!"../sound/pci/hda/patch_realtek.c", i32 8993, i32 2}
!755 = !{ptr @.str.365, !756, !"<string literal>", i1 false, i1 false}
!756 = !{!"../sound/pci/hda/patch_realtek.c", i32 8994, i32 2}
!757 = !{ptr @.str.366, !758, !"<string literal>", i1 false, i1 false}
!758 = !{!"../sound/pci/hda/patch_realtek.c", i32 8995, i32 2}
!759 = !{ptr @.str.367, !760, !"<string literal>", i1 false, i1 false}
!760 = !{!"../sound/pci/hda/patch_realtek.c", i32 8996, i32 2}
!761 = !{ptr @.str.368, !762, !"<string literal>", i1 false, i1 false}
!762 = !{!"../sound/pci/hda/patch_realtek.c", i32 8997, i32 2}
!763 = !{ptr @.str.369, !764, !"<string literal>", i1 false, i1 false}
!764 = !{!"../sound/pci/hda/patch_realtek.c", i32 8998, i32 2}
!765 = !{ptr @.str.370, !766, !"<string literal>", i1 false, i1 false}
!766 = !{!"../sound/pci/hda/patch_realtek.c", i32 8999, i32 2}
!767 = !{ptr @.str.371, !768, !"<string literal>", i1 false, i1 false}
!768 = !{!"../sound/pci/hda/patch_realtek.c", i32 9000, i32 2}
!769 = !{ptr @.str.372, !770, !"<string literal>", i1 false, i1 false}
!770 = !{!"../sound/pci/hda/patch_realtek.c", i32 9001, i32 2}
!771 = !{ptr @.str.373, !772, !"<string literal>", i1 false, i1 false}
!772 = !{!"../sound/pci/hda/patch_realtek.c", i32 9002, i32 2}
!773 = !{ptr @.str.374, !774, !"<string literal>", i1 false, i1 false}
!774 = !{!"../sound/pci/hda/patch_realtek.c", i32 9003, i32 2}
!775 = !{ptr @.str.375, !776, !"<string literal>", i1 false, i1 false}
!776 = !{!"../sound/pci/hda/patch_realtek.c", i32 9004, i32 2}
!777 = !{ptr @.str.376, !778, !"<string literal>", i1 false, i1 false}
!778 = !{!"../sound/pci/hda/patch_realtek.c", i32 9005, i32 2}
!779 = !{ptr @.str.377, !780, !"<string literal>", i1 false, i1 false}
!780 = !{!"../sound/pci/hda/patch_realtek.c", i32 9006, i32 2}
!781 = !{ptr @.str.378, !782, !"<string literal>", i1 false, i1 false}
!782 = !{!"../sound/pci/hda/patch_realtek.c", i32 9007, i32 2}
!783 = !{ptr @.str.379, !784, !"<string literal>", i1 false, i1 false}
!784 = !{!"../sound/pci/hda/patch_realtek.c", i32 9008, i32 2}
!785 = !{ptr @.str.380, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../sound/pci/hda/patch_realtek.c", i32 9009, i32 2}
!787 = !{ptr @.str.381, !788, !"<string literal>", i1 false, i1 false}
!788 = !{!"../sound/pci/hda/patch_realtek.c", i32 9010, i32 2}
!789 = !{ptr @.str.382, !790, !"<string literal>", i1 false, i1 false}
!790 = !{!"../sound/pci/hda/patch_realtek.c", i32 9011, i32 2}
!791 = !{ptr @.str.383, !792, !"<string literal>", i1 false, i1 false}
!792 = !{!"../sound/pci/hda/patch_realtek.c", i32 9012, i32 2}
!793 = !{ptr @.str.384, !794, !"<string literal>", i1 false, i1 false}
!794 = !{!"../sound/pci/hda/patch_realtek.c", i32 9013, i32 2}
!795 = !{ptr @.str.385, !796, !"<string literal>", i1 false, i1 false}
!796 = !{!"../sound/pci/hda/patch_realtek.c", i32 9014, i32 2}
!797 = !{ptr @.str.386, !798, !"<string literal>", i1 false, i1 false}
!798 = !{!"../sound/pci/hda/patch_realtek.c", i32 9015, i32 2}
!799 = !{ptr @.str.387, !800, !"<string literal>", i1 false, i1 false}
!800 = !{!"../sound/pci/hda/patch_realtek.c", i32 9016, i32 2}
!801 = !{ptr @.str.388, !802, !"<string literal>", i1 false, i1 false}
!802 = !{!"../sound/pci/hda/patch_realtek.c", i32 9017, i32 2}
!803 = !{ptr @.str.389, !804, !"<string literal>", i1 false, i1 false}
!804 = !{!"../sound/pci/hda/patch_realtek.c", i32 9018, i32 2}
!805 = !{ptr @.str.390, !806, !"<string literal>", i1 false, i1 false}
!806 = !{!"../sound/pci/hda/patch_realtek.c", i32 9019, i32 2}
!807 = !{ptr @.str.391, !808, !"<string literal>", i1 false, i1 false}
!808 = !{!"../sound/pci/hda/patch_realtek.c", i32 9020, i32 2}
!809 = !{ptr @.str.392, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../sound/pci/hda/patch_realtek.c", i32 9022, i32 2}
!811 = !{ptr @.str.393, !812, !"<string literal>", i1 false, i1 false}
!812 = !{!"../sound/pci/hda/patch_realtek.c", i32 9023, i32 2}
!813 = !{ptr @.str.394, !814, !"<string literal>", i1 false, i1 false}
!814 = !{!"../sound/pci/hda/patch_realtek.c", i32 9024, i32 2}
!815 = !{ptr @.str.395, !816, !"<string literal>", i1 false, i1 false}
!816 = !{!"../sound/pci/hda/patch_realtek.c", i32 9025, i32 2}
!817 = !{ptr @.str.396, !818, !"<string literal>", i1 false, i1 false}
!818 = !{!"../sound/pci/hda/patch_realtek.c", i32 9026, i32 2}
!819 = !{ptr @.str.397, !820, !"<string literal>", i1 false, i1 false}
!820 = !{!"../sound/pci/hda/patch_realtek.c", i32 9027, i32 2}
!821 = !{ptr @.str.398, !822, !"<string literal>", i1 false, i1 false}
!822 = !{!"../sound/pci/hda/patch_realtek.c", i32 9029, i32 2}
!823 = !{ptr @.str.399, !824, !"<string literal>", i1 false, i1 false}
!824 = !{!"../sound/pci/hda/patch_realtek.c", i32 9030, i32 2}
!825 = !{ptr @.str.400, !826, !"<string literal>", i1 false, i1 false}
!826 = !{!"../sound/pci/hda/patch_realtek.c", i32 9033, i32 2}
!827 = !{ptr @.str.401, !828, !"<string literal>", i1 false, i1 false}
!828 = !{!"../sound/pci/hda/patch_realtek.c", i32 9034, i32 2}
!829 = !{ptr @.str.402, !830, !"<string literal>", i1 false, i1 false}
!830 = !{!"../sound/pci/hda/patch_realtek.c", i32 9035, i32 2}
!831 = !{ptr @.str.403, !832, !"<string literal>", i1 false, i1 false}
!832 = !{!"../sound/pci/hda/patch_realtek.c", i32 9036, i32 2}
!833 = !{ptr @.str.404, !834, !"<string literal>", i1 false, i1 false}
!834 = !{!"../sound/pci/hda/patch_realtek.c", i32 9037, i32 2}
!835 = !{ptr @.str.405, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../sound/pci/hda/patch_realtek.c", i32 9038, i32 2}
!837 = !{ptr @.str.406, !838, !"<string literal>", i1 false, i1 false}
!838 = !{!"../sound/pci/hda/patch_realtek.c", i32 9039, i32 2}
!839 = !{ptr @.str.407, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../sound/pci/hda/patch_realtek.c", i32 9040, i32 2}
!841 = !{ptr @.str.408, !842, !"<string literal>", i1 false, i1 false}
!842 = !{!"../sound/pci/hda/patch_realtek.c", i32 9041, i32 2}
!843 = !{ptr @.str.409, !844, !"<string literal>", i1 false, i1 false}
!844 = !{!"../sound/pci/hda/patch_realtek.c", i32 9042, i32 2}
!845 = !{ptr @.str.410, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../sound/pci/hda/patch_realtek.c", i32 9043, i32 2}
!847 = !{ptr @.str.411, !848, !"<string literal>", i1 false, i1 false}
!848 = !{!"../sound/pci/hda/patch_realtek.c", i32 9047, i32 2}
!849 = !{ptr @.str.412, !850, !"<string literal>", i1 false, i1 false}
!850 = !{!"../sound/pci/hda/patch_realtek.c", i32 9048, i32 2}
!851 = !{ptr @.str.413, !852, !"<string literal>", i1 false, i1 false}
!852 = !{!"../sound/pci/hda/patch_realtek.c", i32 9049, i32 2}
!853 = !{ptr @.str.414, !854, !"<string literal>", i1 false, i1 false}
!854 = !{!"../sound/pci/hda/patch_realtek.c", i32 9050, i32 2}
!855 = !{ptr @.str.415, !856, !"<string literal>", i1 false, i1 false}
!856 = !{!"../sound/pci/hda/patch_realtek.c", i32 9051, i32 2}
!857 = !{ptr @.str.416, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../sound/pci/hda/patch_realtek.c", i32 9052, i32 2}
!859 = !{ptr @.str.417, !860, !"<string literal>", i1 false, i1 false}
!860 = !{!"../sound/pci/hda/patch_realtek.c", i32 9053, i32 2}
!861 = !{ptr @.str.418, !862, !"<string literal>", i1 false, i1 false}
!862 = !{!"../sound/pci/hda/patch_realtek.c", i32 9054, i32 2}
!863 = !{ptr @.str.419, !864, !"<string literal>", i1 false, i1 false}
!864 = !{!"../sound/pci/hda/patch_realtek.c", i32 9055, i32 2}
!865 = !{ptr @.str.420, !866, !"<string literal>", i1 false, i1 false}
!866 = !{!"../sound/pci/hda/patch_realtek.c", i32 9056, i32 2}
!867 = !{ptr @.str.421, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../sound/pci/hda/patch_realtek.c", i32 9057, i32 2}
!869 = !{ptr @.str.422, !870, !"<string literal>", i1 false, i1 false}
!870 = !{!"../sound/pci/hda/patch_realtek.c", i32 9058, i32 2}
!871 = !{ptr @.str.423, !872, !"<string literal>", i1 false, i1 false}
!872 = !{!"../sound/pci/hda/patch_realtek.c", i32 9059, i32 2}
!873 = !{ptr @.str.424, !874, !"<string literal>", i1 false, i1 false}
!874 = !{!"../sound/pci/hda/patch_realtek.c", i32 9060, i32 2}
!875 = !{ptr @.str.425, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../sound/pci/hda/patch_realtek.c", i32 9061, i32 2}
!877 = !{ptr @.str.426, !878, !"<string literal>", i1 false, i1 false}
!878 = !{!"../sound/pci/hda/patch_realtek.c", i32 9062, i32 2}
!879 = !{ptr @.str.427, !880, !"<string literal>", i1 false, i1 false}
!880 = !{!"../sound/pci/hda/patch_realtek.c", i32 9063, i32 2}
!881 = !{ptr @.str.428, !882, !"<string literal>", i1 false, i1 false}
!882 = !{!"../sound/pci/hda/patch_realtek.c", i32 9064, i32 2}
!883 = !{ptr @.str.429, !884, !"<string literal>", i1 false, i1 false}
!884 = !{!"../sound/pci/hda/patch_realtek.c", i32 9065, i32 2}
!885 = !{ptr @.str.430, !886, !"<string literal>", i1 false, i1 false}
!886 = !{!"../sound/pci/hda/patch_realtek.c", i32 9066, i32 2}
!887 = !{ptr @.str.431, !888, !"<string literal>", i1 false, i1 false}
!888 = !{!"../sound/pci/hda/patch_realtek.c", i32 9067, i32 2}
!889 = !{ptr @.str.432, !890, !"<string literal>", i1 false, i1 false}
!890 = !{!"../sound/pci/hda/patch_realtek.c", i32 9068, i32 2}
!891 = !{ptr @.str.433, !892, !"<string literal>", i1 false, i1 false}
!892 = !{!"../sound/pci/hda/patch_realtek.c", i32 9069, i32 2}
!893 = !{ptr @.str.434, !894, !"<string literal>", i1 false, i1 false}
!894 = !{!"../sound/pci/hda/patch_realtek.c", i32 9070, i32 2}
!895 = !{ptr @.str.435, !896, !"<string literal>", i1 false, i1 false}
!896 = !{!"../sound/pci/hda/patch_realtek.c", i32 9071, i32 2}
!897 = !{ptr @.str.436, !898, !"<string literal>", i1 false, i1 false}
!898 = !{!"../sound/pci/hda/patch_realtek.c", i32 9072, i32 2}
!899 = !{ptr @.str.437, !900, !"<string literal>", i1 false, i1 false}
!900 = !{!"../sound/pci/hda/patch_realtek.c", i32 9073, i32 2}
!901 = !{ptr @.str.438, !902, !"<string literal>", i1 false, i1 false}
!902 = !{!"../sound/pci/hda/patch_realtek.c", i32 9074, i32 2}
!903 = !{ptr @.str.439, !904, !"<string literal>", i1 false, i1 false}
!904 = !{!"../sound/pci/hda/patch_realtek.c", i32 9075, i32 2}
!905 = !{ptr @.str.440, !906, !"<string literal>", i1 false, i1 false}
!906 = !{!"../sound/pci/hda/patch_realtek.c", i32 9076, i32 2}
!907 = !{ptr @.str.441, !908, !"<string literal>", i1 false, i1 false}
!908 = !{!"../sound/pci/hda/patch_realtek.c", i32 9077, i32 2}
!909 = !{ptr @.str.442, !910, !"<string literal>", i1 false, i1 false}
!910 = !{!"../sound/pci/hda/patch_realtek.c", i32 9078, i32 2}
!911 = !{ptr @.str.443, !912, !"<string literal>", i1 false, i1 false}
!912 = !{!"../sound/pci/hda/patch_realtek.c", i32 9079, i32 2}
!913 = !{ptr @.str.444, !914, !"<string literal>", i1 false, i1 false}
!914 = !{!"../sound/pci/hda/patch_realtek.c", i32 9080, i32 2}
!915 = !{ptr @.str.445, !916, !"<string literal>", i1 false, i1 false}
!916 = !{!"../sound/pci/hda/patch_realtek.c", i32 9081, i32 2}
!917 = !{ptr @.str.446, !918, !"<string literal>", i1 false, i1 false}
!918 = !{!"../sound/pci/hda/patch_realtek.c", i32 9082, i32 2}
!919 = !{ptr @.str.447, !920, !"<string literal>", i1 false, i1 false}
!920 = !{!"../sound/pci/hda/patch_realtek.c", i32 9083, i32 2}
!921 = !{ptr @.str.448, !922, !"<string literal>", i1 false, i1 false}
!922 = !{!"../sound/pci/hda/patch_realtek.c", i32 9084, i32 2}
!923 = !{ptr @.str.449, !924, !"<string literal>", i1 false, i1 false}
!924 = !{!"../sound/pci/hda/patch_realtek.c", i32 9085, i32 2}
!925 = !{ptr @.str.450, !926, !"<string literal>", i1 false, i1 false}
!926 = !{!"../sound/pci/hda/patch_realtek.c", i32 9086, i32 2}
!927 = !{ptr @.str.451, !928, !"<string literal>", i1 false, i1 false}
!928 = !{!"../sound/pci/hda/patch_realtek.c", i32 9087, i32 2}
!929 = !{ptr @.str.452, !930, !"<string literal>", i1 false, i1 false}
!930 = !{!"../sound/pci/hda/patch_realtek.c", i32 9088, i32 2}
!931 = !{ptr @.str.453, !932, !"<string literal>", i1 false, i1 false}
!932 = !{!"../sound/pci/hda/patch_realtek.c", i32 9089, i32 2}
!933 = !{ptr @.str.454, !934, !"<string literal>", i1 false, i1 false}
!934 = !{!"../sound/pci/hda/patch_realtek.c", i32 9090, i32 2}
!935 = !{ptr @.str.455, !936, !"<string literal>", i1 false, i1 false}
!936 = !{!"../sound/pci/hda/patch_realtek.c", i32 9091, i32 2}
!937 = !{ptr @.str.456, !938, !"<string literal>", i1 false, i1 false}
!938 = !{!"../sound/pci/hda/patch_realtek.c", i32 9092, i32 2}
!939 = !{ptr @.str.457, !940, !"<string literal>", i1 false, i1 false}
!940 = !{!"../sound/pci/hda/patch_realtek.c", i32 9093, i32 2}
!941 = !{ptr @.str.458, !942, !"<string literal>", i1 false, i1 false}
!942 = !{!"../sound/pci/hda/patch_realtek.c", i32 9094, i32 2}
!943 = !{ptr @.str.459, !944, !"<string literal>", i1 false, i1 false}
!944 = !{!"../sound/pci/hda/patch_realtek.c", i32 9095, i32 2}
!945 = !{ptr @.str.460, !946, !"<string literal>", i1 false, i1 false}
!946 = !{!"../sound/pci/hda/patch_realtek.c", i32 9096, i32 2}
!947 = !{ptr @.str.461, !948, !"<string literal>", i1 false, i1 false}
!948 = !{!"../sound/pci/hda/patch_realtek.c", i32 9097, i32 2}
!949 = !{ptr @.str.462, !950, !"<string literal>", i1 false, i1 false}
!950 = !{!"../sound/pci/hda/patch_realtek.c", i32 9098, i32 2}
!951 = !{ptr @.str.463, !952, !"<string literal>", i1 false, i1 false}
!952 = !{!"../sound/pci/hda/patch_realtek.c", i32 9099, i32 2}
!953 = !{ptr @.str.464, !954, !"<string literal>", i1 false, i1 false}
!954 = !{!"../sound/pci/hda/patch_realtek.c", i32 9100, i32 2}
!955 = !{ptr @.str.465, !956, !"<string literal>", i1 false, i1 false}
!956 = !{!"../sound/pci/hda/patch_realtek.c", i32 9104, i32 2}
!957 = !{ptr @.str.466, !958, !"<string literal>", i1 false, i1 false}
!958 = !{!"../sound/pci/hda/patch_realtek.c", i32 9105, i32 2}
!959 = !{ptr @.str.467, !960, !"<string literal>", i1 false, i1 false}
!960 = !{!"../sound/pci/hda/patch_realtek.c", i32 9106, i32 2}
!961 = !{ptr @.str.468, !962, !"<string literal>", i1 false, i1 false}
!962 = !{!"../sound/pci/hda/patch_realtek.c", i32 9107, i32 2}
!963 = !{ptr @.str.469, !964, !"<string literal>", i1 false, i1 false}
!964 = !{!"../sound/pci/hda/patch_realtek.c", i32 9108, i32 2}
!965 = !{ptr @.str.470, !966, !"<string literal>", i1 false, i1 false}
!966 = !{!"../sound/pci/hda/patch_realtek.c", i32 9109, i32 2}
!967 = !{ptr @.str.471, !968, !"<string literal>", i1 false, i1 false}
!968 = !{!"../sound/pci/hda/patch_realtek.c", i32 9110, i32 2}
!969 = !{ptr @.str.472, !970, !"<string literal>", i1 false, i1 false}
!970 = !{!"../sound/pci/hda/patch_realtek.c", i32 9111, i32 2}
!971 = !{ptr @.str.473, !972, !"<string literal>", i1 false, i1 false}
!972 = !{!"../sound/pci/hda/patch_realtek.c", i32 9112, i32 2}
!973 = !{ptr @.str.474, !974, !"<string literal>", i1 false, i1 false}
!974 = !{!"../sound/pci/hda/patch_realtek.c", i32 9113, i32 2}
!975 = !{ptr @.str.475, !976, !"<string literal>", i1 false, i1 false}
!976 = !{!"../sound/pci/hda/patch_realtek.c", i32 9114, i32 2}
!977 = !{ptr @.str.476, !978, !"<string literal>", i1 false, i1 false}
!978 = !{!"../sound/pci/hda/patch_realtek.c", i32 9115, i32 2}
!979 = !{ptr @.str.477, !980, !"<string literal>", i1 false, i1 false}
!980 = !{!"../sound/pci/hda/patch_realtek.c", i32 9116, i32 2}
!981 = !{ptr @.str.478, !982, !"<string literal>", i1 false, i1 false}
!982 = !{!"../sound/pci/hda/patch_realtek.c", i32 9117, i32 2}
!983 = !{ptr @.str.479, !984, !"<string literal>", i1 false, i1 false}
!984 = !{!"../sound/pci/hda/patch_realtek.c", i32 9118, i32 2}
!985 = !{ptr @.str.480, !986, !"<string literal>", i1 false, i1 false}
!986 = !{!"../sound/pci/hda/patch_realtek.c", i32 9119, i32 2}
!987 = !{ptr @.str.481, !988, !"<string literal>", i1 false, i1 false}
!988 = !{!"../sound/pci/hda/patch_realtek.c", i32 9122, i32 2}
!989 = !{ptr @.str.482, !990, !"<string literal>", i1 false, i1 false}
!990 = !{!"../sound/pci/hda/patch_realtek.c", i32 9123, i32 2}
!991 = !{ptr @.str.483, !992, !"<string literal>", i1 false, i1 false}
!992 = !{!"../sound/pci/hda/patch_realtek.c", i32 9124, i32 2}
!993 = !{ptr @.str.484, !994, !"<string literal>", i1 false, i1 false}
!994 = !{!"../sound/pci/hda/patch_realtek.c", i32 9125, i32 2}
!995 = !{ptr @.str.485, !996, !"<string literal>", i1 false, i1 false}
!996 = !{!"../sound/pci/hda/patch_realtek.c", i32 9126, i32 2}
!997 = !{ptr @.str.486, !998, !"<string literal>", i1 false, i1 false}
!998 = !{!"../sound/pci/hda/patch_realtek.c", i32 9127, i32 2}
!999 = !{ptr @.str.487, !1000, !"<string literal>", i1 false, i1 false}
!1000 = !{!"../sound/pci/hda/patch_realtek.c", i32 9128, i32 2}
!1001 = !{ptr @.str.488, !1002, !"<string literal>", i1 false, i1 false}
!1002 = !{!"../sound/pci/hda/patch_realtek.c", i32 9129, i32 2}
!1003 = !{ptr @.str.489, !1004, !"<string literal>", i1 false, i1 false}
!1004 = !{!"../sound/pci/hda/patch_realtek.c", i32 9130, i32 2}
!1005 = !{ptr @.str.490, !1006, !"<string literal>", i1 false, i1 false}
!1006 = !{!"../sound/pci/hda/patch_realtek.c", i32 9131, i32 2}
!1007 = !{ptr @.str.491, !1008, !"<string literal>", i1 false, i1 false}
!1008 = !{!"../sound/pci/hda/patch_realtek.c", i32 9132, i32 2}
!1009 = !{ptr @.str.492, !1010, !"<string literal>", i1 false, i1 false}
!1010 = !{!"../sound/pci/hda/patch_realtek.c", i32 9133, i32 2}
!1011 = !{ptr @.str.493, !1012, !"<string literal>", i1 false, i1 false}
!1012 = !{!"../sound/pci/hda/patch_realtek.c", i32 9134, i32 2}
!1013 = !{ptr @.str.494, !1014, !"<string literal>", i1 false, i1 false}
!1014 = !{!"../sound/pci/hda/patch_realtek.c", i32 9135, i32 2}
!1015 = !{ptr @.str.495, !1016, !"<string literal>", i1 false, i1 false}
!1016 = !{!"../sound/pci/hda/patch_realtek.c", i32 9136, i32 2}
!1017 = !{ptr @.str.496, !1018, !"<string literal>", i1 false, i1 false}
!1018 = !{!"../sound/pci/hda/patch_realtek.c", i32 9137, i32 2}
!1019 = !{ptr @.str.497, !1020, !"<string literal>", i1 false, i1 false}
!1020 = !{!"../sound/pci/hda/patch_realtek.c", i32 9138, i32 2}
!1021 = !{ptr @.str.498, !1022, !"<string literal>", i1 false, i1 false}
!1022 = !{!"../sound/pci/hda/patch_realtek.c", i32 9139, i32 2}
!1023 = !{ptr @.str.499, !1024, !"<string literal>", i1 false, i1 false}
!1024 = !{!"../sound/pci/hda/patch_realtek.c", i32 9140, i32 2}
!1025 = !{ptr @.str.500, !1026, !"<string literal>", i1 false, i1 false}
!1026 = !{!"../sound/pci/hda/patch_realtek.c", i32 9141, i32 2}
!1027 = !{ptr @.str.501, !1028, !"<string literal>", i1 false, i1 false}
!1028 = !{!"../sound/pci/hda/patch_realtek.c", i32 9142, i32 2}
!1029 = !{ptr @.str.502, !1030, !"<string literal>", i1 false, i1 false}
!1030 = !{!"../sound/pci/hda/patch_realtek.c", i32 9143, i32 2}
!1031 = !{ptr @.str.503, !1032, !"<string literal>", i1 false, i1 false}
!1032 = !{!"../sound/pci/hda/patch_realtek.c", i32 9144, i32 2}
!1033 = !{ptr @.str.504, !1034, !"<string literal>", i1 false, i1 false}
!1034 = !{!"../sound/pci/hda/patch_realtek.c", i32 9145, i32 2}
!1035 = !{ptr @.str.505, !1036, !"<string literal>", i1 false, i1 false}
!1036 = !{!"../sound/pci/hda/patch_realtek.c", i32 9148, i32 2}
!1037 = !{ptr @.str.506, !1038, !"<string literal>", i1 false, i1 false}
!1038 = !{!"../sound/pci/hda/patch_realtek.c", i32 9150, i32 2}
!1039 = !{ptr @.str.507, !1040, !"<string literal>", i1 false, i1 false}
!1040 = !{!"../sound/pci/hda/patch_realtek.c", i32 9157, i32 2}
!1041 = !{ptr @.str.508, !1042, !"<string literal>", i1 false, i1 false}
!1042 = !{!"../sound/pci/hda/patch_realtek.c", i32 9158, i32 2}
!1043 = !{ptr @.str.509, !1044, !"<string literal>", i1 false, i1 false}
!1044 = !{!"../sound/pci/hda/patch_realtek.c", i32 9159, i32 2}
!1045 = !{ptr @.str.510, !1046, !"<string literal>", i1 false, i1 false}
!1046 = !{!"../sound/pci/hda/patch_realtek.c", i32 9160, i32 2}
!1047 = !{ptr @.str.511, !1048, !"<string literal>", i1 false, i1 false}
!1048 = !{!"../sound/pci/hda/patch_realtek.c", i32 9161, i32 2}
!1049 = !{ptr @.str.512, !1050, !"<string literal>", i1 false, i1 false}
!1050 = !{!"../sound/pci/hda/patch_realtek.c", i32 9165, i32 2}
!1051 = !{ptr @.str.513, !1052, !"<string literal>", i1 false, i1 false}
!1052 = !{!"../sound/pci/hda/patch_realtek.c", i32 9176, i32 2}
!1053 = !{ptr @.str.514, !1054, !"<string literal>", i1 false, i1 false}
!1054 = !{!"../sound/pci/hda/patch_realtek.c", i32 9177, i32 2}
!1055 = !{ptr @.str.515, !1056, !"<string literal>", i1 false, i1 false}
!1056 = !{!"../sound/pci/hda/patch_realtek.c", i32 9178, i32 2}
!1057 = !{ptr @.str.516, !1058, !"<string literal>", i1 false, i1 false}
!1058 = !{!"../sound/pci/hda/patch_realtek.c", i32 9179, i32 2}
!1059 = !{ptr @.str.517, !1060, !"<string literal>", i1 false, i1 false}
!1060 = !{!"../sound/pci/hda/patch_realtek.c", i32 9180, i32 2}
!1061 = !{ptr @.str.518, !1062, !"<string literal>", i1 false, i1 false}
!1062 = !{!"../sound/pci/hda/patch_realtek.c", i32 9181, i32 2}
!1063 = !{ptr @.str.519, !1064, !"<string literal>", i1 false, i1 false}
!1064 = !{!"../sound/pci/hda/patch_realtek.c", i32 9182, i32 2}
!1065 = !{ptr @.str.520, !1066, !"<string literal>", i1 false, i1 false}
!1066 = !{!"../sound/pci/hda/patch_realtek.c", i32 9183, i32 2}
!1067 = !{ptr @.str.521, !1068, !"<string literal>", i1 false, i1 false}
!1068 = !{!"../sound/pci/hda/patch_realtek.c", i32 9184, i32 2}
!1069 = !{ptr @.str.522, !1070, !"<string literal>", i1 false, i1 false}
!1070 = !{!"../sound/pci/hda/patch_realtek.c", i32 9185, i32 2}
!1071 = !{ptr @.str.523, !1072, !"<string literal>", i1 false, i1 false}
!1072 = !{!"../sound/pci/hda/patch_realtek.c", i32 9186, i32 2}
!1073 = !{ptr @.str.524, !1074, !"<string literal>", i1 false, i1 false}
!1074 = !{!"../sound/pci/hda/patch_realtek.c", i32 9188, i32 2}
!1075 = !{ptr @.str.525, !1076, !"<string literal>", i1 false, i1 false}
!1076 = !{!"../sound/pci/hda/patch_realtek.c", i32 9189, i32 2}
!1077 = !{ptr @.str.526, !1078, !"<string literal>", i1 false, i1 false}
!1078 = !{!"../sound/pci/hda/patch_realtek.c", i32 9190, i32 2}
!1079 = !{ptr @.str.527, !1080, !"<string literal>", i1 false, i1 false}
!1080 = !{!"../sound/pci/hda/patch_realtek.c", i32 9191, i32 2}
!1081 = !{ptr @.str.528, !1082, !"<string literal>", i1 false, i1 false}
!1082 = !{!"../sound/pci/hda/patch_realtek.c", i32 9194, i32 2}
!1083 = !{ptr @.str.529, !1084, !"<string literal>", i1 false, i1 false}
!1084 = !{!"../sound/pci/hda/patch_realtek.c", i32 9196, i32 2}
!1085 = !{ptr @.str.530, !1086, !"<string literal>", i1 false, i1 false}
!1086 = !{!"../sound/pci/hda/patch_realtek.c", i32 9197, i32 2}
!1087 = !{ptr @.str.531, !1088, !"<string literal>", i1 false, i1 false}
!1088 = !{!"../sound/pci/hda/patch_realtek.c", i32 9198, i32 2}
!1089 = !{ptr @.str.532, !1090, !"<string literal>", i1 false, i1 false}
!1090 = !{!"../sound/pci/hda/patch_realtek.c", i32 9199, i32 2}
!1091 = !{ptr @.str.533, !1092, !"<string literal>", i1 false, i1 false}
!1092 = !{!"../sound/pci/hda/patch_realtek.c", i32 9201, i32 2}
!1093 = !{ptr @.str.534, !1094, !"<string literal>", i1 false, i1 false}
!1094 = !{!"../sound/pci/hda/patch_realtek.c", i32 9202, i32 2}
!1095 = !{ptr @.str.535, !1096, !"<string literal>", i1 false, i1 false}
!1096 = !{!"../sound/pci/hda/patch_realtek.c", i32 9203, i32 2}
!1097 = !{ptr @.str.536, !1098, !"<string literal>", i1 false, i1 false}
!1098 = !{!"../sound/pci/hda/patch_realtek.c", i32 9210, i32 2}
!1099 = !{ptr @.str.537, !1100, !"<string literal>", i1 false, i1 false}
!1100 = !{!"../sound/pci/hda/patch_realtek.c", i32 9211, i32 2}
!1101 = !{ptr @.str.538, !1102, !"<string literal>", i1 false, i1 false}
!1102 = !{!"../sound/pci/hda/patch_realtek.c", i32 9212, i32 2}
!1103 = !{ptr @.str.539, !1104, !"<string literal>", i1 false, i1 false}
!1104 = !{!"../sound/pci/hda/patch_realtek.c", i32 9213, i32 2}
!1105 = !{ptr @.str.540, !1106, !"<string literal>", i1 false, i1 false}
!1106 = !{!"../sound/pci/hda/patch_realtek.c", i32 9214, i32 2}
!1107 = !{ptr @.str.541, !1108, !"<string literal>", i1 false, i1 false}
!1108 = !{!"../sound/pci/hda/patch_realtek.c", i32 9215, i32 2}
!1109 = !{ptr @.str.542, !1110, !"<string literal>", i1 false, i1 false}
!1110 = !{!"../sound/pci/hda/patch_realtek.c", i32 9216, i32 2}
!1111 = !{ptr @.str.543, !1112, !"<string literal>", i1 false, i1 false}
!1112 = !{!"../sound/pci/hda/patch_realtek.c", i32 9217, i32 2}
!1113 = !{ptr @.str.544, !1114, !"<string literal>", i1 false, i1 false}
!1114 = !{!"../sound/pci/hda/patch_realtek.c", i32 9218, i32 2}
!1115 = !{ptr @.str.545, !1116, !"<string literal>", i1 false, i1 false}
!1116 = !{!"../sound/pci/hda/patch_realtek.c", i32 9219, i32 2}
!1117 = !{ptr @.str.546, !1118, !"<string literal>", i1 false, i1 false}
!1118 = !{!"../sound/pci/hda/patch_realtek.c", i32 9220, i32 2}
!1119 = !{ptr @.str.547, !1120, !"<string literal>", i1 false, i1 false}
!1120 = !{!"../sound/pci/hda/patch_realtek.c", i32 9221, i32 2}
!1121 = !{ptr @.str.548, !1122, !"<string literal>", i1 false, i1 false}
!1122 = !{!"../sound/pci/hda/patch_realtek.c", i32 9222, i32 2}
!1123 = !{ptr @.str.549, !1124, !"<string literal>", i1 false, i1 false}
!1124 = !{!"../sound/pci/hda/patch_realtek.c", i32 9223, i32 2}
!1125 = !{ptr @.str.550, !1126, !"<string literal>", i1 false, i1 false}
!1126 = !{!"../sound/pci/hda/patch_realtek.c", i32 9224, i32 2}
!1127 = !{ptr @.str.551, !1128, !"<string literal>", i1 false, i1 false}
!1128 = !{!"../sound/pci/hda/patch_realtek.c", i32 9225, i32 2}
!1129 = !{ptr @.str.552, !1130, !"<string literal>", i1 false, i1 false}
!1130 = !{!"../sound/pci/hda/patch_realtek.c", i32 9226, i32 2}
!1131 = !{ptr @alc269_fixup_tbl, !1132, !"alc269_fixup_tbl", i1 false, i1 false}
!1132 = !{!"../sound/pci/hda/patch_realtek.c", i32 8765, i32 35}
!1133 = !{ptr @alc269_fixups, !1134, !"alc269_fixups", i1 false, i1 false}
!1134 = !{!"../sound/pci/hda/patch_realtek.c", i32 7005, i32 31}
!1135 = !{ptr @alc271_fixup_dmic.verbs, !1136, !"verbs", i1 false, i1 false}
!1136 = !{!"../sound/pci/hda/patch_realtek.c", i32 4091, i32 31}
!1137 = !{ptr @alc269_44k_pcm_analog_playback, !1138, !"alc269_44k_pcm_analog_playback", i1 false, i1 false}
!1138 = !{!"../sound/pci/hda/patch_realtek.c", i32 3109, i32 36}
!1139 = !{ptr @alc269_44k_pcm_analog_capture, !1140, !"alc269_44k_pcm_analog_capture", i1 false, i1 false}
!1140 = !{!"../sound/pci/hda/patch_realtek.c", i32 3113, i32 36}
!1141 = distinct !{null, !1142, !"<string literal>", i1 false, i1 false}
!1142 = !{!"../sound/pci/hda/patch_realtek.c", i32 4311, i32 25}
!1143 = distinct !{null, !1144, !"<string literal>", i1 false, i1 false}
!1144 = !{!"../sound/pci/hda/patch_realtek.c", i32 4319, i32 3}
!1145 = distinct !{null, !1144, !"<string literal>", i1 false, i1 false}
!1146 = distinct !{null, !1144, !"__UNIQUE_ID_ddebug255", i1 false, i1 false}
!1147 = !{ptr @alc_headset_mode_unplugged.coef0255, !1148, !"coef0255", i1 false, i1 false}
!1148 = !{!"../sound/pci/hda/patch_realtek.c", i32 4815, i32 30}
!1149 = !{ptr @alc_headset_mode_unplugged.coef0256, !1150, !"coef0256", i1 false, i1 false}
!1150 = !{!"../sound/pci/hda/patch_realtek.c", i32 4823, i32 30}
!1151 = !{ptr @alc_headset_mode_unplugged.coef0233, !1152, !"coef0233", i1 false, i1 false}
!1152 = !{!"../sound/pci/hda/patch_realtek.c", i32 4831, i32 30}
!1153 = !{ptr @alc_headset_mode_unplugged.coef0288, !1154, !"coef0288", i1 false, i1 false}
!1154 = !{!"../sound/pci/hda/patch_realtek.c", i32 4841, i32 30}
!1155 = !{ptr @alc_headset_mode_unplugged.coef0298, !1156, !"coef0298", i1 false, i1 false}
!1156 = !{!"../sound/pci/hda/patch_realtek.c", i32 4849, i32 30}
!1157 = !{ptr @alc_headset_mode_unplugged.coef0292, !1158, !"coef0292", i1 false, i1 false}
!1158 = !{!"../sound/pci/hda/patch_realtek.c", i32 4853, i32 30}
!1159 = !{ptr @alc_headset_mode_unplugged.coef0293, !1160, !"coef0293", i1 false, i1 false}
!1160 = !{!"../sound/pci/hda/patch_realtek.c", i32 4860, i32 30}
!1161 = !{ptr @alc_headset_mode_unplugged.coef0668, !1162, !"coef0668", i1 false, i1 false}
!1162 = !{!"../sound/pci/hda/patch_realtek.c", i32 4869, i32 30}
!1163 = !{ptr @alc_headset_mode_unplugged.coef0225, !1164, !"coef0225", i1 false, i1 false}
!1164 = !{!"../sound/pci/hda/patch_realtek.c", i32 4874, i32 30}
!1165 = !{ptr @alc_headset_mode_unplugged.coef0274, !1166, !"coef0274", i1 false, i1 false}
!1166 = !{!"../sound/pci/hda/patch_realtek.c", i32 4878, i32 30}
!1167 = !{ptr @.str.658, !1168, !"<string literal>", i1 false, i1 false}
!1168 = !{!"../sound/pci/hda/patch_realtek.c", i32 4942, i32 2}
!1169 = !{ptr @.str.659, !1168, !"<string literal>", i1 false, i1 false}
!1170 = !{ptr @alc_headset_mode_unplugged.__UNIQUE_ID_ddebug256, !1168, !"__UNIQUE_ID_ddebug256", i1 false, i1 false}
!1171 = !{ptr @alc225_pre_hsmode, !1172, !"alc225_pre_hsmode", i1 false, i1 false}
!1172 = !{!"../sound/pci/hda/patch_realtek.c", i32 4801, i32 29}
!1173 = !{ptr @alc_determine_headset_type.coef0255, !1174, !"coef0255", i1 false, i1 false}
!1174 = !{!"../sound/pci/hda/patch_realtek.c", i32 5427, i32 30}
!1175 = !{ptr @alc_determine_headset_type.coef0288, !1176, !"coef0288", i1 false, i1 false}
!1176 = !{!"../sound/pci/hda/patch_realtek.c", i32 5433, i32 30}
!1177 = !{ptr @alc_determine_headset_type.coef0298, !1178, !"coef0298", i1 false, i1 false}
!1178 = !{!"../sound/pci/hda/patch_realtek.c", i32 5437, i32 30}
!1179 = !{ptr @alc_determine_headset_type.coef0293, !1180, !"coef0293", i1 false, i1 false}
!1180 = !{!"../sound/pci/hda/patch_realtek.c", i32 5445, i32 30}
!1181 = !{ptr @alc_determine_headset_type.coef0688, !1182, !"coef0688", i1 false, i1 false}
!1182 = !{!"../sound/pci/hda/patch_realtek.c", i32 5450, i32 30}
!1183 = !{ptr @alc_determine_headset_type.coef0274, !1184, !"coef0274", i1 false, i1 false}
!1184 = !{!"../sound/pci/hda/patch_realtek.c", i32 5457, i32 30}
!1185 = !{ptr @.str.660, !1186, !"<string literal>", i1 false, i1 false}
!1186 = !{!"../sound/pci/hda/patch_realtek.c", i32 5616, i32 2}
!1187 = !{ptr @.str.661, !1186, !"<string literal>", i1 false, i1 false}
!1188 = !{ptr @alc_determine_headset_type.__UNIQUE_ID_ddebug261, !1186, !"__UNIQUE_ID_ddebug261", i1 false, i1 false}
!1189 = !{ptr @.str.662, !1186, !"<string literal>", i1 false, i1 false}
!1190 = !{ptr @.str.663, !1186, !"<string literal>", i1 false, i1 false}
!1191 = !{ptr @alc_headset_mode_ctia.coef0255, !1192, !"coef0255", i1 false, i1 false}
!1192 = !{!"../sound/pci/hda/patch_realtek.c", i32 5206, i32 30}
!1193 = !{ptr @alc_headset_mode_ctia.coef0256, !1194, !"coef0256", i1 false, i1 false}
!1194 = !{!"../sound/pci/hda/patch_realtek.c", i32 5212, i32 30}
!1195 = !{ptr @alc_headset_mode_ctia.coef0233, !1196, !"coef0233", i1 false, i1 false}
!1196 = !{!"../sound/pci/hda/patch_realtek.c", i32 5217, i32 30}
!1197 = !{ptr @alc_headset_mode_ctia.coef0288, !1198, !"coef0288", i1 false, i1 false}
!1198 = !{!"../sound/pci/hda/patch_realtek.c", i32 5223, i32 30}
!1199 = !{ptr @alc_headset_mode_ctia.coef0292, !1200, !"coef0292", i1 false, i1 false}
!1200 = !{!"../sound/pci/hda/patch_realtek.c", i32 5230, i32 30}
!1201 = !{ptr @alc_headset_mode_ctia.coef0293, !1202, !"coef0293", i1 false, i1 false}
!1202 = !{!"../sound/pci/hda/patch_realtek.c", i32 5236, i32 30}
!1203 = !{ptr @alc_headset_mode_ctia.coef0688, !1204, !"coef0688", i1 false, i1 false}
!1204 = !{!"../sound/pci/hda/patch_realtek.c", i32 5241, i32 30}
!1205 = !{ptr @alc_headset_mode_ctia.coef0225_1, !1206, !"coef0225_1", i1 false, i1 false}
!1206 = !{!"../sound/pci/hda/patch_realtek.c", i32 5247, i32 30}
!1207 = !{ptr @alc_headset_mode_ctia.coef0225_2, !1208, !"coef0225_2", i1 false, i1 false}
!1208 = !{!"../sound/pci/hda/patch_realtek.c", i32 5252, i32 30}
!1209 = !{ptr @.str.664, !1210, !"<string literal>", i1 false, i1 false}
!1210 = !{!"../sound/pci/hda/patch_realtek.c", i32 5319, i32 2}
!1211 = !{ptr @.str.665, !1210, !"<string literal>", i1 false, i1 false}
!1212 = !{ptr @alc_headset_mode_ctia.__UNIQUE_ID_ddebug259, !1210, !"__UNIQUE_ID_ddebug259", i1 false, i1 false}
!1213 = !{ptr @alc_headset_mode_omtp.coef0255, !1214, !"coef0255", i1 false, i1 false}
!1214 = !{!"../sound/pci/hda/patch_realtek.c", i32 5325, i32 30}
!1215 = !{ptr @alc_headset_mode_omtp.coef0256, !1216, !"coef0256", i1 false, i1 false}
!1216 = !{!"../sound/pci/hda/patch_realtek.c", i32 5331, i32 30}
!1217 = !{ptr @alc_headset_mode_omtp.coef0233, !1218, !"coef0233", i1 false, i1 false}
!1218 = !{!"../sound/pci/hda/patch_realtek.c", i32 5336, i32 30}
!1219 = !{ptr @alc_headset_mode_omtp.coef0288, !1220, !"coef0288", i1 false, i1 false}
!1220 = !{!"../sound/pci/hda/patch_realtek.c", i32 5342, i32 30}
!1221 = !{ptr @alc_headset_mode_omtp.coef0292, !1222, !"coef0292", i1 false, i1 false}
!1222 = !{!"../sound/pci/hda/patch_realtek.c", i32 5349, i32 30}
!1223 = !{ptr @alc_headset_mode_omtp.coef0293, !1224, !"coef0293", i1 false, i1 false}
!1224 = !{!"../sound/pci/hda/patch_realtek.c", i32 5355, i32 30}
!1225 = !{ptr @alc_headset_mode_omtp.coef0688, !1226, !"coef0688", i1 false, i1 false}
!1226 = !{!"../sound/pci/hda/patch_realtek.c", i32 5360, i32 30}
!1227 = !{ptr @alc_headset_mode_omtp.coef0225, !1228, !"coef0225", i1 false, i1 false}
!1228 = !{!"../sound/pci/hda/patch_realtek.c", i32 5366, i32 30}
!1229 = !{ptr @.str.666, !1230, !"<string literal>", i1 false, i1 false}
!1230 = !{!"../sound/pci/hda/patch_realtek.c", i32 5419, i32 2}
!1231 = !{ptr @.str.667, !1230, !"<string literal>", i1 false, i1 false}
!1232 = !{ptr @alc_headset_mode_omtp.__UNIQUE_ID_ddebug260, !1230, !"__UNIQUE_ID_ddebug260", i1 false, i1 false}
!1233 = !{ptr @alc_headset_mode_mic_in.coef0255, !1234, !"coef0255", i1 false, i1 false}
!1234 = !{!"../sound/pci/hda/patch_realtek.c", i32 4949, i32 30}
!1235 = !{ptr @alc_headset_mode_mic_in.coef0256, !1236, !"coef0256", i1 false, i1 false}
!1236 = !{!"../sound/pci/hda/patch_realtek.c", i32 4954, i32 30}
!1237 = !{ptr @alc_headset_mode_mic_in.coef0233, !1238, !"coef0233", i1 false, i1 false}
!1238 = !{!"../sound/pci/hda/patch_realtek.c", i32 4960, i32 30}
!1239 = !{ptr @alc_headset_mode_mic_in.coef0288, !1240, !"coef0288", i1 false, i1 false}
!1240 = !{!"../sound/pci/hda/patch_realtek.c", i32 4967, i32 30}
!1241 = !{ptr @alc_headset_mode_mic_in.coef0292, !1242, !"coef0292", i1 false, i1 false}
!1242 = !{!"../sound/pci/hda/patch_realtek.c", i32 4976, i32 30}
!1243 = !{ptr @alc_headset_mode_mic_in.coef0293, !1244, !"coef0293", i1 false, i1 false}
!1244 = !{!"../sound/pci/hda/patch_realtek.c", i32 4981, i32 30}
!1245 = !{ptr @alc_headset_mode_mic_in.coef0688, !1246, !"coef0688", i1 false, i1 false}
!1246 = !{!"../sound/pci/hda/patch_realtek.c", i32 4987, i32 30}
!1247 = !{ptr @alc_headset_mode_mic_in.coef0225, !1248, !"coef0225", i1 false, i1 false}
!1248 = !{!"../sound/pci/hda/patch_realtek.c", i32 4993, i32 30}
!1249 = !{ptr @alc_headset_mode_mic_in.coef0274, !1250, !"coef0274", i1 false, i1 false}
!1250 = !{!"../sound/pci/hda/patch_realtek.c", i32 4999, i32 30}
!1251 = !{ptr @.str.668, !1252, !"<string literal>", i1 false, i1 false}
!1252 = !{!"../sound/pci/hda/patch_realtek.c", i32 5081, i32 2}
!1253 = !{ptr @.str.669, !1252, !"<string literal>", i1 false, i1 false}
!1254 = !{ptr @alc_headset_mode_mic_in.__UNIQUE_ID_ddebug257, !1252, !"__UNIQUE_ID_ddebug257", i1 false, i1 false}
!1255 = !{ptr @alc_headset_mode_default.coef0225, !1256, !"coef0225", i1 false, i1 false}
!1256 = !{!"../sound/pci/hda/patch_realtek.c", i32 5086, i32 30}
!1257 = !{ptr @alc_headset_mode_default.coef0255, !1258, !"coef0255", i1 false, i1 false}
!1258 = !{!"../sound/pci/hda/patch_realtek.c", i32 5095, i32 30}
!1259 = !{ptr @alc_headset_mode_default.coef0256, !1260, !"coef0256", i1 false, i1 false}
!1260 = !{!"../sound/pci/hda/patch_realtek.c", i32 5102, i32 30}
!1261 = !{ptr @alc_headset_mode_default.coef0233, !1262, !"coef0233", i1 false, i1 false}
!1262 = !{!"../sound/pci/hda/patch_realtek.c", i32 5110, i32 30}
!1263 = !{ptr @alc_headset_mode_default.coef0288, !1264, !"coef0288", i1 false, i1 false}
!1264 = !{!"../sound/pci/hda/patch_realtek.c", i32 5115, i32 30}
!1265 = !{ptr @alc_headset_mode_default.coef0292, !1266, !"coef0292", i1 false, i1 false}
!1266 = !{!"../sound/pci/hda/patch_realtek.c", i32 5123, i32 30}
!1267 = !{ptr @alc_headset_mode_default.coef0293, !1268, !"coef0293", i1 false, i1 false}
!1268 = !{!"../sound/pci/hda/patch_realtek.c", i32 5130, i32 30}
!1269 = !{ptr @alc_headset_mode_default.coef0688, !1270, !"coef0688", i1 false, i1 false}
!1270 = !{!"../sound/pci/hda/patch_realtek.c", i32 5136, i32 30}
!1271 = !{ptr @alc_headset_mode_default.coef0274, !1272, !"coef0274", i1 false, i1 false}
!1272 = !{!"../sound/pci/hda/patch_realtek.c", i32 5142, i32 30}
!1273 = !{ptr @.str.670, !1274, !"<string literal>", i1 false, i1 false}
!1274 = !{!"../sound/pci/hda/patch_realtek.c", i32 5198, i32 2}
!1275 = !{ptr @.str.671, !1274, !"<string literal>", i1 false, i1 false}
!1276 = !{ptr @alc_headset_mode_default.__UNIQUE_ID_ddebug258, !1274, !"__UNIQUE_ID_ddebug258", i1 false, i1 false}
!1277 = !{ptr @alc282_fixup_asus_tx300.dock_pins, !1278, !"dock_pins", i1 false, i1 false}
!1278 = !{!"../sound/pci/hda/patch_realtek.c", i32 6125, i32 33}
!1279 = !{ptr @.str.672, !1280, !"<string literal>", i1 false, i1 false}
!1280 = !{!"../sound/pci/hda/patch_realtek.c", i32 6148, i32 21}
!1281 = !{ptr @.str.673, !1282, !"<string literal>", i1 false, i1 false}
!1282 = !{!"../sound/pci/hda/patch_realtek.c", i32 6149, i32 7}
!1283 = !{ptr @.str.674, !1284, !"<string literal>", i1 false, i1 false}
!1284 = !{!"../sound/pci/hda/patch_realtek.c", i32 6150, i32 21}
!1285 = !{ptr @alc290_fixup_mono_speakers.conn1, !1286, !"conn1", i1 false, i1 false}
!1286 = !{!"../sound/pci/hda/patch_realtek.c", i32 6163, i32 26}
!1287 = !{ptr @alc255_set_default_jack_type.alc255fw, !1288, !"alc255fw", i1 false, i1 false}
!1288 = !{!"../sound/pci/hda/patch_realtek.c", i32 5751, i32 30}
!1289 = !{ptr @alc255_set_default_jack_type.alc256fw, !1290, !"alc256fw", i1 false, i1 false}
!1290 = !{!"../sound/pci/hda/patch_realtek.c", i32 5759, i32 30}
!1291 = !{ptr @alc_fixup_tpt440_dock.pincfgs, !1292, !"pincfgs", i1 false, i1 false}
!1292 = !{!"../sound/pci/hda/patch_realtek.c", i32 5856, i32 33}
!1293 = !{ptr @.str.675, !1294, !"<string literal>", i1 false, i1 false}
!1294 = !{!"../sound/pci/hda/patch_realtek.c", i32 4696, i32 3}
!1295 = !{ptr @.str.676, !1294, !"<string literal>", i1 false, i1 false}
!1296 = !{ptr @.str.677, !1294, !"<string literal>", i1 false, i1 false}
!1297 = !{ptr @.str.678, !1294, !"<string literal>", i1 false, i1 false}
!1298 = !{ptr @alc_register_micmute_input_device._entry, !1294, !"_entry", i1 false, i1 false}
!1299 = !{ptr @alc_register_micmute_input_device._entry_ptr, !1294, !"_entry_ptr", i1 false, i1 false}
!1300 = !{ptr @.str.679, !1301, !"<string literal>", i1 false, i1 false}
!1301 = !{!"../sound/pci/hda/patch_realtek.c", i32 4702, i32 23}
!1302 = !{ptr @.str.681, !1303, !"<string literal>", i1 false, i1 false}
!1303 = !{!"../sound/pci/hda/patch_realtek.c", i32 4711, i32 3}
!1304 = !{ptr @alc_register_micmute_input_device._entry.680, !1303, !"_entry", i1 false, i1 false}
!1305 = !{ptr @alc_register_micmute_input_device._entry_ptr.682, !1303, !"_entry_ptr", i1 false, i1 false}
!1306 = !{ptr @alc285_fixup_hp_spectre_x360_eb1.conn, !1307, !"conn", i1 false, i1 false}
!1307 = !{!"../sound/pci/hda/patch_realtek.c", i32 6510, i32 25}
!1308 = !{ptr @alc285_fixup_hp_spectre_x360_eb1.pincfgs, !1309, !"pincfgs", i1 false, i1 false}
!1309 = !{!"../sound/pci/hda/patch_realtek.c", i32 6513, i32 33}
!1310 = !{ptr @alc295_fixup_disable_dac3.conn, !1311, !"conn", i1 false, i1 false}
!1311 = !{!"../sound/pci/hda/patch_realtek.c", i32 6190, i32 26}
!1312 = !{ptr @alc285_fixup_speaker2_to_dac1.conn, !1313, !"conn", i1 false, i1 false}
!1313 = !{!"../sound/pci/hda/patch_realtek.c", i32 6200, i32 26}
!1314 = !{ptr @alc298_fixup_speaker_volume.conn1, !1315, !"conn1", i1 false, i1 false}
!1315 = !{!"../sound/pci/hda/patch_realtek.c", i32 6180, i32 26}
!1316 = !{ptr @.str.683, !1317, !"<string literal>", i1 false, i1 false}
!1317 = !{!"../sound/pci/hda/patch_realtek.c", i32 6292, i32 33}
!1318 = !{ptr @.str.684, !1319, !"<string literal>", i1 false, i1 false}
!1319 = !{!"../sound/pci/hda/patch_realtek.c", i32 6296, i32 21}
!1320 = !{ptr @.str.685, !1321, !"<string literal>", i1 false, i1 false}
!1321 = !{!"../sound/pci/hda/patch_realtek.c", i32 6298, i32 7}
!1322 = !{ptr @.str.686, !1323, !"<string literal>", i1 false, i1 false}
!1323 = !{!"../sound/pci/hda/patch_realtek.c", i32 6299, i32 7}
!1324 = !{ptr @.str.687, !1325, !"<string literal>", i1 false, i1 false}
!1325 = !{!"../sound/pci/hda/patch_realtek.c", i32 6300, i32 21}
!1326 = !{ptr @.str.688, !1327, !"<string literal>", i1 false, i1 false}
!1327 = !{!"../sound/pci/hda/patch_realtek.c", i32 6302, i32 7}
!1328 = !{ptr @.str.689, !1329, !"<string literal>", i1 false, i1 false}
!1329 = !{!"../sound/pci/hda/patch_realtek.c", i32 6303, i32 7}
!1330 = !{ptr @alc274_fixup_bind_dacs.preferred_pairs, !1331, !"preferred_pairs", i1 false, i1 false}
!1331 = !{!"../sound/pci/hda/patch_realtek.c", i32 6322, i32 25}
!1332 = !{ptr @alc_fixup_tpt470_dock.pincfgs, !1333, !"pincfgs", i1 false, i1 false}
!1333 = !{!"../sound/pci/hda/patch_realtek.c", i32 5873, i32 33}
!1334 = !{ptr @alc_fixup_tpt470_dacs.preferred_pairs, !1335, !"preferred_pairs", i1 false, i1 false}
!1335 = !{!"../sound/pci/hda/patch_realtek.c", i32 5900, i32 25}
!1336 = !{ptr @alc298_fixup_huawei_mbx_stereo.dac_init, !1337, !"dac_init", i1 false, i1 false}
!1337 = !{!"../sound/pci/hda/patch_realtek.c", i32 4210, i32 41}
!1338 = !{ptr @alc295_fixup_hp_top_speakers.pincfgs, !1339, !"pincfgs", i1 false, i1 false}
!1339 = !{!"../sound/pci/hda/hp_x360_helper.c", i32 9, i32 33}
!1340 = !{ptr @alc295_fixup_hp_top_speakers.alc295_hp_speakers_coefs, !1341, !"alc295_hp_speakers_coefs", i1 false, i1 false}
!1341 = !{!"../sound/pci/hda/hp_x360_helper.c", i32 13, i32 30}
!1342 = !{ptr @.str.690, !1343, !"<string literal>", i1 false, i1 false}
!1343 = !{!"../sound/pci/hda/patch_realtek.c", i32 3290, i32 39}
!1344 = !{ptr @alc_headset_btn_keymap, !1345, !"alc_headset_btn_keymap", i1 false, i1 false}
!1345 = !{!"../sound/pci/hda/patch_realtek.c", i32 3187, i32 37}
!1346 = !{ptr @alc285_fixup_thinkpad_x1_gen7.conn, !1347, !"conn", i1 false, i1 false}
!1347 = !{!"../sound/pci/hda/patch_realtek.c", i32 6260, i32 25}
!1348 = !{ptr @alc285_fixup_thinkpad_x1_gen7.preferred_pairs, !1349, !"preferred_pairs", i1 false, i1 false}
!1349 = !{!"../sound/pci/hda/patch_realtek.c", i32 6261, i32 25}
!1350 = !{ptr @.str.691, !1351, !"<string literal>", i1 false, i1 false}
!1351 = !{!"../sound/pci/hda/patch_realtek.c", i32 6278, i32 21}
!1352 = !{ptr @.str.692, !1353, !"<string literal>", i1 false, i1 false}
!1353 = !{!"../sound/pci/hda/patch_realtek.c", i32 6278, i32 46}
!1354 = !{ptr @.str.693, !1355, !"<string literal>", i1 false, i1 false}
!1355 = !{!"../sound/pci/hda/patch_realtek.c", i32 6279, i32 21}
!1356 = !{ptr @.str.694, !1357, !"<string literal>", i1 false, i1 false}
!1357 = !{!"../sound/pci/hda/patch_realtek.c", i32 6279, i32 53}
!1358 = !{ptr @alc289_fixup_asus_ga401.preferred_pairs, !1359, !"preferred_pairs", i1 false, i1 false}
!1359 = !{!"../sound/pci/hda/patch_realtek.c", i32 6339, i32 25}
!1360 = !{ptr @alc285_ideapad_s740_coefs, !1361, !"alc285_ideapad_s740_coefs", i1 false, i1 false}
!1361 = !{!"../sound/pci/hda/ideapad_s740_helper.c", i32 4, i32 30}
!1362 = !{ptr @alc295_fixup_asus_dacs.preferred_pairs, !1363, !"preferred_pairs", i1 false, i1 false}
!1363 = !{!"../sound/pci/hda/patch_realtek.c", i32 5913, i32 25}
!1364 = !{ptr @alc285_fixup_hp_spectre_x360.conn, !1365, !"conn", i1 false, i1 false}
!1365 = !{!"../sound/pci/hda/patch_realtek.c", i32 6545, i32 25}
!1366 = !{ptr @alc285_fixup_hp_spectre_x360.pincfgs, !1367, !"pincfgs", i1 false, i1 false}
!1367 = !{!"../sound/pci/hda/patch_realtek.c", i32 6546, i32 33}
!1368 = !{ptr @alc256_fixup_set_coef_defaults_coefs, !1369, !"alc256_fixup_set_coef_defaults_coefs", i1 false, i1 false}
!1369 = !{!"../sound/pci/hda/patch_realtek.c", i32 6717, i32 29}
!1370 = !{ptr @alc233_fixup_no_audio_jack_coefs, !1371, !"alc233_fixup_no_audio_jack_coefs", i1 false, i1 false}
!1371 = !{!"../sound/pci/hda/patch_realtek.c", i32 6739, i32 29}
!1372 = !{ptr @.str.695, !1373, !"<string literal>", i1 false, i1 false}
!1373 = !{!"../sound/pci/hda/patch_realtek.c", i32 6699, i32 9}
!1374 = !{ptr @.str.696, !1375, !"<string literal>", i1 false, i1 false}
!1375 = !{!"../sound/pci/hda/patch_realtek.c", i32 6701, i32 9}
!1376 = !{ptr @.str.697, !1377, !"<string literal>", i1 false, i1 false}
!1377 = !{!"../sound/pci/hda/patch_realtek.c", i32 6704, i32 4}
!1378 = !{ptr @.str.698, !1377, !"<string literal>", i1 false, i1 false}
!1379 = !{ptr @alc287_fixup_legion_16achg6_speakers._entry, !1377, !"_entry", i1 false, i1 false}
!1380 = !{ptr @alc287_fixup_legion_16achg6_speakers._entry_ptr, !1377, !"_entry_ptr", i1 false, i1 false}
!1381 = !{ptr @comp_master_ops, !1382, !"comp_master_ops", i1 false, i1 false}
!1382 = !{!"../sound/pci/hda/patch_realtek.c", i32 6617, i32 42}
!1383 = !{ptr @.str.699, !1384, !"<string literal>", i1 false, i1 false}
!1384 = !{!"../sound/pci/hda/patch_realtek.c", i32 6662, i32 37}
!1385 = !{ptr @.str.700, !1386, !"<string literal>", i1 false, i1 false}
!1386 = !{!"../sound/pci/hda/patch_realtek.c", i32 6662, i32 44}
!1387 = !{ptr @.str.701, !1388, !"<string literal>", i1 false, i1 false}
!1388 = !{!"../sound/pci/hda/patch_realtek.c", i32 6646, i32 12}
!1389 = !{ptr @.str.702, !1390, !"<string literal>", i1 false, i1 false}
!1390 = !{!"../sound/pci/hda/patch_realtek.c", i32 6653, i32 4}
!1391 = !{ptr @cs35l41_generic_fixup._entry, !1390, !"_entry", i1 false, i1 false}
!1392 = !{ptr @cs35l41_generic_fixup._entry_ptr, !1390, !"_entry_ptr", i1 false, i1 false}
!1393 = !{ptr @.str.704, !1394, !"<string literal>", i1 false, i1 false}
!1394 = !{!"../sound/pci/hda/patch_realtek.c", i32 9440, i32 2}
!1395 = !{ptr @.str.706, !1396, !"<string literal>", i1 false, i1 false}
!1396 = !{!"../sound/pci/hda/patch_realtek.c", i32 9446, i32 2}
!1397 = !{ptr @.str.708, !1398, !"<string literal>", i1 false, i1 false}
!1398 = !{!"../sound/pci/hda/patch_realtek.c", i32 9450, i32 2}
!1399 = !{ptr @.str.716, !1400, !"<string literal>", i1 false, i1 false}
!1400 = !{!"../sound/pci/hda/patch_realtek.c", i32 9478, i32 2}
!1401 = !{ptr @.str.718, !1402, !"<string literal>", i1 false, i1 false}
!1402 = !{!"../sound/pci/hda/patch_realtek.c", i32 9482, i32 2}
!1403 = !{ptr @.str.743, !1404, !"<string literal>", i1 false, i1 false}
!1404 = !{!"../sound/pci/hda/patch_realtek.c", i32 9581, i32 2}
!1405 = !{ptr @.str.745, !1406, !"<string literal>", i1 false, i1 false}
!1406 = !{!"../sound/pci/hda/patch_realtek.c", i32 9585, i32 2}
!1407 = !{ptr @.str.757, !1408, !"<string literal>", i1 false, i1 false}
!1408 = !{!"../sound/pci/hda/patch_realtek.c", i32 9632, i32 2}
!1409 = !{ptr @alc269_pin_fixup_tbl, !1410, !"alc269_pin_fixup_tbl", i1 false, i1 false}
!1410 = !{!"../sound/pci/hda/patch_realtek.c", i32 9439, i32 39}
!1411 = !{ptr @alc269_fallback_pin_fixup_tbl, !1412, !"alc269_fallback_pin_fixup_tbl", i1 false, i1 false}
!1412 = !{!"../sound/pci/hda/patch_realtek.c", i32 9854, i32 39}
!1413 = !{ptr @.str.809, !1414, !"<string literal>", i1 false, i1 false}
!1414 = !{!"../sound/pci/hda/patch_realtek.c", i32 9280, i32 2}
!1415 = !{ptr @.str.810, !1416, !"<string literal>", i1 false, i1 false}
!1416 = !{!"../sound/pci/hda/patch_realtek.c", i32 9284, i32 2}
!1417 = !{ptr @alc269_fixup_vendor_tbl, !1418, !"alc269_fixup_vendor_tbl", i1 false, i1 false}
!1418 = !{!"../sound/pci/hda/patch_realtek.c", i32 9279, i32 35}
!1419 = !{ptr @.str.811, !1420, !"<string literal>", i1 false, i1 false}
!1420 = !{!"../sound/pci/hda/patch_realtek.c", i32 701, i32 3}
!1421 = !{ptr @.str.812, !1420, !"<string literal>", i1 false, i1 false}
!1422 = !{ptr @.str.813, !1420, !"<string literal>", i1 false, i1 false}
!1423 = !{ptr @alc_auto_parse_customize_define._entry, !1420, !"_entry", i1 false, i1 false}
!1424 = !{ptr @alc_auto_parse_customize_define._entry_ptr, !1420, !"_entry_ptr", i1 false, i1 false}
!1425 = !{ptr @.str.814, !1426, !"<string literal>", i1 false, i1 false}
!1426 = !{!"../sound/pci/hda/patch_realtek.c", i32 726, i32 2}
!1427 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug243, !1426, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!1428 = !{ptr @.str.815, !1429, !"<string literal>", i1 false, i1 false}
!1429 = !{!"../sound/pci/hda/patch_realtek.c", i32 728, i32 2}
!1430 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug244, !1429, !"__UNIQUE_ID_ddebug244", i1 false, i1 false}
!1431 = !{ptr @.str.816, !1432, !"<string literal>", i1 false, i1 false}
!1432 = !{!"../sound/pci/hda/patch_realtek.c", i32 730, i32 2}
!1433 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug245, !1432, !"__UNIQUE_ID_ddebug245", i1 false, i1 false}
!1434 = !{ptr @.str.817, !1435, !"<string literal>", i1 false, i1 false}
!1435 = !{!"../sound/pci/hda/patch_realtek.c", i32 731, i32 2}
!1436 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug246, !1435, !"__UNIQUE_ID_ddebug246", i1 false, i1 false}
!1437 = !{ptr @.str.818, !1438, !"<string literal>", i1 false, i1 false}
!1438 = !{!"../sound/pci/hda/patch_realtek.c", i32 732, i32 2}
!1439 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug247, !1438, !"__UNIQUE_ID_ddebug247", i1 false, i1 false}
!1440 = !{ptr @.str.819, !1441, !"<string literal>", i1 false, i1 false}
!1441 = !{!"../sound/pci/hda/patch_realtek.c", i32 733, i32 2}
!1442 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug248, !1441, !"__UNIQUE_ID_ddebug248", i1 false, i1 false}
!1443 = !{ptr @.str.820, !1444, !"<string literal>", i1 false, i1 false}
!1444 = !{!"../sound/pci/hda/patch_realtek.c", i32 734, i32 2}
!1445 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug249, !1444, !"__UNIQUE_ID_ddebug249", i1 false, i1 false}
!1446 = !{ptr @.str.821, !1447, !"<string literal>", i1 false, i1 false}
!1447 = !{!"../sound/pci/hda/patch_realtek.c", i32 735, i32 2}
!1448 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug250, !1447, !"__UNIQUE_ID_ddebug250", i1 false, i1 false}
!1449 = !{ptr @.str.822, !1450, !"<string literal>", i1 false, i1 false}
!1450 = !{!"../sound/pci/hda/patch_realtek.c", i32 736, i32 2}
!1451 = !{ptr @alc_auto_parse_customize_define.__UNIQUE_ID_ddebug251, !1450, !"__UNIQUE_ID_ddebug251", i1 false, i1 false}
!1452 = !{ptr @.str.823, !1453, !"<string literal>", i1 false, i1 false}
!1453 = !{!"../sound/pci/hda/patch_realtek.c", i32 1133, i32 2}
!1454 = !{ptr @.str.824, !1455, !"<string literal>", i1 false, i1 false}
!1455 = !{!"../sound/pci/hda/patch_realtek.c", i32 1137, i32 2}
!1456 = !{ptr @.str.825, !1457, !"<string literal>", i1 false, i1 false}
!1457 = !{!"../sound/pci/hda/patch_realtek.c", i32 1138, i32 2}
!1458 = !{ptr @.str.826, !1459, !"<string literal>", i1 false, i1 false}
!1459 = !{!"../sound/pci/hda/patch_realtek.c", i32 1140, i32 2}
!1460 = !{ptr @.str.827, !1461, !"<string literal>", i1 false, i1 false}
!1461 = !{!"../sound/pci/hda/patch_realtek.c", i32 1141, i32 2}
!1462 = !{ptr @beep_allow_list, !1463, !"beep_allow_list", i1 false, i1 false}
!1463 = !{!"../sound/pci/hda/patch_realtek.c", i32 1129, i32 35}
!1464 = !{ptr @alc269_parse_auto_config.alc269_ignore, !1465, !"alc269_ignore", i1 false, i1 false}
!1465 = !{!"../sound/pci/hda/patch_realtek.c", i32 3147, i32 25}
!1466 = !{ptr @alc269_parse_auto_config.alc269_ssids, !1467, !"alc269_ssids", i1 false, i1 false}
!1467 = !{!"../sound/pci/hda/patch_realtek.c", i32 3148, i32 25}
!1468 = !{ptr @alc269_parse_auto_config.alc269va_ssids, !1469, !"alc269va_ssids", i1 false, i1 false}
!1469 = !{!"../sound/pci/hda/patch_realtek.c", i32 3149, i32 25}
!1470 = !{ptr @.str.828, !1471, !"<string literal>", i1 false, i1 false}
!1471 = !{!"../sound/pci/hda/patch_realtek.c", i32 872, i32 4}
!1472 = !{ptr @.str.829, !1471, !"<string literal>", i1 false, i1 false}
!1473 = !{ptr @alc_ssid_check.__UNIQUE_ID_ddebug254, !1471, !"__UNIQUE_ID_ddebug254", i1 false, i1 false}
!1474 = !{ptr @.str.830, !1475, !"<string literal>", i1 false, i1 false}
!1475 = !{!"../sound/pci/hda/patch_realtek.c", i32 796, i32 2}
!1476 = !{ptr @.str.831, !1475, !"<string literal>", i1 false, i1 false}
!1477 = !{ptr @alc_subsystem_id.__UNIQUE_ID_ddebug252, !1475, !"__UNIQUE_ID_ddebug252", i1 false, i1 false}
!1478 = !{ptr @.str.832, !1479, !"<string literal>", i1 false, i1 false}
!1479 = !{!"../sound/pci/hda/patch_realtek.c", i32 813, i32 2}
!1480 = !{ptr @alc_subsystem_id.__UNIQUE_ID_ddebug253, !1479, !"__UNIQUE_ID_ddebug253", i1 false, i1 false}
!1481 = !{ptr @.str.833, !1482, !"<string literal>", i1 false, i1 false}
!1482 = !{!"../sound/pci/hda/patch_realtek.c", i32 1107, i32 2}
!1483 = !{ptr @.str.834, !1484, !"<string literal>", i1 false, i1 false}
!1484 = !{!"../sound/pci/hda/patch_realtek.c", i32 1108, i32 2}
!1485 = !{ptr @alc_beep_mixer, !1486, !"alc_beep_mixer", i1 false, i1 false}
!1486 = !{!"../sound/pci/hda/patch_realtek.c", i32 1106, i32 38}
!1487 = !{ptr @.str.835, !1488, !"<string literal>", i1 false, i1 false}
!1488 = !{!"../sound/pci/hda/patch_realtek.c", i32 1875, i32 37}
!1489 = !{ptr @.str.836, !1490, !"<string literal>", i1 false, i1 false}
!1490 = !{!"../sound/pci/hda/patch_realtek.c", i32 1876, i32 36}
!1491 = !{ptr @.str.837, !1492, !"<string literal>", i1 false, i1 false}
!1492 = !{!"../sound/pci/hda/patch_realtek.c", i32 1877, i32 41}
!1493 = !{ptr @.str.838, !1494, !"<string literal>", i1 false, i1 false}
!1494 = !{!"../sound/pci/hda/patch_realtek.c", i32 1878, i32 46}
!1495 = !{ptr @alc260_fixup_models, !1496, !"alc260_fixup_models", i1 false, i1 false}
!1496 = !{!"../sound/pci/hda/patch_realtek.c", i32 1874, i32 37}
!1497 = !{ptr @.str.839, !1498, !"<string literal>", i1 false, i1 false}
!1498 = !{!"../sound/pci/hda/patch_realtek.c", i32 1859, i32 2}
!1499 = !{ptr @.str.840, !1500, !"<string literal>", i1 false, i1 false}
!1500 = !{!"../sound/pci/hda/patch_realtek.c", i32 1860, i32 2}
!1501 = !{ptr @.str.841, !1502, !"<string literal>", i1 false, i1 false}
!1502 = !{!"../sound/pci/hda/patch_realtek.c", i32 1862, i32 2}
!1503 = !{ptr @.str.842, !1504, !"<string literal>", i1 false, i1 false}
!1504 = !{!"../sound/pci/hda/patch_realtek.c", i32 1863, i32 2}
!1505 = !{ptr @.str.843, !1506, !"<string literal>", i1 false, i1 false}
!1506 = !{!"../sound/pci/hda/patch_realtek.c", i32 1865, i32 2}
!1507 = !{ptr @.str.844, !1508, !"<string literal>", i1 false, i1 false}
!1508 = !{!"../sound/pci/hda/patch_realtek.c", i32 1866, i32 2}
!1509 = !{ptr @.str.845, !1510, !"<string literal>", i1 false, i1 false}
!1510 = !{!"../sound/pci/hda/patch_realtek.c", i32 1867, i32 2}
!1511 = !{ptr @.str.846, !1512, !"<string literal>", i1 false, i1 false}
!1512 = !{!"../sound/pci/hda/patch_realtek.c", i32 1868, i32 2}
!1513 = !{ptr @.str.847, !1514, !"<string literal>", i1 false, i1 false}
!1514 = !{!"../sound/pci/hda/patch_realtek.c", i32 1869, i32 2}
!1515 = !{ptr @.str.848, !1516, !"<string literal>", i1 false, i1 false}
!1516 = !{!"../sound/pci/hda/patch_realtek.c", i32 1870, i32 2}
!1517 = !{ptr @alc260_fixup_tbl, !1518, !"alc260_fixup_tbl", i1 false, i1 false}
!1518 = !{!"../sound/pci/hda/patch_realtek.c", i32 1858, i32 35}
!1519 = !{ptr @alc260_fixups, !1520, !"alc260_fixups", i1 false, i1 false}
!1520 = !{!"../sound/pci/hda/patch_realtek.c", i32 1775, i32 31}
!1521 = !{ptr @alc260_fixup_kn1.pincfgs, !1522, !"pincfgs", i1 false, i1 false}
!1522 = !{!"../sound/pci/hda/patch_realtek.c", i32 1733, i32 33}
!1523 = !{ptr @alc260_parse_auto_config.alc260_ignore, !1524, !"alc260_ignore", i1 false, i1 false}
!1524 = !{!"../sound/pci/hda/patch_realtek.c", i32 1682, i32 25}
!1525 = !{ptr @alc260_parse_auto_config.alc260_ssids, !1526, !"alc260_ssids", i1 false, i1 false}
!1526 = !{!"../sound/pci/hda/patch_realtek.c", i32 1683, i32 25}
!1527 = !{ptr @.str.854, !1528, !"<string literal>", i1 false, i1 false}
!1528 = !{!"../sound/pci/hda/patch_realtek.c", i32 2885, i32 40}
!1529 = !{ptr @.str.855, !1530, !"<string literal>", i1 false, i1 false}
!1530 = !{!"../sound/pci/hda/patch_realtek.c", i32 2886, i32 41}
!1531 = !{ptr @.str.856, !1532, !"<string literal>", i1 false, i1 false}
!1532 = !{!"../sound/pci/hda/patch_realtek.c", i32 2887, i32 39}
!1533 = !{ptr @.str.857, !1534, !"<string literal>", i1 false, i1 false}
!1534 = !{!"../sound/pci/hda/patch_realtek.c", i32 2888, i32 36}
!1535 = !{ptr @.str.858, !1536, !"<string literal>", i1 false, i1 false}
!1536 = !{!"../sound/pci/hda/patch_realtek.c", i32 2889, i32 43}
!1537 = !{ptr @.str.859, !1538, !"<string literal>", i1 false, i1 false}
!1538 = !{!"../sound/pci/hda/patch_realtek.c", i32 2890, i32 36}
!1539 = !{ptr @.str.860, !1540, !"<string literal>", i1 false, i1 false}
!1540 = !{!"../sound/pci/hda/patch_realtek.c", i32 2891, i32 40}
!1541 = !{ptr @.str.861, !1542, !"<string literal>", i1 false, i1 false}
!1542 = !{!"../sound/pci/hda/patch_realtek.c", i32 2892, i32 47}
!1543 = !{ptr @alc262_fixup_models, !1544, !"alc262_fixup_models", i1 false, i1 false}
!1544 = !{!"../sound/pci/hda/patch_realtek.c", i32 2883, i32 37}
!1545 = !{ptr @.str.862, !1546, !"<string literal>", i1 false, i1 false}
!1546 = !{!"../sound/pci/hda/patch_realtek.c", i32 2870, i32 2}
!1547 = !{ptr @.str.863, !1548, !"<string literal>", i1 false, i1 false}
!1548 = !{!"../sound/pci/hda/patch_realtek.c", i32 2871, i32 2}
!1549 = !{ptr @.str.864, !1550, !"<string literal>", i1 false, i1 false}
!1550 = !{!"../sound/pci/hda/patch_realtek.c", i32 2872, i32 2}
!1551 = !{ptr @.str.865, !1552, !"<string literal>", i1 false, i1 false}
!1552 = !{!"../sound/pci/hda/patch_realtek.c", i32 2873, i32 2}
!1553 = !{ptr @.str.866, !1554, !"<string literal>", i1 false, i1 false}
!1554 = !{!"../sound/pci/hda/patch_realtek.c", i32 2874, i32 2}
!1555 = !{ptr @.str.867, !1556, !"<string literal>", i1 false, i1 false}
!1556 = !{!"../sound/pci/hda/patch_realtek.c", i32 2875, i32 2}
!1557 = !{ptr @.str.868, !1558, !"<string literal>", i1 false, i1 false}
!1558 = !{!"../sound/pci/hda/patch_realtek.c", i32 2876, i32 2}
!1559 = !{ptr @.str.869, !1560, !"<string literal>", i1 false, i1 false}
!1560 = !{!"../sound/pci/hda/patch_realtek.c", i32 2877, i32 2}
!1561 = !{ptr @.str.870, !1562, !"<string literal>", i1 false, i1 false}
!1562 = !{!"../sound/pci/hda/patch_realtek.c", i32 2878, i32 2}
!1563 = !{ptr @.str.871, !1564, !"<string literal>", i1 false, i1 false}
!1564 = !{!"../sound/pci/hda/patch_realtek.c", i32 2879, i32 2}
!1565 = !{ptr @alc262_fixup_tbl, !1566, !"alc262_fixup_tbl", i1 false, i1 false}
!1566 = !{!"../sound/pci/hda/patch_realtek.c", i32 2869, i32 35}
!1567 = !{ptr @alc262_fixups, !1568, !"alc262_fixups", i1 false, i1 false}
!1568 = !{!"../sound/pci/hda/patch_realtek.c", i32 2801, i32 31}
!1569 = !{ptr @alc262_parse_auto_config.alc262_ignore, !1570, !"alc262_ignore", i1 false, i1 false}
!1570 = !{!"../sound/pci/hda/patch_realtek.c", i32 2781, i32 25}
!1571 = !{ptr @alc262_parse_auto_config.alc262_ssids, !1572, !"alc262_ssids", i1 false, i1 false}
!1572 = !{!"../sound/pci/hda/patch_realtek.c", i32 2782, i32 25}
!1573 = !{ptr @.str.879, !1574, !"<string literal>", i1 false, i1 false}
!1574 = !{!"../sound/pci/hda/patch_realtek.c", i32 3025, i32 39}
!1575 = !{ptr @.str.880, !1576, !"<string literal>", i1 false, i1 false}
!1576 = !{!"../sound/pci/hda/patch_realtek.c", i32 3026, i32 37}
!1577 = !{ptr @alc268_fixup_models, !1578, !"alc268_fixup_models", i1 false, i1 false}
!1578 = !{!"../sound/pci/hda/patch_realtek.c", i32 3023, i32 37}
!1579 = !{ptr @.str.881, !1580, !"<string literal>", i1 false, i1 false}
!1580 = !{!"../sound/pci/hda/patch_realtek.c", i32 3031, i32 2}
!1581 = !{ptr @.str.882, !1582, !"<string literal>", i1 false, i1 false}
!1582 = !{!"../sound/pci/hda/patch_realtek.c", i32 3032, i32 2}
!1583 = !{ptr @.str.883, !1584, !"<string literal>", i1 false, i1 false}
!1584 = !{!"../sound/pci/hda/patch_realtek.c", i32 3036, i32 2}
!1585 = !{ptr @alc268_fixup_tbl, !1586, !"alc268_fixup_tbl", i1 false, i1 false}
!1586 = !{!"../sound/pci/hda/patch_realtek.c", i32 3030, i32 35}
!1587 = !{ptr @alc268_fixups, !1588, !"alc268_fixups", i1 false, i1 false}
!1588 = !{!"../sound/pci/hda/patch_realtek.c", i32 3002, i32 31}
!1589 = !{ptr @alc268_parse_auto_config.alc268_ssids, !1590, !"alc268_ssids", i1 false, i1 false}
!1590 = !{!"../sound/pci/hda/patch_realtek.c", i32 3045, i32 25}
!1591 = !{ptr @alc268_beep_mixer, !1592, !"alc268_beep_mixer", i1 false, i1 false}
!1592 = !{!"../sound/pci/hda/patch_realtek.c", i32 2975, i32 38}
!1593 = !{ptr @alc268_beep_init_verbs, !1594, !"alc268_beep_init_verbs", i1 false, i1 false}
!1594 = !{!"../sound/pci/hda/patch_realtek.c", i32 2989, i32 30}
!1595 = !{ptr @.str.886, !1596, !"<string literal>", i1 false, i1 false}
!1596 = !{!"../sound/pci/hda/patch_realtek.c", i32 11296, i32 9}
!1597 = !{ptr @alc668_coefs, !1598, !"alc668_coefs", i1 false, i1 false}
!1598 = !{!"../sound/pci/hda/patch_realtek.c", i32 10543, i32 29}
!1599 = !{ptr @.str.887, !1600, !"<string literal>", i1 false, i1 false}
!1600 = !{!"../sound/pci/hda/patch_realtek.c", i32 11161, i32 38}
!1601 = !{ptr @.str.888, !1602, !"<string literal>", i1 false, i1 false}
!1602 = !{!"../sound/pci/hda/patch_realtek.c", i32 11162, i32 39}
!1603 = !{ptr @.str.889, !1604, !"<string literal>", i1 false, i1 false}
!1604 = !{!"../sound/pci/hda/patch_realtek.c", i32 11163, i32 37}
!1605 = !{ptr @.str.890, !1606, !"<string literal>", i1 false, i1 false}
!1606 = !{!"../sound/pci/hda/patch_realtek.c", i32 11164, i32 41}
!1607 = !{ptr @.str.891, !1608, !"<string literal>", i1 false, i1 false}
!1608 = !{!"../sound/pci/hda/patch_realtek.c", i32 11165, i32 42}
!1609 = !{ptr @.str.892, !1610, !"<string literal>", i1 false, i1 false}
!1610 = !{!"../sound/pci/hda/patch_realtek.c", i32 11166, i32 42}
!1611 = !{ptr @.str.893, !1612, !"<string literal>", i1 false, i1 false}
!1612 = !{!"../sound/pci/hda/patch_realtek.c", i32 11167, i32 42}
!1613 = !{ptr @.str.894, !1614, !"<string literal>", i1 false, i1 false}
!1614 = !{!"../sound/pci/hda/patch_realtek.c", i32 11168, i32 42}
!1615 = !{ptr @.str.895, !1616, !"<string literal>", i1 false, i1 false}
!1616 = !{!"../sound/pci/hda/patch_realtek.c", i32 11169, i32 42}
!1617 = !{ptr @.str.896, !1618, !"<string literal>", i1 false, i1 false}
!1618 = !{!"../sound/pci/hda/patch_realtek.c", i32 11170, i32 42}
!1619 = !{ptr @.str.897, !1620, !"<string literal>", i1 false, i1 false}
!1620 = !{!"../sound/pci/hda/patch_realtek.c", i32 11171, i32 42}
!1621 = !{ptr @.str.898, !1622, !"<string literal>", i1 false, i1 false}
!1622 = !{!"../sound/pci/hda/patch_realtek.c", i32 11172, i32 42}
!1623 = !{ptr @.str.899, !1624, !"<string literal>", i1 false, i1 false}
!1624 = !{!"../sound/pci/hda/patch_realtek.c", i32 11173, i32 41}
!1625 = !{ptr @.str.900, !1626, !"<string literal>", i1 false, i1 false}
!1626 = !{!"../sound/pci/hda/patch_realtek.c", i32 11175, i32 52}
!1627 = !{ptr @.str.901, !1628, !"<string literal>", i1 false, i1 false}
!1628 = !{!"../sound/pci/hda/patch_realtek.c", i32 11177, i32 44}
!1629 = !{ptr @.str.902, !1630, !"<string literal>", i1 false, i1 false}
!1630 = !{!"../sound/pci/hda/patch_realtek.c", i32 11178, i32 44}
!1631 = !{ptr @.str.903, !1632, !"<string literal>", i1 false, i1 false}
!1632 = !{!"../sound/pci/hda/patch_realtek.c", i32 11179, i32 39}
!1633 = !{ptr @.str.904, !1634, !"<string literal>", i1 false, i1 false}
!1634 = !{!"../sound/pci/hda/patch_realtek.c", i32 11180, i32 39}
!1635 = !{ptr @.str.905, !1636, !"<string literal>", i1 false, i1 false}
!1636 = !{!"../sound/pci/hda/patch_realtek.c", i32 11181, i32 41}
!1637 = !{ptr @.str.906, !1638, !"<string literal>", i1 false, i1 false}
!1638 = !{!"../sound/pci/hda/patch_realtek.c", i32 11182, i32 42}
!1639 = !{ptr @.str.907, !1640, !"<string literal>", i1 false, i1 false}
!1640 = !{!"../sound/pci/hda/patch_realtek.c", i32 11183, i32 41}
!1641 = !{ptr @.str.908, !1642, !"<string literal>", i1 false, i1 false}
!1642 = !{!"../sound/pci/hda/patch_realtek.c", i32 11184, i32 41}
!1643 = !{ptr @.str.909, !1644, !"<string literal>", i1 false, i1 false}
!1644 = !{!"../sound/pci/hda/patch_realtek.c", i32 11185, i32 41}
!1645 = !{ptr @.str.910, !1646, !"<string literal>", i1 false, i1 false}
!1646 = !{!"../sound/pci/hda/patch_realtek.c", i32 11186, i32 44}
!1647 = !{ptr @.str.911, !1648, !"<string literal>", i1 false, i1 false}
!1648 = !{!"../sound/pci/hda/patch_realtek.c", i32 11187, i32 52}
!1649 = !{ptr @.str.912, !1650, !"<string literal>", i1 false, i1 false}
!1650 = !{!"../sound/pci/hda/patch_realtek.c", i32 11188, i32 44}
!1651 = !{ptr @.str.913, !1652, !"<string literal>", i1 false, i1 false}
!1652 = !{!"../sound/pci/hda/patch_realtek.c", i32 11189, i32 43}
!1653 = !{ptr @.str.914, !1654, !"<string literal>", i1 false, i1 false}
!1654 = !{!"../sound/pci/hda/patch_realtek.c", i32 11190, i32 48}
!1655 = !{ptr @.str.915, !1656, !"<string literal>", i1 false, i1 false}
!1656 = !{!"../sound/pci/hda/patch_realtek.c", i32 11192, i32 49}
!1657 = !{ptr @alc662_fixup_models, !1658, !"alc662_fixup_models", i1 false, i1 false}
!1658 = !{!"../sound/pci/hda/patch_realtek.c", i32 11160, i32 37}
!1659 = !{ptr @.str.916, !1660, !"<string literal>", i1 false, i1 false}
!1660 = !{!"../sound/pci/hda/patch_realtek.c", i32 11047, i32 2}
!1661 = !{ptr @.str.917, !1662, !"<string literal>", i1 false, i1 false}
!1662 = !{!"../sound/pci/hda/patch_realtek.c", i32 11048, i32 2}
!1663 = !{ptr @.str.918, !1664, !"<string literal>", i1 false, i1 false}
!1664 = !{!"../sound/pci/hda/patch_realtek.c", i32 11049, i32 2}
!1665 = !{ptr @.str.919, !1666, !"<string literal>", i1 false, i1 false}
!1666 = !{!"../sound/pci/hda/patch_realtek.c", i32 11050, i32 2}
!1667 = !{ptr @.str.920, !1668, !"<string literal>", i1 false, i1 false}
!1668 = !{!"../sound/pci/hda/patch_realtek.c", i32 11051, i32 2}
!1669 = !{ptr @.str.921, !1670, !"<string literal>", i1 false, i1 false}
!1670 = !{!"../sound/pci/hda/patch_realtek.c", i32 11052, i32 2}
!1671 = !{ptr @.str.922, !1672, !"<string literal>", i1 false, i1 false}
!1672 = !{!"../sound/pci/hda/patch_realtek.c", i32 11053, i32 2}
!1673 = !{ptr @.str.923, !1674, !"<string literal>", i1 false, i1 false}
!1674 = !{!"../sound/pci/hda/patch_realtek.c", i32 11054, i32 2}
!1675 = !{ptr @.str.924, !1676, !"<string literal>", i1 false, i1 false}
!1676 = !{!"../sound/pci/hda/patch_realtek.c", i32 11055, i32 2}
!1677 = !{ptr @.str.925, !1678, !"<string literal>", i1 false, i1 false}
!1678 = !{!"../sound/pci/hda/patch_realtek.c", i32 11056, i32 2}
!1679 = !{ptr @.str.926, !1680, !"<string literal>", i1 false, i1 false}
!1680 = !{!"../sound/pci/hda/patch_realtek.c", i32 11057, i32 2}
!1681 = !{ptr @.str.927, !1682, !"<string literal>", i1 false, i1 false}
!1682 = !{!"../sound/pci/hda/patch_realtek.c", i32 11060, i32 2}
!1683 = !{ptr @.str.928, !1684, !"<string literal>", i1 false, i1 false}
!1684 = !{!"../sound/pci/hda/patch_realtek.c", i32 11062, i32 2}
!1685 = !{ptr @.str.929, !1686, !"<string literal>", i1 false, i1 false}
!1686 = !{!"../sound/pci/hda/patch_realtek.c", i32 11068, i32 2}
!1687 = !{ptr @.str.930, !1688, !"<string literal>", i1 false, i1 false}
!1688 = !{!"../sound/pci/hda/patch_realtek.c", i32 11070, i32 2}
!1689 = !{ptr @.str.931, !1690, !"<string literal>", i1 false, i1 false}
!1690 = !{!"../sound/pci/hda/patch_realtek.c", i32 11071, i32 2}
!1691 = !{ptr @.str.932, !1692, !"<string literal>", i1 false, i1 false}
!1692 = !{!"../sound/pci/hda/patch_realtek.c", i32 11072, i32 2}
!1693 = !{ptr @.str.933, !1694, !"<string literal>", i1 false, i1 false}
!1694 = !{!"../sound/pci/hda/patch_realtek.c", i32 11073, i32 2}
!1695 = !{ptr @.str.934, !1696, !"<string literal>", i1 false, i1 false}
!1696 = !{!"../sound/pci/hda/patch_realtek.c", i32 11074, i32 2}
!1697 = !{ptr @.str.935, !1698, !"<string literal>", i1 false, i1 false}
!1698 = !{!"../sound/pci/hda/patch_realtek.c", i32 11075, i32 2}
!1699 = !{ptr @.str.936, !1700, !"<string literal>", i1 false, i1 false}
!1700 = !{!"../sound/pci/hda/patch_realtek.c", i32 11076, i32 2}
!1701 = !{ptr @.str.937, !1702, !"<string literal>", i1 false, i1 false}
!1702 = !{!"../sound/pci/hda/patch_realtek.c", i32 11077, i32 2}
!1703 = !{ptr @.str.938, !1704, !"<string literal>", i1 false, i1 false}
!1704 = !{!"../sound/pci/hda/patch_realtek.c", i32 11078, i32 2}
!1705 = !{ptr @.str.939, !1706, !"<string literal>", i1 false, i1 false}
!1706 = !{!"../sound/pci/hda/patch_realtek.c", i32 11079, i32 2}
!1707 = !{ptr @.str.940, !1708, !"<string literal>", i1 false, i1 false}
!1708 = !{!"../sound/pci/hda/patch_realtek.c", i32 11080, i32 2}
!1709 = !{ptr @.str.941, !1710, !"<string literal>", i1 false, i1 false}
!1710 = !{!"../sound/pci/hda/patch_realtek.c", i32 11081, i32 2}
!1711 = !{ptr @.str.942, !1712, !"<string literal>", i1 false, i1 false}
!1712 = !{!"../sound/pci/hda/patch_realtek.c", i32 11082, i32 2}
!1713 = !{ptr @.str.943, !1714, !"<string literal>", i1 false, i1 false}
!1714 = !{!"../sound/pci/hda/patch_realtek.c", i32 11083, i32 2}
!1715 = !{ptr @.str.944, !1716, !"<string literal>", i1 false, i1 false}
!1716 = !{!"../sound/pci/hda/patch_realtek.c", i32 11084, i32 2}
!1717 = !{ptr @.str.945, !1718, !"<string literal>", i1 false, i1 false}
!1718 = !{!"../sound/pci/hda/patch_realtek.c", i32 11085, i32 2}
!1719 = !{ptr @.str.946, !1720, !"<string literal>", i1 false, i1 false}
!1720 = !{!"../sound/pci/hda/patch_realtek.c", i32 11086, i32 2}
!1721 = !{ptr @.str.947, !1722, !"<string literal>", i1 false, i1 false}
!1722 = !{!"../sound/pci/hda/patch_realtek.c", i32 11088, i32 2}
!1723 = !{ptr @.str.948, !1724, !"<string literal>", i1 false, i1 false}
!1724 = !{!"../sound/pci/hda/patch_realtek.c", i32 11089, i32 2}
!1725 = !{ptr @.str.949, !1726, !"<string literal>", i1 false, i1 false}
!1726 = !{!"../sound/pci/hda/patch_realtek.c", i32 11090, i32 2}
!1727 = !{ptr @.str.950, !1728, !"<string literal>", i1 false, i1 false}
!1728 = !{!"../sound/pci/hda/patch_realtek.c", i32 11091, i32 2}
!1729 = !{ptr @.str.951, !1730, !"<string literal>", i1 false, i1 false}
!1730 = !{!"../sound/pci/hda/patch_realtek.c", i32 11092, i32 2}
!1731 = !{ptr @.str.952, !1732, !"<string literal>", i1 false, i1 false}
!1732 = !{!"../sound/pci/hda/patch_realtek.c", i32 11093, i32 2}
!1733 = !{ptr @.str.953, !1734, !"<string literal>", i1 false, i1 false}
!1734 = !{!"../sound/pci/hda/patch_realtek.c", i32 11094, i32 2}
!1735 = !{ptr @.str.954, !1736, !"<string literal>", i1 false, i1 false}
!1736 = !{!"../sound/pci/hda/patch_realtek.c", i32 11095, i32 2}
!1737 = !{ptr @.str.955, !1738, !"<string literal>", i1 false, i1 false}
!1738 = !{!"../sound/pci/hda/patch_realtek.c", i32 11096, i32 2}
!1739 = !{ptr @.str.956, !1740, !"<string literal>", i1 false, i1 false}
!1740 = !{!"../sound/pci/hda/patch_realtek.c", i32 11097, i32 2}
!1741 = !{ptr @.str.957, !1742, !"<string literal>", i1 false, i1 false}
!1742 = !{!"../sound/pci/hda/patch_realtek.c", i32 11098, i32 2}
!1743 = !{ptr @alc662_fixup_tbl, !1744, !"alc662_fixup_tbl", i1 false, i1 false}
!1744 = !{!"../sound/pci/hda/patch_realtek.c", i32 11046, i32 35}
!1745 = !{ptr @alc662_fixups, !1746, !"alc662_fixups", i1 false, i1 false}
!1746 = !{!"../sound/pci/hda/patch_realtek.c", i32 10627, i32 31}
!1747 = !{ptr @.str.989, !1748, !"<string literal>", i1 false, i1 false}
!1748 = !{!"../sound/pci/hda/patch_realtek.c", i32 10389, i32 3}
!1749 = !{ptr @.str.990, !1748, !"<string literal>", i1 false, i1 false}
!1750 = !{ptr @.str.991, !1748, !"<string literal>", i1 false, i1 false}
!1751 = !{ptr @alc272_fixup_mario._entry, !1748, !"_entry", i1 false, i1 false}
!1752 = !{ptr @alc272_fixup_mario._entry_ptr, !1748, !"_entry_ptr", i1 false, i1 false}
!1753 = !{ptr @asus_pcm_2_1_chmaps, !1754, !"asus_pcm_2_1_chmaps", i1 false, i1 false}
!1754 = !{!"../sound/pci/hda/patch_realtek.c", i32 10392, i32 40}
!1755 = !{ptr @alc671_fixup_hp_headset_mic2.pincfgs, !1756, !"pincfgs", i1 false, i1 false}
!1756 = !{!"../sound/pci/hda/patch_realtek.c", i32 10504, i32 33}
!1757 = !{ptr @.str.1002, !1758, !"<string literal>", i1 false, i1 false}
!1758 = !{!"../sound/pci/hda/patch_realtek.c", i32 11235, i32 2}
!1759 = !{ptr @alc662_pin_fixup_tbl, !1760, !"alc662_pin_fixup_tbl", i1 false, i1 false}
!1760 = !{!"../sound/pci/hda/patch_realtek.c", i32 11196, i32 39}
!1761 = !{ptr @alc662_parse_auto_config.alc662_ignore, !1762, !"alc662_ignore", i1 false, i1 false}
!1762 = !{!"../sound/pci/hda/patch_realtek.c", i32 10365, i32 25}
!1763 = !{ptr @alc662_parse_auto_config.alc663_ssids, !1764, !"alc663_ssids", i1 false, i1 false}
!1764 = !{!"../sound/pci/hda/patch_realtek.c", i32 10366, i32 25}
!1765 = !{ptr @alc662_parse_auto_config.alc662_ssids, !1766, !"alc662_ssids", i1 false, i1 false}
!1766 = !{!"../sound/pci/hda/patch_realtek.c", i32 10367, i32 25}
!1767 = !{ptr @.str.1005, !1768, !"<string literal>", i1 false, i1 false}
!1768 = !{!"../sound/pci/hda/patch_realtek.c", i32 10193, i32 2}
!1769 = !{ptr @.str.1006, !1770, !"<string literal>", i1 false, i1 false}
!1770 = !{!"../sound/pci/hda/patch_realtek.c", i32 10194, i32 2}
!1771 = !{ptr @.str.1007, !1772, !"<string literal>", i1 false, i1 false}
!1772 = !{!"../sound/pci/hda/patch_realtek.c", i32 10195, i32 2}
!1773 = !{ptr @.str.1008, !1774, !"<string literal>", i1 false, i1 false}
!1774 = !{!"../sound/pci/hda/patch_realtek.c", i32 10196, i32 2}
!1775 = !{ptr @.str.1009, !1776, !"<string literal>", i1 false, i1 false}
!1776 = !{!"../sound/pci/hda/patch_realtek.c", i32 10197, i32 2}
!1777 = !{ptr @.str.1010, !1778, !"<string literal>", i1 false, i1 false}
!1778 = !{!"../sound/pci/hda/patch_realtek.c", i32 10198, i32 2}
!1779 = !{ptr @.str.1011, !1780, !"<string literal>", i1 false, i1 false}
!1780 = !{!"../sound/pci/hda/patch_realtek.c", i32 10199, i32 2}
!1781 = !{ptr @alc861_fixup_tbl, !1782, !"alc861_fixup_tbl", i1 false, i1 false}
!1782 = !{!"../sound/pci/hda/patch_realtek.c", i32 10192, i32 35}
!1783 = !{ptr @alc861_fixups, !1784, !"alc861_fixups", i1 false, i1 false}
!1784 = !{!"../sound/pci/hda/patch_realtek.c", i32 10157, i32 31}
!1785 = !{ptr @alc861_parse_auto_config.alc861_ignore, !1786, !"alc861_ignore", i1 false, i1 false}
!1786 = !{!"../sound/pci/hda/patch_realtek.c", i32 10118, i32 25}
!1787 = !{ptr @alc861_parse_auto_config.alc861_ssids, !1788, !"alc861_ssids", i1 false, i1 false}
!1788 = !{!"../sound/pci/hda/patch_realtek.c", i32 10119, i32 25}
!1789 = !{ptr @.str.1014, !1790, !"<string literal>", i1 false, i1 false}
!1790 = !{!"../sound/pci/hda/patch_realtek.c", i32 10299, i32 2}
!1791 = !{ptr @.str.1015, !1792, !"<string literal>", i1 false, i1 false}
!1792 = !{!"../sound/pci/hda/patch_realtek.c", i32 10300, i32 2}
!1793 = !{ptr @.str.1016, !1794, !"<string literal>", i1 false, i1 false}
!1794 = !{!"../sound/pci/hda/patch_realtek.c", i32 10301, i32 2}
!1795 = !{ptr @alc861vd_fixup_tbl, !1796, !"alc861vd_fixup_tbl", i1 false, i1 false}
!1796 = !{!"../sound/pci/hda/patch_realtek.c", i32 10298, i32 35}
!1797 = !{ptr @alc861vd_fixups, !1798, !"alc861vd_fixups", i1 false, i1 false}
!1798 = !{!"../sound/pci/hda/patch_realtek.c", i32 10287, i32 31}
!1799 = !{ptr @alc861vd_parse_auto_config.alc861vd_ignore, !1800, !"alc861vd_ignore", i1 false, i1 false}
!1800 = !{!"../sound/pci/hda/patch_realtek.c", i32 10256, i32 25}
!1801 = !{ptr @alc861vd_parse_auto_config.alc861vd_ssids, !1802, !"alc861vd_ssids", i1 false, i1 false}
!1802 = !{!"../sound/pci/hda/patch_realtek.c", i32 10257, i32 25}
!1803 = !{ptr @.str.1017, !1804, !"<string literal>", i1 false, i1 false}
!1804 = !{!"../sound/pci/hda/patch_realtek.c", i32 2649, i32 45}
!1805 = !{ptr @.str.1018, !1806, !"<string literal>", i1 false, i1 false}
!1806 = !{!"../sound/pci/hda/patch_realtek.c", i32 2650, i32 43}
!1807 = !{ptr @.str.1019, !1808, !"<string literal>", i1 false, i1 false}
!1808 = !{!"../sound/pci/hda/patch_realtek.c", i32 2651, i32 48}
!1809 = !{ptr @.str.1020, !1810, !"<string literal>", i1 false, i1 false}
!1810 = !{!"../sound/pci/hda/patch_realtek.c", i32 2652, i32 41}
!1811 = !{ptr @.str.1021, !1812, !"<string literal>", i1 false, i1 false}
!1812 = !{!"../sound/pci/hda/patch_realtek.c", i32 2653, i32 34}
!1813 = !{ptr @.str.1022, !1814, !"<string literal>", i1 false, i1 false}
!1814 = !{!"../sound/pci/hda/patch_realtek.c", i32 2654, i32 52}
!1815 = !{ptr @.str.1023, !1816, !"<string literal>", i1 false, i1 false}
!1816 = !{!"../sound/pci/hda/patch_realtek.c", i32 2655, i32 39}
!1817 = !{ptr @.str.1024, !1818, !"<string literal>", i1 false, i1 false}
!1818 = !{!"../sound/pci/hda/patch_realtek.c", i32 2656, i32 39}
!1819 = !{ptr @.str.1025, !1820, !"<string literal>", i1 false, i1 false}
!1820 = !{!"../sound/pci/hda/patch_realtek.c", i32 2657, i32 36}
!1821 = !{ptr @.str.1026, !1822, !"<string literal>", i1 false, i1 false}
!1822 = !{!"../sound/pci/hda/patch_realtek.c", i32 2658, i32 36}
!1823 = !{ptr @.str.1027, !1824, !"<string literal>", i1 false, i1 false}
!1824 = !{!"../sound/pci/hda/patch_realtek.c", i32 2660, i32 37}
!1825 = !{ptr @.str.1028, !1826, !"<string literal>", i1 false, i1 false}
!1826 = !{!"../sound/pci/hda/patch_realtek.c", i32 2661, i32 37}
!1827 = !{ptr @.str.1029, !1828, !"<string literal>", i1 false, i1 false}
!1828 = !{!"../sound/pci/hda/patch_realtek.c", i32 2662, i32 36}
!1829 = !{ptr @.str.1030, !1830, !"<string literal>", i1 false, i1 false}
!1830 = !{!"../sound/pci/hda/patch_realtek.c", i32 2663, i32 41}
!1831 = !{ptr @.str.1031, !1832, !"<string literal>", i1 false, i1 false}
!1832 = !{!"../sound/pci/hda/patch_realtek.c", i32 2664, i32 49}
!1833 = !{ptr @.str.1032, !1834, !"<string literal>", i1 false, i1 false}
!1834 = !{!"../sound/pci/hda/patch_realtek.c", i32 2665, i32 49}
!1835 = !{ptr @.str.1033, !1836, !"<string literal>", i1 false, i1 false}
!1836 = !{!"../sound/pci/hda/patch_realtek.c", i32 2666, i32 41}
!1837 = !{ptr @.str.1034, !1838, !"<string literal>", i1 false, i1 false}
!1838 = !{!"../sound/pci/hda/patch_realtek.c", i32 2667, i32 43}
!1839 = !{ptr @.str.1035, !1840, !"<string literal>", i1 false, i1 false}
!1840 = !{!"../sound/pci/hda/patch_realtek.c", i32 2668, i32 41}
!1841 = !{ptr @.str.1036, !1842, !"<string literal>", i1 false, i1 false}
!1842 = !{!"../sound/pci/hda/patch_realtek.c", i32 2669, i32 40}
!1843 = !{ptr @.str.1037, !1844, !"<string literal>", i1 false, i1 false}
!1844 = !{!"../sound/pci/hda/patch_realtek.c", i32 2670, i32 43}
!1845 = !{ptr @.str.1038, !1846, !"<string literal>", i1 false, i1 false}
!1846 = !{!"../sound/pci/hda/patch_realtek.c", i32 2671, i32 42}
!1847 = !{ptr @.str.1039, !1848, !"<string literal>", i1 false, i1 false}
!1848 = !{!"../sound/pci/hda/patch_realtek.c", i32 2672, i32 42}
!1849 = !{ptr @.str.1040, !1850, !"<string literal>", i1 false, i1 false}
!1850 = !{!"../sound/pci/hda/patch_realtek.c", i32 2673, i32 41}
!1851 = !{ptr @.str.1041, !1852, !"<string literal>", i1 false, i1 false}
!1852 = !{!"../sound/pci/hda/patch_realtek.c", i32 2674, i32 41}
!1853 = !{ptr @.str.1042, !1854, !"<string literal>", i1 false, i1 false}
!1854 = !{!"../sound/pci/hda/patch_realtek.c", i32 2676, i32 45}
!1855 = !{ptr @.str.1043, !1856, !"<string literal>", i1 false, i1 false}
!1856 = !{!"../sound/pci/hda/patch_realtek.c", i32 2677, i32 41}
!1857 = !{ptr @.str.1044, !1858, !"<string literal>", i1 false, i1 false}
!1858 = !{!"../sound/pci/hda/patch_realtek.c", i32 2679, i32 40}
!1859 = !{ptr @.str.1045, !1860, !"<string literal>", i1 false, i1 false}
!1860 = !{!"../sound/pci/hda/patch_realtek.c", i32 2680, i32 43}
!1861 = !{ptr @alc882_fixup_models, !1862, !"alc882_fixup_models", i1 false, i1 false}
!1862 = !{!"../sound/pci/hda/patch_realtek.c", i32 2648, i32 37}
!1863 = !{ptr @.str.1046, !1864, !"<string literal>", i1 false, i1 false}
!1864 = !{!"../sound/pci/hda/patch_realtek.c", i32 2534, i32 2}
!1865 = !{ptr @.str.1047, !1866, !"<string literal>", i1 false, i1 false}
!1866 = !{!"../sound/pci/hda/patch_realtek.c", i32 2537, i32 2}
!1867 = !{ptr @.str.1048, !1868, !"<string literal>", i1 false, i1 false}
!1868 = !{!"../sound/pci/hda/patch_realtek.c", i32 2539, i32 2}
!1869 = !{ptr @.str.1049, !1870, !"<string literal>", i1 false, i1 false}
!1870 = !{!"../sound/pci/hda/patch_realtek.c", i32 2540, i32 2}
!1871 = !{ptr @.str.1050, !1872, !"<string literal>", i1 false, i1 false}
!1872 = !{!"../sound/pci/hda/patch_realtek.c", i32 2541, i32 2}
!1873 = !{ptr @.str.1051, !1874, !"<string literal>", i1 false, i1 false}
!1874 = !{!"../sound/pci/hda/patch_realtek.c", i32 2543, i32 2}
!1875 = !{ptr @.str.1052, !1876, !"<string literal>", i1 false, i1 false}
!1876 = !{!"../sound/pci/hda/patch_realtek.c", i32 2545, i32 2}
!1877 = !{ptr @.str.1053, !1878, !"<string literal>", i1 false, i1 false}
!1878 = !{!"../sound/pci/hda/patch_realtek.c", i32 2547, i32 2}
!1879 = !{ptr @.str.1054, !1880, !"<string literal>", i1 false, i1 false}
!1880 = !{!"../sound/pci/hda/patch_realtek.c", i32 2549, i32 2}
!1881 = !{ptr @.str.1055, !1882, !"<string literal>", i1 false, i1 false}
!1882 = !{!"../sound/pci/hda/patch_realtek.c", i32 2551, i32 2}
!1883 = !{ptr @.str.1056, !1884, !"<string literal>", i1 false, i1 false}
!1884 = !{!"../sound/pci/hda/patch_realtek.c", i32 2552, i32 2}
!1885 = !{ptr @.str.1057, !1886, !"<string literal>", i1 false, i1 false}
!1886 = !{!"../sound/pci/hda/patch_realtek.c", i32 2554, i32 2}
!1887 = !{ptr @.str.1058, !1888, !"<string literal>", i1 false, i1 false}
!1888 = !{!"../sound/pci/hda/patch_realtek.c", i32 2556, i32 2}
!1889 = !{ptr @.str.1059, !1890, !"<string literal>", i1 false, i1 false}
!1890 = !{!"../sound/pci/hda/patch_realtek.c", i32 2558, i32 2}
!1891 = !{ptr @.str.1060, !1892, !"<string literal>", i1 false, i1 false}
!1892 = !{!"../sound/pci/hda/patch_realtek.c", i32 2559, i32 2}
!1893 = !{ptr @.str.1061, !1894, !"<string literal>", i1 false, i1 false}
!1894 = !{!"../sound/pci/hda/patch_realtek.c", i32 2560, i32 2}
!1895 = !{ptr @.str.1062, !1896, !"<string literal>", i1 false, i1 false}
!1896 = !{!"../sound/pci/hda/patch_realtek.c", i32 2561, i32 2}
!1897 = !{ptr @.str.1063, !1898, !"<string literal>", i1 false, i1 false}
!1898 = !{!"../sound/pci/hda/patch_realtek.c", i32 2562, i32 2}
!1899 = !{ptr @.str.1064, !1900, !"<string literal>", i1 false, i1 false}
!1900 = !{!"../sound/pci/hda/patch_realtek.c", i32 2563, i32 2}
!1901 = !{ptr @.str.1065, !1902, !"<string literal>", i1 false, i1 false}
!1902 = !{!"../sound/pci/hda/patch_realtek.c", i32 2564, i32 2}
!1903 = !{ptr @.str.1066, !1904, !"<string literal>", i1 false, i1 false}
!1904 = !{!"../sound/pci/hda/patch_realtek.c", i32 2565, i32 2}
!1905 = !{ptr @.str.1067, !1906, !"<string literal>", i1 false, i1 false}
!1906 = !{!"../sound/pci/hda/patch_realtek.c", i32 2566, i32 2}
!1907 = !{ptr @.str.1068, !1908, !"<string literal>", i1 false, i1 false}
!1908 = !{!"../sound/pci/hda/patch_realtek.c", i32 2567, i32 2}
!1909 = !{ptr @.str.1069, !1910, !"<string literal>", i1 false, i1 false}
!1910 = !{!"../sound/pci/hda/patch_realtek.c", i32 2568, i32 2}
!1911 = !{ptr @.str.1070, !1912, !"<string literal>", i1 false, i1 false}
!1912 = !{!"../sound/pci/hda/patch_realtek.c", i32 2569, i32 2}
!1913 = !{ptr @.str.1071, !1914, !"<string literal>", i1 false, i1 false}
!1914 = !{!"../sound/pci/hda/patch_realtek.c", i32 2570, i32 2}
!1915 = !{ptr @.str.1072, !1916, !"<string literal>", i1 false, i1 false}
!1916 = !{!"../sound/pci/hda/patch_realtek.c", i32 2571, i32 2}
!1917 = !{ptr @.str.1073, !1918, !"<string literal>", i1 false, i1 false}
!1918 = !{!"../sound/pci/hda/patch_realtek.c", i32 2572, i32 2}
!1919 = !{ptr @.str.1074, !1920, !"<string literal>", i1 false, i1 false}
!1920 = !{!"../sound/pci/hda/patch_realtek.c", i32 2575, i32 2}
!1921 = !{ptr @.str.1075, !1922, !"<string literal>", i1 false, i1 false}
!1922 = !{!"../sound/pci/hda/patch_realtek.c", i32 2576, i32 2}
!1923 = !{ptr @.str.1076, !1924, !"<string literal>", i1 false, i1 false}
!1924 = !{!"../sound/pci/hda/patch_realtek.c", i32 2577, i32 2}
!1925 = !{ptr @.str.1077, !1926, !"<string literal>", i1 false, i1 false}
!1926 = !{!"../sound/pci/hda/patch_realtek.c", i32 2578, i32 2}
!1927 = !{ptr @.str.1078, !1928, !"<string literal>", i1 false, i1 false}
!1928 = !{!"../sound/pci/hda/patch_realtek.c", i32 2579, i32 2}
!1929 = !{ptr @.str.1079, !1930, !"<string literal>", i1 false, i1 false}
!1930 = !{!"../sound/pci/hda/patch_realtek.c", i32 2580, i32 2}
!1931 = !{ptr @.str.1080, !1932, !"<string literal>", i1 false, i1 false}
!1932 = !{!"../sound/pci/hda/patch_realtek.c", i32 2581, i32 2}
!1933 = !{ptr @.str.1081, !1934, !"<string literal>", i1 false, i1 false}
!1934 = !{!"../sound/pci/hda/patch_realtek.c", i32 2582, i32 2}
!1935 = !{ptr @.str.1082, !1936, !"<string literal>", i1 false, i1 false}
!1936 = !{!"../sound/pci/hda/patch_realtek.c", i32 2583, i32 2}
!1937 = !{ptr @.str.1083, !1938, !"<string literal>", i1 false, i1 false}
!1938 = !{!"../sound/pci/hda/patch_realtek.c", i32 2584, i32 2}
!1939 = !{ptr @.str.1084, !1940, !"<string literal>", i1 false, i1 false}
!1940 = !{!"../sound/pci/hda/patch_realtek.c", i32 2585, i32 2}
!1941 = !{ptr @.str.1085, !1942, !"<string literal>", i1 false, i1 false}
!1942 = !{!"../sound/pci/hda/patch_realtek.c", i32 2586, i32 2}
!1943 = !{ptr @.str.1086, !1944, !"<string literal>", i1 false, i1 false}
!1944 = !{!"../sound/pci/hda/patch_realtek.c", i32 2588, i32 2}
!1945 = !{ptr @.str.1087, !1946, !"<string literal>", i1 false, i1 false}
!1946 = !{!"../sound/pci/hda/patch_realtek.c", i32 2589, i32 2}
!1947 = !{ptr @.str.1088, !1948, !"<string literal>", i1 false, i1 false}
!1948 = !{!"../sound/pci/hda/patch_realtek.c", i32 2590, i32 2}
!1949 = !{ptr @.str.1089, !1950, !"<string literal>", i1 false, i1 false}
!1950 = !{!"../sound/pci/hda/patch_realtek.c", i32 2591, i32 2}
!1951 = !{ptr @.str.1090, !1952, !"<string literal>", i1 false, i1 false}
!1952 = !{!"../sound/pci/hda/patch_realtek.c", i32 2592, i32 2}
!1953 = !{ptr @.str.1091, !1954, !"<string literal>", i1 false, i1 false}
!1954 = !{!"../sound/pci/hda/patch_realtek.c", i32 2593, i32 2}
!1955 = !{ptr @.str.1092, !1956, !"<string literal>", i1 false, i1 false}
!1956 = !{!"../sound/pci/hda/patch_realtek.c", i32 2594, i32 2}
!1957 = !{ptr @.str.1093, !1958, !"<string literal>", i1 false, i1 false}
!1958 = !{!"../sound/pci/hda/patch_realtek.c", i32 2595, i32 2}
!1959 = !{ptr @.str.1094, !1960, !"<string literal>", i1 false, i1 false}
!1960 = !{!"../sound/pci/hda/patch_realtek.c", i32 2596, i32 2}
!1961 = !{ptr @.str.1095, !1962, !"<string literal>", i1 false, i1 false}
!1962 = !{!"../sound/pci/hda/patch_realtek.c", i32 2598, i32 2}
!1963 = !{ptr @.str.1096, !1964, !"<string literal>", i1 false, i1 false}
!1964 = !{!"../sound/pci/hda/patch_realtek.c", i32 2599, i32 2}
!1965 = !{ptr @.str.1097, !1966, !"<string literal>", i1 false, i1 false}
!1966 = !{!"../sound/pci/hda/patch_realtek.c", i32 2600, i32 2}
!1967 = !{ptr @.str.1098, !1968, !"<string literal>", i1 false, i1 false}
!1968 = !{!"../sound/pci/hda/patch_realtek.c", i32 2601, i32 2}
!1969 = !{ptr @.str.1099, !1970, !"<string literal>", i1 false, i1 false}
!1970 = !{!"../sound/pci/hda/patch_realtek.c", i32 2602, i32 2}
!1971 = !{ptr @.str.1100, !1972, !"<string literal>", i1 false, i1 false}
!1972 = !{!"../sound/pci/hda/patch_realtek.c", i32 2603, i32 2}
!1973 = !{ptr @.str.1101, !1974, !"<string literal>", i1 false, i1 false}
!1974 = !{!"../sound/pci/hda/patch_realtek.c", i32 2604, i32 2}
!1975 = !{ptr @.str.1102, !1976, !"<string literal>", i1 false, i1 false}
!1976 = !{!"../sound/pci/hda/patch_realtek.c", i32 2605, i32 2}
!1977 = !{ptr @.str.1103, !1978, !"<string literal>", i1 false, i1 false}
!1978 = !{!"../sound/pci/hda/patch_realtek.c", i32 2606, i32 2}
!1979 = !{ptr @.str.1104, !1980, !"<string literal>", i1 false, i1 false}
!1980 = !{!"../sound/pci/hda/patch_realtek.c", i32 2607, i32 2}
!1981 = !{ptr @.str.1105, !1982, !"<string literal>", i1 false, i1 false}
!1982 = !{!"../sound/pci/hda/patch_realtek.c", i32 2608, i32 2}
!1983 = !{ptr @.str.1106, !1984, !"<string literal>", i1 false, i1 false}
!1984 = !{!"../sound/pci/hda/patch_realtek.c", i32 2609, i32 2}
!1985 = !{ptr @.str.1107, !1986, !"<string literal>", i1 false, i1 false}
!1986 = !{!"../sound/pci/hda/patch_realtek.c", i32 2610, i32 2}
!1987 = !{ptr @.str.1108, !1988, !"<string literal>", i1 false, i1 false}
!1988 = !{!"../sound/pci/hda/patch_realtek.c", i32 2611, i32 2}
!1989 = !{ptr @.str.1109, !1990, !"<string literal>", i1 false, i1 false}
!1990 = !{!"../sound/pci/hda/patch_realtek.c", i32 2612, i32 2}
!1991 = !{ptr @.str.1110, !1992, !"<string literal>", i1 false, i1 false}
!1992 = !{!"../sound/pci/hda/patch_realtek.c", i32 2613, i32 2}
!1993 = !{ptr @.str.1111, !1994, !"<string literal>", i1 false, i1 false}
!1994 = !{!"../sound/pci/hda/patch_realtek.c", i32 2614, i32 2}
!1995 = !{ptr @.str.1112, !1996, !"<string literal>", i1 false, i1 false}
!1996 = !{!"../sound/pci/hda/patch_realtek.c", i32 2615, i32 2}
!1997 = !{ptr @.str.1113, !1998, !"<string literal>", i1 false, i1 false}
!1998 = !{!"../sound/pci/hda/patch_realtek.c", i32 2616, i32 2}
!1999 = !{ptr @.str.1114, !2000, !"<string literal>", i1 false, i1 false}
!2000 = !{!"../sound/pci/hda/patch_realtek.c", i32 2617, i32 2}
!2001 = !{ptr @.str.1115, !2002, !"<string literal>", i1 false, i1 false}
!2002 = !{!"../sound/pci/hda/patch_realtek.c", i32 2618, i32 2}
!2003 = !{ptr @.str.1116, !2004, !"<string literal>", i1 false, i1 false}
!2004 = !{!"../sound/pci/hda/patch_realtek.c", i32 2619, i32 2}
!2005 = !{ptr @.str.1117, !2006, !"<string literal>", i1 false, i1 false}
!2006 = !{!"../sound/pci/hda/patch_realtek.c", i32 2620, i32 2}
!2007 = !{ptr @.str.1118, !2008, !"<string literal>", i1 false, i1 false}
!2008 = !{!"../sound/pci/hda/patch_realtek.c", i32 2621, i32 2}
!2009 = !{ptr @.str.1119, !2010, !"<string literal>", i1 false, i1 false}
!2010 = !{!"../sound/pci/hda/patch_realtek.c", i32 2622, i32 2}
!2011 = !{ptr @.str.1120, !2012, !"<string literal>", i1 false, i1 false}
!2012 = !{!"../sound/pci/hda/patch_realtek.c", i32 2623, i32 2}
!2013 = !{ptr @.str.1121, !2014, !"<string literal>", i1 false, i1 false}
!2014 = !{!"../sound/pci/hda/patch_realtek.c", i32 2624, i32 2}
!2015 = !{ptr @.str.1122, !2016, !"<string literal>", i1 false, i1 false}
!2016 = !{!"../sound/pci/hda/patch_realtek.c", i32 2625, i32 2}
!2017 = !{ptr @.str.1123, !2018, !"<string literal>", i1 false, i1 false}
!2018 = !{!"../sound/pci/hda/patch_realtek.c", i32 2626, i32 2}
!2019 = !{ptr @.str.1124, !2020, !"<string literal>", i1 false, i1 false}
!2020 = !{!"../sound/pci/hda/patch_realtek.c", i32 2627, i32 2}
!2021 = !{ptr @.str.1125, !2022, !"<string literal>", i1 false, i1 false}
!2022 = !{!"../sound/pci/hda/patch_realtek.c", i32 2628, i32 2}
!2023 = !{ptr @.str.1126, !2024, !"<string literal>", i1 false, i1 false}
!2024 = !{!"../sound/pci/hda/patch_realtek.c", i32 2629, i32 2}
!2025 = !{ptr @.str.1127, !2026, !"<string literal>", i1 false, i1 false}
!2026 = !{!"../sound/pci/hda/patch_realtek.c", i32 2630, i32 2}
!2027 = !{ptr @.str.1128, !2028, !"<string literal>", i1 false, i1 false}
!2028 = !{!"../sound/pci/hda/patch_realtek.c", i32 2631, i32 2}
!2029 = !{ptr @.str.1129, !2030, !"<string literal>", i1 false, i1 false}
!2030 = !{!"../sound/pci/hda/patch_realtek.c", i32 2632, i32 2}
!2031 = !{ptr @.str.1130, !2032, !"<string literal>", i1 false, i1 false}
!2032 = !{!"../sound/pci/hda/patch_realtek.c", i32 2633, i32 2}
!2033 = !{ptr @.str.1131, !2034, !"<string literal>", i1 false, i1 false}
!2034 = !{!"../sound/pci/hda/patch_realtek.c", i32 2634, i32 2}
!2035 = !{ptr @.str.1132, !2036, !"<string literal>", i1 false, i1 false}
!2036 = !{!"../sound/pci/hda/patch_realtek.c", i32 2635, i32 2}
!2037 = !{ptr @.str.1133, !2038, !"<string literal>", i1 false, i1 false}
!2038 = !{!"../sound/pci/hda/patch_realtek.c", i32 2636, i32 2}
!2039 = !{ptr @.str.1134, !2040, !"<string literal>", i1 false, i1 false}
!2040 = !{!"../sound/pci/hda/patch_realtek.c", i32 2637, i32 2}
!2041 = !{ptr @.str.1135, !2042, !"<string literal>", i1 false, i1 false}
!2042 = !{!"../sound/pci/hda/patch_realtek.c", i32 2638, i32 2}
!2043 = !{ptr @.str.1136, !2044, !"<string literal>", i1 false, i1 false}
!2044 = !{!"../sound/pci/hda/patch_realtek.c", i32 2639, i32 2}
!2045 = !{ptr @.str.1137, !2046, !"<string literal>", i1 false, i1 false}
!2046 = !{!"../sound/pci/hda/patch_realtek.c", i32 2640, i32 2}
!2047 = !{ptr @.str.1138, !2048, !"<string literal>", i1 false, i1 false}
!2048 = !{!"../sound/pci/hda/patch_realtek.c", i32 2641, i32 2}
!2049 = !{ptr @.str.1139, !2050, !"<string literal>", i1 false, i1 false}
!2050 = !{!"../sound/pci/hda/patch_realtek.c", i32 2642, i32 2}
!2051 = !{ptr @.str.1140, !2052, !"<string literal>", i1 false, i1 false}
!2052 = !{!"../sound/pci/hda/patch_realtek.c", i32 2643, i32 2}
!2053 = !{ptr @.str.1141, !2054, !"<string literal>", i1 false, i1 false}
!2054 = !{!"../sound/pci/hda/patch_realtek.c", i32 2644, i32 2}
!2055 = !{ptr @alc882_fixup_tbl, !2056, !"alc882_fixup_tbl", i1 false, i1 false}
!2056 = !{!"../sound/pci/hda/patch_realtek.c", i32 2533, i32 35}
!2057 = !{ptr @alc882_fixups, !2058, !"alc882_fixups", i1 false, i1 false}
!2058 = !{!"../sound/pci/hda/patch_realtek.c", i32 2247, i32 31}
!2059 = !{ptr @alc889_fixup_dac_route.conn1, !2060, !"conn1", i1 false, i1 false}
!2060 = !{!"../sound/pci/hda/patch_realtek.c", i32 2015, i32 26}
!2061 = !{ptr @alc889_fixup_dac_route.conn2, !2062, !"conn2", i1 false, i1 false}
!2062 = !{!"../sound/pci/hda/patch_realtek.c", i32 2016, i32 26}
!2063 = !{ptr @alc889_fixup_dac_route.conn, !2064, !"conn", i1 false, i1 false}
!2064 = !{!"../sound/pci/hda/patch_realtek.c", i32 2023, i32 26}
!2065 = distinct !{null, !2066, !"nids", i1 false, i1 false}
!2066 = !{!"../sound/pci/hda/patch_realtek.c", i32 2035, i32 25}
!2067 = distinct !{null, !2068, !"nids", i1 false, i1 false}
!2068 = !{!"../sound/pci/hda/patch_realtek.c", i32 2072, i32 25}
!2069 = distinct !{null, !2070, !"nids", i1 false, i1 false}
!2070 = !{!"../sound/pci/hda/patch_realtek.c", i32 2082, i32 25}
!2071 = distinct !{null, !2072, !"nids", i1 false, i1 false}
!2072 = !{!"../sound/pci/hda/patch_realtek.c", i32 2092, i32 25}
!2073 = !{ptr @.str.1160, !2074, !"<string literal>", i1 false, i1 false}
!2074 = !{!"../sound/pci/hda/patch_realtek.c", i32 2154, i32 33}
!2075 = !{ptr @alc1220_fixup_gb_x570.conn1, !2076, !"conn1", i1 false, i1 false}
!2076 = !{!"../sound/pci/hda/patch_realtek.c", i32 2174, i32 25}
!2077 = !{ptr @alc1220_fixup_gb_x570.gb_x570_coefs, !2078, !"gb_x570_coefs", i1 false, i1 false}
!2078 = !{!"../sound/pci/hda/patch_realtek.c", i32 2175, i32 30}
!2079 = !{ptr @alc1220_fixup_clevo_p950.conn1, !2080, !"conn1", i1 false, i1 false}
!2080 = !{!"../sound/pci/hda/patch_realtek.c", i32 2198, i32 25}
!2081 = !{ptr @.str.1163, !2082, !"<string literal>", i1 false, i1 false}
!2082 = !{!"../sound/pci/hda/patch_realtek.c", i32 2694, i32 2}
!2083 = !{ptr @alc882_pin_fixup_tbl, !2084, !"alc882_pin_fixup_tbl", i1 false, i1 false}
!2084 = !{!"../sound/pci/hda/patch_realtek.c", i32 2684, i32 39}
!2085 = !{ptr @alc882_parse_auto_config.alc882_ignore, !2086, !"alc882_ignore", i1 false, i1 false}
!2086 = !{!"../sound/pci/hda/patch_realtek.c", i32 2712, i32 25}
!2087 = !{ptr @alc882_parse_auto_config.alc882_ssids, !2088, !"alc882_ssids", i1 false, i1 false}
!2088 = !{!"../sound/pci/hda/patch_realtek.c", i32 2713, i32 25}
!2089 = !{ptr @.str.1164, !2090, !"<string literal>", i1 false, i1 false}
!2090 = !{!"../sound/pci/hda/patch_realtek.c", i32 1621, i32 35}
!2091 = !{ptr @.str.1165, !2092, !"<string literal>", i1 false, i1 false}
!2092 = !{!"../sound/pci/hda/patch_realtek.c", i32 1622, i32 39}
!2093 = !{ptr @.str.1166, !2094, !"<string literal>", i1 false, i1 false}
!2094 = !{!"../sound/pci/hda/patch_realtek.c", i32 1623, i32 35}
!2095 = !{ptr @.str.1167, !2096, !"<string literal>", i1 false, i1 false}
!2096 = !{!"../sound/pci/hda/patch_realtek.c", i32 1624, i32 39}
!2097 = !{ptr @.str.1168, !2098, !"<string literal>", i1 false, i1 false}
!2098 = !{!"../sound/pci/hda/patch_realtek.c", i32 1625, i32 35}
!2099 = !{ptr @.str.1169, !2100, !"<string literal>", i1 false, i1 false}
!2100 = !{!"../sound/pci/hda/patch_realtek.c", i32 1626, i32 39}
!2101 = !{ptr @.str.1170, !2102, !"<string literal>", i1 false, i1 false}
!2102 = !{!"../sound/pci/hda/patch_realtek.c", i32 1627, i32 44}
!2103 = !{ptr @alc880_fixup_models, !2104, !"alc880_fixup_models", i1 false, i1 false}
!2104 = !{!"../sound/pci/hda/patch_realtek.c", i32 1620, i32 37}
!2105 = !{ptr @.str.1171, !2106, !"<string literal>", i1 false, i1 false}
!2106 = !{!"../sound/pci/hda/patch_realtek.c", i32 1550, i32 2}
!2107 = !{ptr @.str.1172, !2108, !"<string literal>", i1 false, i1 false}
!2108 = !{!"../sound/pci/hda/patch_realtek.c", i32 1551, i32 2}
!2109 = !{ptr @.str.1173, !2110, !"<string literal>", i1 false, i1 false}
!2110 = !{!"../sound/pci/hda/patch_realtek.c", i32 1552, i32 2}
!2111 = !{ptr @.str.1174, !2112, !"<string literal>", i1 false, i1 false}
!2112 = !{!"../sound/pci/hda/patch_realtek.c", i32 1554, i32 2}
!2113 = !{ptr @.str.1175, !2114, !"<string literal>", i1 false, i1 false}
!2114 = !{!"../sound/pci/hda/patch_realtek.c", i32 1555, i32 2}
!2115 = !{ptr @.str.1176, !2116, !"<string literal>", i1 false, i1 false}
!2116 = !{!"../sound/pci/hda/patch_realtek.c", i32 1556, i32 2}
!2117 = !{ptr @.str.1177, !2118, !"<string literal>", i1 false, i1 false}
!2118 = !{!"../sound/pci/hda/patch_realtek.c", i32 1557, i32 2}
!2119 = !{ptr @.str.1178, !2120, !"<string literal>", i1 false, i1 false}
!2120 = !{!"../sound/pci/hda/patch_realtek.c", i32 1560, i32 2}
!2121 = !{ptr @.str.1179, !2122, !"<string literal>", i1 false, i1 false}
!2122 = !{!"../sound/pci/hda/patch_realtek.c", i32 1561, i32 2}
!2123 = !{ptr @.str.1180, !2124, !"<string literal>", i1 false, i1 false}
!2124 = !{!"../sound/pci/hda/patch_realtek.c", i32 1562, i32 2}
!2125 = !{ptr @.str.1181, !2126, !"<string literal>", i1 false, i1 false}
!2126 = !{!"../sound/pci/hda/patch_realtek.c", i32 1563, i32 2}
!2127 = !{ptr @.str.1182, !2128, !"<string literal>", i1 false, i1 false}
!2128 = !{!"../sound/pci/hda/patch_realtek.c", i32 1564, i32 2}
!2129 = !{ptr @.str.1183, !2130, !"<string literal>", i1 false, i1 false}
!2130 = !{!"../sound/pci/hda/patch_realtek.c", i32 1565, i32 2}
!2131 = !{ptr @.str.1184, !2132, !"<string literal>", i1 false, i1 false}
!2132 = !{!"../sound/pci/hda/patch_realtek.c", i32 1566, i32 2}
!2133 = !{ptr @.str.1185, !2134, !"<string literal>", i1 false, i1 false}
!2134 = !{!"../sound/pci/hda/patch_realtek.c", i32 1567, i32 2}
!2135 = !{ptr @.str.1186, !2136, !"<string literal>", i1 false, i1 false}
!2136 = !{!"../sound/pci/hda/patch_realtek.c", i32 1568, i32 2}
!2137 = !{ptr @.str.1187, !2138, !"<string literal>", i1 false, i1 false}
!2138 = !{!"../sound/pci/hda/patch_realtek.c", i32 1569, i32 2}
!2139 = !{ptr @.str.1188, !2140, !"<string literal>", i1 false, i1 false}
!2140 = !{!"../sound/pci/hda/patch_realtek.c", i32 1570, i32 2}
!2141 = !{ptr @.str.1189, !2142, !"<string literal>", i1 false, i1 false}
!2142 = !{!"../sound/pci/hda/patch_realtek.c", i32 1571, i32 2}
!2143 = !{ptr @.str.1190, !2144, !"<string literal>", i1 false, i1 false}
!2144 = !{!"../sound/pci/hda/patch_realtek.c", i32 1572, i32 2}
!2145 = !{ptr @.str.1191, !2146, !"<string literal>", i1 false, i1 false}
!2146 = !{!"../sound/pci/hda/patch_realtek.c", i32 1581, i32 2}
!2147 = !{ptr @.str.1192, !2148, !"<string literal>", i1 false, i1 false}
!2148 = !{!"../sound/pci/hda/patch_realtek.c", i32 1582, i32 2}
!2149 = !{ptr @.str.1193, !2150, !"<string literal>", i1 false, i1 false}
!2150 = !{!"../sound/pci/hda/patch_realtek.c", i32 1589, i32 2}
!2151 = !{ptr @.str.1194, !2152, !"<string literal>", i1 false, i1 false}
!2152 = !{!"../sound/pci/hda/patch_realtek.c", i32 1591, i32 2}
!2153 = !{ptr @.str.1195, !2154, !"<string literal>", i1 false, i1 false}
!2154 = !{!"../sound/pci/hda/patch_realtek.c", i32 1594, i32 2}
!2155 = !{ptr @.str.1196, !2156, !"<string literal>", i1 false, i1 false}
!2156 = !{!"../sound/pci/hda/patch_realtek.c", i32 1595, i32 2}
!2157 = !{ptr @.str.1197, !2158, !"<string literal>", i1 false, i1 false}
!2158 = !{!"../sound/pci/hda/patch_realtek.c", i32 1597, i32 2}
!2159 = !{ptr @.str.1198, !2160, !"<string literal>", i1 false, i1 false}
!2160 = !{!"../sound/pci/hda/patch_realtek.c", i32 1598, i32 2}
!2161 = !{ptr @.str.1199, !2162, !"<string literal>", i1 false, i1 false}
!2162 = !{!"../sound/pci/hda/patch_realtek.c", i32 1599, i32 2}
!2163 = !{ptr @.str.1200, !2164, !"<string literal>", i1 false, i1 false}
!2164 = !{!"../sound/pci/hda/patch_realtek.c", i32 1600, i32 2}
!2165 = !{ptr @.str.1201, !2166, !"<string literal>", i1 false, i1 false}
!2166 = !{!"../sound/pci/hda/patch_realtek.c", i32 1603, i32 2}
!2167 = !{ptr @.str.1202, !2168, !"<string literal>", i1 false, i1 false}
!2168 = !{!"../sound/pci/hda/patch_realtek.c", i32 1615, i32 2}
!2169 = !{ptr @alc880_fixup_tbl, !2170, !"alc880_fixup_tbl", i1 false, i1 false}
!2170 = !{!"../sound/pci/hda/patch_realtek.c", i32 1549, i32 35}
!2171 = !{ptr @alc880_fixups, !2172, !"alc880_fixups", i1 false, i1 false}
!2172 = !{!"../sound/pci/hda/patch_realtek.c", i32 1260, i32 31}
!2173 = !{ptr @.str.1225, !2174, !"<string literal>", i1 false, i1 false}
!2174 = !{!"../sound/pci/hda/patch_realtek.c", i32 382, i32 39}
!2175 = !{ptr @alc880_parse_auto_config.alc880_ignore, !2176, !"alc880_ignore", i1 false, i1 false}
!2176 = !{!"../sound/pci/hda/patch_realtek.c", i32 1215, i32 25}
!2177 = !{ptr @alc880_parse_auto_config.alc880_ssids, !2178, !"alc880_ssids", i1 false, i1 false}
!2178 = !{!"../sound/pci/hda/patch_realtek.c", i32 1216, i32 25}
!2179 = !{i32 1, !"wchar_size", i32 2}
!2180 = !{i32 1, !"min_enum_size", i32 4}
!2181 = !{i32 8, !"branch-target-enforcement", i32 0}
!2182 = !{i32 8, !"sign-return-address", i32 0}
!2183 = !{i32 8, !"sign-return-address-all", i32 0}
!2184 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!2185 = !{i32 7, !"uwtable", i32 1}
!2186 = !{i32 7, !"frame-pointer", i32 2}
!2187 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!2188 = !{i64 2149120166, i64 2149120171, i64 2149120184, i64 2149120228, i64 2149120262, i64 2149120283}
!2189 = !{!"auto-init"}
!2190 = !{i8 0, i8 2}
!2191 = !{!"branch_weights", i32 2000, i32 1}
!2192 = !{!"branch_weights", i32 1, i32 2000}
