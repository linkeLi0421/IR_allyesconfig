; ModuleID = '/llk/IR_all_yes/sound/usb/mixer.c_pt.bc'
source_filename = "../sound/usb/mixer.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.atomic_t = type { i32 }
%struct.snd_kcontrol_new = type { i32, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, %union.anon.80, i32 }
%union.anon.80 = type { ptr }
%struct.snd_device_ops = type { ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.usbmix_ctl_map = type { i32, ptr, ptr, ptr }
%struct.uac3_badd_profile = type { i32, ptr, i32, i32, i32 }
%struct.usbmix_name_map = type { i32, ptr, i32, ptr }
%struct.usb_feature_control_info = type { i32, ptr, i32, i32 }
%struct.iterm_name_combo = type { i32, ptr }
%struct.usbmix_selector_map = type { i32, i32, ptr }
%struct.usbmix_connector_map = type { i8, i8, i8, i8 }
%struct.usbmix_dB_map = type { i32, i32, i8 }
%struct.procunit_info = type { i32, ptr, ptr }
%struct.procunit_value_info = type { i32, ptr, i32, i32 }
%struct.usb_mixer_elem_info = type { %struct.usb_mixer_elem_list, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i32], i8, i8, ptr }
%struct.usb_mixer_elem_list = type { ptr, ptr, ptr, i32, i8, ptr, ptr }
%struct.usb_mixer_interface = type { ptr, ptr, %struct.list_head, i32, ptr, ptr, i32, ptr, ptr, i32, %struct.wait_queue_head, ptr, ptr, [6 x i8], ptr, i8, ptr, ptr, ptr }
%struct.list_head = type { ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.snd_usb_audio = type { i32, ptr, ptr, [16 x ptr], i32, i16, %struct.mutex, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.wait_queue_head, i32, i8, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, %struct.list_head, %struct.list_head, i32, i8, i8, i8, ptr, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, i32, ptr, i32, [2 x i32], ptr, ptr, %struct.usb_host_endpoint, [4 x i8], %struct.device, %struct.usb_device_descriptor, [2 x i8], ptr, ptr, ptr, [16 x ptr], [16 x ptr], ptr, i16, i8, i8, i8, i16, i8, i32, ptr, ptr, ptr, %struct.list_head, i32, i32, %struct.atomic_t, i32, i32, i8, [3 x i8], ptr, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, [5 x i8] }>
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, ptr, ptr, ptr, i32, i32, i32 }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.snd_kcontrol = type { %struct.list_head, %struct.snd_ctl_elem_id, i32, ptr, ptr, ptr, %union.anon.78, i32, ptr, ptr, [0 x %struct.snd_kcontrol_volatile] }
%struct.snd_ctl_elem_id = type { i32, i32, i32, i32, [44 x i8], i32 }
%union.anon.78 = type { ptr }
%struct.snd_kcontrol_volatile = type { ptr, i32 }
%struct.mixer_build = type { ptr, ptr, ptr, i32, [8 x i32], [8 x i32], %struct.usb_audio_term, ptr, ptr }
%struct.usb_audio_term = type { i32, i32, i32, i32, i32 }
%struct.snd_card = type { i32, [16 x i8], [16 x i8], [32 x i8], [80 x i8], [32 x i8], [80 x i8], [128 x i8], ptr, ptr, ptr, %struct.list_head, %struct.device, i32, %struct.rw_semaphore, %struct.rwlock_t, i32, i32, %struct.list_head, %struct.list_head, ptr, ptr, %struct.list_head, ptr, %struct.spinlock, i32, ptr, ptr, %struct.device, [4 x ptr], i8, i8, i8, i32, %struct.wait_queue_head, i32, %struct.mutex, ptr, i32, %struct.atomic_t, %struct.wait_queue_head, %struct.wait_queue_head, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, ptr, ptr, ptr }
%struct.uac1_output_terminal_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.uac2_output_terminal_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8, i16, i8 }>
%struct.uac3_output_terminal_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8, i32, i16, i16, i16 }>
%struct.urb = type { %struct.kref, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i32, ptr, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, ptr, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.snd_device = type { %struct.list_head, ptr, i32, i32, ptr, ptr }
%struct.usb_interface = type { ptr, ptr, i32, ptr, i32, i32, i8, %struct.device, ptr, %struct.work_struct }
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.snd_info_entry = type { ptr, i16, i32, i16, %union.anon.64, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.list_head, %struct.list_head }
%union.anon.64 = type { %struct.snd_info_entry_text }
%struct.snd_info_entry_text = type { ptr, ptr }
%struct.snd_ctl_elem_info = type { %struct.snd_ctl_elem_id, i32, i32, i32, i32, %union.anon.69, [64 x i8] }
%union.anon.69 = type { %struct.anon.72, [40 x i8] }
%struct.anon.72 = type { i32, i32, [64 x i8], i64, i32 }
%struct.snd_ctl_elem_value = type { %struct.snd_ctl_elem_id, i8, %union.anon.73, [128 x i8] }
%union.anon.73 = type { %union.anon.75 }
%union.anon.75 = type { [64 x i64] }
%struct.uac2_connectors_ctl_blk = type <{ i8, i32, i8 }>
%struct.uac3_insertion_ctl_blk = type { i8, i8 }
%struct.uac_feature_unit_descriptor = type { i8, i8, i8, i8, i8, i8, [0 x i8] }
%struct.uac2_input_terminal_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8, i32, i8, i16, i8 }>
%struct.uac3_input_terminal_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i32, i16, i16, i16, i16 }
%struct.uac_mixer_unit_descriptor = type { i8, i8, i8, i8, i8, [0 x i8] }
%struct.uac2_feature_unit_descriptor = type { i8, i8, i8, i8, i8, [0 x i8] }
%struct.uac3_feature_unit_descriptor = type { i8, i8, i8, i8, i8, [0 x i8] }
%struct.uac_clock_source_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.uac_selector_unit_descriptor = type { i8, i8, i8, i8, i8, [0 x i8] }
%struct.uac_input_terminal_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16, i8, i8 }
%struct.uac_processing_unit_descriptor = type <{ i8, i8, i8, i8, i16, i8, [0 x i8] }>
%struct.uac2_effect_unit_descriptor = type <{ i8, i8, i8, i8, i16, i8, [0 x i8] }>
%struct.uac3_clock_source_descriptor = type <{ i8, i8, i8, i8, i8, i32, i8, i16 }>
%struct.uac3_cluster_header_descriptor = type <{ i16, i8, i8, i16, i8 }>
%struct.uac1_status_word = type { i8, i8 }
%struct.uac2_interrupt_data_msg = type { i8, i8, i16, i16 }

@snd_usb_get_cur_mix_value.__UNIQUE_ID_ddebug240 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 0, i8 111, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"snd_usb_audio\00", [18 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"snd_usb_get_cur_mix_value\00", [38 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sound/usb/mixer.c\00", [46 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"cannot get current value for control %d ch %d: err = %d\0A\00", [39 x i8] zeroinitializer }, align 32
@snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug241 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.4, ptr @.str.2, ptr @.str.5, i8 0, i8 118, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.4 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"snd_usb_mixer_set_ctl_value\00", [36 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"RANGE setting not yet supported\0A\00", [63 x i8] zeroinitializer }, align 32
@snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug242 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.4, ptr @.str.2, ptr @.str.6, i8 0, i8 126, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.6 = internal constant { [88 x i8], [40 x i8] } { [88 x i8] c"cannot set ctl value: req = %#x, wValue = %#x, wIndex = %#x, type = %d, data = %#x/%#x\0A\00", [40 x i8] zeroinitializer }, align 32
@snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.7, ptr @.str.2, ptr @.str.8, i8 0, i8 -124, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.7 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"snd_usb_set_cur_mix_value\00", [38 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%s(): channel %d of control %d is read_only\0A\00", [51 x i8] zeroinitializer }, align 32
@snd_usb_mixer_add_list.__UNIQUE_ID_ddebug244 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.9, ptr @.str.2, ptr @.str.10, i8 0, i8 -106, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"snd_usb_mixer_add_list\00", [41 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"cannot add control (err = %d)\0A\00", [33 x i8] zeroinitializer }, align 32
@usb_feature_unit_ctl = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.19, i32 0, i32 0, i32 0, ptr @mixer_ctl_feature_info, ptr @mixer_ctl_feature_get, ptr @mixer_ctl_feature_put, %union.anon.80 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@snd_usb_feature_unit_ctl = dso_local global { ptr, [28 x i8] } { ptr @usb_feature_unit_ctl, [28 x i8] zeroinitializer }, align 32
@snd_usb_create_mixer.dev_ops = internal constant { %struct.snd_device_ops, [20 x i8] } { %struct.snd_device_ops { ptr @snd_usb_mixer_dev_free, ptr null, ptr null }, [20 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"USB Mixer\00", [22 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"usbmixer\00", [23 x i8] zeroinitializer }, align 32
@get_ctl_value_v1.__UNIQUE_ID_ddebug238 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.13, ptr @.str.2, ptr @.str.14, i8 0, i8 83, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.13 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"get_ctl_value_v1\00", [47 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"cannot get ctl value: req = %#x, wValue = %#x, wIndex = %#x, type = %d\0A\00", [56 x i8] zeroinitializer }, align 32
@get_ctl_value_v2.__UNIQUE_ID_ddebug239 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.15, ptr @.str.2, ptr @.str.14, i8 0, i8 94, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.15 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"get_ctl_value_v2\00", [47 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@get_min_max_with_quirks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str.2, i32 1259, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"%d:%d: cannot get min/max values for control %d (id %d)\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"get_min_max_with_quirks\00", [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@get_min_max_with_quirks._entry_ptr = internal global ptr @get_min_max_with_quirks._entry, section ".printk_index", align 4
@get_min_max_with_quirks._entry.24 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.21, ptr @.str.2, i32 1343, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"%d:%d: bogus dB values (%d/%d), disabling dB reporting\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@get_min_max_with_quirks._entry_ptr.27 = internal global ptr @get_min_max_with_quirks._entry.24, section ".printk_index", align 4
@.str.28 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Effect Duration\00", [16 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Effect Volume\00", [18 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Effect Feedback Volume\00", [41 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Effect Return\00", [18 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Playback Volume\00", [16 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Effect Send\00", [20 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str.2, i32 1120, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"set quirk for FTU Effect Duration\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"volume_control_quirks\00", [42 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr = internal global ptr @volume_control_quirks._entry, section ".printk_index", align 4
@volume_control_quirks._entry.36 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.35, ptr @.str.2, i32 1129, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"set quirks for FTU Effect Feedback/Volume\0A\00", [53 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr.38 = internal global ptr @volume_control_quirks._entry.36, section ".printk_index", align 4
@.str.39 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"PCM Playback Volume\00", [44 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry.40 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.35, ptr @.str.2, i32 1139, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"set volume quirk for CM102-A+/102S+\0A\00", [59 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr.42 = internal global ptr @volume_control_quirks._entry.40, section ".printk_index", align 4
@volume_control_quirks._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.35, ptr @.str.2, i32 1156, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"set volume quirk for UDA1321/N101 chip\0A\00", [56 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr.45 = internal global ptr @volume_control_quirks._entry.43, section ".printk_index", align 4
@.str.46 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Mic Capture Volume\00", [45 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.35, ptr @.str.2, i32 1164, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"set volume quirk for QuickCam E3500\0A\00", [59 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr.49 = internal global ptr @volume_control_quirks._entry.47, section ".printk_index", align 4
@volume_control_quirks._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.35, ptr @.str.2, i32 1188, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"set resolution quirk: cval->res = 384\0A\00", [57 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr.52 = internal global ptr @volume_control_quirks._entry.50, section ".printk_index", align 4
@.str.53 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Capture Volume\00", [17 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry.54 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.35, ptr @.str.2, i32 1203, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"set resolution quirk: cval->res = 16\0A\00", [58 x i8] zeroinitializer }, align 32
@volume_control_quirks._entry_ptr.56 = internal global ptr @volume_control_quirks._entry.54, section ".printk_index", align 4
@init_cur_mix_raw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.58, ptr @.str.2, i32 1224, ptr @.str.59, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"%d:%d: failed to get current value for ch %d (%d)\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"init_cur_mix_raw\00", [47 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@init_cur_mix_raw._entry_ptr = internal global ptr @init_cur_mix_raw._entry, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@snd_usb_mixer_controls_badd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.61, ptr @.str.2, i32 3109, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"incorrect wMaxPacketSize 0x%x for BADD profile\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"snd_usb_mixer_controls_badd\00", [36 x i8] zeroinitializer }, align 32
@snd_usb_mixer_controls_badd._entry_ptr = internal global ptr @snd_usb_mixer_controls_badd._entry, section ".printk_index", align 4
@snd_usb_mixer_controls_badd.__UNIQUE_ID_ddebug251 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.61, ptr @.str.2, ptr @.str.62, i8 3, i8 15, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.62 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"UAC3 BADD profile 0x%x: detected c_chmask=%d p_chmask=%d\0A\00", [38 x i8] zeroinitializer }, align 32
@uac3_badd_usbmix_ctl_maps = internal constant { [8 x %struct.usbmix_ctl_map], [32 x i8] } { [8 x %struct.usbmix_ctl_map] [%struct.usbmix_ctl_map { i32 32, ptr @uac3_badd_generic_io_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 33, ptr @uac3_badd_headphone_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 34, ptr @uac3_badd_speaker_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 35, ptr @uac3_badd_microphone_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 36, ptr @uac3_badd_headset_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 37, ptr @uac3_badd_headset_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 38, ptr @uac3_badd_speakerphone_map, ptr null, ptr null }, %struct.usbmix_ctl_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_badd_profiles = internal constant { [8 x %struct.uac3_badd_profile], [32 x i8] } { [8 x %struct.uac3_badd_profile] [%struct.uac3_badd_profile { i32 32, ptr @.str.71, i32 -1, i32 -1, i32 0 }, %struct.uac3_badd_profile { i32 33, ptr @.str.72, i32 0, i32 3, i32 0 }, %struct.uac3_badd_profile { i32 34, ptr @.str.73, i32 0, i32 -1, i32 0 }, %struct.uac3_badd_profile { i32 35, ptr @.str.74, i32 -1, i32 0, i32 0 }, %struct.uac3_badd_profile { i32 36, ptr @.str.75, i32 1, i32 -1, i32 1 }, %struct.uac3_badd_profile { i32 37, ptr @.str.76, i32 1, i32 3, i32 1 }, %struct.uac3_badd_profile { i32 38, ptr @.str.77, i32 1, i32 1, i32 0 }, %struct.uac3_badd_profile zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_badd_generic_io_map = internal constant { [3 x %struct.usbmix_name_map], [48 x i8] } { [3 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.63, i32 0, ptr null }, %struct.usbmix_name_map { i32 5, ptr @.str.64, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@uac3_badd_headphone_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.65, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_badd_speaker_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.66, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_badd_microphone_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 5, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_badd_headset_map = internal constant { [4 x %struct.usbmix_name_map], [32 x i8] } { [4 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.68, i32 0, ptr null }, %struct.usbmix_name_map { i32 5, ptr @.str.69, i32 0, ptr null }, %struct.usbmix_name_map { i32 7, ptr @.str.70, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_badd_speakerphone_map = internal constant { [3 x %struct.usbmix_name_map], [48 x i8] } { [3 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.66, i32 0, ptr null }, %struct.usbmix_name_map { i32 5, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Generic Out Playback\00", [43 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Generic In Capture\00", [45 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Headphone Playback\00", [45 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Speaker Playback\00", [47 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Mic Capture\00", [20 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Headset Playback\00", [47 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Headset Capture\00", [16 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Sidetone Mixing\00", [16 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GENERIC IO\00", [21 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"HEADPHONE\00", [22 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SPEAKER\00", [24 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"MICROPHONE\00", [21 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HEADSET\00", [24 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"HEADSET ADAPTER\00", [16 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SPEAKERPHONE\00", [19 x i8] zeroinitializer }, align 32
@uac3_badd_func_has_valid_channels._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.2, i32 3024, ptr @.str.59, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"BAAD %s: no channels?\00", [42 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"uac3_badd_func_has_valid_channels\00", [62 x i8] zeroinitializer }, align 32
@uac3_badd_func_has_valid_channels._entry_ptr = internal global ptr @uac3_badd_func_has_valid_channels._entry, section ".printk_index", align 4
@uac3_badd_func_has_valid_channels._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.79, ptr @.str.2, i32 3033, ptr @.str.59, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"BAAD %s c_chmask mismatch\00", [38 x i8] zeroinitializer }, align 32
@uac3_badd_func_has_valid_channels._entry_ptr.82 = internal global ptr @uac3_badd_func_has_valid_channels._entry.80, section ".printk_index", align 4
@uac3_badd_func_has_valid_channels._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.79, ptr @.str.2, i32 3039, ptr @.str.59, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"BAAD %s p_chmask mismatch\00", [38 x i8] zeroinitializer }, align 32
@uac3_badd_func_has_valid_channels._entry_ptr.85 = internal global ptr @uac3_badd_func_has_valid_channels._entry.83, section ".printk_index", align 4
@usb_feature_unit_ctl_ro = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.19, i32 0, i32 0, i32 0, ptr @mixer_ctl_feature_info, ptr @mixer_ctl_feature_get, ptr null, %union.anon.80 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@__build_feature_ctl._entry = internal constant %struct.pi_entry { ptr @.str.86, ptr @.str.87, ptr @.str.2, i32 1713, ptr @.str.22, ptr @.str.23 }, align 1
@.str.86 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"cannot malloc kcontrol\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__build_feature_ctl\00", [44 x i8] zeroinitializer }, align 32
@__build_feature_ctl._entry_ptr = internal global ptr @__build_feature_ctl._entry, section ".printk_index", align 4
@.str.88 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Feature %d\00", [21 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" Capture\00", [23 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c" Playback\00", [22 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" Switch\00", [24 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" Volume\00", [24 x i8] zeroinitializer }, align 32
@audio_feature_info = internal constant { [13 x %struct.usb_feature_control_info], [48 x i8] } { [13 x %struct.usb_feature_control_info] [%struct.usb_feature_control_info { i32 1, ptr @.str.148, i32 1, i32 -1 }, %struct.usb_feature_control_info { i32 2, ptr @.str.149, i32 4, i32 -1 }, %struct.usb_feature_control_info { i32 3, ptr @.str.150, i32 2, i32 -1 }, %struct.usb_feature_control_info { i32 4, ptr @.str.151, i32 2, i32 -1 }, %struct.usb_feature_control_info { i32 5, ptr @.str.152, i32 2, i32 -1 }, %struct.usb_feature_control_info { i32 6, ptr @.str.153, i32 2, i32 -1 }, %struct.usb_feature_control_info { i32 7, ptr @.str.154, i32 0, i32 -1 }, %struct.usb_feature_control_info { i32 8, ptr @.str.155, i32 5, i32 7 }, %struct.usb_feature_control_info { i32 9, ptr @.str.156, i32 0, i32 -1 }, %struct.usb_feature_control_info { i32 10, ptr @.str.157, i32 0, i32 -1 }, %struct.usb_feature_control_info { i32 11, ptr @.str.158, i32 4, i32 -1 }, %struct.usb_feature_control_info { i32 12, ptr @.str.159, i32 4, i32 -1 }, %struct.usb_feature_control_info { i32 13, ptr @.str.160, i32 0, i32 -1 }], [48 x i8] zeroinitializer }, align 32
@__build_feature_ctl.__UNIQUE_ID_ddebug245 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.87, ptr @.str.2, ptr @.str.93, i8 1, i8 -67, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.93 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"[%d] FU [%s] skipped due to invalid volume\0A\00", [52 x i8] zeroinitializer }, align 32
@__build_feature_ctl._entry.94 = internal constant %struct.pi_entry { ptr @.str.95, ptr @.str.87, ptr @.str.2, i32 1808, ptr @.str.59, ptr @.str.23 }, align 1
@.str.95 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"Warning! Unlikely big volume range (=%u), cval->res is probably wrong.\00", [57 x i8] zeroinitializer }, align 32
@__build_feature_ctl._entry_ptr.96 = internal global ptr @__build_feature_ctl._entry.94, section ".printk_index", align 4
@__build_feature_ctl._entry.97 = internal constant %struct.pi_entry { ptr @.str.98, ptr @.str.87, ptr @.str.2, i32 1812, ptr @.str.59, ptr @.str.23 }, align 1
@.str.98 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"[%d] FU [%s] ch = %d, val = %d/%d/%d\00", [59 x i8] zeroinitializer }, align 32
@__build_feature_ctl._entry_ptr.99 = internal global ptr @__build_feature_ctl._entry.97, section ".printk_index", align 4
@__build_feature_ctl.__UNIQUE_ID_ddebug246 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.87, ptr @.str.2, ptr @.str.100, i8 1, i8 -58, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.100 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"[%d] FU [%s] ch = %d, val = %d/%d/%d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Selector\00", [23 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Process Unit\00", [19 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Ext Unit\00", [23 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Mixer\00", [26 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Unit %d\00", [24 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PCM\00", [28 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"Mic\00", [28 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Headset\00", [24 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Phone\00", [26 x i8] zeroinitializer }, align 32
@iterm_names = internal constant { [37 x %struct.iterm_name_combo], [88 x i8] } { [37 x %struct.iterm_name_combo] [%struct.iterm_name_combo { i32 768, ptr @.str.110 }, %struct.iterm_name_combo { i32 769, ptr @.str.111 }, %struct.iterm_name_combo { i32 770, ptr @.str.112 }, %struct.iterm_name_combo { i32 771, ptr @.str.113 }, %struct.iterm_name_combo { i32 772, ptr @.str.114 }, %struct.iterm_name_combo { i32 773, ptr @.str.115 }, %struct.iterm_name_combo { i32 774, ptr @.str.116 }, %struct.iterm_name_combo { i32 775, ptr @.str.117 }, %struct.iterm_name_combo { i32 1536, ptr @.str.118 }, %struct.iterm_name_combo { i32 1537, ptr @.str.119 }, %struct.iterm_name_combo { i32 1538, ptr @.str.120 }, %struct.iterm_name_combo { i32 1539, ptr @.str.121 }, %struct.iterm_name_combo { i32 1540, ptr @.str.122 }, %struct.iterm_name_combo { i32 1541, ptr @.str.123 }, %struct.iterm_name_combo { i32 1542, ptr @.str.124 }, %struct.iterm_name_combo { i32 1543, ptr @.str.125 }, %struct.iterm_name_combo { i32 1792, ptr @.str.126 }, %struct.iterm_name_combo { i32 1793, ptr @.str.127 }, %struct.iterm_name_combo { i32 1794, ptr @.str.128 }, %struct.iterm_name_combo { i32 1795, ptr @.str.129 }, %struct.iterm_name_combo { i32 1796, ptr @.str.130 }, %struct.iterm_name_combo { i32 1797, ptr @.str.131 }, %struct.iterm_name_combo { i32 1798, ptr @.str.132 }, %struct.iterm_name_combo { i32 1799, ptr @.str.133 }, %struct.iterm_name_combo { i32 1800, ptr @.str.134 }, %struct.iterm_name_combo { i32 1801, ptr @.str.135 }, %struct.iterm_name_combo { i32 1802, ptr @.str.136 }, %struct.iterm_name_combo { i32 1803, ptr @.str.137 }, %struct.iterm_name_combo { i32 1804, ptr @.str.138 }, %struct.iterm_name_combo { i32 1805, ptr @.str.139 }, %struct.iterm_name_combo { i32 1806, ptr @.str.140 }, %struct.iterm_name_combo { i32 1807, ptr @.str.141 }, %struct.iterm_name_combo { i32 1808, ptr @.str.142 }, %struct.iterm_name_combo { i32 1809, ptr @.str.143 }, %struct.iterm_name_combo { i32 1810, ptr @.str.144 }, %struct.iterm_name_combo { i32 1811, ptr @.str.145 }, %struct.iterm_name_combo zeroinitializer], [88 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Output\00", [25 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Speaker\00", [24 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Headphone\00", [22 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"HMD Audio\00", [22 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Desktop Speaker\00", [16 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Room Speaker\00", [19 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Com Speaker\00", [20 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"LFE\00", [28 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"External In\00", [20 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Analog In\00", [22 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Digital In\00", [21 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Line\00", [27 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Legacy In\00", [22 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"IEC958 In\00", [22 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"1394 DA Stream\00", [17 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"1394 DV Stream\00", [17 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Embedded\00", [23 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Noise Source\00", [19 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Equalization Noise\00", [45 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"CD\00", [29 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DAT\00", [28 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DCC\00", [28 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MiniDisk\00", [23 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Analog Tape\00", [20 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Phonograph\00", [21 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"VCR Audio\00", [22 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Video Disk Audio\00", [47 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"DVD Audio\00", [22 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"TV Tuner Audio\00", [17 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Satellite Rec Audio\00", [44 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Cable Tuner Audio\00", [46 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"DSS Audio\00", [22 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Radio Receiver\00", [17 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Radio Transmitter\00", [46 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Multi-Track Recorder\00", [43 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Synthesizer\00", [20 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"headset\00", [24 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"headphone\00", [22 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Mute\00", [27 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Volume\00", [25 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Tone Control - Bass\00", [44 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Tone Control - Mid\00", [45 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Tone Control - Treble\00", [42 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Graphic Equalizer\00", [46 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Auto Gain Control\00", [46 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Delay Control\00", [18 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Bass Boost\00", [21 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Loudness\00", [23 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Input Gain Control\00", [45 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Input Gain Pad Control\00", [41 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Phase Inverter Control\00", [41 x i8] zeroinitializer }, align 32
@usb_connector_ctl_ro = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 0, i32 0, i32 0, ptr @.str.19, i32 0, i32 1, i32 0, ptr @snd_ctl_boolean_mono_info, ptr @mixer_ctl_connector_get, ptr null, %union.anon.80 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@build_connector_control._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.161, ptr @.str.2, i32 1912, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"build_connector_control\00", [40 x i8] zeroinitializer }, align 32
@build_connector_control._entry_ptr = internal global ptr @build_connector_control._entry, section ".printk_index", align 4
@.str.162 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c" Jack\00", [26 x i8] zeroinitializer }, align 32
@get_connector_value._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.164, ptr @.str.2, i32 1529, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"cannot get connectors status: req = %#x, wValue = %#x, wIndex = %#x, type = %d\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"get_connector_value\00", [44 x i8] zeroinitializer }, align 32
@get_connector_value._entry_ptr = internal global ptr @get_connector_value._entry, section ".printk_index", align 4
@.str.165 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c" - Input Jack\00", [18 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c" - Output Jack\00", [17 x i8] zeroinitializer }, align 32
@usbmix_ctl_maps = internal constant { [37 x %struct.usbmix_ctl_map], [144 x i8] } { [37 x %struct.usbmix_ctl_map] [%struct.usbmix_ctl_map { i32 69087232, ptr @extigy_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 69087248, ptr @mp3plus_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 69087264, ptr @audigy2nx_map, ptr @audigy2nx_selectors, ptr null }, %struct.usbmix_ctl_map { i32 69087296, ptr @live24ext_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 69087304, ptr @audigy2nx_map, ptr @audigy2nx_selectors, ptr null }, %struct.usbmix_ctl_map { i32 75481104, ptr @gamecom780_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 116965376, ptr @hercules_usb51_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 123936816, ptr null, ptr @c400_selectors, ptr null }, %struct.usbmix_ctl_map { i32 123936817, ptr null, ptr @c400_selectors, ptr null }, %struct.usbmix_ctl_map { i32 146482946, ptr @linex_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 177340561, ptr @maya44_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 205853016, ptr @justlink_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 214761512, ptr @aureon_51_2_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 198852628, ptr @dell_alc4020_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 230297600, ptr @mbox1_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 333774849, ptr @scratch_live_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 537661464, ptr @ebox44_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 628293640, ptr @maya44_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 665587712, ptr @scms_usb3318_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 633602051, ptr @scms_usb3318_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 94834720, ptr @bose_companion5_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 94847226, ptr @bose_soundlink_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 454822461, ptr @corsair_virtuoso_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 454822462, ptr @corsair_virtuoso_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 454822465, ptr @corsair_virtuoso_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 454822466, ptr @corsair_virtuoso_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 68460545, ptr @aorus_master_alc1220vb_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 68460546, ptr @trx40_mobo_map, ptr null, ptr @trx40_mobo_connector_map }, %struct.usbmix_ctl_map { i32 184883478, ptr @asus_rog_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 184883479, ptr @trx40_mobo_map, ptr null, ptr @trx40_mobo_connector_map }, %struct.usbmix_ctl_map { i32 229641572, ptr @trx40_mobo_map, ptr null, ptr @trx40_mobo_connector_map }, %struct.usbmix_ctl_map { i32 229654940, ptr @msi_mpg_x570s_carbon_max_wifi_alc4080_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 229659709, ptr @trx40_mobo_map, ptr null, ptr @trx40_mobo_connector_map }, %struct.usbmix_ctl_map { i32 651037185, ptr @trx40_mobo_map, ptr null, ptr @trx40_mobo_connector_map }, %struct.usbmix_ctl_map { i32 397021254, ptr @lenovo_p620_rear_map, ptr null, ptr null }, %struct.usbmix_ctl_map { i32 328532005, ptr @sennheiser_pc8_map, ptr null, ptr null }, %struct.usbmix_ctl_map zeroinitializer], [144 x i8] zeroinitializer }, align 32
@extigy_map = internal constant { [20 x %struct.usbmix_name_map], [64 x i8] } { [20 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.168, i32 0, ptr null }, %struct.usbmix_name_map { i32 5, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 6, ptr @.str.120, i32 0, ptr null }, %struct.usbmix_name_map { i32 8, ptr @.str.169, i32 0, ptr null }, %struct.usbmix_name_map { i32 10, ptr @.str.170, i32 0, ptr null }, %struct.usbmix_name_map { i32 11, ptr @.str.171, i32 0, ptr null }, %struct.usbmix_name_map { i32 12, ptr @.str.172, i32 0, ptr null }, %struct.usbmix_name_map { i32 17, ptr null, i32 1, ptr null }, %struct.usbmix_name_map { i32 17, ptr @.str.173, i32 2, ptr null }, %struct.usbmix_name_map { i32 18, ptr @.str.150, i32 3, ptr null }, %struct.usbmix_name_map { i32 18, ptr @.str.152, i32 5, ptr null }, %struct.usbmix_name_map { i32 18, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 21, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 22, ptr @.str.175, i32 0, ptr null }, %struct.usbmix_name_map { i32 23, ptr @.str.176, i32 0, ptr null }, %struct.usbmix_name_map { i32 25, ptr @.str.177, i32 0, ptr null }, %struct.usbmix_name_map { i32 26, ptr @.str.177, i32 0, ptr null }, %struct.usbmix_name_map { i32 27, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 29, ptr null, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [64 x i8] zeroinitializer }, align 32
@mp3plus_map = internal constant { [9 x %struct.usbmix_name_map], [48 x i8] } { [9 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 8, ptr @.str.171, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 10, ptr null, i32 2, ptr @mp3plus_dB_2 }, %struct.usbmix_name_map { i32 10, ptr @.str.178, i32 7, ptr null }, %struct.usbmix_name_map { i32 11, ptr @.str.179, i32 0, ptr @mp3plus_dB_2 }, %struct.usbmix_name_map { i32 12, ptr @.str.180, i32 0, ptr null }, %struct.usbmix_name_map { i32 13, ptr null, i32 0, ptr @mp3plus_dB_1 }, %struct.usbmix_name_map { i32 14, ptr @.str.169, i32 0, ptr @mp3plus_dB_1 }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@audigy2nx_map = internal constant { [17 x %struct.usbmix_name_map], [80 x i8] } { [17 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 6, ptr @.str.180, i32 0, ptr null }, %struct.usbmix_name_map { i32 8, ptr @.str.169, i32 0, ptr null }, %struct.usbmix_name_map { i32 11, ptr @.str.181, i32 0, ptr null }, %struct.usbmix_name_map { i32 12, ptr @.str.179, i32 0, ptr null }, %struct.usbmix_name_map { i32 13, ptr @.str.182, i32 0, ptr null }, %struct.usbmix_name_map { i32 14, ptr @.str.171, i32 0, ptr null }, %struct.usbmix_name_map { i32 17, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 18, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 21, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 22, ptr @.str.175, i32 0, ptr null }, %struct.usbmix_name_map { i32 23, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 27, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 28, ptr @.str.66, i32 0, ptr null }, %struct.usbmix_name_map { i32 29, ptr @.str.183, i32 0, ptr null }, %struct.usbmix_name_map { i32 30, ptr @.str.65, i32 0, ptr null }, %struct.usbmix_name_map { i32 31, ptr @.str.184, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [80 x i8] zeroinitializer }, align 32
@audigy2nx_selectors = internal constant { [4 x %struct.usbmix_selector_map], [48 x i8] } { [4 x %struct.usbmix_selector_map] [%struct.usbmix_selector_map { i32 14, i32 3, ptr @.compoundliteral }, %struct.usbmix_selector_map { i32 29, i32 3, ptr @.compoundliteral.187 }, %struct.usbmix_selector_map { i32 31, i32 2, ptr @.compoundliteral.189 }, %struct.usbmix_selector_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@live24ext_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 5, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@gamecom780_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 9, ptr null, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@hercules_usb51_map = internal constant { [7 x %struct.usbmix_name_map], [48 x i8] } { [7 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 8, ptr @.str.171, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 10, ptr @.str.178, i32 7, ptr null }, %struct.usbmix_name_map { i32 11, ptr @.str.179, i32 0, ptr null }, %struct.usbmix_name_map { i32 13, ptr @.str.190, i32 0, ptr null }, %struct.usbmix_name_map { i32 14, ptr @.str.191, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@c400_selectors = internal constant { [2 x %struct.usbmix_selector_map], [40 x i8] } { [2 x %struct.usbmix_selector_map] [%struct.usbmix_selector_map { i32 128, i32 2, ptr @.compoundliteral.194 }, %struct.usbmix_selector_map zeroinitializer], [40 x i8] zeroinitializer }, align 32
@linex_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 3, ptr @.str.195, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@maya44_map = internal constant { [5 x %struct.usbmix_name_map], [48 x i8] } { [5 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr @.str.169, i32 0, ptr null }, %struct.usbmix_name_map { i32 4, ptr @.str.169, i32 0, ptr null }, %struct.usbmix_name_map { i32 7, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 10, ptr @.str.179, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@justlink_map = internal constant { [6 x %struct.usbmix_name_map], [32 x i8] } { [6 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 3, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 7, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 8, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 12, ptr null, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@aureon_51_2_map = internal constant { [8 x %struct.usbmix_name_map], [32 x i8] } { [8 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 8, ptr @.str.171, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr @.str.174, i32 0, ptr null }, %struct.usbmix_name_map { i32 10, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map { i32 11, ptr @.str.179, i32 0, ptr null }, %struct.usbmix_name_map { i32 12, ptr @.str.196, i32 0, ptr null }, %struct.usbmix_name_map { i32 13, ptr @.str.170, i32 0, ptr null }, %struct.usbmix_name_map { i32 14, ptr @.str.169, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@dell_alc4020_map = internal constant { [4 x %struct.usbmix_name_map], [32 x i8] } { [4 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 4, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 16, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 19, ptr null, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@mbox1_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 1, ptr @.str.197, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@scratch_live_map = internal constant { [3 x %struct.usbmix_name_map], [48 x i8] } { [3 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 4, ptr @.str.198, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr @.str.199, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@ebox44_map = internal constant { [6 x %struct.usbmix_name_map], [32 x i8] } { [6 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 4, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 6, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 7, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 10, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 11, ptr null, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@scms_usb3318_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 10, ptr null, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@bose_companion5_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 3, ptr null, i32 0, ptr @bose_companion5_dB }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@bose_soundlink_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 2, ptr null, i32 0, ptr @bose_soundlink_dB }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@corsair_virtuoso_map = internal constant { [3 x %struct.usbmix_name_map], [48 x i8] } { [3 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 3, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map { i32 6, ptr @.str.200, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@aorus_master_alc1220vb_map = internal constant { [11 x %struct.usbmix_name_map], [48 x i8] } { [11 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 17, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 19, ptr null, i32 12, ptr null }, %struct.usbmix_name_map { i32 16, ptr @.str.201, i32 0, ptr null }, %struct.usbmix_name_map { i32 22, ptr @.str.202, i32 0, ptr null }, %struct.usbmix_name_map { i32 7, ptr @.str.121, i32 0, ptr null }, %struct.usbmix_name_map { i32 19, ptr @.str.179, i32 0, ptr null }, %struct.usbmix_name_map { i32 8, ptr @.str.107, i32 0, ptr null }, %struct.usbmix_name_map { i32 20, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr @.str.203, i32 0, ptr null }, %struct.usbmix_name_map { i32 21, ptr @.str.204, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@trx40_mobo_map = internal constant { [14 x %struct.usbmix_name_map], [32 x i8] } { [14 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 18, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 19, ptr null, i32 12, ptr null }, %struct.usbmix_name_map { i32 16, ptr @.str.111, i32 0, ptr null }, %struct.usbmix_name_map { i32 22, ptr @.str.66, i32 0, ptr null }, %struct.usbmix_name_map { i32 7, ptr @.str.121, i32 0, ptr null }, %struct.usbmix_name_map { i32 19, ptr @.str.179, i32 0, ptr null }, %struct.usbmix_name_map { i32 17, ptr @.str.205, i32 0, ptr null }, %struct.usbmix_name_map { i32 23, ptr @.str.206, i32 0, ptr null }, %struct.usbmix_name_map { i32 8, ptr @.str.107, i32 0, ptr null }, %struct.usbmix_name_map { i32 20, ptr @.str.67, i32 0, ptr null }, %struct.usbmix_name_map { i32 9, ptr @.str.203, i32 0, ptr null }, %struct.usbmix_name_map { i32 21, ptr @.str.204, i32 0, ptr null }, %struct.usbmix_name_map { i32 24, ptr @.str.207, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@trx40_mobo_connector_map = internal constant { [6 x %struct.usbmix_connector_map], [40 x i8] } { [6 x %struct.usbmix_connector_map] [%struct.usbmix_connector_map { i8 10, i8 16, i8 0, i8 0 }, %struct.usbmix_connector_map { i8 11, i8 17, i8 0, i8 0 }, %struct.usbmix_connector_map { i8 13, i8 7, i8 0, i8 0 }, %struct.usbmix_connector_map { i8 14, i8 8, i8 0, i8 0 }, %struct.usbmix_connector_map { i8 15, i8 9, i8 0, i8 0 }, %struct.usbmix_connector_map zeroinitializer], [40 x i8] zeroinitializer }, align 32
@asus_rog_map = internal constant { [3 x %struct.usbmix_name_map], [48 x i8] } { [3 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 18, ptr null, i32 0, ptr null }, %struct.usbmix_name_map { i32 19, ptr null, i32 12, ptr null }, %struct.usbmix_name_map zeroinitializer], [48 x i8] zeroinitializer }, align 32
@msi_mpg_x570s_carbon_max_wifi_alc4080_map = internal constant { [4 x %struct.usbmix_name_map], [32 x i8] } { [4 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 29, ptr @.str.66, i32 0, ptr null }, %struct.usbmix_name_map { i32 30, ptr @.str.206, i32 0, ptr null }, %struct.usbmix_name_map { i32 32, ptr @.str.207, i32 0, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@lenovo_p620_rear_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 19, ptr null, i32 12, ptr null }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@sennheiser_pc8_map = internal constant { [2 x %struct.usbmix_name_map], [32 x i8] } { [2 x %struct.usbmix_name_map] [%struct.usbmix_name_map { i32 9, ptr null, i32 0, ptr @sennheiser_pc8_dB }, %struct.usbmix_name_map zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"PCM Playback\00", [19 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Line Playback\00", [18 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Mic Playback\00", [19 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Capture Source\00", [17 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Capture\00", [24 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Channel Routing\00", [16 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Master Playback\00", [16 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Digital Out Playback\00", [43 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Digital Out1 Playback\00", [42 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IEC958 Optical Playback\00", [40 x i8] zeroinitializer }, align 32
@mp3plus_dB_2 = internal constant { %struct.usbmix_dB_map, [20 x i8] } { %struct.usbmix_dB_map { i32 -1781, i32 618, i8 0 }, [20 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Mic Boost\00", [22 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Line Capture\00", [19 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Digital In Playback\00", [44 x i8] zeroinitializer }, align 32
@mp3plus_dB_1 = internal constant { %struct.usbmix_dB_map, [20 x i8] } { %struct.usbmix_dB_map { i32 -4781, i32 0, i8 0 }, [20 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"What-U-Hear Capture\00", [44 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Digital In Capture\00", [45 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Digital Out Source\00", [45 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Headphone Source\00", [47 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"What-U-Hear\00", [20 x i8] zeroinitializer }, align 32
@.compoundliteral = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.121, ptr @.str.120, ptr @.str.185], [20 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Front\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.187 = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.186, ptr @.str.106, ptr @.str.120], [20 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Side\00", [27 x i8] zeroinitializer }, align 32
@.compoundliteral.189 = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.186, ptr @.str.188], [24 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Mic Bypass Playback\00", [44 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Line Bypass Playback\00", [43 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Internal\00", [23 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"SPDIF\00", [26 x i8] zeroinitializer }, align 32
@.compoundliteral.194 = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.192, ptr @.str.193], [24 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Master\00", [25 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IEC958 In Capture\00", [46 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Clock\00", [26 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Line 1 In\00", [22 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Line 2 In\00", [22 x i8] zeroinitializer }, align 32
@bose_companion5_dB = internal constant { %struct.usbmix_dB_map, [20 x i8] } { %struct.usbmix_dB_map { i32 -5006, i32 -6, i8 0 }, [20 x i8] zeroinitializer }, align 32
@bose_soundlink_dB = internal constant { %struct.usbmix_dB_map, [20 x i8] } { %struct.usbmix_dB_map { i32 -8283, i32 0, i8 1 }, [20 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Sidetone Playback\00", [46 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Line Out\00", [23 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Line Out Playback\00", [46 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Front Mic\00", [22 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Front Mic Capture\00", [46 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Front Headphone\00", [16 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Front Headphone Playback\00", [39 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"IEC958 Playback\00", [16 x i8] zeroinitializer }, align 32
@sennheiser_pc8_dB = internal constant { %struct.usbmix_dB_map, [20 x i8] } { %struct.usbmix_dB_map { i32 -9500, i32 0, i8 0 }, [20 x i8] zeroinitializer }, align 32
@parse_audio_unit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.208, ptr @.str.209, ptr @.str.2, i32 2872, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"unit %d not found!\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"parse_audio_unit\00", [47 x i8] zeroinitializer }, align 32
@parse_audio_unit._entry_ptr = internal global ptr @parse_audio_unit._entry, section ".printk_index", align 4
@parse_audio_unit.__UNIQUE_ID_ddebug250 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.209, ptr @.str.2, ptr @.str.210, i8 2, i8 -49, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.210 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"invalid unit %d\0A\00", [47 x i8] zeroinitializer }, align 32
@parse_audio_unit._entry.211 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.212, ptr @.str.209, ptr @.str.2, i32 2917, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"unit %u: unexpected type 0x%02x\0A\00", [63 x i8] zeroinitializer }, align 32
@parse_audio_unit._entry_ptr.213 = internal global ptr @parse_audio_unit._entry.211, section ".printk_index", align 4
@get_cluster_channels_v3._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.215, ptr @.str.2, i32 743, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"cannot request logical cluster ID: %d (err: %d)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"get_cluster_channels_v3\00", [40 x i8] zeroinitializer }, align 32
@get_cluster_channels_v3._entry_ptr = internal global ptr @get_cluster_channels_v3._entry, section ".printk_index", align 4
@parse_audio_mixer_unit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.216, ptr @.str.217, ptr @.str.2, i32 2246, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"invalid MIXER UNIT descriptor %d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"parse_audio_mixer_unit\00", [41 x i8] zeroinitializer }, align 32
@parse_audio_mixer_unit._entry_ptr = internal global ptr @parse_audio_mixer_unit._entry, section ".printk_index", align 4
@build_mixer_unit_ctl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.218, ptr @.str.2, i32 2182, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"build_mixer_unit_ctl\00", [43 x i8] zeroinitializer }, align 32
@build_mixer_unit_ctl._entry_ptr = internal global ptr @build_mixer_unit_ctl._entry, section ".printk_index", align 4
@.str.219 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Mixer Source %d\00", [16 x i8] zeroinitializer }, align 32
@build_mixer_unit_ctl.__UNIQUE_ID_ddebug247 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.218, ptr @.str.2, ptr @.str.220, i8 2, i8 37, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.220 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"[%d] MU [%s] ch = %d, val = %d/%d\0A\00", [61 x i8] zeroinitializer }, align 32
@usb_bool_master_control_ctl_ro = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 0, i32 0, i32 0, ptr @.str.19, i32 0, i32 1, i32 0, ptr @snd_ctl_boolean_mono_info, ptr @mixer_ctl_master_bool_get, ptr null, %union.anon.80 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"%s Validity\00", [20 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Clock Source %d Validity\00", [39 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Input %u\00", [23 x i8] zeroinitializer }, align 32
@mixer_selectunit_ctl = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.19, i32 0, i32 0, i32 0, ptr @mixer_ctl_selector_info, ptr @mixer_ctl_selector_get, ptr @mixer_ctl_selector_put, %union.anon.80 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@parse_audio_selector_unit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.224, ptr @.str.2, i32 2800, ptr @.str.22, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"parse_audio_selector_unit\00", [38 x i8] zeroinitializer }, align 32
@parse_audio_selector_unit._entry_ptr = internal global ptr @parse_audio_selector_unit._entry, section ".printk_index", align 4
@.str.225 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"USB\00", [28 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c" Clock Source\00", [18 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c" Capture Source\00", [16 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c" Playback Source\00", [47 x i8] zeroinitializer }, align 32
@parse_audio_selector_unit.__UNIQUE_ID_ddebug249 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.224, ptr @.str.2, ptr @.str.229, i8 2, i8 -57, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.229 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"[%d] SU [%s] items = %d\0A\00", [39 x i8] zeroinitializer }, align 32
@parse_audio_feature_unit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.230, ptr @.str.231, ptr @.str.2, i32 2027, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"usbmixer: master volume quirk for PCM2702 chip\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"parse_audio_feature_unit\00", [39 x i8] zeroinitializer }, align 32
@parse_audio_feature_unit._entry_ptr = internal global ptr @parse_audio_feature_unit._entry, section ".printk_index", align 4
@parse_audio_feature_unit._entry.232 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.231, ptr @.str.2, i32 2033, ptr @.str.26, ptr @.str.23 }, [40 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"usbmixer: volume control quirk for Tenx TP6911 Audio Headset\0A\00", [34 x i8] zeroinitializer }, align 32
@parse_audio_feature_unit._entry_ptr.234 = internal global ptr @parse_audio_feature_unit._entry.232, section ".printk_index", align 4
@procunits = internal constant { [7 x %struct.procunit_info], [44 x i8] } { [7 x %struct.procunit_info] [%struct.procunit_info { i32 1, ptr @.str.241, ptr @updown_proc_info }, %struct.procunit_info { i32 2, ptr @.str.242, ptr @prologic_proc_info }, %struct.procunit_info { i32 3, ptr @.str.243, ptr @threed_enh_proc_info }, %struct.procunit_info { i32 4, ptr @.str.244, ptr @reverb_proc_info }, %struct.procunit_info { i32 5, ptr @.str.245, ptr @chorus_proc_info }, %struct.procunit_info { i32 6, ptr @.str.246, ptr @dcr_proc_info }, %struct.procunit_info zeroinitializer], [44 x i8] zeroinitializer }, align 32
@uac3_procunits = internal constant { [4 x %struct.procunit_info], [48 x i8] } { [4 x %struct.procunit_info] [%struct.procunit_info { i32 1, ptr @.str.241, ptr @uac3_updown_proc_info }, %struct.procunit_info { i32 2, ptr @.str.243, ptr @uac3_stereo_ext_proc_info }, %struct.procunit_info { i32 3, ptr @.str.259, ptr @undefined_proc_info }, %struct.procunit_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@build_audio_procunit.default_value_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Switch\00", [25 x i8] zeroinitializer }, align 32
@build_audio_procunit.default_info = internal constant { %struct.procunit_info, [20 x i8] } { %struct.procunit_info { i32 0, ptr null, ptr @build_audio_procunit.default_value_info }, [20 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Extension Unit\00", [17 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Processing Unit\00", [16 x i8] zeroinitializer }, align 32
@mixer_procunit_ctl = internal constant { %struct.snd_kcontrol_new, [48 x i8] } { %struct.snd_kcontrol_new { i32 2, i32 0, i32 0, ptr @.str.19, i32 0, i32 0, i32 0, ptr @mixer_ctl_feature_info, ptr @mixer_ctl_procunit_get, ptr @mixer_ctl_procunit_put, %union.anon.80 zeroinitializer, i32 0 }, [48 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c" \00", [30 x i8] zeroinitializer }, align 32
@build_audio_procunit.__UNIQUE_ID_ddebug248 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.239, ptr @.str.2, ptr @.str.240, i8 2, i8 -118, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.239 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"build_audio_procunit\00", [43 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"[%d] PU [%s] ch = %d, val = %d/%d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Up Down\00", [24 x i8] zeroinitializer }, align 32
@updown_proc_info = internal constant { [3 x %struct.procunit_value_info], [48 x i8] } { [3 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info { i32 2, ptr @.str.247, i32 3, i32 1 }, %struct.procunit_value_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Dolby Prologic\00", [17 x i8] zeroinitializer }, align 32
@prologic_proc_info = internal constant { [3 x %struct.procunit_value_info], [48 x i8] } { [3 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info { i32 2, ptr @.str.247, i32 3, i32 1 }, %struct.procunit_value_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"3D Stereo Extender\00", [45 x i8] zeroinitializer }, align 32
@threed_enh_proc_info = internal constant { [3 x %struct.procunit_value_info], [48 x i8] } { [3 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info { i32 2, ptr @.str.248, i32 3, i32 0 }, %struct.procunit_value_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Reverb\00", [25 x i8] zeroinitializer }, align 32
@reverb_proc_info = internal constant { [5 x %struct.procunit_value_info], [48 x i8] } { [5 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info { i32 2, ptr @.str.249, i32 3, i32 0 }, %struct.procunit_value_info { i32 3, ptr @.str.250, i32 5, i32 0 }, %struct.procunit_value_info { i32 4, ptr @.str.251, i32 3, i32 0 }, %struct.procunit_value_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Chorus\00", [25 x i8] zeroinitializer }, align 32
@chorus_proc_info = internal constant { [5 x %struct.procunit_value_info], [48 x i8] } { [5 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info { i32 2, ptr @.str.249, i32 3, i32 0 }, %struct.procunit_value_info { i32 3, ptr @.str.252, i32 5, i32 0 }, %struct.procunit_value_info { i32 4, ptr @.str.253, i32 5, i32 0 }, %struct.procunit_value_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DCR\00", [28 x i8] zeroinitializer }, align 32
@dcr_proc_info = internal constant { [7 x %struct.procunit_value_info], [48 x i8] } { [7 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.235, i32 0, i32 0 }, %struct.procunit_value_info { i32 2, ptr @.str.254, i32 5, i32 0 }, %struct.procunit_value_info { i32 3, ptr @.str.255, i32 4, i32 0 }, %struct.procunit_value_info { i32 4, ptr @.str.256, i32 4, i32 0 }, %struct.procunit_value_info { i32 5, ptr @.str.257, i32 5, i32 0 }, %struct.procunit_value_info { i32 6, ptr @.str.258, i32 5, i32 0 }, %struct.procunit_value_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Mode Select\00", [20 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Spaciousness\00", [19 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Level\00", [26 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Time\00", [27 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Feedback\00", [23 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Rate\00", [27 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Depth\00", [26 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Ratio\00", [26 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Max Amp\00", [24 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Threshold\00", [22 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Attack Time\00", [20 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Release Time\00", [19 x i8] zeroinitializer }, align 32
@uac3_updown_proc_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.247, i32 3, i32 1 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@uac3_stereo_ext_proc_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.260, i32 3, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Multi-Function\00", [17 x i8] zeroinitializer }, align 32
@undefined_proc_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 0, ptr @.str.261, i32 0, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Width Control\00", [18 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Control Undefined\00", [46 x i8] zeroinitializer }, align 32
@extunits = internal constant { [5 x %struct.procunit_info], [36 x i8] } { [5 x %struct.procunit_info] [%struct.procunit_info { i32 58113, ptr @.str.262, ptr @clock_rate_xu_info }, %struct.procunit_info { i32 58114, ptr @.str.263, ptr @clock_source_xu_info }, %struct.procunit_info { i32 58115, ptr @.str.264, ptr @spdif_format_xu_info }, %struct.procunit_info { i32 58116, ptr @.str.265, ptr @soft_limit_xu_info }, %struct.procunit_info zeroinitializer], [36 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Clock rate\00", [21 x i8] zeroinitializer }, align 32
@clock_rate_xu_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 3, ptr @.str.101, i32 3, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"DigitalIn CLK source\00", [43 x i8] zeroinitializer }, align 32
@clock_source_xu_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 2, ptr @.str.266, i32 0, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"DigitalOut format:\00", [45 x i8] zeroinitializer }, align 32
@spdif_format_xu_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 1, ptr @.str.267, i32 0, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"AnalogueIn Soft Limit\00", [42 x i8] zeroinitializer }, align 32
@soft_limit_xu_info = internal constant { [2 x %struct.procunit_value_info], [32 x i8] } { [2 x %struct.procunit_value_info] [%struct.procunit_value_info { i32 3, ptr @.str.238, i32 0, i32 0 }, %struct.procunit_value_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"External\00", [23 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SPDIF/AC3\00", [22 x i8] zeroinitializer }, align 32
@snd_usb_mixer_interrupt.__UNIQUE_ID_ddebug254 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.268, ptr @.str.2, ptr @.str.269, i8 3, i8 102, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.268 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"snd_usb_mixer_interrupt\00", [40 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"status interrupt: %02x %02x\0A\00", [35 x i8] zeroinitializer }, align 32
@snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug252 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.270, ptr @.str.2, ptr @.str.271, i8 3, i8 84, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.270 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"snd_usb_mixer_interrupt_v2\00", [37 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s(): bogus channel number %d\0A\00", [33 x i8] zeroinitializer }, align 32
@snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug253 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.270, ptr @.str.2, ptr @.str.272, i8 3, i8 96, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.272 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"unknown attribute %d in interrupt\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"USB Mixer: usb_id=0x%08x, ctrlif=%i, ctlerr=%i\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Card: %s\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"  Unit: %i\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"    Control: name=\22%s\22, index=%i\0A\00", [62 x i8] zeroinitializer }, align 32
@snd_usb_mixer_dump_cval.val_types = internal constant { [9 x ptr], [60 x i8] } { [9 x ptr] [ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285], [60 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BOOLEAN\00", [24 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"INV_BOOLEAN\00", [20 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"S8\00", [29 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"U8\00", [29 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"S16\00", [28 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"U16\00", [28 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"S32\00", [28 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"U32\00", [28 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"BESPOKEN\00", [23 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"    Info: id=%i, control=%i, cmask=0x%x, channels=%i, type=\22%s\22\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"    Volume: min=%i, max=%i, dBmin=%i, dBmax=%i\0A\00", [48 x i8] zeroinitializer }, align 32
@switch.table.snd_usb_mixer_set_ctl_value = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 2, i16 2, i16 4, i16 4], [24 x i8] zeroinitializer }, align 32
@switch.table.snd_usb_mixer_controls_badd = internal constant { [7 x ptr], [36 x i8] } { [7 x ptr] [ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77], [36 x i8] zeroinitializer }, align 32
@switch.table.snd_usb_mixer_controls_badd.288 = internal constant { [7 x ptr], [36 x i8] } { [7 x ptr] [ptr @uac3_badd_profiles, ptr getelementptr inbounds ([8 x %struct.uac3_badd_profile], ptr @uac3_badd_profiles, i32 0, i32 1), ptr getelementptr inbounds ([8 x %struct.uac3_badd_profile], ptr @uac3_badd_profiles, i32 0, i32 2), ptr getelementptr inbounds ([8 x %struct.uac3_badd_profile], ptr @uac3_badd_profiles, i32 0, i32 3), ptr getelementptr inbounds ([8 x %struct.uac3_badd_profile], ptr @uac3_badd_profiles, i32 0, i32 4), ptr getelementptr inbounds ([8 x %struct.uac3_badd_profile], ptr @uac3_badd_profiles, i32 0, i32 5), ptr getelementptr inbounds ([8 x %struct.uac3_badd_profile], ptr @uac3_badd_profiles, i32 0, i32 6)], [36 x i8] zeroinitializer }, align 32
@switch.table.get_ctl_value_v2 = internal constant { [4 x i32], [16 x i8] } { [4 x i32] [i32 2, i32 2, i32 4, i32 4], [16 x i8] zeroinitializer }, align 32
@switch.table.__build_feature_ctl = internal constant { [13 x ptr], [44 x i8] } { [13 x ptr] [ptr @audio_feature_info, ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 1), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 2), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 3), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 4), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 5), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 6), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 7), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 8), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 9), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 10), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 11), ptr getelementptr inbounds ([13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 12)], [44 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.289 = internal global [38 x i64] [i64 36, i64 32, i64 68460545, i64 68460546, i64 69087232, i64 69087248, i64 69087264, i64 69087296, i64 69087304, i64 75481104, i64 94834720, i64 94847226, i64 116965376, i64 123936816, i64 123936817, i64 146482946, i64 177340561, i64 184883478, i64 184883479, i64 198852628, i64 205853016, i64 214761512, i64 229641572, i64 229654940, i64 229659709, i64 230297600, i64 328532005, i64 333774849, i64 397021254, i64 454822461, i64 454822462, i64 454822465, i64 454822466, i64 537661464, i64 628293640, i64 633602051, i64 651037185, i64 665587712]
@__sancov_gen_cov_switch_values.290 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 32]
@__sancov_gen_cov_switch_values.291 = internal global [10 x i64] [i64 8, i64 16, i64 96, i64 98, i64 144, i64 147, i64 192, i64 196, i64 288, i64 294]
@__sancov_gen_cov_switch_values.292 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.293 = internal global [6 x i64] [i64 4, i64 32, i64 129, i64 130, i64 131, i64 132]
@__sancov_gen_cov_switch_values.294 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.295 = internal global [25 x i64] [i64 23, i64 32, i64 74254343, i64 74254344, i64 74254345, i64 74254361, i64 74254363, i64 74254365, i64 74254373, i64 74254374, i64 74254538, i64 74254737, i64 74254754, i64 74254756, i64 74514689, i64 74514692, i64 74514693, i64 76886082, i64 108138561, i64 123936816, i64 123936817, i64 123936896, i64 123936897, i64 227279107, i64 304359973]
@__sancov_gen_cov_switch_values.296 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.297 = internal global [5 x i64] [i64 3, i64 32, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.298 = internal global [6 x i64] [i64 4, i64 32, i64 5, i64 6, i64 9, i64 10]
@__sancov_gen_cov_switch_values.299 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 3, i64 4]
@__sancov_gen_cov_switch_values.300 = internal global [38 x i64] [i64 36, i64 32, i64 768, i64 769, i64 770, i64 771, i64 772, i64 773, i64 774, i64 775, i64 1536, i64 1537, i64 1538, i64 1539, i64 1540, i64 1541, i64 1542, i64 1543, i64 1792, i64 1793, i64 1794, i64 1795, i64 1796, i64 1797, i64 1798, i64 1799, i64 1800, i64 1801, i64 1802, i64 1803, i64 1804, i64 1805, i64 1806, i64 1807, i64 1808, i64 1809, i64 1810, i64 1811]
@__sancov_gen_cov_switch_values.301 = internal global [26 x i64] [i64 24, i64 32, i64 2, i64 4, i64 5, i64 6, i64 7, i64 8, i64 8194, i64 8196, i64 8197, i64 8198, i64 8199, i64 8200, i64 8201, i64 8202, i64 8203, i64 12290, i64 12293, i64 12294, i64 12295, i64 12296, i64 12297, i64 12298, i64 12299, i64 12300]
@__sancov_gen_cov_switch_values.302 = internal global [4 x i64] [i64 2, i64 32, i64 32, i64 48]
@__sancov_gen_cov_switch_values.303 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 32, i64 48]
@__sancov_gen_cov_switch_values.304 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 32, i64 48]
@__sancov_gen_cov_switch_values.305 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 32]
@__sancov_gen_cov_switch_values.306 = internal global [4 x i64] [i64 2, i64 32, i64 146482946, i64 288420369]
@__sancov_gen_cov_switch_values.307 = internal global [26 x i64] [i64 24, i64 32, i64 2, i64 4, i64 5, i64 6, i64 7, i64 8, i64 8194, i64 8196, i64 8197, i64 8198, i64 8199, i64 8200, i64 8201, i64 8202, i64 8203, i64 12290, i64 12293, i64 12294, i64 12295, i64 12296, i64 12297, i64 12298, i64 12299, i64 12300]
@__sancov_gen_cov_switch_values.308 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 32]
@__sancov_gen_cov_switch_values.309 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 32]
@__sancov_gen_cov_switch_values.310 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 32, i64 48]
@__sancov_gen_cov_switch_values.311 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 32, i64 48]
@__sancov_gen_cov_switch_values.312 = internal global [4 x i64] [i64 2, i64 16, i64 1, i64 58113]
@__sancov_gen_cov_switch_values.313 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 32]
@__sancov_gen_cov_switch_values.314 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 32, i64 48]
@__sancov_gen_cov_switch_values.315 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 32, i64 48]
@__sancov_gen_cov_switch_values.316 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 4294967188, i64 4294967192, i64 4294967294]
@__sancov_gen_cov_switch_values.317 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 443, i32 4 }
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 474, i32 4 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 504, i32 2 }
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 528, i32 3 }
@___asan_gen_.350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 600, i32 3 }
@___asan_gen_.351 = private unnamed_addr constant [21 x i8] c"usb_feature_unit_ctl\00", align 1
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1556, i32 38 }
@___asan_gen_.354 = private unnamed_addr constant [25 x i8] c"snd_usb_feature_unit_ctl\00", align 1
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1599, i32 32 }
@___asan_gen_.357 = private unnamed_addr constant [8 x i8] c"dev_ops\00", align 1
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3554, i32 37 }
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3560, i32 32 }
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3612, i32 36 }
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 333, i32 2 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 375, i32 3 }
@___asan_gen_.376 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.376, i32 174, i32 2 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1558, i32 10 }
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1256, i32 4 }
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1340, i32 4 }
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1090, i32 29 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1096, i32 29 }
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1097, i32 29 }
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1102, i32 29 }
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1108, i32 30 }
@___asan_gen_.422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1109, i32 27 }
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1119, i32 4 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1128, i32 4 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1137, i32 30 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1138, i32 4 }
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1155, i32 4 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1162, i32 30 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1163, i32 4 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1187, i32 4 }
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1194, i32 26 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1202, i32 4 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1221, i32 3 }
@___asan_gen_.497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3107, i32 4 }
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3131, i32 2 }
@___asan_gen_.501 = private unnamed_addr constant [26 x i8] c"uac3_badd_usbmix_ctl_maps\00", align 1
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 648, i32 36 }
@___asan_gen_.504 = private unnamed_addr constant [19 x i8] c"uac3_badd_profiles\00", align 1
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2953, i32 39 }
@___asan_gen_.507 = private unnamed_addr constant [25 x i8] c"uac3_badd_generic_io_map\00", align 1
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 618, i32 37 }
@___asan_gen_.510 = private unnamed_addr constant [24 x i8] c"uac3_badd_headphone_map\00", align 1
@___asan_gen_.512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 623, i32 37 }
@___asan_gen_.513 = private unnamed_addr constant [22 x i8] c"uac3_badd_speaker_map\00", align 1
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 627, i32 37 }
@___asan_gen_.516 = private unnamed_addr constant [25 x i8] c"uac3_badd_microphone_map\00", align 1
@___asan_gen_.518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 631, i32 37 }
@___asan_gen_.519 = private unnamed_addr constant [22 x i8] c"uac3_badd_headset_map\00", align 1
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 636, i32 37 }
@___asan_gen_.522 = private unnamed_addr constant [27 x i8] c"uac3_badd_speakerphone_map\00", align 1
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 642, i32 37 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 619, i32 22 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 620, i32 22 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 624, i32 22 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 628, i32 22 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 632, i32 22 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 637, i32 22 }
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 638, i32 22 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 639, i32 22 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2961, i32 11 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2968, i32 11 }
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2974, i32 11 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2980, i32 11 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2990, i32 11 }
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2998, i32 11 }
@___asan_gen_.569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3006, i32 11 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3023, i32 4 }
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3032, i32 3 }
@___asan_gen_.590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3038, i32 3 }
@___asan_gen_.591 = private unnamed_addr constant [24 x i8] c"usb_feature_unit_ctl_ro\00", align 1
@___asan_gen_.593 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1565, i32 38 }
@___asan_gen_.599 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1713, i32 3 }
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1747, i32 7 }
@___asan_gen_.605 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1760, i32 27 }
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1762, i32 27 }
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1765, i32 5 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1765, i32 17 }
@___asan_gen_.615 = private unnamed_addr constant [19 x i8] c"audio_feature_info\00", align 1
@___asan_gen_.617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1049, i32 46 }
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1779, i32 3 }
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1806, i32 3 }
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1809, i32 3 }
@___asan_gen_.629 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1815, i32 2 }
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 677, i32 17 }
@___asan_gen_.635 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 680, i32 17 }
@___asan_gen_.638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 683, i32 17 }
@___asan_gen_.641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 686, i32 17 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 689, i32 25 }
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 695, i32 16 }
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 698, i32 16 }
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 701, i32 16 }
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 704, i32 16 }
@___asan_gen_.657 = private unnamed_addr constant [12 x i8] c"iterm_names\00", align 1
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 618, i32 3 }
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 619, i32 12 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 620, i32 12 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 621, i32 12 }
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 622, i32 12 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 623, i32 12 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 624, i32 12 }
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 625, i32 12 }
@___asan_gen_.683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 626, i32 12 }
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 627, i32 12 }
@___asan_gen_.689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 628, i32 12 }
@___asan_gen_.692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 629, i32 12 }
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 630, i32 12 }
@___asan_gen_.698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 631, i32 12 }
@___asan_gen_.701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 632, i32 12 }
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 633, i32 12 }
@___asan_gen_.707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 634, i32 12 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 635, i32 12 }
@___asan_gen_.713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 636, i32 12 }
@___asan_gen_.716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 637, i32 12 }
@___asan_gen_.719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 638, i32 12 }
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 639, i32 12 }
@___asan_gen_.725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 640, i32 12 }
@___asan_gen_.728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 641, i32 12 }
@___asan_gen_.731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 642, i32 12 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 643, i32 12 }
@___asan_gen_.737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 644, i32 12 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 645, i32 12 }
@___asan_gen_.743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 646, i32 12 }
@___asan_gen_.746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 647, i32 12 }
@___asan_gen_.749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 648, i32 12 }
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 649, i32 12 }
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 650, i32 12 }
@___asan_gen_.758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 651, i32 12 }
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 652, i32 12 }
@___asan_gen_.764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 653, i32 12 }
@___asan_gen_.767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 654, i32 12 }
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1618, i32 14 }
@___asan_gen_.773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1618, i32 38 }
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1050, i32 19 }
@___asan_gen_.779 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1051, i32 20 }
@___asan_gen_.782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1052, i32 19 }
@___asan_gen_.785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1053, i32 18 }
@___asan_gen_.788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1054, i32 20 }
@___asan_gen_.791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1055, i32 30 }
@___asan_gen_.794 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1056, i32 27 }
@___asan_gen_.797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1057, i32 20 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1058, i32 24 }
@___asan_gen_.803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1059, i32 22 }
@___asan_gen_.806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1061, i32 25 }
@___asan_gen_.809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1062, i32 28 }
@___asan_gen_.812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1063, i32 29 }
@___asan_gen_.813 = private unnamed_addr constant [21 x i8] c"usb_connector_ctl_ro\00", align 1
@___asan_gen_.815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1586, i32 38 }
@___asan_gen_.821 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1912, i32 3 }
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1918, i32 26 }
@___asan_gen_.833 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1527, i32 3 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1848, i32 17 }
@___asan_gen_.839 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1856, i32 17 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1858, i32 17 }
@___asan_gen_.843 = private unnamed_addr constant [16 x i8] c"usbmix_ctl_maps\00", align 1
@___asan_gen_.845 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 446, i32 36 }
@___asan_gen_.846 = private unnamed_addr constant [11 x i8] c"extigy_map\00", align 1
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 56, i32 37 }
@___asan_gen_.849 = private unnamed_addr constant [12 x i8] c"mp3plus_map\00", align 1
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 102, i32 37 }
@___asan_gen_.852 = private unnamed_addr constant [14 x i8] c"audigy2nx_map\00", align 1
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 143, i32 37 }
@___asan_gen_.855 = private unnamed_addr constant [20 x i8] c"audigy2nx_selectors\00", align 1
@___asan_gen_.857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 185, i32 41 }
@___asan_gen_.858 = private unnamed_addr constant [14 x i8] c"live24ext_map\00", align 1
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 205, i32 37 }
@___asan_gen_.861 = private unnamed_addr constant [15 x i8] c"gamecom780_map\00", align 1
@___asan_gen_.863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 320, i32 37 }
@___asan_gen_.864 = private unnamed_addr constant [19 x i8] c"hercules_usb51_map\00", align 1
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 309, i32 37 }
@___asan_gen_.867 = private unnamed_addr constant [15 x i8] c"c400_selectors\00", align 1
@___asan_gen_.869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 176, i32 41 }
@___asan_gen_.870 = private unnamed_addr constant [10 x i8] c"linex_map\00", align 1
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 212, i32 37 }
@___asan_gen_.873 = private unnamed_addr constant [11 x i8] c"maya44_map\00", align 1
@___asan_gen_.875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 219, i32 37 }
@___asan_gen_.876 = private unnamed_addr constant [13 x i8] c"justlink_map\00", align 1
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 242, i32 37 }
@___asan_gen_.879 = private unnamed_addr constant [16 x i8] c"aureon_51_2_map\00", align 1
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 259, i32 37 }
@___asan_gen_.882 = private unnamed_addr constant [17 x i8] c"dell_alc4020_map\00", align 1
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 360, i32 37 }
@___asan_gen_.885 = private unnamed_addr constant [10 x i8] c"mbox1_map\00", align 1
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 171, i32 37 }
@___asan_gen_.888 = private unnamed_addr constant [17 x i8] c"scratch_live_map\00", align 1
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 278, i32 37 }
@___asan_gen_.891 = private unnamed_addr constant [11 x i8] c"ebox44_map\00", align 1
@___asan_gen_.893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 294, i32 37 }
@___asan_gen_.894 = private unnamed_addr constant [17 x i8] c"scms_usb3318_map\00", align 1
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 328, i32 37 }
@___asan_gen_.897 = private unnamed_addr constant [20 x i8] c"bose_companion5_map\00", align 1
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 335, i32 37 }
@___asan_gen_.900 = private unnamed_addr constant [19 x i8] c"bose_soundlink_map\00", align 1
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 342, i32 37 }
@___asan_gen_.903 = private unnamed_addr constant [21 x i8] c"corsair_virtuoso_map\00", align 1
@___asan_gen_.905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 371, i32 37 }
@___asan_gen_.906 = private unnamed_addr constant [27 x i8] c"aorus_master_alc1220vb_map\00", align 1
@___asan_gen_.908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 420, i32 37 }
@___asan_gen_.909 = private unnamed_addr constant [15 x i8] c"trx40_mobo_map\00", align 1
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 393, i32 37 }
@___asan_gen_.912 = private unnamed_addr constant [25 x i8] c"trx40_mobo_connector_map\00", align 1
@___asan_gen_.914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 410, i32 42 }
@___asan_gen_.915 = private unnamed_addr constant [13 x i8] c"asus_rog_map\00", align 1
@___asan_gen_.917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 381, i32 37 }
@___asan_gen_.918 = private unnamed_addr constant [42 x i8] c"msi_mpg_x570s_carbon_max_wifi_alc4080_map\00", align 1
@___asan_gen_.920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 435, i32 37 }
@___asan_gen_.921 = private unnamed_addr constant [21 x i8] c"lenovo_p620_rear_map\00", align 1
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 387, i32 37 }
@___asan_gen_.924 = private unnamed_addr constant [19 x i8] c"sennheiser_pc8_map\00", align 1
@___asan_gen_.926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 349, i32 37 }
@___asan_gen_.929 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 58, i32 7 }
@___asan_gen_.932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 64, i32 7 }
@___asan_gen_.935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 66, i32 8 }
@___asan_gen_.938 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 67, i32 8 }
@___asan_gen_.941 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 68, i32 8 }
@___asan_gen_.944 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 74, i32 8 }
@___asan_gen_.947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 77, i32 8 }
@___asan_gen_.950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 81, i32 8 }
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 82, i32 8 }
@___asan_gen_.956 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 84, i32 8 }
@___asan_gen_.957 = private unnamed_addr constant [13 x i8] c"mp3plus_dB_2\00", align 1
@___asan_gen_.959 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 99, i32 35 }
@___asan_gen_.962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 116, i32 8 }
@___asan_gen_.965 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 117, i32 8 }
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 119, i32 8 }
@___asan_gen_.969 = private unnamed_addr constant [13 x i8] c"mp3plus_dB_1\00", align 1
@___asan_gen_.971 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 97, i32 35 }
@___asan_gen_.974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 149, i32 8 }
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 151, i32 8 }
@___asan_gen_.980 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 165, i32 8 }
@___asan_gen_.983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 167, i32 8 }
@___asan_gen_.986 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 189, i32 51 }
@___asan_gen_.987 = private unnamed_addr constant [17 x i8] c".compoundliteral\00", align 1
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 194, i32 29 }
@___asan_gen_.991 = private unnamed_addr constant [21 x i8] c".compoundliteral.187\00", align 1
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 199, i32 38 }
@___asan_gen_.995 = private unnamed_addr constant [21 x i8] c".compoundliteral.189\00", align 1
@___asan_gen_.998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 314, i32 8 }
@___asan_gen_.1001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 315, i32 8 }
@___asan_gen_.1004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 180, i32 29 }
@___asan_gen_.1007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 180, i32 41 }
@___asan_gen_.1008 = private unnamed_addr constant [21 x i8] c".compoundliteral.194\00", align 1
@___asan_gen_.1011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 215, i32 7 }
@___asan_gen_.1014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 271, i32 8 }
@___asan_gen_.1017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 172, i32 7 }
@___asan_gen_.1020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 282, i32 7 }
@___asan_gen_.1023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 287, i32 7 }
@___asan_gen_.1024 = private unnamed_addr constant [19 x i8] c"bose_companion5_dB\00", align 1
@___asan_gen_.1026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 334, i32 35 }
@___asan_gen_.1027 = private unnamed_addr constant [18 x i8] c"bose_soundlink_dB\00", align 1
@___asan_gen_.1029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 341, i32 35 }
@___asan_gen_.1032 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 373, i32 7 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 423, i32 8 }
@___asan_gen_.1038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 424, i32 8 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 429, i32 7 }
@___asan_gen_.1044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 430, i32 8 }
@___asan_gen_.1047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 400, i32 8 }
@___asan_gen_.1050 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 401, i32 8 }
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 406, i32 8 }
@___asan_gen_.1054 = private unnamed_addr constant [18 x i8] c"sennheiser_pc8_dB\00", align 1
@___asan_gen_.1055 = private unnamed_addr constant [26 x i8] c"../sound/usb/mixer_maps.c\00", align 1
@___asan_gen_.1056 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1055, i32 348, i32 35 }
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2872, i32 3 }
@___asan_gen_.1068 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2877, i32 3 }
@___asan_gen_.1074 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2915, i32 3 }
@___asan_gen_.1083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 743, i32 2 }
@___asan_gen_.1092 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2244, i32 3 }
@___asan_gen_.1098 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2182, i32 3 }
@___asan_gen_.1101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2193, i32 32 }
@___asan_gen_.1104 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2196, i32 2 }
@___asan_gen_.1105 = private unnamed_addr constant [31 x i8] c"usb_bool_master_control_ctl_ro\00", align 1
@___asan_gen_.1107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1577, i32 38 }
@___asan_gen_.1110 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1972, i32 5 }
@___asan_gen_.1113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 1975, i32 5 }
@___asan_gen_.1116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2795, i32 25 }
@___asan_gen_.1117 = private unnamed_addr constant [21 x i8] c"mixer_selectunit_ctl\00", align 1
@___asan_gen_.1119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2692, i32 38 }
@___asan_gen_.1125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2800, i32 3 }
@___asan_gen_.1128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2833, i32 27 }
@___asan_gen_.1131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2838, i32 26 }
@___asan_gen_.1134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2840, i32 26 }
@___asan_gen_.1137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2842, i32 26 }
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2845, i32 2 }
@___asan_gen_.1149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2026, i32 3 }
@___asan_gen_.1150 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2032, i32 3 }
@___asan_gen_.1156 = private unnamed_addr constant [10 x i8] c"procunits\00", align 1
@___asan_gen_.1158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2398, i32 35 }
@___asan_gen_.1159 = private unnamed_addr constant [15 x i8] c"uac3_procunits\00", align 1
@___asan_gen_.1161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2417, i32 35 }
@___asan_gen_.1162 = private unnamed_addr constant [19 x i8] c"default_value_info\00", align 1
@___asan_gen_.1164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2466, i32 42 }
@___asan_gen_.1167 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2467, i32 11 }
@___asan_gen_.1168 = private unnamed_addr constant [13 x i8] c"default_info\00", align 1
@___asan_gen_.1170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2470, i32 36 }
@___asan_gen_.1173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2474, i32 3 }
@___asan_gen_.1176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2474, i32 22 }
@___asan_gen_.1177 = private unnamed_addr constant [19 x i8] c"mixer_procunit_ctl\00", align 1
@___asan_gen_.1179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2330, i32 38 }
@___asan_gen_.1182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2596, i32 25 }
@___asan_gen_.1188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2599, i32 3 }
@___asan_gen_.1191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2399, i32 28 }
@___asan_gen_.1192 = private unnamed_addr constant [17 x i8] c"updown_proc_info\00", align 1
@___asan_gen_.1194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2359, i32 41 }
@___asan_gen_.1197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2400, i32 32 }
@___asan_gen_.1198 = private unnamed_addr constant [19 x i8] c"prologic_proc_info\00", align 1
@___asan_gen_.1200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2364, i32 41 }
@___asan_gen_.1203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2401, i32 33 }
@___asan_gen_.1204 = private unnamed_addr constant [21 x i8] c"threed_enh_proc_info\00", align 1
@___asan_gen_.1206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2369, i32 41 }
@___asan_gen_.1209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2402, i32 24 }
@___asan_gen_.1210 = private unnamed_addr constant [17 x i8] c"reverb_proc_info\00", align 1
@___asan_gen_.1212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2374, i32 41 }
@___asan_gen_.1215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2403, i32 24 }
@___asan_gen_.1216 = private unnamed_addr constant [17 x i8] c"chorus_proc_info\00", align 1
@___asan_gen_.1218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2381, i32 41 }
@___asan_gen_.1221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2404, i32 32 }
@___asan_gen_.1222 = private unnamed_addr constant [14 x i8] c"dcr_proc_info\00", align 1
@___asan_gen_.1224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2388, i32 41 }
@___asan_gen_.1227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2361, i32 24 }
@___asan_gen_.1230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2371, i32 18 }
@___asan_gen_.1233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2376, i32 22 }
@___asan_gen_.1236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2377, i32 21 }
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2378, i32 25 }
@___asan_gen_.1242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2384, i32 21 }
@___asan_gen_.1245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2385, i32 22 }
@___asan_gen_.1248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2390, i32 18 }
@___asan_gen_.1251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2391, i32 21 }
@___asan_gen_.1254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2392, i32 23 }
@___asan_gen_.1257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2393, i32 25 }
@___asan_gen_.1260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2394, i32 26 }
@___asan_gen_.1261 = private unnamed_addr constant [22 x i8] c"uac3_updown_proc_info\00", align 1
@___asan_gen_.1263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2408, i32 41 }
@___asan_gen_.1264 = private unnamed_addr constant [26 x i8] c"uac3_stereo_ext_proc_info\00", align 1
@___asan_gen_.1266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2412, i32 41 }
@___asan_gen_.1269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2420, i32 33 }
@___asan_gen_.1270 = private unnamed_addr constant [20 x i8] c"undefined_proc_info\00", align 1
@___asan_gen_.1272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2354, i32 41 }
@___asan_gen_.1275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2413, i32 28 }
@___asan_gen_.1278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2355, i32 10 }
@___asan_gen_.1279 = private unnamed_addr constant [9 x i8] c"extunits\00", align 1
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2443, i32 35 }
@___asan_gen_.1284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2444, i32 23 }
@___asan_gen_.1285 = private unnamed_addr constant [19 x i8] c"clock_rate_xu_info\00", align 1
@___asan_gen_.1287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2427, i32 41 }
@___asan_gen_.1290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2445, i32 25 }
@___asan_gen_.1291 = private unnamed_addr constant [21 x i8] c"clock_source_xu_info\00", align 1
@___asan_gen_.1293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2431, i32 41 }
@___asan_gen_.1296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2446, i32 30 }
@___asan_gen_.1297 = private unnamed_addr constant [21 x i8] c"spdif_format_xu_info\00", align 1
@___asan_gen_.1299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2435, i32 41 }
@___asan_gen_.1302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2447, i32 27 }
@___asan_gen_.1303 = private unnamed_addr constant [19 x i8] c"soft_limit_xu_info\00", align 1
@___asan_gen_.1305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2439, i32 41 }
@___asan_gen_.1308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2432, i32 34 }
@___asan_gen_.1311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 2436, i32 36 }
@___asan_gen_.1317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3479, i32 4 }
@___asan_gen_.1323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3409, i32 3 }
@___asan_gen_.1326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3456, i32 4 }
@___asan_gen_.1329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3379, i32 3 }
@___asan_gen_.1332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3383, i32 3 }
@___asan_gen_.1335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3386, i32 5 }
@___asan_gen_.1338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3388, i32 6 }
@___asan_gen_.1339 = private unnamed_addr constant [10 x i8] c"val_types\00", align 1
@___asan_gen_.1341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3351, i32 28 }
@___asan_gen_.1344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3352, i32 25 }
@___asan_gen_.1347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3353, i32 29 }
@___asan_gen_.1350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3354, i32 20 }
@___asan_gen_.1353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3355, i32 20 }
@___asan_gen_.1356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3356, i32 21 }
@___asan_gen_.1359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3357, i32 21 }
@___asan_gen_.1362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3358, i32 21 }
@___asan_gen_.1365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3359, i32 21 }
@___asan_gen_.1368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3360, i32 26 }
@___asan_gen_.1371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3362, i32 2 }
@___asan_gen_.1372 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1373 = private constant [21 x i8] c"../sound/usb/mixer.c\00", align 1
@___asan_gen_.1374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1373, i32 3366, i32 2 }
@___asan_gen_.1375 = private unnamed_addr constant [41 x i8] c"switch.table.snd_usb_mixer_set_ctl_value\00", align 1
@___asan_gen_.1376 = private unnamed_addr constant [41 x i8] c"switch.table.snd_usb_mixer_controls_badd\00", align 1
@___asan_gen_.1377 = private unnamed_addr constant [45 x i8] c"switch.table.snd_usb_mixer_controls_badd.288\00", align 1
@___asan_gen_.1378 = private unnamed_addr constant [30 x i8] c"switch.table.get_ctl_value_v2\00", align 1
@___asan_gen_.1379 = private unnamed_addr constant [33 x i8] c"switch.table.__build_feature_ctl\00", align 1
@llvm.compiler.used = appending global [390 x ptr] [ptr @__build_feature_ctl._entry, ptr @__build_feature_ctl._entry.94, ptr @__build_feature_ctl._entry.97, ptr @__build_feature_ctl._entry_ptr, ptr @__build_feature_ctl._entry_ptr.96, ptr @__build_feature_ctl._entry_ptr.99, ptr @build_connector_control._entry, ptr @build_connector_control._entry_ptr, ptr @build_mixer_unit_ctl._entry, ptr @build_mixer_unit_ctl._entry_ptr, ptr @get_cluster_channels_v3._entry, ptr @get_cluster_channels_v3._entry_ptr, ptr @get_connector_value._entry, ptr @get_connector_value._entry_ptr, ptr @get_min_max_with_quirks._entry, ptr @get_min_max_with_quirks._entry.24, ptr @get_min_max_with_quirks._entry_ptr, ptr @get_min_max_with_quirks._entry_ptr.27, ptr @init_cur_mix_raw._entry, ptr @init_cur_mix_raw._entry_ptr, ptr @parse_audio_feature_unit._entry, ptr @parse_audio_feature_unit._entry.232, ptr @parse_audio_feature_unit._entry_ptr, ptr @parse_audio_feature_unit._entry_ptr.234, ptr @parse_audio_mixer_unit._entry, ptr @parse_audio_mixer_unit._entry_ptr, ptr @parse_audio_selector_unit._entry, ptr @parse_audio_selector_unit._entry_ptr, ptr @parse_audio_unit._entry, ptr @parse_audio_unit._entry.211, ptr @parse_audio_unit._entry_ptr, ptr @parse_audio_unit._entry_ptr.213, ptr @snd_usb_mixer_controls_badd._entry, ptr @snd_usb_mixer_controls_badd._entry_ptr, ptr @uac3_badd_func_has_valid_channels._entry, ptr @uac3_badd_func_has_valid_channels._entry.80, ptr @uac3_badd_func_has_valid_channels._entry.83, ptr @uac3_badd_func_has_valid_channels._entry_ptr, ptr @uac3_badd_func_has_valid_channels._entry_ptr.82, ptr @uac3_badd_func_has_valid_channels._entry_ptr.85, ptr @volume_control_quirks._entry, ptr @volume_control_quirks._entry.36, ptr @volume_control_quirks._entry.40, ptr @volume_control_quirks._entry.43, ptr @volume_control_quirks._entry.47, ptr @volume_control_quirks._entry.50, ptr @volume_control_quirks._entry.54, ptr @volume_control_quirks._entry_ptr, ptr @volume_control_quirks._entry_ptr.38, ptr @volume_control_quirks._entry_ptr.42, ptr @volume_control_quirks._entry_ptr.45, ptr @volume_control_quirks._entry_ptr.49, ptr @volume_control_quirks._entry_ptr.52, ptr @volume_control_quirks._entry_ptr.56, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @usb_feature_unit_ctl, ptr @snd_usb_feature_unit_ctl, ptr @snd_usb_create_mixer.dev_ops, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.25, ptr @.str.26, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.37, ptr @.str.39, ptr @.str.41, ptr @.str.44, ptr @.str.46, ptr @.str.48, ptr @.str.51, ptr @.str.53, ptr @.str.55, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @uac3_badd_usbmix_ctl_maps, ptr @uac3_badd_profiles, ptr @uac3_badd_generic_io_map, ptr @uac3_badd_headphone_map, ptr @uac3_badd_speaker_map, ptr @uac3_badd_microphone_map, ptr @uac3_badd_headset_map, ptr @uac3_badd_speakerphone_map, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.81, ptr @.str.84, ptr @usb_feature_unit_ctl_ro, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @audio_feature_info, ptr @.str.93, ptr @.str.95, ptr @.str.98, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @iterm_names, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @usb_connector_ctl_ro, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @usbmix_ctl_maps, ptr @extigy_map, ptr @mp3plus_map, ptr @audigy2nx_map, ptr @audigy2nx_selectors, ptr @live24ext_map, ptr @gamecom780_map, ptr @hercules_usb51_map, ptr @c400_selectors, ptr @linex_map, ptr @maya44_map, ptr @justlink_map, ptr @aureon_51_2_map, ptr @dell_alc4020_map, ptr @mbox1_map, ptr @scratch_live_map, ptr @ebox44_map, ptr @scms_usb3318_map, ptr @bose_companion5_map, ptr @bose_soundlink_map, ptr @corsair_virtuoso_map, ptr @aorus_master_alc1220vb_map, ptr @trx40_mobo_map, ptr @trx40_mobo_connector_map, ptr @asus_rog_map, ptr @msi_mpg_x570s_carbon_max_wifi_alc4080_map, ptr @lenovo_p620_rear_map, ptr @sennheiser_pc8_map, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @mp3plus_dB_2, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @mp3plus_dB_1, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.compoundliteral, ptr @.str.186, ptr @.compoundliteral.187, ptr @.str.188, ptr @.compoundliteral.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.compoundliteral.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @bose_companion5_dB, ptr @bose_soundlink_dB, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @sennheiser_pc8_dB, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.212, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @usb_bool_master_control_ctl_ro, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @mixer_selectunit_ctl, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.233, ptr @procunits, ptr @uac3_procunits, ptr @build_audio_procunit.default_value_info, ptr @.str.235, ptr @build_audio_procunit.default_info, ptr @.str.236, ptr @.str.237, ptr @mixer_procunit_ctl, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @updown_proc_info, ptr @.str.242, ptr @prologic_proc_info, ptr @.str.243, ptr @threed_enh_proc_info, ptr @.str.244, ptr @reverb_proc_info, ptr @.str.245, ptr @chorus_proc_info, ptr @.str.246, ptr @dcr_proc_info, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @uac3_updown_proc_info, ptr @uac3_stereo_ext_proc_info, ptr @.str.259, ptr @undefined_proc_info, ptr @.str.260, ptr @.str.261, ptr @extunits, ptr @.str.262, ptr @clock_rate_xu_info, ptr @.str.263, ptr @clock_source_xu_info, ptr @.str.264, ptr @spdif_format_xu_info, ptr @.str.265, ptr @soft_limit_xu_info, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @snd_usb_mixer_dump_cval.val_types, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @switch.table.snd_usb_mixer_set_ctl_value, ptr @switch.table.snd_usb_mixer_controls_badd, ptr @switch.table.snd_usb_mixer_controls_badd.288, ptr @switch.table.get_ctl_value_v2, ptr @switch.table.__build_feature_ctl], section "llvm.metadata"
@0 = internal global [360 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb_feature_unit_ctl to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_usb_feature_unit_ctl to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_usb_create_mixer.dev_ops to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_min_max_with_quirks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_min_max_with_quirks._entry.24 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @volume_control_quirks._entry.54 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_cur_mix_raw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_usb_mixer_controls_badd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_usbmix_ctl_maps to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_profiles to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_generic_io_map to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_headphone_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_speaker_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_microphone_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_headset_map to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_speakerphone_map to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_func_has_valid_channels._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_func_has_valid_channels._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_badd_func_has_valid_channels._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb_feature_unit_ctl_ro to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @audio_feature_info to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @iterm_names to i32), i32 296, i32 384, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb_connector_ctl_ro to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @build_connector_control._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_connector_value._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usbmix_ctl_maps to i32), i32 592, i32 736, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @extigy_map to i32), i32 320, i32 384, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mp3plus_map to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @audigy2nx_map to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @audigy2nx_selectors to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @live24ext_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gamecom780_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hercules_usb51_map to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @c400_selectors to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @linex_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.870 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maya44_map to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @justlink_map to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @aureon_51_2_map to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dell_alc4020_map to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mbox1_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @scratch_live_map to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ebox44_map to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @scms_usb3318_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bose_companion5_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bose_soundlink_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @corsair_virtuoso_map to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @aorus_master_alc1220vb_map to i32), i32 176, i32 224, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trx40_mobo_map to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trx40_mobo_connector_map to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_rog_map to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @msi_mpg_x570s_carbon_max_wifi_alc4080_map to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.918 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lenovo_p620_rear_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sennheiser_pc8_map to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.924 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mp3plus_dB_2 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mp3plus_dB_1 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.987 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.187 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.189 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.194 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bose_companion5_dB to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bose_soundlink_dB to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sennheiser_pc8_dB to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_audio_unit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_audio_unit._entry.211 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @get_cluster_channels_v3._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_audio_mixer_unit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @build_mixer_unit_ctl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usb_bool_master_control_ctl_ro to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1110 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mixer_selectunit_ctl to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_audio_selector_unit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_audio_feature_unit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_audio_feature_unit._entry.232 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @procunits to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_procunits to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @build_audio_procunit.default_value_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @build_audio_procunit.default_info to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1168 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mixer_procunit_ctl to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @updown_proc_info to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prologic_proc_info to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @threed_enh_proc_info to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1204 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reverb_proc_info to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @chorus_proc_info to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dcr_proc_info to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_updown_proc_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uac3_stereo_ext_proc_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @undefined_proc_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @extunits to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clock_rate_xu_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clock_source_xu_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spdif_format_xu_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @soft_limit_xu_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @snd_usb_mixer_dump_cval.val_types to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.snd_usb_mixer_set_ctl_value to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.snd_usb_mixer_controls_badd to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.snd_usb_mixer_controls_badd.288 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1377 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.get_ctl_value_v2 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.__build_feature_ctl to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1379 to i32), i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_get_cur_mix_value(ptr nocapture noundef %cval, i32 noundef %channel, i32 noundef %index, ptr nocapture noundef %value) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cached = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 13
  %0 = ptrtoint ptr %cached to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cached, align 4
  %shl = shl nuw i32 1, %channel
  %and = and i32 %1, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 14, i32 %index
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %4 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %value, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %control.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %5 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %control.i, align 4
  %shl.i = shl i32 %6, 8
  %or.i = or i32 %shl.i, %channel
  %idx_off.i.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 3
  %7 = ptrtoint ptr %idx_off.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %idx_off.i.i, align 4
  %add.i.i = add i32 %or.i, %8
  %9 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cval, align 4
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %10, i32 0, i32 6
  %11 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i.i = icmp eq i32 %12, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = tail call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 129, i32 noundef %add.i.i, ptr noundef %value) #13
  br label %get_cur_mix_raw.exit

cond.false.i.i:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = tail call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 129, i32 noundef %add.i.i, ptr noundef %value) #13
  br label %get_cur_mix_raw.exit

get_cur_mix_raw.exit:                             ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp = icmp slt i32 %cond.i.i, 0
  br i1 %cmp, label %if.then1, label %if.end14

if.then1:                                         ; preds = %get_cur_mix_raw.exit
  %13 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %cval, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool2.not = icmp eq i32 %16, 0
  br i1 %tobool2.not, label %do.body, label %if.then1.cleanup_crit_edge

if.then1.cleanup_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.body:                                          ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_get_cur_mix_value.__UNIQUE_ID_ddebug240, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_get_cur_mix_value, %if.then8)) #13
          to label %cleanup [label %if.then8], !srcloc !716

if.then8:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cval, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 4
  %dev11 = getelementptr inbounds %struct.usb_device, ptr %22, i32 0, i32 15
  %23 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %control.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_get_cur_mix_value.__UNIQUE_ID_ddebug240, ptr noundef %dev11, ptr noundef nonnull @.str.3, i32 noundef %24, i32 noundef %channel, i32 noundef %cond.i.i) #13
  br label %cleanup

if.end14:                                         ; preds = %get_cur_mix_raw.exit
  call void @__sanitizer_cov_trace_pc() #15
  %25 = ptrtoint ptr %cached to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cached, align 4
  %or = or i32 %26, %shl
  store i32 %or, ptr %cached, align 4
  %27 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %value, align 4
  %arrayidx18 = getelementptr %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 14, i32 %index
  %29 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx18, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then8, %do.body, %if.then1.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.end14 ], [ %cond.i.i, %if.then8 ], [ %cond.i.i, %if.then1.cleanup_crit_edge ], [ %cond.i.i, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_mixer_set_ctl_value(ptr nocapture noundef readonly %cval, i32 noundef %request, i32 noundef %validx, i32 noundef %value_set) local_unnamed_addr #0 align 64 {
entry:
  %buf = alloca [4 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cval, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %buf) #13
  %4 = getelementptr inbounds [4 x i8], ptr %buf, i32 0, i32 1
  %5 = getelementptr inbounds [4 x i8], ptr %buf, i32 0, i32 2
  %6 = getelementptr inbounds [4 x i8], ptr %buf, i32 0, i32 3
  %idx_off = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 3
  %7 = ptrtoint ptr %idx_off to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %idx_off, align 4
  %add = add i32 %8, %validx
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 6
  %9 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 7
  %11 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val_type, align 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %12)
  %cmp4 = icmp sgt i32 %12, 3
  %cond = select i1 %cmp4, i16 2, i16 1
  br label %if.end14

if.else:                                          ; preds = %entry
  %switch.tableidx = add i32 %12, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %switch.tableidx)
  %13 = icmp ult i32 %switch.tableidx, 4
  br i1 %13, label %switch.lookup, label %if.else.uac2_ctl_value_size.exit_crit_edge

if.else.uac2_ctl_value_size.exit_crit_edge:       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac2_ctl_value_size.exit

switch.lookup:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %switch.gep = getelementptr inbounds [4 x i16], ptr @switch.table.snd_usb_mixer_set_ctl_value, i32 0, i32 %switch.tableidx
  %14 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %14)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %uac2_ctl_value_size.exit

uac2_ctl_value_size.exit:                         ; preds = %switch.lookup, %if.else.uac2_ctl_value_size.exit_crit_edge
  %retval.0.i112 = phi i16 [ %switch.load, %switch.lookup ], [ 1, %if.else.uac2_ctl_value_size.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %request)
  %cmp6.not = icmp eq i32 %request, 1
  br i1 %cmp6.not, label %uac2_ctl_value_size.exit.if.end14_crit_edge, label %do.body

uac2_ctl_value_size.exit.if.end14_crit_edge:      ; preds = %uac2_ctl_value_size.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

do.body:                                          ; preds = %uac2_ctl_value_size.exit
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_set_ctl_value, %if.then11)) #13
          to label %cleanup [label %if.then11], !srcloc !716

if.then11:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %15 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev, align 4
  %dev12 = getelementptr inbounds %struct.usb_device, ptr %16, i32 0, i32 15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug241, ptr noundef %dev12, ptr noundef nonnull @.str.5) #13
  br label %cleanup

if.end14:                                         ; preds = %uac2_ctl_value_size.exit.if.end14_crit_edge, %if.then
  %val_len.0 = phi i16 [ %cond, %if.then ], [ %retval.0.i112, %uac2_ctl_value_size.exit.if.end14_crit_edge ]
  %val_type.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 7
  %17 = ptrtoint ptr %val_type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val_type.i, align 4
  %19 = zext i32 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values)
  switch i32 %18, label %if.end14.convert_bytes_value.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb2.i
    i32 2, label %if.end14.sw.bb6.i_crit_edge
    i32 3, label %if.end14.sw.bb6.i_crit_edge123
    i32 4, label %if.end14.sw.bb7.i_crit_edge
    i32 5, label %if.end14.sw.bb7.i_crit_edge124
  ]

if.end14.sw.bb7.i_crit_edge124:                   ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb7.i

if.end14.sw.bb7.i_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb7.i

if.end14.sw.bb6.i_crit_edge123:                   ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb6.i

if.end14.sw.bb6.i_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb6.i

if.end14.convert_bytes_value.exit_crit_edge:      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %convert_bytes_value.exit

sw.bb.i:                                          ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value_set)
  %tobool.i = icmp ne i32 %value_set, 0
  %lnot.ext.i = zext i1 %tobool.i to i32
  br label %convert_bytes_value.exit

sw.bb2.i:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value_set)
  %tobool3.not.i = icmp eq i32 %value_set, 0
  %lnot.ext5.i = zext i1 %tobool3.not.i to i32
  br label %convert_bytes_value.exit

sw.bb6.i:                                         ; preds = %if.end14.sw.bb6.i_crit_edge, %if.end14.sw.bb6.i_crit_edge123
  %and.i = and i32 %value_set, 255
  br label %convert_bytes_value.exit

sw.bb7.i:                                         ; preds = %if.end14.sw.bb7.i_crit_edge, %if.end14.sw.bb7.i_crit_edge124
  %and8.i = and i32 %value_set, 65535
  br label %convert_bytes_value.exit

convert_bytes_value.exit:                         ; preds = %sw.bb7.i, %sw.bb6.i, %sw.bb2.i, %sw.bb.i, %if.end14.convert_bytes_value.exit_crit_edge
  %retval.0.i113 = phi i32 [ %and8.i, %sw.bb7.i ], [ %and.i, %sw.bb6.i ], [ %lnot.ext5.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb.i ], [ 0, %if.end14.convert_bytes_value.exit_crit_edge ]
  %conv = trunc i32 %retval.0.i113 to i8
  %20 = ptrtoint ptr %buf to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %conv, ptr %buf, align 1
  %21 = lshr i32 %retval.0.i113, 8
  %conv17 = trunc i32 %21 to i8
  %22 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %conv17, ptr %4, align 1
  %23 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %5, align 1
  %24 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %6, align 1
  %call27 = tail call i32 @snd_usb_lock_shutdown(ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %cmp28 = icmp slt i32 %call27, 0
  br i1 %cmp28, label %convert_bytes_value.exit.cleanup_crit_edge, label %while.cond.preheader

convert_bytes_value.exit.cleanup_crit_edge:       ; preds = %convert_bytes_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

while.cond.preheader:                             ; preds = %convert_bytes_value.exit
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %dev38 = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %conv42 = trunc i32 %request to i8
  %conv43 = trunc i32 %add to i16
  br label %while.body

while.cond:                                       ; preds = %if.else50
  %dec = add nsw i32 %dec117, -1
  %cmp32.not = icmp eq i32 %dec117, 0
  br i1 %cmp32.not, label %do.body56, label %while.cond.while.body_crit_edge

while.cond.while.body_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

while.body:                                       ; preds = %while.cond.while.body_crit_edge, %while.cond.preheader
  %dec117 = phi i32 [ 9, %while.cond.preheader ], [ %dec, %while.cond.while.body_crit_edge ]
  %25 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %cval, align 4
  %hostif.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %30 to i32
  %31 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %id, align 4
  %shl = shl i32 %32, 8
  %or = or i32 %shl, %conv.i
  %33 = ptrtoint ptr %dev38 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev38, align 4
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %34, align 8
  %shl.i = shl i32 %36, 8
  %or41 = or i32 %shl.i, -2147483648
  %conv44 = trunc i32 %or to i16
  %call46 = call i32 @snd_usb_ctl_msg(ptr noundef %34, i32 noundef %or41, i8 noundef zeroext %conv42, i8 noundef zeroext 33, i16 noundef zeroext %conv43, i16 noundef zeroext %conv44, ptr noundef nonnull %buf, i16 noundef zeroext %val_len.0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call46)
  %cmp47 = icmp sgt i32 %call46, -1
  br i1 %cmp47, label %while.body.out_crit_edge, label %if.else50

while.body.out_crit_edge:                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.else50:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call46)
  %cmp51 = icmp eq i32 %call46, -110
  br i1 %cmp51, label %if.else50.out_crit_edge, label %while.cond

if.else50.out_crit_edge:                          ; preds = %if.else50
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

do.body56:                                        ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug242, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_set_ctl_value, %if.then68)) #13
          to label %out [label %if.then68], !srcloc !716

if.then68:                                        ; preds = %do.body56
  call void @__sanitizer_cov_trace_pc() #15
  %37 = ptrtoint ptr %dev38 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dev38, align 4
  %dev70 = getelementptr inbounds %struct.usb_device, ptr %38, i32 0, i32 15
  %39 = ptrtoint ptr %val_type.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %val_type.i, align 4
  %41 = ptrtoint ptr %buf to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %buf, align 1
  %conv73 = zext i8 %42 to i32
  %43 = ptrtoint ptr %4 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %4, align 1
  %conv75 = zext i8 %44 to i32
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug242, ptr noundef %dev70, ptr noundef nonnull @.str.6, i32 noundef %request, i32 noundef %add, i32 noundef %or, i32 noundef %40, i32 noundef %conv73, i32 noundef %conv75) #13
  br label %out

out:                                              ; preds = %if.then68, %do.body56, %if.else50.out_crit_edge, %while.body.out_crit_edge
  %err.0 = phi i32 [ -22, %if.then68 ], [ -22, %do.body56 ], [ 0, %while.body.out_crit_edge ], [ -110, %if.else50.out_crit_edge ]
  call void @snd_usb_unlock_shutdown(ptr noundef %3) #13
  br label %cleanup

cleanup:                                          ; preds = %out, %convert_bytes_value.exit.cleanup_crit_edge, %if.then11, %do.body
  %retval.0 = phi i32 [ %err.0, %out ], [ -22, %if.then11 ], [ -5, %convert_bytes_value.exit.cleanup_crit_edge ], [ -22, %do.body ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %buf) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_usb_lock_shutdown(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_usb_ctl_msg(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_usb_unlock_shutdown(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_set_cur_mix_value(ptr nocapture noundef %cval, i32 noundef %channel, i32 noundef %index, i32 noundef %value) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %channel)
  %cmp = icmp eq i32 %channel, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %master_readonly = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 5
  %0 = ptrtoint ptr %master_readonly to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %master_readonly, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %ch_readonly = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 4
  %2 = ptrtoint ptr %ch_readonly to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ch_readonly, align 4
  %sub = add i32 %channel, -1
  %shl = shl nuw i32 1, %sub
  %and = and i32 %3, %shl
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %and, %cond.false ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool.not = icmp eq i32 %cond, 0
  br i1 %tobool.not, label %if.end6, label %do.body

do.body:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_set_cur_mix_value, %if.then4)) #13
          to label %cleanup [label %if.then4], !srcloc !716

if.then4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cval, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 4
  %dev5 = getelementptr inbounds %struct.usb_device, ptr %9, i32 0, i32 15
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %10 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %control, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef %channel, i32 noundef %11) #13
  br label %cleanup

if.end6:                                          ; preds = %cond.end
  %control7 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %12 = ptrtoint ptr %control7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %control7, align 4
  %shl8 = shl i32 %13, 8
  %or = or i32 %shl8, %channel
  %call9 = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %cval, i32 noundef 1, i32 noundef %or, i32 noundef %value)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.end6.cleanup_crit_edge, label %if.end12

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end12:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  %shl13 = shl nuw i32 1, %channel
  %cached = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 13
  %14 = ptrtoint ptr %cached to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cached, align 4
  %or14 = or i32 %15, %shl13
  store i32 %or14, ptr %cached, align 4
  %arrayidx = getelementptr %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 14, i32 %index
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %value, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end6.cleanup_crit_edge, %if.then4, %do.body
  %retval.0 = phi i32 [ 0, %if.end12 ], [ 0, %if.then4 ], [ %call9, %if.end6.cleanup_crit_edge ], [ 0, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_mixer_vol_tlv(ptr nocapture noundef readonly %kcontrol, i32 %op_flag, i32 noundef %size, ptr noundef %_tlv) #0 align 64 {
entry:
  %scale = alloca [4 x i32], align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %scale) #13
  %2 = ptrtoint ptr %scale to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 17179869192, ptr %scale, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %size)
  %cmp = icmp ult i32 %size, 16
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %min_mute = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 16
  %3 = ptrtoint ptr %min_mute to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %min_mute, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end.if.end2_crit_edge, label %if.then1

if.end.if.end2_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %5 = ptrtoint ptr %scale to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 5, ptr %scale, align 8
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end.if.end2_crit_edge
  %dBmin = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 11
  %6 = ptrtoint ptr %dBmin to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dBmin, align 4
  %arrayidx3 = getelementptr inbounds [4 x i32], ptr %scale, i32 0, i32 2
  %8 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %arrayidx3, align 8
  %dBmax = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %dBmax to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %dBmax, align 4
  %arrayidx4 = getelementptr inbounds [4 x i32], ptr %scale, i32 0, i32 3
  %11 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %arrayidx4, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.18, i32 noundef 174) #13
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #13
  br i1 %call.i.i, label %if.end2.cleanup_crit_edge, label %if.end.i.i

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end2
  %12 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %_tlv, i32 16, i32 -1226833920) #16, !srcloc !717
  %asmresult.i.i = extractvalue { i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %scale, i32 noundef 16) #13
  %call.i1.i.i = call i32 @arm_copy_to_user(ptr noundef %_tlv, ptr noundef nonnull %scale, i32 noundef 16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i.i)
  %tobool5.not = icmp eq i32 %call.i1.i.i, 0
  %spec.select = select i1 %tobool5.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i.cleanup_crit_edge, %if.end2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ -14, %if.end2.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %scale) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_mixer_add_list(ptr noundef %list, ptr noundef %kctl, i1 noundef zeroext %is_std_info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %is_std_info to i8
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 4
  %id = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %card40 = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %card40 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %card40, align 4
  %call41 = tail call ptr @snd_ctl_find_id(ptr noundef %5, ptr noundef %id) #13
  %tobool.not42 = icmp eq ptr %call41, null
  br i1 %tobool.not42, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %index = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 5
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  %6 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %index, align 4
  %inc = add i32 %7, 1
  store i32 %inc, ptr %index, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 4
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %card, align 4
  %call = tail call ptr @snd_ctl_find_id(ptr noundef %11, ptr noundef %id) #13
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 4
  %card4 = getelementptr inbounds %struct.snd_usb_audio, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %card4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %card4, align 4
  %call5 = tail call i32 @snd_ctl_add(ptr noundef %15, ptr noundef %kctl) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %do.body, label %if.end14

do.body:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_add_list.__UNIQUE_ID_ddebug244, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_add_list, %if.then11)) #13
          to label %cleanup [label %if.then11], !srcloc !716

if.then11:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev, align 4
  %dev13 = getelementptr inbounds %struct.usb_device, ptr %19, i32 0, i32 15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_add_list.__UNIQUE_ID_ddebug244, ptr noundef %dev13, ptr noundef nonnull @.str.10, i32 noundef %call5) #13
  br label %cleanup

if.end14:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %kctl15 = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 2
  %20 = ptrtoint ptr %kctl15 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %kctl, ptr %kctl15, align 4
  %is_std_info17 = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 4
  %21 = ptrtoint ptr %is_std_info17 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %frombool, ptr %is_std_info17, align 4
  %id_elems = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 5
  %22 = ptrtoint ptr %id_elems to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %id_elems, align 4
  %id19 = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 3
  %24 = ptrtoint ptr %id19 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %id19, align 4
  %arrayidx = getelementptr ptr, ptr %23, i32 %25
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx, align 4
  %next_id_elem = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 1
  %28 = ptrtoint ptr %next_id_elem to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %27, ptr %next_id_elem, align 4
  %29 = load ptr, ptr %id_elems, align 4
  %arrayidx22 = getelementptr ptr, ptr %29, i32 %25
  %30 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %list, ptr %arrayidx22, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then11, %do.body
  %retval.0 = phi i32 [ 0, %if.end14 ], [ %call5, %if.then11 ], [ %call5, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_ctl_find_id(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_usb_mixer_elem_free(ptr nocapture noundef %kctl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  tail call void @kfree(ptr noundef %1) #13
  %2 = ptrtoint ptr %private_data to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %private_data, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_usb_mixer_notify_id(ptr nocapture noundef readonly %mixer, i32 noundef %unitid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %connector_map.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 7
  %0 = ptrtoint ptr %connector_map.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %connector_map.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.delegate_notify.exit_crit_edge, label %for.cond.preheader.i

entry.delegate_notify.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit

for.cond.preheader.i:                             ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not36.i = icmp eq i8 %3, 0
  br i1 %tobool1.not36.i, label %for.cond.preheader.i.delegate_notify.exit_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.delegate_notify.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %4 = phi i8 [ %8, %for.inc.i.for.body.i_crit_edge ], [ %3, %for.cond.preheader.i.for.body.i_crit_edge ]
  %map.037.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %1, %for.cond.preheader.i.for.body.i_crit_edge ]
  %conv.i = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %unitid)
  %cmp.i = icmp eq i32 %conv.i, %unitid
  br i1 %cmp.i, label %if.then4.i, label %for.inc.i

if.then4.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %delegated_id.i = getelementptr inbounds %struct.usbmix_connector_map, ptr %map.037.i, i32 0, i32 1
  %5 = ptrtoint ptr %delegated_id.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %delegated_id.i, align 1
  %conv20.i = zext i8 %6 to i32
  br label %delegate_notify.exit

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr %struct.usbmix_connector_map, ptr %map.037.i, i32 1
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %incdec.ptr.i, align 1
  %tobool1.not.i = icmp eq i8 %8, 0
  br i1 %tobool1.not.i, label %for.inc.i.delegate_notify.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.delegate_notify.exit_crit_edge:         ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit

delegate_notify.exit:                             ; preds = %for.inc.i.delegate_notify.exit_crit_edge, %if.then4.i, %for.cond.preheader.i.delegate_notify.exit_crit_edge, %entry.delegate_notify.exit_crit_edge
  %retval.0.i = phi i32 [ %conv20.i, %if.then4.i ], [ %unitid, %entry.delegate_notify.exit_crit_edge ], [ %unitid, %for.cond.preheader.i.delegate_notify.exit_crit_edge ], [ %unitid, %for.inc.i.delegate_notify.exit_crit_edge ]
  %id_elems = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 5
  %9 = ptrtoint ptr %id_elems to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %id_elems, align 4
  %arrayidx = getelementptr ptr, ptr %10, i32 %retval.0.i
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %list.010 = load ptr, ptr %arrayidx, align 4
  %tobool.not11 = icmp eq ptr %list.010, null
  br i1 %tobool.not11, label %delegate_notify.exit.for.end_crit_edge, label %delegate_notify.exit.for.body_crit_edge

delegate_notify.exit.for.body_crit_edge:          ; preds = %delegate_notify.exit
  br label %for.body

delegate_notify.exit.for.end_crit_edge:           ; preds = %delegate_notify.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %delegate_notify.exit.for.body_crit_edge
  %list.012 = phi ptr [ %list.0, %cleanup.for.body_crit_edge ], [ %list.010, %delegate_notify.exit.for.body_crit_edge ]
  %is_std_info = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.012, i32 0, i32 4
  %12 = ptrtoint ptr %is_std_info to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %is_std_info, align 4, !range !718
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool1.not = icmp eq i8 %13, 0
  br i1 %tobool1.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %cached = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list.012, i32 0, i32 13
  %14 = ptrtoint ptr %cached to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %cached, align 4
  %15 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mixer, align 4
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %card, align 4
  %kctl = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.012, i32 0, i32 2
  %19 = ptrtoint ptr %kctl to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %kctl, align 4
  %id = getelementptr inbounds %struct.snd_kcontrol, ptr %20, i32 0, i32 1
  tail call void @snd_ctl_notify(ptr noundef %18, i32 noundef 1, ptr noundef %id) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.body.cleanup_crit_edge
  %next_id_elem = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.012, i32 0, i32 1
  %21 = ptrtoint ptr %next_id_elem to i32
  call void @__asan_load4_noabort(i32 %21)
  %list.0 = load ptr, ptr %next_id_elem, align 4
  %tobool.not = icmp eq ptr %list.0, null
  br i1 %tobool.not, label %cleanup.for.end_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %delegate_notify.exit.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_ctl_notify(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_create_mixer(ptr noundef %chip, i32 noundef %ctrlif) local_unnamed_addr #0 align 64 {
entry:
  %state.i = alloca %struct.mixer_build, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %card, align 4
  %mixername = getelementptr inbounds %struct.snd_card, ptr %1, i32 0, i32 6
  %2 = call ptr @memcpy(ptr %mixername, ptr @.str.11, i32 10)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 132) #17
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %chip, ptr %call7.i.i, align 8
  %quirk_flags = getelementptr inbounds %struct.snd_usb_audio, ptr %chip, i32 0, i32 12
  %5 = ptrtoint ptr %quirk_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %quirk_flags, align 4
  %and = lshr i32 %6, 14
  %and.lobit = and i32 %and, 1
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 3
  %7 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and.lobit, ptr %ignore_ctl_error, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 1024) #17
  %id_elems = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 5
  %9 = ptrtoint ptr %id_elems to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call7.i.i.i, ptr %id_elems, align 8
  %tobool7.not = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool7.not, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %chip, i32 0, i32 1
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 4
  %call10 = tail call ptr @usb_ifnum_to_if(ptr noundef %11, i32 noundef %ctrlif) #13
  %12 = ptrtoint ptr %call10 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call10, align 8
  %hostif = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %hostif to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %hostif, align 4
  %bInterfaceProtocol = getelementptr inbounds %struct.usb_interface_descriptor, ptr %13, i32 0, i32 7
  %15 = ptrtoint ptr %bInterfaceProtocol to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %bInterfaceProtocol, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %16)
  %switch.selectcmp = icmp eq i8 %16, 32
  %switch.select = select i1 %switch.selectcmp, i32 32, i32 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 48, i8 %16)
  %switch.selectcmp100 = icmp eq i8 %16, 48
  %switch.select101 = select i1 %switch.selectcmp100, i32 48, i32 %switch.select
  %protocol15 = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 6
  %17 = ptrtoint ptr %protocol15 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %switch.select101, ptr %protocol15, align 4
  %protocol16 = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 6
  br i1 %switch.selectcmp100, label %land.lhs.true, label %if.end9.if.else_crit_edge

if.end9.if.else_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.lhs.true:                                    ; preds = %if.end9
  %badd_profile = getelementptr inbounds %struct.snd_usb_audio, ptr %chip, i32 0, i32 17
  %18 = ptrtoint ptr %badd_profile to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %badd_profile, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %19)
  %cmp18 = icmp sgt i32 %19, 31
  br i1 %cmp18, label %if.then20, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.then20:                                        ; preds = %land.lhs.true
  %call21 = tail call fastcc i32 @snd_usb_mixer_controls_badd(ptr noundef nonnull %call7.i.i, i32 noundef %ctrlif)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then20._error_crit_edge, label %if.then20.if.end31_crit_edge

if.then20.if.end31_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

if.then20._error_crit_edge:                       ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #15
  br label %_error

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end9.if.else_crit_edge
  call void @llvm.lifetime.start.p0(i64 108, ptr nonnull %state.i) #13
  %20 = getelementptr inbounds i8, ptr %state.i, i32 16
  %21 = call ptr @memset(ptr %20, i32 0, i32 92)
  %22 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %call7.i.i, align 8
  %24 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %state.i, align 4
  %mixer2.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 1
  %25 = ptrtoint ptr %mixer2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %call7.i.i, ptr %mixer2.i, align 4
  %26 = ptrtoint ptr %hostif to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hostif, align 4
  %extra.i = getelementptr inbounds %struct.usb_host_interface, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %extra.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %extra.i, align 4
  %buffer.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 2
  %30 = ptrtoint ptr %buffer.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %buffer.i, align 4
  %extralen.i = getelementptr inbounds %struct.usb_host_interface, ptr %27, i32 0, i32 1
  %31 = ptrtoint ptr %extralen.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %extralen.i, align 4
  %buflen.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 3
  %33 = ptrtoint ptr %buflen.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %buflen.i, align 4
  %usb_id.i = getelementptr inbounds %struct.snd_usb_audio, ptr %23, i32 0, i32 4
  %34 = ptrtoint ptr %usb_id.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %usb_id.i, align 4
  %36 = zext i32 %35 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.289)
  switch i32 %35, label %if.else.for.end.i_crit_edge [
    i32 69087232, label %if.else.if.then.i_crit_edge
    i32 69087248, label %if.then.fold.split.i
    i32 69087264, label %if.then.fold.split227.i
    i32 69087296, label %if.then.fold.split228.i
    i32 69087304, label %if.then.fold.split229.i
    i32 75481104, label %if.then.fold.split230.i
    i32 116965376, label %if.then.fold.split231.i
    i32 123936816, label %if.then.fold.split232.i
    i32 123936817, label %if.then.fold.split233.i
    i32 146482946, label %if.then.fold.split234.i
    i32 177340561, label %if.then.fold.split235.i
    i32 205853016, label %if.then.fold.split236.i
    i32 214761512, label %if.then.fold.split237.i
    i32 198852628, label %if.then.fold.split238.i
    i32 230297600, label %if.then.fold.split239.i
    i32 333774849, label %if.then.fold.split240.i
    i32 537661464, label %if.then.fold.split241.i
    i32 628293640, label %if.then.fold.split242.i
    i32 665587712, label %if.then.fold.split243.i
    i32 633602051, label %if.then.fold.split244.i
    i32 94834720, label %if.then.fold.split245.i
    i32 94847226, label %if.then.fold.split246.i
    i32 454822461, label %if.then.fold.split247.i
    i32 454822462, label %if.then.fold.split248.i
    i32 454822465, label %if.then.fold.split249.i
    i32 454822466, label %if.then.fold.split250.i
    i32 68460545, label %if.then.fold.split251.i
    i32 68460546, label %if.then.fold.split252.i
    i32 184883478, label %if.then.fold.split253.i
    i32 184883479, label %if.then.fold.split254.i
    i32 229641572, label %if.then.fold.split255.i
    i32 229654940, label %if.then.fold.split256.i
    i32 229659709, label %if.then.fold.split257.i
    i32 651037185, label %if.then.fold.split258.i
    i32 397021254, label %if.then.fold.split259.i
    i32 328532005, label %if.then.fold.split260.i
  ]

if.else.if.then.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.else.for.end.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

if.then.fold.split.i:                             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split227.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split228.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split229.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split230.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split231.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split232.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split233.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split234.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split235.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split236.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split237.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split238.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split239.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split240.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split241.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split242.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split243.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split244.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split245.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split246.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split247.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split248.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split249.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split250.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split251.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split252.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split253.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split254.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split255.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split256.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split257.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split258.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split259.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.fold.split260.i:                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.i:                                        ; preds = %if.then.fold.split260.i, %if.then.fold.split259.i, %if.then.fold.split258.i, %if.then.fold.split257.i, %if.then.fold.split256.i, %if.then.fold.split255.i, %if.then.fold.split254.i, %if.then.fold.split253.i, %if.then.fold.split252.i, %if.then.fold.split251.i, %if.then.fold.split250.i, %if.then.fold.split249.i, %if.then.fold.split248.i, %if.then.fold.split247.i, %if.then.fold.split246.i, %if.then.fold.split245.i, %if.then.fold.split244.i, %if.then.fold.split243.i, %if.then.fold.split242.i, %if.then.fold.split241.i, %if.then.fold.split240.i, %if.then.fold.split239.i, %if.then.fold.split238.i, %if.then.fold.split237.i, %if.then.fold.split236.i, %if.then.fold.split235.i, %if.then.fold.split234.i, %if.then.fold.split233.i, %if.then.fold.split232.i, %if.then.fold.split231.i, %if.then.fold.split230.i, %if.then.fold.split229.i, %if.then.fold.split228.i, %if.then.fold.split227.i, %if.then.fold.split.i, %if.else.if.then.i_crit_edge
  %map.0215.lcssa.i = phi ptr [ @usbmix_ctl_maps, %if.else.if.then.i_crit_edge ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 1), %if.then.fold.split.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 2), %if.then.fold.split227.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 3), %if.then.fold.split228.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 4), %if.then.fold.split229.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 5), %if.then.fold.split230.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 6), %if.then.fold.split231.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 7), %if.then.fold.split232.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 8), %if.then.fold.split233.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 9), %if.then.fold.split234.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 10), %if.then.fold.split235.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 11), %if.then.fold.split236.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 12), %if.then.fold.split237.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 13), %if.then.fold.split238.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 14), %if.then.fold.split239.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 15), %if.then.fold.split240.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 16), %if.then.fold.split241.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 17), %if.then.fold.split242.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 18), %if.then.fold.split243.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 19), %if.then.fold.split244.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 20), %if.then.fold.split245.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 21), %if.then.fold.split246.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 22), %if.then.fold.split247.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 23), %if.then.fold.split248.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 24), %if.then.fold.split249.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 25), %if.then.fold.split250.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 26), %if.then.fold.split251.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 27), %if.then.fold.split252.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 28), %if.then.fold.split253.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 29), %if.then.fold.split254.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 30), %if.then.fold.split255.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 31), %if.then.fold.split256.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 32), %if.then.fold.split257.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 33), %if.then.fold.split258.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 34), %if.then.fold.split259.i ], [ getelementptr inbounds ([37 x %struct.usbmix_ctl_map], ptr @usbmix_ctl_maps, i32 0, i32 35), %if.then.fold.split260.i ]
  %map6.i = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0215.lcssa.i, i32 0, i32 1
  %37 = ptrtoint ptr %map6.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %map6.i, align 4
  %map7.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 7
  %39 = ptrtoint ptr %map7.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %38, ptr %map7.i, align 4
  %selector_map.i = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0215.lcssa.i, i32 0, i32 2
  %40 = ptrtoint ptr %selector_map.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %selector_map.i, align 4
  %selector_map8.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 8
  %42 = ptrtoint ptr %selector_map8.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %41, ptr %selector_map8.i, align 4
  %connector_map.i = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0215.lcssa.i, i32 0, i32 3
  %43 = ptrtoint ptr %connector_map.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %connector_map.i, align 4
  %connector_map9.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 7
  %45 = ptrtoint ptr %connector_map9.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %44, ptr %connector_map9.i, align 8
  br label %for.end.i

for.end.i:                                        ; preds = %if.then.i, %if.else.for.end.i_crit_edge
  %46 = ptrtoint ptr %hostif to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hostif, align 4
  %extra11216.i = getelementptr inbounds %struct.usb_host_interface, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %extra11216.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %extra11216.i, align 4
  %extralen13217.i = getelementptr inbounds %struct.usb_host_interface, ptr %47, i32 0, i32 1
  %50 = ptrtoint ptr %extralen13217.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %extralen13217.i, align 4
  %call218.i = tail call ptr @snd_usb_find_csint_desc(ptr noundef %49, i32 noundef %51, ptr noundef null, i8 noundef zeroext 3) #13
  %cmp14.not219.i = icmp eq ptr %call218.i, null
  br i1 %cmp14.not219.i, label %for.end.i.snd_usb_mixer_controls.exit_crit_edge, label %while.body.lr.ph.i

for.end.i.snd_usb_mixer_controls.exit_crit_edge:  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit

while.body.lr.ph.i:                               ; preds = %for.end.i
  %oterm47.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 6
  %type52.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 6, i32 1
  %name56.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 6, i32 4
  %map86.i = getelementptr inbounds %struct.mixer_build, ptr %state.i, i32 0, i32 7
  br label %while.body.i

while.body.i:                                     ; preds = %while.cond.backedge.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %call220.i = phi ptr [ %call218.i, %while.body.lr.ph.i ], [ %call.i, %while.cond.backedge.i.while.body.i_crit_edge ]
  %52 = ptrtoint ptr %protocol16 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %protocol16, align 4
  %call15.i = call zeroext i1 @snd_usb_validate_audio_desc(ptr noundef nonnull %call220.i, i32 noundef %53) #13
  br i1 %call15.i, label %if.end17.i, label %while.body.i.while.cond.backedge.i_crit_edge

while.body.i.while.cond.backedge.i_crit_edge:     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.i

if.end17.i:                                       ; preds = %while.body.i
  %54 = ptrtoint ptr %protocol16 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %protocol16, align 4
  %56 = zext i32 %55 to i64
  call void @__sanitizer_cov_trace_switch(i64 %56, ptr @__sancov_gen_cov_switch_values.290)
  switch i32 %55, label %if.else92.i [
    i32 0, label %if.then20.i
    i32 32, label %if.then39.i
  ]

if.then20.i:                                      ; preds = %if.end17.i
  %bTerminalID.i = getelementptr inbounds %struct.uac1_output_terminal_descriptor, ptr %call220.i, i32 0, i32 3
  %57 = ptrtoint ptr %bTerminalID.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %bTerminalID.i, align 1
  %conv.i = zext i8 %58 to i32
  call void @_set_bit(i32 noundef %conv.i, ptr noundef %20) #13
  %59 = ptrtoint ptr %bTerminalID.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %bTerminalID.i, align 1
  %conv22.i = zext i8 %60 to i32
  %61 = ptrtoint ptr %oterm47.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %conv22.i, ptr %oterm47.i, align 4
  %wTerminalType.i = getelementptr inbounds %struct.uac1_output_terminal_descriptor, ptr %call220.i, i32 0, i32 4
  %62 = ptrtoint ptr %wTerminalType.i to i32
  call void @__asan_loadN_noabort(i32 %62, i32 2)
  %63 = load i16, ptr %wTerminalType.i, align 1
  %64 = call i16 @llvm.bswap.i16(i16 %63) #13
  %conv24.i = zext i16 %64 to i32
  %65 = ptrtoint ptr %type52.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %conv24.i, ptr %type52.i, align 4
  %iTerminal.i = getelementptr inbounds %struct.uac1_output_terminal_descriptor, ptr %call220.i, i32 0, i32 7
  %66 = ptrtoint ptr %iTerminal.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %iTerminal.i, align 1
  %conv26.i = zext i8 %67 to i32
  %68 = ptrtoint ptr %name56.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %conv26.i, ptr %name56.i, align 4
  %bSourceID.i = getelementptr inbounds %struct.uac1_output_terminal_descriptor, ptr %call220.i, i32 0, i32 6
  %69 = ptrtoint ptr %bSourceID.i to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %bSourceID.i, align 1
  %conv28.i = zext i8 %70 to i32
  %call29.i = call fastcc i32 @parse_audio_unit(ptr noundef nonnull %state.i, i32 noundef %conv28.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29.i)
  %cmp30.i = icmp sgt i32 %call29.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call29.i)
  %cmp32.not.i = icmp eq i32 %call29.i, -22
  %or.cond.i = or i1 %cmp30.i, %cmp32.not.i
  br i1 %or.cond.i, label %if.then20.i.while.cond.backedge.i_crit_edge, label %if.then20.i.snd_usb_mixer_controls.exit.thread_crit_edge

if.then20.i.snd_usb_mixer_controls.exit.thread_crit_edge: ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit.thread

if.then20.i.while.cond.backedge.i_crit_edge:      ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.i

if.then39.i:                                      ; preds = %if.end17.i
  %bTerminalID41.i = getelementptr inbounds %struct.uac2_output_terminal_descriptor, ptr %call220.i, i32 0, i32 3
  %71 = ptrtoint ptr %bTerminalID41.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %bTerminalID41.i, align 1
  %conv42.i = zext i8 %72 to i32
  call void @_set_bit(i32 noundef %conv42.i, ptr noundef %20) #13
  %73 = ptrtoint ptr %bTerminalID41.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %bTerminalID41.i, align 1
  %conv46.i = zext i8 %74 to i32
  %75 = ptrtoint ptr %oterm47.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %conv46.i, ptr %oterm47.i, align 4
  %wTerminalType49.i = getelementptr inbounds %struct.uac2_output_terminal_descriptor, ptr %call220.i, i32 0, i32 4
  %76 = ptrtoint ptr %wTerminalType49.i to i32
  call void @__asan_loadN_noabort(i32 %76, i32 2)
  %77 = load i16, ptr %wTerminalType49.i, align 1
  %78 = call i16 @llvm.bswap.i16(i16 %77) #13
  %conv50.i = zext i16 %78 to i32
  %79 = ptrtoint ptr %type52.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %conv50.i, ptr %type52.i, align 4
  %iTerminal53.i = getelementptr inbounds %struct.uac2_output_terminal_descriptor, ptr %call220.i, i32 0, i32 9
  %80 = ptrtoint ptr %iTerminal53.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %iTerminal53.i, align 1
  %conv54.i = zext i8 %81 to i32
  %82 = ptrtoint ptr %name56.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %conv54.i, ptr %name56.i, align 4
  %bSourceID57.i = getelementptr inbounds %struct.uac2_output_terminal_descriptor, ptr %call220.i, i32 0, i32 6
  %83 = ptrtoint ptr %bSourceID57.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %bSourceID57.i, align 1
  %conv58.i = zext i8 %84 to i32
  %call59.i = call fastcc i32 @parse_audio_unit(ptr noundef nonnull %state.i, i32 noundef %conv58.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call59.i)
  %cmp60.i = icmp sgt i32 %call59.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call59.i)
  %cmp63.not.i = icmp eq i32 %call59.i, -22
  %or.cond205.i = or i1 %cmp60.i, %cmp63.not.i
  br i1 %or.cond205.i, label %if.end66.i, label %if.then39.i.snd_usb_mixer_controls.exit.thread_crit_edge

if.then39.i.snd_usb_mixer_controls.exit.thread_crit_edge: ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit.thread

if.end66.i:                                       ; preds = %if.then39.i
  %bCSourceID.i = getelementptr inbounds %struct.uac2_output_terminal_descriptor, ptr %call220.i, i32 0, i32 7
  %85 = ptrtoint ptr %bCSourceID.i to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %bCSourceID.i, align 1
  %conv67.i = zext i8 %86 to i32
  %call68.i = call fastcc i32 @parse_audio_unit(ptr noundef nonnull %state.i, i32 noundef %conv67.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call68.i)
  %cmp69.i = icmp sgt i32 %call68.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call68.i)
  %cmp72.not.i = icmp eq i32 %call68.i, -22
  %or.cond206.i = or i1 %cmp69.i, %cmp72.not.i
  br i1 %or.cond206.i, label %if.end75.i, label %if.end66.i.snd_usb_mixer_controls.exit.thread_crit_edge

if.end66.i.snd_usb_mixer_controls.exit.thread_crit_edge: ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit.thread

if.end75.i:                                       ; preds = %if.end66.i
  %87 = ptrtoint ptr %type52.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %type52.i, align 4
  %and.i = and i32 %88, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %and.i)
  %cmp78.not.i = icmp eq i32 %and.i, 256
  br i1 %cmp78.not.i, label %if.end75.i.while.cond.backedge.i_crit_edge, label %land.lhs.true80.i

if.end75.i.while.cond.backedge.i_crit_edge:       ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.i

land.lhs.true80.i:                                ; preds = %if.end75.i
  %bmControls.i = getelementptr inbounds %struct.uac2_output_terminal_descriptor, ptr %call220.i, i32 0, i32 8
  %89 = ptrtoint ptr %bmControls.i to i32
  call void @__asan_loadN_noabort(i32 %89, i32 2)
  %90 = load i16, ptr %bmControls.i, align 1
  %91 = and i16 %90, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %91)
  %tobool.i.not.i = icmp eq i16 %91, 0
  br i1 %tobool.i.not.i, label %land.lhs.true80.i.while.cond.backedge.i_crit_edge, label %land.lhs.true80.i.while.cond.backedge.sink.split.i_crit_edge

land.lhs.true80.i.while.cond.backedge.sink.split.i_crit_edge: ; preds = %land.lhs.true80.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.sink.split.i

land.lhs.true80.i.while.cond.backedge.i_crit_edge: ; preds = %land.lhs.true80.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.i

if.else92.i:                                      ; preds = %if.end17.i
  %bTerminalID94.i = getelementptr inbounds %struct.uac3_output_terminal_descriptor, ptr %call220.i, i32 0, i32 3
  %92 = ptrtoint ptr %bTerminalID94.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %bTerminalID94.i, align 1
  %conv95.i = zext i8 %93 to i32
  call void @_set_bit(i32 noundef %conv95.i, ptr noundef %20) #13
  %94 = ptrtoint ptr %bTerminalID94.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %bTerminalID94.i, align 1
  %conv99.i = zext i8 %95 to i32
  %96 = ptrtoint ptr %oterm47.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %conv99.i, ptr %oterm47.i, align 4
  %wTerminalType102.i = getelementptr inbounds %struct.uac3_output_terminal_descriptor, ptr %call220.i, i32 0, i32 4
  %97 = ptrtoint ptr %wTerminalType102.i to i32
  call void @__asan_loadN_noabort(i32 %97, i32 2)
  %98 = load i16, ptr %wTerminalType102.i, align 1
  %99 = call i16 @llvm.bswap.i16(i16 %98) #13
  %conv103.i = zext i16 %99 to i32
  %100 = ptrtoint ptr %type52.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %conv103.i, ptr %type52.i, align 4
  %wTerminalDescrStr.i = getelementptr inbounds %struct.uac3_output_terminal_descriptor, ptr %call220.i, i32 0, i32 11
  %101 = ptrtoint ptr %wTerminalDescrStr.i to i32
  call void @__asan_loadN_noabort(i32 %101, i32 2)
  %102 = load i16, ptr %wTerminalDescrStr.i, align 1
  %103 = call i16 @llvm.bswap.i16(i16 %102) #13
  %conv106.i = zext i16 %103 to i32
  %104 = ptrtoint ptr %name56.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %conv106.i, ptr %name56.i, align 4
  %bSourceID109.i = getelementptr inbounds %struct.uac3_output_terminal_descriptor, ptr %call220.i, i32 0, i32 6
  %105 = ptrtoint ptr %bSourceID109.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %bSourceID109.i, align 1
  %conv110.i = zext i8 %106 to i32
  %call111.i = call fastcc i32 @parse_audio_unit(ptr noundef nonnull %state.i, i32 noundef %conv110.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call111.i)
  %cmp112.i = icmp sgt i32 %call111.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call111.i)
  %cmp115.not.i = icmp eq i32 %call111.i, -22
  %or.cond207.i = or i1 %cmp112.i, %cmp115.not.i
  br i1 %or.cond207.i, label %if.end118.i, label %if.else92.i.snd_usb_mixer_controls.exit.thread_crit_edge

if.else92.i.snd_usb_mixer_controls.exit.thread_crit_edge: ; preds = %if.else92.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit.thread

if.end118.i:                                      ; preds = %if.else92.i
  %bCSourceID119.i = getelementptr inbounds %struct.uac3_output_terminal_descriptor, ptr %call220.i, i32 0, i32 7
  %107 = ptrtoint ptr %bCSourceID119.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %bCSourceID119.i, align 1
  %conv120.i = zext i8 %108 to i32
  %call121.i = call fastcc i32 @parse_audio_unit(ptr noundef nonnull %state.i, i32 noundef %conv120.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call121.i)
  %cmp122.i = icmp sgt i32 %call121.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call121.i)
  %cmp125.not.i = icmp eq i32 %call121.i, -22
  %or.cond208.i = or i1 %cmp122.i, %cmp125.not.i
  br i1 %or.cond208.i, label %if.end128.i, label %if.end118.i.snd_usb_mixer_controls.exit.thread_crit_edge

if.end118.i.snd_usb_mixer_controls.exit.thread_crit_edge: ; preds = %if.end118.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit.thread

if.end128.i:                                      ; preds = %if.end118.i
  %109 = ptrtoint ptr %type52.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %type52.i, align 4
  %and131.i = and i32 %110, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %and131.i)
  %cmp132.not.i = icmp eq i32 %and131.i, 256
  br i1 %cmp132.not.i, label %if.end128.i.while.cond.backedge.i_crit_edge, label %land.lhs.true134.i

if.end128.i.while.cond.backedge.i_crit_edge:      ; preds = %if.end128.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.i

land.lhs.true134.i:                               ; preds = %if.end128.i
  %bmControls135.i = getelementptr inbounds %struct.uac3_output_terminal_descriptor, ptr %call220.i, i32 0, i32 8
  %111 = ptrtoint ptr %bmControls135.i to i32
  call void @__asan_loadN_noabort(i32 %111, i32 4)
  %112 = load i32, ptr %bmControls135.i, align 1
  %113 = and i32 %112, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %113)
  %tobool.i209.not.i = icmp eq i32 %113, 0
  br i1 %tobool.i209.not.i, label %land.lhs.true134.i.while.cond.backedge.i_crit_edge, label %land.lhs.true134.i.while.cond.backedge.sink.split.i_crit_edge

land.lhs.true134.i.while.cond.backedge.sink.split.i_crit_edge: ; preds = %land.lhs.true134.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.sink.split.i

land.lhs.true134.i.while.cond.backedge.i_crit_edge: ; preds = %land.lhs.true134.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge.i

while.cond.backedge.sink.split.i:                 ; preds = %land.lhs.true134.i.while.cond.backedge.sink.split.i_crit_edge, %land.lhs.true80.i.while.cond.backedge.sink.split.i_crit_edge
  %114 = ptrtoint ptr %mixer2.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %mixer2.i, align 4
  %116 = ptrtoint ptr %map86.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %map86.i, align 4
  call fastcc void @build_connector_control(ptr noundef %115, ptr noundef %117, ptr noundef %oterm47.i, i1 noundef zeroext false) #13
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %while.cond.backedge.sink.split.i, %land.lhs.true134.i.while.cond.backedge.i_crit_edge, %if.end128.i.while.cond.backedge.i_crit_edge, %land.lhs.true80.i.while.cond.backedge.i_crit_edge, %if.end75.i.while.cond.backedge.i_crit_edge, %if.then20.i.while.cond.backedge.i_crit_edge, %while.body.i.while.cond.backedge.i_crit_edge
  %118 = ptrtoint ptr %hostif to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %hostif, align 4
  %extra11.i = getelementptr inbounds %struct.usb_host_interface, ptr %119, i32 0, i32 2
  %120 = ptrtoint ptr %extra11.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %extra11.i, align 4
  %extralen13.i = getelementptr inbounds %struct.usb_host_interface, ptr %119, i32 0, i32 1
  %122 = ptrtoint ptr %extralen13.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %extralen13.i, align 4
  %call.i = call ptr @snd_usb_find_csint_desc(ptr noundef %121, i32 noundef %123, ptr noundef nonnull %call220.i, i8 noundef zeroext 3) #13
  %cmp14.not.i = icmp eq ptr %call.i, null
  br i1 %cmp14.not.i, label %while.cond.backedge.i.snd_usb_mixer_controls.exit_crit_edge, label %while.cond.backedge.i.while.body.i_crit_edge

while.cond.backedge.i.while.body.i_crit_edge:     ; preds = %while.cond.backedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i

while.cond.backedge.i.snd_usb_mixer_controls.exit_crit_edge: ; preds = %while.cond.backedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_controls.exit

snd_usb_mixer_controls.exit.thread:               ; preds = %if.end118.i.snd_usb_mixer_controls.exit.thread_crit_edge, %if.else92.i.snd_usb_mixer_controls.exit.thread_crit_edge, %if.end66.i.snd_usb_mixer_controls.exit.thread_crit_edge, %if.then39.i.snd_usb_mixer_controls.exit.thread_crit_edge, %if.then20.i.snd_usb_mixer_controls.exit.thread_crit_edge
  %retval.5.i.ph = phi i32 [ %call29.i, %if.then20.i.snd_usb_mixer_controls.exit.thread_crit_edge ], [ %call68.i, %if.end66.i.snd_usb_mixer_controls.exit.thread_crit_edge ], [ %call59.i, %if.then39.i.snd_usb_mixer_controls.exit.thread_crit_edge ], [ %call121.i, %if.end118.i.snd_usb_mixer_controls.exit.thread_crit_edge ], [ %call111.i, %if.else92.i.snd_usb_mixer_controls.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 108, ptr nonnull %state.i) #13
  br label %_error

snd_usb_mixer_controls.exit:                      ; preds = %while.cond.backedge.i.snd_usb_mixer_controls.exit_crit_edge, %for.end.i.snd_usb_mixer_controls.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 108, ptr nonnull %state.i) #13
  br label %if.end31

if.end31:                                         ; preds = %snd_usb_mixer_controls.exit, %if.then20.if.end31_crit_edge
  %124 = ptrtoint ptr %hostif to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %hostif, align 4
  %bNumEndpoints.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %125, i32 0, i32 4
  %126 = ptrtoint ptr %bNumEndpoints.i to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %bNumEndpoints.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %127)
  %cmp.i = icmp eq i8 %127, 0
  br i1 %cmp.i, label %if.end31.if.end36_crit_edge, label %if.end.i

if.end31.if.end36_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.end.i:                                         ; preds = %if.end31
  %endpoint.i = getelementptr inbounds %struct.usb_host_interface, ptr %125, i32 0, i32 3
  %128 = ptrtoint ptr %endpoint.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %endpoint.i, align 4
  %bEndpointAddress.i.i = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %129, i32 0, i32 2
  %130 = ptrtoint ptr %bEndpointAddress.i.i to i32
  call void @__asan_load1_noabort(i32 %130)
  %131 = load i8, ptr %bEndpointAddress.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %131)
  %tobool.not.i = icmp sgt i8 %131, -1
  br i1 %tobool.not.i, label %if.end.i.if.end36_crit_edge, label %lor.lhs.false.i

if.end.i.if.end36_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

lor.lhs.false.i:                                  ; preds = %if.end.i
  %bmAttributes.i.i = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %129, i32 0, i32 3
  %132 = ptrtoint ptr %bmAttributes.i.i to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %bmAttributes.i.i, align 1
  %134 = and i8 %133, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %134)
  %cmp.i45.not.i = icmp eq i8 %134, 3
  br i1 %cmp.i45.not.i, label %if.end7.i, label %lor.lhs.false.i.if.end36_crit_edge

lor.lhs.false.i.if.end36_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %135 = and i8 %131, 15
  %and.i.i = zext i8 %135 to i32
  %wMaxPacketSize.i = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %129, i32 0, i32 4
  %136 = ptrtoint ptr %wMaxPacketSize.i to i32
  call void @__asan_loadN_noabort(i32 %136, i32 2)
  %137 = load i16, ptr %wMaxPacketSize.i, align 1
  %138 = call i16 @llvm.bswap.i16(i16 %137) #13
  %conv9.i = zext i16 %138 to i32
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %conv9.i, i32 noundef 3264) #18
  %tobool11.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool11.not.i, label %if.end7.i._error_crit_edge, label %if.end13.i

if.end7.i._error_crit_edge:                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %_error

if.end13.i:                                       ; preds = %if.end7.i
  %call14.i = call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef 3264) #13
  %urb.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 4
  %139 = ptrtoint ptr %urb.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store ptr %call14.i, ptr %urb.i, align 4
  %tobool16.not.i = icmp eq ptr %call14.i, null
  br i1 %tobool16.not.i, label %if.then17.i, label %if.end18.i

if.then17.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kfree(ptr noundef nonnull %call9.i.i) #13
  br label %_error

if.end18.i:                                       ; preds = %if.end13.i
  %140 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %call7.i.i, align 8
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %141, i32 0, i32 1
  %142 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %dev.i, align 4
  %144 = ptrtoint ptr %143 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %143, align 8
  %shl.i.i = shl i32 %145, 8
  %shl1.i.i = shl nuw nsw i32 %and.i.i, 15
  %or.i.i = or i32 %shl1.i.i, %shl.i.i
  %or23.i = or i32 %or.i.i, 1073741952
  %bInterval.i = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %129, i32 0, i32 5
  %146 = ptrtoint ptr %bInterval.i to i32
  call void @__asan_load1_noabort(i32 %146)
  %147 = load i8, ptr %bInterval.i, align 1
  %conv24.i91 = zext i8 %147 to i32
  %dev1.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 8
  %148 = ptrtoint ptr %dev1.i.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store ptr %143, ptr %dev1.i.i, align 4
  %pipe2.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 10
  %149 = ptrtoint ptr %pipe2.i.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %or23.i, ptr %pipe2.i.i, align 4
  %transfer_buffer3.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 14
  %150 = ptrtoint ptr %transfer_buffer3.i.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr %call9.i.i, ptr %transfer_buffer3.i.i, align 4
  %transfer_buffer_length.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 19
  %151 = ptrtoint ptr %transfer_buffer_length.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %conv9.i, ptr %transfer_buffer_length.i.i, align 4
  %complete.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 28
  %152 = ptrtoint ptr %complete.i.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store ptr @snd_usb_mixer_interrupt, ptr %complete.i.i, align 4
  %context4.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 27
  %153 = ptrtoint ptr %context4.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store ptr %call7.i.i, ptr %context4.i.i, align 4
  %speed.i.i = getelementptr inbounds %struct.usb_device, ptr %143, i32 0, i32 4
  %154 = ptrtoint ptr %speed.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %speed.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %155)
  %cmp.i47.i = icmp eq i32 %155, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %155)
  %cmp6.i.i = icmp ugt i32 %155, 4
  %or.cond.i.i = or i1 %cmp.i47.i, %cmp6.i.i
  br i1 %or.cond.i.i, label %if.then.i49.i, label %if.end18.i.usb_fill_int_urb.exit.i_crit_edge

if.end18.i.usb_fill_int_urb.exit.i_crit_edge:     ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %usb_fill_int_urb.exit.i

if.then.i49.i:                                    ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #15
  %156 = call i32 @llvm.smax.i32(i32 %conv24.i91, i32 1) #13
  %157 = call i32 @llvm.umin.i32(i32 %156, i32 16) #13
  %sub.i.i = add nsw i32 %157, -1
  %shl.i48.i = shl nuw nsw i32 1, %sub.i.i
  br label %usb_fill_int_urb.exit.i

usb_fill_int_urb.exit.i:                          ; preds = %if.then.i49.i, %if.end18.i.usb_fill_int_urb.exit.i_crit_edge
  %interval.sink.i.i = phi i32 [ %shl.i48.i, %if.then.i49.i ], [ %conv24.i91, %if.end18.i.usb_fill_int_urb.exit.i_crit_edge ]
  %158 = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 25
  %159 = ptrtoint ptr %158 to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 %interval.sink.i.i, ptr %158, align 4
  %start_frame.i.i = getelementptr inbounds %struct.urb, ptr %call14.i, i32 0, i32 23
  %160 = ptrtoint ptr %start_frame.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 -1, ptr %start_frame.i.i, align 4
  %161 = ptrtoint ptr %urb.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %urb.i, align 4
  %call26.i = call i32 @usb_submit_urb(ptr noundef %162, i32 noundef 3264) #13
  br label %if.end36

if.end36:                                         ; preds = %usb_fill_int_urb.exit.i, %lor.lhs.false.i.if.end36_crit_edge, %if.end.i.if.end36_crit_edge, %if.end31.if.end36_crit_edge
  %call37 = call i32 @snd_usb_mixer_apply_create_quirk(ptr noundef nonnull %call7.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %cmp38 = icmp slt i32 %call37, 0
  br i1 %cmp38, label %if.end36._error_crit_edge, label %if.end41

if.end36._error_crit_edge:                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #15
  br label %_error

if.end41:                                         ; preds = %if.end36
  %163 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %card, align 4
  %call43 = call i32 @snd_device_new(ptr noundef %164, i32 noundef 3, ptr noundef nonnull %call7.i.i, ptr noundef nonnull @snd_usb_create_mixer.dev_ops) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %cmp44 = icmp slt i32 %call43, 0
  br i1 %cmp44, label %if.end41._error_crit_edge, label %if.end47

if.end41._error_crit_edge:                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  br label %_error

if.end47:                                         ; preds = %if.end41
  %mixer_list = getelementptr inbounds %struct.snd_usb_audio, ptr %chip, i32 0, i32 23
  %165 = ptrtoint ptr %mixer_list to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile ptr, ptr %mixer_list, align 4
  %cmp.i92.not = icmp eq ptr %166, %mixer_list
  br i1 %cmp.i92.not, label %if.then50, label %if.end47.if.end53_crit_edge

if.end47.if.end53_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end53

if.then50:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #15
  %167 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %card, align 4
  %call.i94 = call i32 @snd_card_rw_proc_new(ptr noundef %168, ptr noundef nonnull @.str.12, ptr noundef %chip, ptr noundef nonnull @snd_usb_mixer_proc_read, ptr noundef null) #13
  br label %if.end53

if.end53:                                         ; preds = %if.then50, %if.end47.if.end53_crit_edge
  %list = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 2
  %169 = ptrtoint ptr %mixer_list to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %mixer_list, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %mixer_list, ptr noundef %170) #13
  br i1 %call.i.i, label %if.end.i.i95, label %if.end53.cleanup_crit_edge

if.end53.cleanup_crit_edge:                       ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i95:                                     ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %170, i32 0, i32 1
  %171 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr %list, ptr %prev1.i.i, align 4
  %172 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %172)
  store ptr %170, ptr %list, align 8
  %prev3.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %call7.i.i, i32 0, i32 2, i32 1
  %173 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store ptr %mixer_list, ptr %prev3.i.i, align 4
  %174 = ptrtoint ptr %mixer_list to i32
  call void @__asan_store4_noabort(i32 %174)
  store volatile ptr %list, ptr %mixer_list, align 4
  br label %cleanup

_error:                                           ; preds = %if.end41._error_crit_edge, %if.end36._error_crit_edge, %if.then17.i, %if.end7.i._error_crit_edge, %snd_usb_mixer_controls.exit.thread, %if.then20._error_crit_edge
  %err.0 = phi i32 [ %call21, %if.then20._error_crit_edge ], [ %call37, %if.end36._error_crit_edge ], [ %call43, %if.end41._error_crit_edge ], [ %retval.5.i.ph, %snd_usb_mixer_controls.exit.thread ], [ -12, %if.then17.i ], [ -12, %if.end7.i._error_crit_edge ]
  call fastcc void @snd_usb_mixer_free(ptr noundef nonnull %call7.i.i)
  br label %cleanup

cleanup:                                          ; preds = %_error, %if.end.i.i95, %if.end53.cleanup_crit_edge, %if.then8, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %_error ], [ -12, %if.then8 ], [ -12, %entry.cleanup_crit_edge ], [ 0, %if.end53.cleanup_crit_edge ], [ 0, %if.end.i.i95 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @snd_usb_mixer_dev_free(ptr nocapture noundef readonly %device) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %device_data = getelementptr inbounds %struct.snd_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %device_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device_data, align 4
  tail call fastcc void @snd_usb_mixer_free(ptr noundef %1)
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @usb_ifnum_to_if(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @snd_usb_mixer_controls_badd(ptr noundef %mixer, i32 noundef %ctrlif) unnamed_addr #0 align 64 {
entry:
  %iterm = alloca %struct.usb_audio_term, align 4
  %oterm = alloca %struct.usb_audio_term, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mixer, align 4
  %dev1 = getelementptr inbounds %struct.snd_usb_audio, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %badd_profile3 = getelementptr inbounds %struct.snd_usb_audio, ptr %1, i32 0, i32 17
  %4 = ptrtoint ptr %badd_profile3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %badd_profile3, align 4
  %call = tail call ptr @usb_ifnum_to_if(ptr noundef %3, i32 noundef %ctrlif) #13
  %intf_assoc = getelementptr inbounds %struct.usb_interface, ptr %call, i32 0, i32 3
  %6 = ptrtoint ptr %intf_assoc to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %intf_assoc, align 4
  %bInterfaceCount = getelementptr inbounds %struct.usb_interface_assoc_descriptor, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %bInterfaceCount to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %bInterfaceCount, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp185.not = icmp eq i8 %9, 0
  br i1 %cmp185.not, label %entry.do.body42_crit_edge, label %for.body.lr.ph

entry.do.body42_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body42

for.body.lr.ph:                                   ; preds = %entry
  %bFirstInterface = getelementptr inbounds %struct.usb_interface_assoc_descriptor, ptr %7, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0188 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %c_chmask.0187 = phi i32 [ 0, %for.body.lr.ph ], [ %c_chmask.2, %for.inc.for.body_crit_edge ]
  %p_chmask.0186 = phi i32 [ 0, %for.body.lr.ph ], [ %p_chmask.2, %for.inc.for.body_crit_edge ]
  %10 = ptrtoint ptr %bFirstInterface to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bFirstInterface, align 1
  %conv5 = zext i8 %11 to i32
  %add = add nuw i32 %i.0188, %conv5
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %ctrlif)
  %cmp6 = icmp eq i32 %add, %ctrlif
  br i1 %cmp6, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end:                                           ; preds = %for.body
  %call8 = tail call ptr @usb_ifnum_to_if(ptr noundef %3, i32 noundef %add) #13
  %tobool.not = icmp eq ptr %call8, null
  br i1 %tobool.not, label %if.end.for.inc_crit_edge, label %if.end10

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end10:                                         ; preds = %if.end
  %num_altsetting = getelementptr inbounds %struct.usb_interface, ptr %call8, i32 0, i32 2
  %12 = ptrtoint ptr %num_altsetting to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_altsetting, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %13)
  %cmp11 = icmp slt i32 %13, 2
  br i1 %cmp11, label %if.end10.cleanup111_crit_edge, label %if.end14

if.end10.cleanup111_crit_edge:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup111

if.end14:                                         ; preds = %if.end10
  %14 = ptrtoint ptr %call8 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %call8, align 8
  %bNumEndpoints = getelementptr %struct.usb_host_interface, ptr %15, i32 1, i32 0, i32 4
  %16 = ptrtoint ptr %bNumEndpoints to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %bNumEndpoints, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %cmp16 = icmp eq i8 %17, 0
  br i1 %cmp16, label %if.end14.cleanup111_crit_edge, label %if.end19

if.end14.cleanup111_crit_edge:                    ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup111

if.end19:                                         ; preds = %if.end14
  %endpoint = getelementptr %struct.usb_host_interface, ptr %15, i32 1, i32 3
  %18 = ptrtoint ptr %endpoint to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %endpoint, align 4
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %bEndpointAddress to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %bEndpointAddress, align 2
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %19, i32 0, i32 4
  %22 = ptrtoint ptr %wMaxPacketSize to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %wMaxPacketSize, align 4
  %24 = tail call i16 @llvm.bswap.i16(i16 %23)
  %25 = zext i16 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.291)
  switch i16 %24, label %do.end [
    i16 96, label %if.end19.sw.epilog_crit_edge
    i16 98, label %if.end19.sw.epilog_crit_edge204
    i16 144, label %if.end19.sw.epilog_crit_edge205
    i16 147, label %if.end19.sw.epilog_crit_edge206
    i16 192, label %if.end19.sw.bb31_crit_edge
    i16 196, label %if.end19.sw.bb31_crit_edge207
    i16 288, label %if.end19.sw.bb31_crit_edge208
    i16 294, label %if.end19.sw.bb31_crit_edge209
  ]

if.end19.sw.bb31_crit_edge209:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb31

if.end19.sw.bb31_crit_edge208:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb31

if.end19.sw.bb31_crit_edge207:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb31

if.end19.sw.bb31_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb31

if.end19.sw.epilog_crit_edge206:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end19.sw.epilog_crit_edge205:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end19.sw.epilog_crit_edge204:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end19.sw.epilog_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

do.end:                                           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %conv27 = zext i16 %24 to i32
  %26 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mixer, align 4
  %dev29 = getelementptr inbounds %struct.snd_usb_audio, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %dev29 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev29, align 4
  %dev30 = getelementptr inbounds %struct.usb_device, ptr %29, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev30, ptr noundef nonnull @.str.60, i32 noundef %conv27) #19
  br label %cleanup111

sw.bb31:                                          ; preds = %if.end19.sw.bb31_crit_edge, %if.end19.sw.bb31_crit_edge207, %if.end19.sw.bb31_crit_edge208, %if.end19.sw.bb31_crit_edge209
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb31, %if.end19.sw.epilog_crit_edge, %if.end19.sw.epilog_crit_edge204, %if.end19.sw.epilog_crit_edge205, %if.end19.sw.epilog_crit_edge206
  %chmask.0 = phi i32 [ 3, %sw.bb31 ], [ 1, %if.end19.sw.epilog_crit_edge ], [ 1, %if.end19.sw.epilog_crit_edge204 ], [ 1, %if.end19.sw.epilog_crit_edge205 ], [ 1, %if.end19.sw.epilog_crit_edge206 ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %21)
  %tobool32.not = icmp sgt i8 %21, -1
  %chmask.0.p_chmask.0 = select i1 %tobool32.not, i32 %chmask.0, i32 %p_chmask.0186
  %c_chmask.0.chmask.0 = select i1 %tobool32.not, i32 %c_chmask.0187, i32 %chmask.0
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %p_chmask.2 = phi i32 [ %chmask.0.p_chmask.0, %sw.epilog ], [ %p_chmask.0186, %for.body.for.inc_crit_edge ], [ %p_chmask.0186, %if.end.for.inc_crit_edge ]
  %c_chmask.2 = phi i32 [ %c_chmask.0.chmask.0, %sw.epilog ], [ %c_chmask.0187, %for.body.for.inc_crit_edge ], [ %c_chmask.0187, %if.end.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.0188, 1
  %30 = ptrtoint ptr %bInterfaceCount to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %bInterfaceCount, align 1
  %conv = zext i8 %31 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.do.body42_crit_edge

for.inc.do.body42_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body42

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

do.body42:                                        ; preds = %for.inc.do.body42_crit_edge, %entry.do.body42_crit_edge
  %p_chmask.0.lcssa = phi i32 [ 0, %entry.do.body42_crit_edge ], [ %p_chmask.2, %for.inc.do.body42_crit_edge ]
  %c_chmask.0.lcssa = phi i32 [ 0, %entry.do.body42_crit_edge ], [ %c_chmask.2, %for.inc.do.body42_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_controls_badd.__UNIQUE_ID_ddebug251, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_controls_badd, %if.then47)) #13
          to label %for.cond54 [label %if.then47], !srcloc !716

if.then47:                                        ; preds = %do.body42
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mixer, align 4
  %dev49 = getelementptr inbounds %struct.snd_usb_audio, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %dev49 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev49, align 4
  %dev50 = getelementptr inbounds %struct.usb_device, ptr %35, i32 0, i32 15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_controls_badd.__UNIQUE_ID_ddebug251, ptr noundef %dev50, ptr noundef nonnull @.str.62, i32 noundef %5, i32 noundef %c_chmask.0.lcssa, i32 noundef %p_chmask.0.lcssa) #13
  br label %for.cond54

for.cond54:                                       ; preds = %for.cond54.for.cond54_crit_edge, %if.then47, %do.body42
  %map.0 = phi ptr [ %incdec.ptr, %for.cond54.for.cond54_crit_edge ], [ @uac3_badd_usbmix_ctl_maps, %do.body42 ], [ @uac3_badd_usbmix_ctl_maps, %if.then47 ]
  %36 = ptrtoint ptr %map.0 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %map.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool55.not = icmp eq i32 %37, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %5)
  %cmp58 = icmp eq i32 %37, %5
  %or.cond = select i1 %tobool55.not, i1 true, i1 %cmp58
  %incdec.ptr = getelementptr %struct.usbmix_ctl_map, ptr %map.0, i32 1
  br i1 %or.cond, label %for.end63, label %for.cond54.for.cond54_crit_edge

for.cond54.for.cond54_crit_edge:                  ; preds = %for.cond54
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond54

for.end63:                                        ; preds = %for.cond54
  br i1 %tobool55.not, label %for.end63.cleanup111_crit_edge, label %for.body70.preheader

for.end63.cleanup111_crit_edge:                   ; preds = %for.end63
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup111

for.body70.preheader:                             ; preds = %for.end63
  %switch.tableidx = add i32 %5, -32
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %switch.tableidx)
  %38 = icmp ult i32 %switch.tableidx, 7
  br i1 %38, label %switch.lookup, label %for.body70.preheader.cleanup111_crit_edge

for.body70.preheader.cleanup111_crit_edge:        ; preds = %for.body70.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup111

switch.lookup:                                    ; preds = %for.body70.preheader
  %switch.gep = getelementptr inbounds [7 x ptr], ptr @switch.table.snd_usb_mixer_controls_badd, i32 0, i32 %switch.tableidx
  %39 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %39)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %switch.gep202 = getelementptr inbounds [7 x ptr], ptr @switch.table.snd_usb_mixer_controls_badd.288, i32 0, i32 %switch.tableidx
  %40 = ptrtoint ptr %switch.gep202 to i32
  call void @__asan_load4_noabort(i32 %40)
  %switch.load203 = load ptr, ptr %switch.gep202, align 4
  %c_chmask1.i = getelementptr inbounds %struct.uac3_badd_profile, ptr %switch.load203, i32 0, i32 2
  %41 = ptrtoint ptr %c_chmask1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %c_chmask1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp.i = icmp slt i32 %42, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %lor.lhs.false.i

land.lhs.true.i:                                  ; preds = %switch.lookup
  %p_chmask2.i = getelementptr inbounds %struct.uac3_badd_profile, ptr %switch.load203, i32 0, i32 3
  %43 = ptrtoint ptr %p_chmask2.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %p_chmask2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp3.i = icmp slt i32 %44, 0
  br i1 %cmp3.i, label %if.then.i, label %if.end8.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %45 = or i32 %c_chmask.0.lcssa, %p_chmask.0.lcssa
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %if.then.i.uac3_badd_func_has_valid_channels.exit_crit_edge, label %if.then.i.if.end84_crit_edge

if.then.i.if.end84_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end84

if.then.i.uac3_badd_func_has_valid_channels.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac3_badd_func_has_valid_channels.exit

if.end8.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %c_chmask.0.lcssa)
  %tobool12.not.i = icmp eq i32 %c_chmask.0.lcssa, 0
  br i1 %tobool12.not.i, label %if.end8.i.uac3_badd_func_has_valid_channels.exit_crit_edge, label %if.end8.i.if.end25.i_crit_edge

if.end8.i.if.end25.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end25.i

if.end8.i.uac3_badd_func_has_valid_channels.exit_crit_edge: ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac3_badd_func_has_valid_channels.exit

lor.lhs.false.i:                                  ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %c_chmask.0.lcssa)
  %cmp17.not.i = icmp eq i32 %42, %c_chmask.0.lcssa
  br i1 %cmp17.not.i, label %lor.lhs.false.i.if.end25.i_crit_edge, label %lor.lhs.false.i.uac3_badd_func_has_valid_channels.exit_crit_edge

lor.lhs.false.i.uac3_badd_func_has_valid_channels.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac3_badd_func_has_valid_channels.exit

lor.lhs.false.i.if.end25.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end25.i

if.end25.i:                                       ; preds = %lor.lhs.false.i.if.end25.i_crit_edge, %if.end8.i.if.end25.i_crit_edge
  %p_chmask26.i = getelementptr inbounds %struct.uac3_badd_profile, ptr %switch.load203, i32 0, i32 3
  %47 = ptrtoint ptr %p_chmask26.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %p_chmask26.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp27.i = icmp slt i32 %48, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %p_chmask.0.lcssa)
  %tobool29.not.i = icmp eq i32 %p_chmask.0.lcssa, 0
  %or.cond63.i = and i1 %tobool29.not.i, %cmp27.i
  %or.cond63.not.i = xor i1 %or.cond63.i, true
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %p_chmask.0.lcssa)
  %cmp35.not.i = icmp eq i32 %48, %p_chmask.0.lcssa
  %or.cond64.i = or i1 %cmp27.i, %cmp35.not.i
  %or.cond.i = select i1 %or.cond63.not.i, i1 %or.cond64.i, i1 false
  br i1 %or.cond.i, label %if.end25.i.if.end84_crit_edge, label %if.end25.i.uac3_badd_func_has_valid_channels.exit_crit_edge

if.end25.i.uac3_badd_func_has_valid_channels.exit_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac3_badd_func_has_valid_channels.exit

if.end25.i.if.end84_crit_edge:                    ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end84

uac3_badd_func_has_valid_channels.exit:           ; preds = %if.end25.i.uac3_badd_func_has_valid_channels.exit_crit_edge, %lor.lhs.false.i.uac3_badd_func_has_valid_channels.exit_crit_edge, %if.end8.i.uac3_badd_func_has_valid_channels.exit_crit_edge, %if.then.i.uac3_badd_func_has_valid_channels.exit_crit_edge
  %.str.84.sink.i = phi ptr [ @.str.78, %if.then.i.uac3_badd_func_has_valid_channels.exit_crit_edge ], [ @.str.81, %lor.lhs.false.i.uac3_badd_func_has_valid_channels.exit_crit_edge ], [ @.str.81, %if.end8.i.uac3_badd_func_has_valid_channels.exit_crit_edge ], [ @.str.84, %if.end25.i.uac3_badd_func_has_valid_channels.exit_crit_edge ]
  %49 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %mixer, align 4
  %dev40.i = getelementptr inbounds %struct.snd_usb_audio, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %dev40.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dev40.i, align 4
  %dev41.i = getelementptr inbounds %struct.usb_device, ptr %52, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev41.i, ptr noundef nonnull %.str.84.sink.i, ptr noundef nonnull %switch.load) #19
  br label %cleanup111

if.end84:                                         ; preds = %if.end25.i.if.end84_crit_edge, %if.then.i.if.end84_crit_edge
  %st_chmask85 = getelementptr inbounds %struct.uac3_badd_profile, ptr %switch.load203, i32 0, i32 4
  %53 = ptrtoint ptr %st_chmask85 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %st_chmask85, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %p_chmask.0.lcssa)
  %tobool86.not = icmp eq i32 %p_chmask.0.lcssa, 0
  br i1 %tobool86.not, label %if.end84.if.end90_crit_edge, label %if.then87

if.end84.if.end90_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end90

if.then87:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #15
  %map88 = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0, i32 0, i32 1
  %55 = ptrtoint ptr %map88 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %map88, align 4
  tail call fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef %56, i32 noundef 0, i32 noundef 1, ptr noundef null, ptr noundef null, i32 noundef 2, i32 noundef 0, i32 noundef 0) #13
  %57 = ptrtoint ptr %map88 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %map88, align 4
  tail call fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef %58, i32 noundef %p_chmask.0.lcssa, i32 noundef 2, ptr noundef null, ptr noundef null, i32 noundef 2, i32 noundef 0, i32 noundef 0) #13
  br label %if.end90

if.end90:                                         ; preds = %if.then87, %if.end84.if.end90_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %c_chmask.0.lcssa)
  %tobool91.not = icmp eq i32 %c_chmask.0.lcssa, 0
  br i1 %tobool91.not, label %if.end90.if.end95_crit_edge, label %if.then92

if.end90.if.end95_crit_edge:                      ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end95

if.then92:                                        ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #15
  %map93 = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0, i32 0, i32 1
  %59 = ptrtoint ptr %map93 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %map93, align 4
  tail call fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef %60, i32 noundef 0, i32 noundef 1, ptr noundef null, ptr noundef null, i32 noundef 5, i32 noundef 0, i32 noundef 0) #13
  %61 = ptrtoint ptr %map93 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %map93, align 4
  tail call fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef %62, i32 noundef %c_chmask.0.lcssa, i32 noundef 2, ptr noundef null, ptr noundef null, i32 noundef 5, i32 noundef 0, i32 noundef 0) #13
  br label %if.end95

if.end95:                                         ; preds = %if.then92, %if.end90.if.end95_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool96.not = icmp eq i32 %54, 0
  br i1 %tobool96.not, label %if.end95.if.end100_crit_edge, label %if.then97

if.end95.if.end100_crit_edge:                     ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

if.then97:                                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #15
  %map98 = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0, i32 0, i32 1
  %63 = ptrtoint ptr %map98 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %map98, align 4
  tail call fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef %64, i32 noundef 0, i32 noundef 1, ptr noundef null, ptr noundef null, i32 noundef 7, i32 noundef 0, i32 noundef 0) #13
  %65 = ptrtoint ptr %map98 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %map98, align 4
  tail call fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef %66, i32 noundef 1, i32 noundef 2, ptr noundef null, ptr noundef null, i32 noundef 7, i32 noundef 0, i32 noundef 0) #13
  br label %if.end100

if.end100:                                        ; preds = %if.then97, %if.end95.if.end100_crit_edge
  %67 = ptrtoint ptr %switch.load203 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %switch.load203, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 37, i32 %68)
  %cmp102 = icmp eq i32 %68, 37
  br i1 %cmp102, label %if.then104, label %if.end100.cleanup111_crit_edge

if.end100.cleanup111_crit_edge:                   ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup111

if.then104:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %iterm) #13
  %69 = getelementptr inbounds %struct.usb_audio_term, ptr %iterm, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %oterm) #13
  %70 = getelementptr inbounds %struct.usb_audio_term, ptr %oterm, i32 0, i32 1
  %71 = getelementptr inbounds i8, ptr %iterm, i32 8
  %72 = call ptr @memset(ptr %71, i32 0, i32 12)
  %73 = ptrtoint ptr %iterm to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 4, ptr %iterm, align 4
  %74 = ptrtoint ptr %69 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 1026, ptr %69, align 4
  %map106 = getelementptr inbounds %struct.usbmix_ctl_map, ptr %map.0, i32 0, i32 1
  %75 = ptrtoint ptr %map106 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %map106, align 4
  call fastcc void @build_connector_control(ptr noundef %mixer, ptr noundef %76, ptr noundef nonnull %iterm, i1 noundef zeroext true)
  %77 = getelementptr inbounds i8, ptr %oterm, i32 8
  %78 = call ptr @memset(ptr %77, i32 0, i32 12)
  %79 = ptrtoint ptr %oterm to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 3, ptr %oterm, align 4
  %80 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 1026, ptr %70, align 4
  %81 = ptrtoint ptr %map106 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %map106, align 4
  call fastcc void @build_connector_control(ptr noundef %mixer, ptr noundef %82, ptr noundef nonnull %oterm, i1 noundef zeroext false)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %oterm) #13
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %iterm) #13
  br label %cleanup111

cleanup111:                                       ; preds = %if.then104, %if.end100.cleanup111_crit_edge, %uac3_badd_func_has_valid_channels.exit, %for.body70.preheader.cleanup111_crit_edge, %for.end63.cleanup111_crit_edge, %do.end, %if.end14.cleanup111_crit_edge, %if.end10.cleanup111_crit_edge
  %retval.2 = phi i32 [ -22, %for.end63.cleanup111_crit_edge ], [ -22, %uac3_badd_func_has_valid_channels.exit ], [ 0, %if.then104 ], [ 0, %if.end100.cleanup111_crit_edge ], [ -22, %do.end ], [ -22, %for.body70.preheader.cleanup111_crit_edge ], [ -22, %if.end10.cleanup111_crit_edge ], [ -22, %if.end14.cleanup111_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_usb_mixer_apply_create_quirk(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_device_new(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_usb_mixer_proc_read(ptr nocapture noundef readonly %entry1, ptr noundef %buffer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_info_entry, ptr %entry1, i32 0, i32 7
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %mixer_list = getelementptr inbounds %struct.snd_usb_audio, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %mixer_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn58 = load ptr, ptr %mixer_list, align 4
  %cmp.not59 = icmp eq ptr %.pn58, %mixer_list
  br i1 %cmp.not59, label %entry.for.end31_crit_edge, label %for.body.lr.ph

entry.for.end31_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end31

for.body.lr.ph:                                   ; preds = %entry
  %usb_id = getelementptr inbounds %struct.snd_usb_audio, ptr %1, i32 0, i32 4
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %1, i32 0, i32 2
  br label %for.body

for.cond.loopexit:                                ; preds = %for.inc23
  %3 = ptrtoint ptr %.pn60 to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn = load ptr, ptr %.pn60, align 4
  %cmp.not = icmp eq ptr %.pn, %mixer_list
  br i1 %cmp.not, label %for.cond.loopexit.for.end31_crit_edge, label %for.cond.loopexit.for.body_crit_edge

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.cond.loopexit.for.end31_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end31

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %for.body.lr.ph
  %.pn60 = phi ptr [ %.pn58, %for.body.lr.ph ], [ %.pn, %for.cond.loopexit.for.body_crit_edge ]
  %4 = ptrtoint ptr %buffer to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buffer, align 4
  %6 = ptrtoint ptr %usb_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usb_id, align 4
  %hostif.i = getelementptr i8, ptr %.pn60, i32 -4
  %8 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %11 to i32
  %ignore_ctl_error = getelementptr i8, ptr %.pn60, i32 8
  %12 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ignore_ctl_error, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %5, ptr noundef nonnull @.str.273, i32 noundef %7, i32 noundef %conv.i, i32 noundef %13) #13
  %14 = ptrtoint ptr %buffer to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %buffer, align 4
  %16 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %card, align 4
  %longname = getelementptr inbounds %struct.snd_card, ptr %17, i32 0, i32 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %15, ptr noundef nonnull @.str.274, ptr noundef %longname) #13
  %id_elems = getelementptr i8, ptr %.pn60, i32 16
  br label %for.body8

for.body8:                                        ; preds = %for.inc23.for.body8_crit_edge, %for.body
  %unitid.057 = phi i32 [ 0, %for.body ], [ %inc, %for.inc23.for.body8_crit_edge ]
  %18 = ptrtoint ptr %id_elems to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %id_elems, align 4
  %arrayidx = getelementptr ptr, ptr %19, i32 %unitid.057
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %list.054 = load ptr, ptr %arrayidx, align 4
  %tobool.not55 = icmp eq ptr %list.054, null
  br i1 %tobool.not55, label %for.body8.for.inc23_crit_edge, label %for.body8.for.body10_crit_edge

for.body8.for.body10_crit_edge:                   ; preds = %for.body8
  br label %for.body10

for.body8.for.inc23_crit_edge:                    ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc23

for.body10:                                       ; preds = %for.inc.for.body10_crit_edge, %for.body8.for.body10_crit_edge
  %list.056 = phi ptr [ %list.0, %for.inc.for.body10_crit_edge ], [ %list.054, %for.body8.for.body10_crit_edge ]
  %21 = ptrtoint ptr %buffer to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %buffer, align 4
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.056, i32 0, i32 3
  %23 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %id, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %22, ptr noundef nonnull @.str.275, i32 noundef %24) #13
  %kctl = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.056, i32 0, i32 2
  %25 = ptrtoint ptr %kctl to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %kctl, align 4
  %tobool12.not = icmp eq ptr %26, null
  br i1 %tobool12.not, label %for.body10.if.end_crit_edge, label %if.then

for.body10.if.end_crit_edge:                      ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #15
  %27 = ptrtoint ptr %buffer to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %buffer, align 4
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %26, i32 0, i32 1, i32 4
  %index = getelementptr inbounds %struct.snd_kcontrol, ptr %26, i32 0, i32 1, i32 5
  %29 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %index, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %28, ptr noundef nonnull @.str.276, ptr noundef %name, i32 noundef %30) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body10.if.end_crit_edge
  %dump = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.056, i32 0, i32 5
  %31 = ptrtoint ptr %dump to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dump, align 4
  %tobool19.not = icmp eq ptr %32, null
  br i1 %tobool19.not, label %if.end.for.inc_crit_edge, label %if.then20

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then20:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %32(ptr noundef %buffer, ptr noundef nonnull %list.056) #13
  br label %for.inc

for.inc:                                          ; preds = %if.then20, %if.end.for.inc_crit_edge
  %next_id_elem = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.056, i32 0, i32 1
  %33 = ptrtoint ptr %next_id_elem to i32
  call void @__asan_load4_noabort(i32 %33)
  %list.0 = load ptr, ptr %next_id_elem, align 4
  %tobool.not = icmp eq ptr %list.0, null
  br i1 %tobool.not, label %for.inc.for.inc23_crit_edge, label %for.inc.for.body10_crit_edge

for.inc.for.body10_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body10

for.inc.for.inc23_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc23

for.inc23:                                        ; preds = %for.inc.for.inc23_crit_edge, %for.body8.for.inc23_crit_edge
  %inc = add nuw nsw i32 %unitid.057, 1
  %exitcond.not = icmp eq i32 %inc, 256
  br i1 %exitcond.not, label %for.cond.loopexit, label %for.inc23.for.body8_crit_edge

for.inc23.for.body8_crit_edge:                    ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body8

for.end31:                                        ; preds = %for.cond.loopexit.for.end31_crit_edge, %entry.for.end31_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_usb_mixer_free(ptr noundef %mixer) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %disconnected.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 15
  %0 = ptrtoint ptr %disconnected.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %disconnected.i, align 4, !range !718
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.snd_usb_mixer_disconnect.exit_crit_edge

entry.snd_usb_mixer_disconnect.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %snd_usb_mixer_disconnect.exit

if.end.i:                                         ; preds = %entry
  %urb.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 4
  %2 = ptrtoint ptr %urb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %urb.i, align 4
  %tobool1.not.i = icmp eq ptr %3, null
  br i1 %tobool1.not.i, label %if.end.i.if.end4.i_crit_edge, label %if.then2.i

if.end.i.if.end4.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @usb_kill_urb(ptr noundef nonnull %3) #13
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then2.i, %if.end.i.if.end4.i_crit_edge
  %rc_urb.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 11
  %4 = ptrtoint ptr %rc_urb.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rc_urb.i, align 4
  %tobool5.not.i = icmp eq ptr %5, null
  br i1 %tobool5.not.i, label %if.end4.i.if.end8.i_crit_edge, label %if.then6.i

if.end4.i.if.end8.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8.i

if.then6.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @usb_kill_urb(ptr noundef nonnull %5) #13
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then6.i, %if.end4.i.if.end8.i_crit_edge
  %private_free.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 17
  %6 = ptrtoint ptr %private_free.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %private_free.i, align 4
  %tobool9.not.i = icmp eq ptr %7, null
  br i1 %tobool9.not.i, label %if.end8.i.if.end12.i_crit_edge, label %if.then10.i

if.end8.i.if.end12.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12.i

if.then10.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %7(ptr noundef %mixer) #13
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then10.i, %if.end8.i.if.end12.i_crit_edge
  %8 = ptrtoint ptr %disconnected.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %disconnected.i, align 4
  br label %snd_usb_mixer_disconnect.exit

snd_usb_mixer_disconnect.exit:                    ; preds = %if.end12.i, %entry.snd_usb_mixer_disconnect.exit_crit_edge
  %id_elems = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 5
  %9 = ptrtoint ptr %id_elems to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %id_elems, align 4
  tail call void @kfree(ptr noundef %10) #13
  %urb = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 4
  %11 = ptrtoint ptr %urb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %urb, align 4
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %snd_usb_mixer_disconnect.exit.if.end_crit_edge, label %if.then

snd_usb_mixer_disconnect.exit.if.end_crit_edge:   ; preds = %snd_usb_mixer_disconnect.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %snd_usb_mixer_disconnect.exit
  call void @__sanitizer_cov_trace_pc() #15
  %transfer_buffer = getelementptr inbounds %struct.urb, ptr %12, i32 0, i32 14
  %13 = ptrtoint ptr %transfer_buffer to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %transfer_buffer, align 4
  tail call void @kfree(ptr noundef %14) #13
  %15 = ptrtoint ptr %urb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %urb, align 4
  tail call void @usb_free_urb(ptr noundef %16) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %snd_usb_mixer_disconnect.exit.if.end_crit_edge
  %rc_urb = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 11
  %17 = ptrtoint ptr %rc_urb to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rc_urb, align 4
  tail call void @usb_free_urb(ptr noundef %18) #13
  %rc_setup_packet = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 12
  %19 = ptrtoint ptr %rc_setup_packet to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rc_setup_packet, align 4
  tail call void @kfree(ptr noundef %20) #13
  tail call void @kfree(ptr noundef %mixer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @snd_usb_mixer_disconnect(ptr noundef %mixer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %disconnected = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 15
  %0 = ptrtoint ptr %disconnected to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %disconnected, align 4, !range !718
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  %urb = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 4
  %2 = ptrtoint ptr %urb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %urb, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @usb_kill_urb(ptr noundef nonnull %3) #13
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %rc_urb = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 11
  %4 = ptrtoint ptr %rc_urb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rc_urb, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %if.end4.if.end8_crit_edge, label %if.then6

if.end4.if.end8_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @usb_kill_urb(ptr noundef nonnull %5) #13
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end4.if.end8_crit_edge
  %private_free = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 17
  %6 = ptrtoint ptr %private_free to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %private_free, align 4
  %tobool9.not = icmp eq ptr %7, null
  br i1 %tobool9.not, label %if.end8.if.end12_crit_edge, label %if.then10

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %7(ptr noundef %mixer) #13
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8.if.end12_crit_edge
  %8 = ptrtoint ptr %disconnected to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %disconnected, align 4
  br label %return

return:                                           ; preds = %if.end12, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_kill_urb(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_mixer_suspend(ptr noundef %mixer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %urb.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 4
  %0 = ptrtoint ptr %urb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %urb.i, align 4
  tail call void @usb_kill_urb(ptr noundef %1) #13
  %rc_urb.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 11
  %2 = ptrtoint ptr %rc_urb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rc_urb.i, align 4
  tail call void @usb_kill_urb(ptr noundef %3) #13
  %private_suspend = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 18
  %4 = ptrtoint ptr %private_suspend to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %private_suspend, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %5(ptr noundef %mixer) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @snd_usb_mixer_resume(ptr noundef %mixer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %id_elems = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.inc8.for.body_crit_edge, %entry
  %id.025 = phi i32 [ 0, %entry ], [ %inc, %for.inc8.for.body_crit_edge ]
  %0 = ptrtoint ptr %id_elems to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %id_elems, align 4
  %arrayidx = getelementptr ptr, ptr %1, i32 %id.025
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %list.022 = load ptr, ptr %arrayidx, align 4
  %tobool.not23 = icmp eq ptr %list.022, null
  br i1 %tobool.not23, label %for.body.for.inc8_crit_edge, label %for.body.for.body2_crit_edge

for.body.for.body2_crit_edge:                     ; preds = %for.body
  br label %for.body2

for.body.for.inc8_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc8

for.body2:                                        ; preds = %for.inc.for.body2_crit_edge, %for.body.for.body2_crit_edge
  %list.024 = phi ptr [ %list.0, %for.inc.for.body2_crit_edge ], [ %list.022, %for.body.for.body2_crit_edge ]
  %resume = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.024, i32 0, i32 6
  %3 = ptrtoint ptr %resume to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %resume, align 4
  %tobool3.not = icmp eq ptr %4, null
  br i1 %tobool3.not, label %for.body2.for.inc_crit_edge, label %if.then

for.body2.for.inc_crit_edge:                      ; preds = %for.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then:                                          ; preds = %for.body2
  %call = tail call i32 %4(ptr noundef nonnull %list.024) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then.cleanup_crit_edge, label %if.then.for.inc_crit_edge

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.inc:                                          ; preds = %if.then.for.inc_crit_edge, %for.body2.for.inc_crit_edge
  %next_id_elem = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.024, i32 0, i32 1
  %5 = ptrtoint ptr %next_id_elem to i32
  call void @__asan_load4_noabort(i32 %5)
  %list.0 = load ptr, ptr %next_id_elem, align 4
  %tobool.not = icmp eq ptr %list.0, null
  br i1 %tobool.not, label %for.inc.for.inc8_crit_edge, label %for.inc.for.body2_crit_edge

for.inc.for.body2_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body2

for.inc.for.inc8_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc8

for.inc8:                                         ; preds = %for.inc.for.inc8_crit_edge, %for.body.for.inc8_crit_edge
  %inc = add nuw nsw i32 %id.025, 1
  %exitcond.not = icmp eq i32 %inc, 256
  br i1 %exitcond.not, label %for.end9, label %for.inc8.for.body_crit_edge

for.inc8.for.body_crit_edge:                      ; preds = %for.inc8
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end9:                                         ; preds = %for.inc8
  tail call void @snd_usb_mixer_resume_quirk(ptr noundef %mixer) #13
  %urb.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 4
  %6 = ptrtoint ptr %urb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %urb.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %for.end9.if.end3.i_crit_edge, label %if.then.i

for.end9.if.end3.i_crit_edge:                     ; preds = %for.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then.i:                                        ; preds = %for.end9
  %call.i = tail call i32 @usb_submit_urb(ptr noundef nonnull %7, i32 noundef 3072) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end3.i_crit_edge

if.then.i.if.end3.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.then.i.if.end3.i_crit_edge, %for.end9.if.end3.i_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end3.i, %if.then.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end3.i ], [ %call.i, %if.then.i.cleanup_crit_edge ], [ %call, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_usb_mixer_resume_quirk(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @snd_usb_mixer_elem_init_std(ptr nocapture noundef writeonly %list, ptr noundef %mixer, i32 noundef %unitid) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %mixer, ptr %list, align 4
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 3
  %1 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %unitid, ptr %id, align 4
  %dump = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 5
  %2 = ptrtoint ptr %dump to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump, align 4
  %resume = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 6
  %3 = ptrtoint ptr %resume to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @restore_mixer_value, ptr %resume, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_usb_mixer_dump_cval(ptr nocapture noundef readonly %buffer, ptr nocapture noundef readonly %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %buffer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %buffer, align 4
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list, i32 0, i32 3
  %2 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id, align 4
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 1
  %4 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %control, align 4
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 2
  %6 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cmask, align 4
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 6
  %8 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %channels, align 4
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 7
  %10 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val_type, align 4
  %arrayidx = getelementptr [9 x ptr], ptr @snd_usb_mixer_dump_cval.val_types, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.286, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, ptr noundef %13) #13
  %14 = ptrtoint ptr %buffer to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %buffer, align 4
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 8
  %16 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %min, align 4
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 9
  %18 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %max, align 4
  %dBmin = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 11
  %20 = ptrtoint ptr %dBmin to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %dBmin, align 4
  %dBmax = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 12
  %22 = ptrtoint ptr %dBmax to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %dBmax, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %15, ptr noundef nonnull @.str.287, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @restore_mixer_value(ptr noundef %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 7
  %0 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %val_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %1)
  %cmp = icmp eq i32 %1, 8
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 2
  %2 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cmask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %control7.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 1
  %cached = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 13
  %ch_readonly.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %idx.069 = phi i32 [ 0, %for.cond.preheader ], [ %idx.1, %for.inc.for.body_crit_edge ]
  %c.067 = phi i32 [ 0, %for.cond.preheader ], [ %inc16.pre-phi, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cmask, align 4
  %shl = shl nuw nsw i32 1, %c.067
  %and = and i32 %5, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %for.body.for.inc_crit_edge, label %if.end6

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %.pre = add nuw nsw i32 %c.067, 1
  br label %for.inc

if.end6:                                          ; preds = %for.body
  %6 = ptrtoint ptr %cached to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cached, align 4
  %add = add nuw nsw i32 %c.067, 1
  %shl7 = shl i32 2, %c.067
  %and8 = and i32 %7, %shl7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end6.if.end15_crit_edge, label %if.then10

if.end6.if.end15_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

if.then10:                                        ; preds = %if.end6
  %arrayidx = getelementptr %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 14, i32 %idx.069
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %10 = ptrtoint ptr %ch_readonly.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ch_readonly.i, align 4
  %and.i = and i32 %11, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end6.i, label %do.body.i

do.body.i:                                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@restore_mixer_value, %if.then4.i)) #13
          to label %if.end15 [label %if.then4.i], !srcloc !716

if.then4.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %12 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %list, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev.i, align 4
  %dev5.i = getelementptr inbounds %struct.usb_device, ptr %17, i32 0, i32 15
  %18 = ptrtoint ptr %control7.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %control7.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef %add, i32 noundef %19) #13
  br label %if.end15

if.end6.i:                                        ; preds = %if.then10
  %20 = ptrtoint ptr %control7.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %control7.i, align 4
  %shl8.i = shl i32 %21, 8
  %or.i = or i32 %shl8.i, %add
  %call9.i = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %list, i32 noundef 1, i32 noundef %or.i, i32 noundef %9) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp10.i = icmp slt i32 %call9.i, 0
  br i1 %cmp10.i, label %if.end6.i.cleanup_crit_edge, label %if.end12.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end12.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  %22 = ptrtoint ptr %cached to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cached, align 4
  %or14.i = or i32 %23, %shl7
  store i32 %or14.i, ptr %cached, align 4
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %9, ptr %arrayidx, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.end12.i, %if.then4.i, %do.body.i, %if.end6.if.end15_crit_edge
  %inc = add i32 %idx.069, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end15, %for.body.for.inc_crit_edge
  %inc16.pre-phi = phi i32 [ %.pre, %for.body.for.inc_crit_edge ], [ %add, %if.end15 ]
  %idx.1 = phi i32 [ %idx.069, %for.body.for.inc_crit_edge ], [ %inc, %if.end15 ]
  %exitcond.not = icmp eq i32 %inc16.pre-phi, 16
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.else:                                          ; preds = %if.end
  %cached17 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 13
  %25 = ptrtoint ptr %cached17 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cached17, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool18.not = icmp eq i32 %26, 0
  br i1 %tobool18.not, label %if.else.cleanup_crit_edge, label %if.then19

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then19:                                        ; preds = %if.else
  %cache_val20 = getelementptr %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 14
  %27 = ptrtoint ptr %cache_val20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cache_val20, align 4
  %master_readonly.i41 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 5
  %29 = ptrtoint ptr %master_readonly.i41 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %master_readonly.i41, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.i44 = icmp eq i32 %30, 0
  br i1 %tobool.not.i44, label %if.end6.i55, label %do.body.i46

do.body.i46:                                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@restore_mixer_value, %if.then4.i50)) #13
          to label %cleanup [label %if.then4.i50], !srcloc !716

if.then4.i50:                                     ; preds = %do.body.i46
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %list, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %dev.i47 = getelementptr inbounds %struct.snd_usb_audio, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %dev.i47 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev.i47, align 4
  %dev5.i48 = getelementptr inbounds %struct.usb_device, ptr %36, i32 0, i32 15
  %control.i49 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 1
  %37 = ptrtoint ptr %control.i49 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %control.i49, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i48, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef 0, i32 noundef %38) #13
  br label %cleanup

if.end6.i55:                                      ; preds = %if.then19
  %control7.i51 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list, i32 0, i32 1
  %39 = ptrtoint ptr %control7.i51 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %control7.i51, align 4
  %shl8.i52 = shl i32 %40, 8
  %call9.i53 = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %list, i32 noundef 1, i32 noundef %shl8.i52, i32 noundef %28) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i53)
  %cmp10.i54 = icmp slt i32 %call9.i53, 0
  br i1 %cmp10.i54, label %if.end6.i55.cleanup_crit_edge, label %if.end12.i59

if.end6.i55.cleanup_crit_edge:                    ; preds = %if.end6.i55
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end12.i59:                                     ; preds = %if.end6.i55
  call void @__sanitizer_cov_trace_pc() #15
  %41 = ptrtoint ptr %cached17 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cached17, align 4
  %or14.i57 = or i32 %42, 1
  store i32 %or14.i57, ptr %cached17, align 4
  %43 = ptrtoint ptr %cache_val20 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %28, ptr %cache_val20, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12.i59, %if.end6.i55.cleanup_crit_edge, %if.then4.i50, %do.body.i46, %if.else.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %if.end6.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_ctl_value_v1(ptr nocapture noundef readonly %cval, i32 noundef %request, i32 noundef %validx, ptr nocapture noundef writeonly %value_ret) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [2 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cval, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %buf) #13
  %4 = ptrtoint ptr %buf to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 -1, ptr %buf, align 1, !annotation !719
  %5 = getelementptr inbounds [2 x i8], ptr %buf, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 -1, ptr %5, align 1, !annotation !719
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 7
  %7 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %8)
  %cmp = icmp sgt i32 %8, 3
  %cond = select i1 %cmp, i32 2, i32 1
  %call = tail call i32 @snd_usb_lock_shutdown(ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %entry.cleanup_crit_edge, label %while.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %conv = trunc i32 %request to i8
  %conv12 = trunc i32 %validx to i16
  %conv14 = trunc i32 %cond to i16
  br label %while.body

while.cond:                                       ; preds = %if.else
  %dec = add nsw i32 %dec61, -1
  %cmp3.not = icmp eq i32 %dec61, 0
  br i1 %cmp3.not, label %do.body, label %while.cond.while.body_crit_edge

while.cond.while.body_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

while.body:                                       ; preds = %while.cond.while.body_crit_edge, %while.cond.preheader
  %dec61 = phi i32 [ 9, %while.cond.preheader ], [ %dec, %while.cond.while.body_crit_edge ]
  %9 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cval, align 4
  %hostif.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %14 to i32
  %15 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %id, align 4
  %shl = shl i32 %16, 8
  %or = or i32 %shl, %conv.i
  %17 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 8
  %shl.i = shl i32 %20, 8
  %or11 = or i32 %shl.i, -2147483520
  %conv13 = trunc i32 %or to i16
  %call15 = call i32 @snd_usb_ctl_msg(ptr noundef %18, i32 noundef %or11, i8 noundef zeroext %conv, i8 noundef zeroext -95, i16 noundef zeroext %conv12, i16 noundef zeroext %conv13, ptr noundef nonnull %buf, i16 noundef zeroext %conv14) #13
  call void @__sanitizer_cov_trace_cmp4(i32 %call15, i32 %cond)
  %cmp16.not = icmp slt i32 %call15, %cond
  br i1 %cmp16.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %while.body
  %call20 = call i32 @snd_usb_combine_bytes(ptr noundef nonnull %buf, i32 noundef %cond) #13
  %21 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %val_type, align 4
  %23 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.292)
  switch i32 %22, label %if.then18.convert_signed_value.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb2.i
    i32 3, label %sw.bb6.i
    i32 2, label %sw.bb7.i
    i32 5, label %sw.bb9.i
    i32 4, label %sw.bb11.i
  ]

if.then18.convert_signed_value.exit_crit_edge:    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  br label %convert_signed_value.exit

sw.bb.i:                                          ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool.i = icmp ne i32 %call20, 0
  %lnot.ext.i = zext i1 %tobool.i to i32
  br label %convert_signed_value.exit

sw.bb2.i:                                         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool3.not.i = icmp eq i32 %call20, 0
  %lnot.ext5.i = zext i1 %tobool3.not.i to i32
  br label %convert_signed_value.exit

sw.bb6.i:                                         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  %and.i = and i32 %call20, 255
  br label %convert_signed_value.exit

sw.bb7.i:                                         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  %and8.i = and i32 %call20, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %and8.i)
  %cmp.i = icmp ugt i32 %and8.i, 127
  %masksel28.i = select i1 %cmp.i, i32 -256, i32 0
  %spec.select.i = or i32 %masksel28.i, %and8.i
  br label %convert_signed_value.exit

sw.bb9.i:                                         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  %and10.i = and i32 %call20, 65535
  br label %convert_signed_value.exit

sw.bb11.i:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  %and12.i = and i32 %call20, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %and12.i)
  %cmp13.i = icmp ugt i32 %and12.i, 32767
  %masksel.i = select i1 %cmp13.i, i32 -65536, i32 0
  %spec.select27.i = or i32 %masksel.i, %and12.i
  br label %convert_signed_value.exit

convert_signed_value.exit:                        ; preds = %sw.bb11.i, %sw.bb9.i, %sw.bb7.i, %sw.bb6.i, %sw.bb2.i, %sw.bb.i, %if.then18.convert_signed_value.exit_crit_edge
  %retval.0.i57 = phi i32 [ %lnot.ext5.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb.i ], [ %call20, %if.then18.convert_signed_value.exit_crit_edge ], [ %and10.i, %sw.bb9.i ], [ %and.i, %sw.bb6.i ], [ %spec.select.i, %sw.bb7.i ], [ %spec.select27.i, %sw.bb11.i ]
  %24 = ptrtoint ptr %value_ret to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %retval.0.i57, ptr %value_ret, align 4
  br label %out

if.else:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call15)
  %cmp22 = icmp eq i32 %call15, -110
  br i1 %cmp22, label %if.else.out_crit_edge, label %while.cond

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

do.body:                                          ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @get_ctl_value_v1.__UNIQUE_ID_ddebug238, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@get_ctl_value_v1, %if.then30)) #13
          to label %out [label %if.then30], !srcloc !716

if.then30:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %25 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev, align 4
  %dev32 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 15
  %27 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %val_type, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @get_ctl_value_v1.__UNIQUE_ID_ddebug238, ptr noundef %dev32, ptr noundef nonnull @.str.14, i32 noundef %request, i32 noundef %validx, i32 noundef %or, i32 noundef %28) #13
  br label %out

out:                                              ; preds = %if.then30, %do.body, %if.else.out_crit_edge, %convert_signed_value.exit
  %err.0 = phi i32 [ 0, %convert_signed_value.exit ], [ -22, %if.then30 ], [ -22, %do.body ], [ -110, %if.else.out_crit_edge ]
  call void @snd_usb_unlock_shutdown(ptr noundef %3) #13
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %out ], [ -5, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %buf) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_ctl_value_v2(ptr nocapture noundef readonly %cval, i32 noundef %request, i32 noundef %validx, ptr nocapture noundef writeonly %value_ret) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [14 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cval, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %buf) #13
  %4 = getelementptr inbounds [14 x i8], ptr %buf, i32 0, i32 2
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 7
  %5 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val_type, align 4
  %switch.tableidx = add i32 %6, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %switch.tableidx)
  %7 = icmp ult i32 %switch.tableidx, 4
  br i1 %7, label %switch.lookup, label %entry.uac2_ctl_value_size.exit_crit_edge

entry.uac2_ctl_value_size.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac2_ctl_value_size.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %switch.gep = getelementptr inbounds [4 x i32], ptr @switch.table.get_ctl_value_v2, i32 0, i32 %switch.tableidx
  %8 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %8)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %uac2_ctl_value_size.exit

uac2_ctl_value_size.exit:                         ; preds = %switch.lookup, %entry.uac2_ctl_value_size.exit_crit_edge
  %retval.0.i69 = phi i32 [ %switch.load, %switch.lookup ], [ 1, %entry.uac2_ctl_value_size.exit_crit_edge ]
  %9 = call ptr @memset(ptr %buf, i32 0, i32 14)
  %call2 = tail call i32 @snd_usb_lock_shutdown(ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end4, label %uac2_ctl_value_size.exit.cleanup_crit_edge

uac2_ctl_value_size.exit.cleanup_crit_edge:       ; preds = %uac2_ctl_value_size.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4:                                          ; preds = %uac2_ctl_value_size.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 129, i32 %request)
  %cmp = icmp eq i32 %request, 129
  %bRequest.0 = select i1 %cmp, i8 1, i8 2
  %mul = mul nuw nsw i32 %retval.0.i69, 3
  %add = add nuw nsw i32 %mul, 2
  %size.0 = select i1 %cmp, i32 %retval.0.i69, i32 %add
  %10 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cval, align 4
  %hostif.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %15 to i32
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %16 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %id, align 4
  %shl = shl i32 %17, 8
  %or = or i32 %shl, %conv.i
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %18 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 8
  %shl.i = shl i32 %21, 8
  %or12 = or i32 %shl.i, -2147483520
  %conv = trunc i32 %validx to i16
  %conv13 = trunc i32 %or to i16
  %conv15 = trunc i32 %size.0 to i16
  %call16 = call i32 @snd_usb_ctl_msg(ptr noundef %19, i32 noundef %or12, i8 noundef zeroext %bRequest.0, i8 noundef zeroext -95, i16 noundef zeroext %conv, i16 noundef zeroext %conv13, ptr noundef nonnull %buf, i16 noundef zeroext %conv15) #13
  call void @snd_usb_unlock_shutdown(ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %do.body, label %if.end29

do.body:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @get_ctl_value_v2.__UNIQUE_ID_ddebug239, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@get_ctl_value_v2, %if.then24)) #13
          to label %cleanup [label %if.then24], !srcloc !716

if.then24:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %22 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev, align 4
  %dev26 = getelementptr inbounds %struct.usb_device, ptr %23, i32 0, i32 15
  %24 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %val_type, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @get_ctl_value_v2.__UNIQUE_ID_ddebug239, ptr noundef %dev26, ptr noundef nonnull @.str.14, i32 noundef %request, i32 noundef %validx, i32 noundef %or, i32 noundef %25) #13
  br label %cleanup

if.end29:                                         ; preds = %if.end4
  %26 = zext i32 %request to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.293)
  switch i32 %request, label %if.end29.cleanup_crit_edge [
    i32 129, label %if.end29.sw.epilog_crit_edge
    i32 130, label %sw.bb31
    i32 131, label %sw.bb33
    i32 132, label %sw.bb37
  ]

if.end29.sw.epilog_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb31:                                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb33:                                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr36 = getelementptr i8, ptr %4, i32 %retval.0.i69
  br label %sw.epilog

sw.bb37:                                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %mul40 = shl nuw nsw i32 %retval.0.i69, 1
  %add.ptr41 = getelementptr i8, ptr %4, i32 %mul40
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb37, %sw.bb33, %sw.bb31, %if.end29.sw.epilog_crit_edge
  %val.0 = phi ptr [ %add.ptr41, %sw.bb37 ], [ %add.ptr36, %sw.bb33 ], [ %4, %sw.bb31 ], [ %buf, %if.end29.sw.epilog_crit_edge ]
  %call42 = call i32 @snd_usb_combine_bytes(ptr noundef %val.0, i32 noundef %retval.0.i69) #13
  %27 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %val_type, align 4
  %29 = zext i32 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.294)
  switch i32 %28, label %sw.epilog.convert_signed_value.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb2.i
    i32 3, label %sw.bb6.i
    i32 2, label %sw.bb7.i
    i32 5, label %sw.bb9.i
    i32 4, label %sw.bb11.i
  ]

sw.epilog.convert_signed_value.exit_crit_edge:    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %convert_signed_value.exit

sw.bb.i:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool.i = icmp ne i32 %call42, 0
  %lnot.ext.i = zext i1 %tobool.i to i32
  br label %convert_signed_value.exit

sw.bb2.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool3.not.i = icmp eq i32 %call42, 0
  %lnot.ext5.i = zext i1 %tobool3.not.i to i32
  br label %convert_signed_value.exit

sw.bb6.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %and.i = and i32 %call42, 255
  br label %convert_signed_value.exit

sw.bb7.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %and8.i = and i32 %call42, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %and8.i)
  %cmp.i = icmp ugt i32 %and8.i, 127
  %masksel28.i = select i1 %cmp.i, i32 -256, i32 0
  %spec.select.i = or i32 %masksel28.i, %and8.i
  br label %convert_signed_value.exit

sw.bb9.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %and10.i = and i32 %call42, 65535
  br label %convert_signed_value.exit

sw.bb11.i:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %and12.i = and i32 %call42, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %and12.i)
  %cmp13.i = icmp ugt i32 %and12.i, 32767
  %masksel.i = select i1 %cmp13.i, i32 -65536, i32 0
  %spec.select27.i = or i32 %masksel.i, %and12.i
  br label %convert_signed_value.exit

convert_signed_value.exit:                        ; preds = %sw.bb11.i, %sw.bb9.i, %sw.bb7.i, %sw.bb6.i, %sw.bb2.i, %sw.bb.i, %sw.epilog.convert_signed_value.exit_crit_edge
  %retval.0.i70 = phi i32 [ %lnot.ext5.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb.i ], [ %call42, %sw.epilog.convert_signed_value.exit_crit_edge ], [ %and10.i, %sw.bb9.i ], [ %and.i, %sw.bb6.i ], [ %spec.select.i, %sw.bb7.i ], [ %spec.select27.i, %sw.bb11.i ]
  %30 = ptrtoint ptr %value_ret to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %retval.0.i70, ptr %value_ret, align 4
  br label %cleanup

cleanup:                                          ; preds = %convert_signed_value.exit, %if.end29.cleanup_crit_edge, %if.then24, %do.body, %uac2_ctl_value_size.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %convert_signed_value.exit ], [ -5, %uac2_ctl_value_size.exit.cleanup_crit_edge ], [ %call16, %if.then24 ], [ -22, %if.end29.cleanup_crit_edge ], [ %call16, %do.body ]
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %buf) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_usb_combine_bytes(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_feature_info(ptr noundef %kcontrol, ptr nocapture noundef writeonly %uinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %val_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %switch = icmp ult i32 %3, 2
  %spec.select = select i1 %switch, i32 1, i32 2
  %4 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %spec.select, ptr %4, align 8
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %channels, align 4
  %count = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 3
  %8 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %count, align 8
  %9 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %val_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %switch53 = icmp ult i32 %10, 2
  br i1 %switch53, label %if.then9, label %if.else11

if.then9:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %value = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5
  %11 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %value, align 8
  br label %if.end28

if.else11:                                        ; preds = %entry
  %initialized = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 15
  %12 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %initialized, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not = icmp eq i8 %13, 0
  br i1 %tobool.not, label %if.then12, label %if.else11.if.end19_crit_edge

if.else11.if.end19_crit_edge:                     ; preds = %if.else11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.then12:                                        ; preds = %if.else11
  tail call fastcc void @get_min_max_with_quirks(ptr noundef %1, i32 noundef 0, ptr noundef %kcontrol)
  %14 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %initialized, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool14.not = icmp eq i8 %15, 0
  br i1 %tobool14.not, label %if.then12.if.end19_crit_edge, label %land.lhs.true

if.then12.if.end19_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

land.lhs.true:                                    ; preds = %if.then12
  %dBmin = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 11
  %16 = ptrtoint ptr %dBmin to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %dBmin, align 4
  %dBmax = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 12
  %18 = ptrtoint ptr %dBmax to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dBmax, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp15.not = icmp slt i32 %17, %19
  br i1 %cmp15.not, label %land.lhs.true.if.end19_crit_edge, label %if.then17

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.then17:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %access = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 1, i32 0, i32 1
  %20 = ptrtoint ptr %access to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %access, align 4
  %and = and i32 %21, -268435473
  store i32 %and, ptr %access, align 4
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %1, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %card, align 4
  %id = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 1
  tail call void @snd_ctl_notify(ptr noundef %27, i32 noundef 2, ptr noundef %id) #13
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %land.lhs.true.if.end19_crit_edge, %if.then12.if.end19_crit_edge, %if.else11.if.end19_crit_edge
  %value20 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5
  %28 = ptrtoint ptr %value20 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %value20, align 8
  %max22 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %29 = ptrtoint ptr %max22 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %max22, align 4
  %min23 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %31 = ptrtoint ptr %min23 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %min23, align 4
  %res = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %33 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %res, align 4
  %35 = xor i32 %32, -1
  %add = add i32 %30, %35
  %sub24 = add i32 %add, %34
  %div = sdiv i32 %sub24, %34
  br label %if.end28

if.end28:                                         ; preds = %if.end19, %if.then9
  %div.sink = phi i32 [ %div, %if.end19 ], [ 1, %if.then9 ]
  %max27 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %uinfo, i32 0, i32 5, i32 0, i32 1
  %36 = ptrtoint ptr %max27 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %div.sink, ptr %max27, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_feature_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !719
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %3 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %min, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %5 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %value, align 8
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cmask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %res.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %max.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %cnt.072 = phi i32 [ 0, %for.cond.preheader ], [ %cnt.1, %for.inc.for.body_crit_edge ]
  %c.070 = phi i32 [ 0, %for.cond.preheader ], [ %.pre, %for.inc.for.body_crit_edge ]
  %8 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cmask, align 4
  %shl = shl nuw nsw i32 1, %c.070
  %and = and i32 %9, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  %.pre = add nuw nsw i32 %c.070, 1
  br i1 %tobool2.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end:                                           ; preds = %for.body
  %call = call i32 @snd_usb_get_cur_mix_value(ptr noundef %1, i32 noundef %.pre, i32 noundef %cnt.072, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool6.not = icmp eq i32 %13, 0
  %spec.select = select i1 %tobool6.not, i32 %call, i32 0
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %14 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %val, align 4
  %16 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %res.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end7.if.end.i_crit_edge

if.end7.if.end.i_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  %18 = ptrtoint ptr %res.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %res.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end7.if.end.i_crit_edge
  %19 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %min, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %20)
  %cmp.i = icmp slt i32 %15, %20
  br i1 %cmp.i, label %if.end.i.get_relative_value.exit_crit_edge, label %if.else.i

if.end.i.get_relative_value.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %get_relative_value.exit

if.else.i:                                        ; preds = %if.end.i
  %21 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %max.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %15)
  %cmp3.not.i = icmp sgt i32 %22, %15
  br i1 %cmp3.not.i, label %if.else10.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  %23 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %res.i, align 4
  %sub.i = xor i32 %20, -1
  %add.i = add i32 %22, %sub.i
  %sub8.i = add i32 %add.i, %24
  %div.i = sdiv i32 %sub8.i, %24
  br label %get_relative_value.exit

if.else10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub12.i = sub i32 %15, %20
  %25 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %res.i, align 4
  %div14.i = sdiv i32 %sub12.i, %26
  br label %get_relative_value.exit

get_relative_value.exit:                          ; preds = %if.else10.i, %if.then4.i, %if.end.i.get_relative_value.exit_crit_edge
  %retval.0.i = phi i32 [ %div.i, %if.then4.i ], [ %div14.i, %if.else10.i ], [ 0, %if.end.i.get_relative_value.exit_crit_edge ]
  %27 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %retval.0.i, ptr %val, align 4
  %arrayidx10 = getelementptr [128 x i32], ptr %value, i32 0, i32 %cnt.072
  %28 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %retval.0.i, ptr %arrayidx10, align 4
  %inc = add i32 %cnt.072, 1
  br label %for.inc

for.inc:                                          ; preds = %get_relative_value.exit, %for.body.for.inc_crit_edge
  %cnt.1 = phi i32 [ %inc, %get_relative_value.exit ], [ %cnt.072, %for.body.for.inc_crit_edge ]
  %exitcond.not = icmp eq i32 %.pre, 16
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.else:                                          ; preds = %entry
  %call12 = call i32 @snd_usb_get_cur_mix_value(ptr noundef %1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp13 = icmp slt i32 %call12, 0
  br i1 %cmp13, label %if.then14, label %if.end23

if.then14:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %1, align 4
  %ignore_ctl_error17 = getelementptr inbounds %struct.usb_mixer_interface, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %ignore_ctl_error17 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %ignore_ctl_error17, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool18.not = icmp eq i32 %32, 0
  %spec.select50 = select i1 %tobool18.not, i32 %call12, i32 0
  br label %cleanup

if.end23:                                         ; preds = %if.else
  %33 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %val, align 4
  %res.i51 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %35 = ptrtoint ptr %res.i51 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %res.i51, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i52 = icmp eq i32 %36, 0
  br i1 %tobool.not.i52, label %if.then.i53, label %if.end23.if.end.i56_crit_edge

if.end23.if.end.i56_crit_edge:                    ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i56

if.then.i53:                                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  %37 = ptrtoint ptr %res.i51 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 1, ptr %res.i51, align 4
  br label %if.end.i56

if.end.i56:                                       ; preds = %if.then.i53, %if.end23.if.end.i56_crit_edge
  %38 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %min, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %39)
  %cmp.i55 = icmp slt i32 %34, %39
  br i1 %cmp.i55, label %if.end.i56.get_relative_value.exit69_crit_edge, label %if.else.i59

if.end.i56.get_relative_value.exit69_crit_edge:   ; preds = %if.end.i56
  call void @__sanitizer_cov_trace_pc() #15
  br label %get_relative_value.exit69

if.else.i59:                                      ; preds = %if.end.i56
  %max.i57 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %40 = ptrtoint ptr %max.i57 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %max.i57, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %34)
  %cmp3.not.i58 = icmp sgt i32 %41, %34
  br i1 %cmp3.not.i58, label %if.else10.i67, label %if.then4.i64

if.then4.i64:                                     ; preds = %if.else.i59
  call void @__sanitizer_cov_trace_pc() #15
  %42 = ptrtoint ptr %res.i51 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %res.i51, align 4
  %sub.i60 = xor i32 %39, -1
  %add.i61 = add i32 %41, %sub.i60
  %sub8.i62 = add i32 %add.i61, %43
  %div.i63 = sdiv i32 %sub8.i62, %43
  br label %get_relative_value.exit69

if.else10.i67:                                    ; preds = %if.else.i59
  call void @__sanitizer_cov_trace_pc() #15
  %sub12.i65 = sub i32 %34, %39
  %44 = ptrtoint ptr %res.i51 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %res.i51, align 4
  %div14.i66 = sdiv i32 %sub12.i65, %45
  br label %get_relative_value.exit69

get_relative_value.exit69:                        ; preds = %if.else10.i67, %if.then4.i64, %if.end.i56.get_relative_value.exit69_crit_edge
  %retval.0.i68 = phi i32 [ %div.i63, %if.then4.i64 ], [ %div14.i66, %if.else10.i67 ], [ 0, %if.end.i56.get_relative_value.exit69_crit_edge ]
  %46 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %retval.0.i68, ptr %value, align 8
  br label %cleanup

cleanup:                                          ; preds = %get_relative_value.exit69, %if.then14, %for.inc.cleanup_crit_edge, %if.then5
  %retval.0 = phi i32 [ %spec.select, %if.then5 ], [ %spec.select50, %if.then14 ], [ 0, %get_relative_value.exit69 ], [ 0, %for.inc.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_feature_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  %oval = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %oval) #13
  %2 = ptrtoint ptr %oval to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %oval, align 4, !annotation !719
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cmask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %res.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %min5.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %max.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %ch_readonly.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 4
  %control.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %cached.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 13
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %changed.0111 = phi i32 [ 0, %for.cond.preheader ], [ %changed.2, %for.inc.for.body_crit_edge ]
  %cnt.0109 = phi i32 [ 0, %for.cond.preheader ], [ %cnt.1, %for.inc.for.body_crit_edge ]
  %c.0106 = phi i32 [ 0, %for.cond.preheader ], [ %.pre, %for.inc.for.body_crit_edge ]
  %5 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cmask, align 4
  %shl = shl nuw nsw i32 1, %c.0106
  %and = and i32 %6, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  %.pre = add nuw nsw i32 %c.0106, 1
  br i1 %tobool2.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end:                                           ; preds = %for.body
  %call = call i32 @snd_usb_get_cur_mix_value(ptr noundef %1, i32 noundef %.pre, i32 noundef %cnt.0109, ptr noundef nonnull %oval)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool6.not = icmp eq i32 %10, 0
  %spec.select = select i1 %tobool6.not, i32 %call, i32 0
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %arrayidx = getelementptr [128 x i32], ptr %value, i32 0, i32 %cnt.0109
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i = icmp slt i32 %12, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %min5.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %min5.i, align 4
  br label %get_abs_value.exit

if.end.i:                                         ; preds = %if.end7
  %15 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %res.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i, label %if.then1.i, label %if.end.i.if.end3.i_crit_edge

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %res.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %res.i, align 4
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then1.i, %if.end.i.if.end3.i_crit_edge
  %18 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %res.i, align 4
  %mul.i = mul i32 %19, %12
  %20 = ptrtoint ptr %min5.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %min5.i, align 4
  %add.i = add i32 %mul.i, %21
  %22 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max.i, align 4
  %24 = tail call i32 @llvm.smin.i32(i32 %add.i, i32 %23) #13
  br label %get_abs_value.exit

get_abs_value.exit:                               ; preds = %if.end3.i, %if.then.i
  %retval.0.i = phi i32 [ %14, %if.then.i ], [ %24, %if.end3.i ]
  %25 = ptrtoint ptr %oval to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %oval, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %retval.0.i)
  %cmp9.not = icmp eq i32 %26, %retval.0.i
  br i1 %cmp9.not, label %get_abs_value.exit.if.end13_crit_edge, label %cond.false.i

get_abs_value.exit.if.end13_crit_edge:            ; preds = %get_abs_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

cond.false.i:                                     ; preds = %get_abs_value.exit
  %27 = ptrtoint ptr %ch_readonly.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %ch_readonly.i, align 4
  %and.i = and i32 %28, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i68 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i68, label %if.end6.i, label %do.body.i

do.body.i:                                        ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mixer_ctl_feature_put, %if.then4.i)) #13
          to label %if.end13 [label %if.then4.i], !srcloc !716

if.then4.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %1, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev.i, align 4
  %dev5.i = getelementptr inbounds %struct.usb_device, ptr %34, i32 0, i32 15
  %35 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %control.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef %.pre, i32 noundef %36) #13
  br label %if.end13

if.end6.i:                                        ; preds = %cond.false.i
  %37 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %control.i, align 4
  %shl8.i = shl i32 %38, 8
  %or.i = or i32 %shl8.i, %.pre
  %call9.i = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %1, i32 noundef 1, i32 noundef %or.i, i32 noundef %retval.0.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp10.i = icmp slt i32 %call9.i, 0
  br i1 %cmp10.i, label %if.end6.i.if.end13_crit_edge, label %if.end12.i

if.end6.i.if.end13_crit_edge:                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.end12.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  %shl13.i = shl i32 2, %c.0106
  %39 = ptrtoint ptr %cached.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cached.i, align 4
  %or14.i = or i32 %40, %shl13.i
  store i32 %or14.i, ptr %cached.i, align 4
  %arrayidx.i = getelementptr %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 14, i32 %cnt.0109
  %41 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %retval.0.i, ptr %arrayidx.i, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end12.i, %if.end6.i.if.end13_crit_edge, %if.then4.i, %do.body.i, %get_abs_value.exit.if.end13_crit_edge
  %changed.1 = phi i32 [ %changed.0111, %get_abs_value.exit.if.end13_crit_edge ], [ 1, %do.body.i ], [ 1, %if.then4.i ], [ 1, %if.end6.i.if.end13_crit_edge ], [ 1, %if.end12.i ]
  %inc = add i32 %cnt.0109, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end13, %for.body.for.inc_crit_edge
  %cnt.1 = phi i32 [ %inc, %if.end13 ], [ %cnt.0109, %for.body.for.inc_crit_edge ]
  %changed.2 = phi i32 [ %changed.1, %if.end13 ], [ %changed.0111, %for.body.for.inc_crit_edge ]
  %exitcond.not = icmp eq i32 %.pre, 16
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.else:                                          ; preds = %entry
  %call15 = call i32 @snd_usb_get_cur_mix_value(ptr noundef %1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %oval)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %cmp16 = icmp slt i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %if.end26

if.then17:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %42 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %1, align 4
  %ignore_ctl_error20 = getelementptr inbounds %struct.usb_mixer_interface, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %ignore_ctl_error20 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %ignore_ctl_error20, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool21.not = icmp eq i32 %45, 0
  %spec.select66 = select i1 %tobool21.not, i32 %call15, i32 0
  br label %cleanup

if.end26:                                         ; preds = %if.else
  %value27 = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %46 = ptrtoint ptr %value27 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %value27, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp.i70 = icmp slt i32 %47, 0
  br i1 %cmp.i70, label %if.then.i72, label %if.end.i75

if.then.i72:                                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #15
  %min.i71 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %48 = ptrtoint ptr %min.i71 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %min.i71, align 4
  br label %get_abs_value.exit83

if.end.i75:                                       ; preds = %if.end26
  %res.i73 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %50 = ptrtoint ptr %res.i73 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %res.i73, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.not.i74 = icmp eq i32 %51, 0
  br i1 %tobool.not.i74, label %if.then1.i76, label %if.end.i75.if.end3.i81_crit_edge

if.end.i75.if.end3.i81_crit_edge:                 ; preds = %if.end.i75
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i81

if.then1.i76:                                     ; preds = %if.end.i75
  call void @__sanitizer_cov_trace_pc() #15
  %52 = ptrtoint ptr %res.i73 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 1, ptr %res.i73, align 4
  br label %if.end3.i81

if.end3.i81:                                      ; preds = %if.then1.i76, %if.end.i75.if.end3.i81_crit_edge
  %53 = ptrtoint ptr %res.i73 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %res.i73, align 4
  %mul.i77 = mul i32 %54, %47
  %min5.i78 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %55 = ptrtoint ptr %min5.i78 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %min5.i78, align 4
  %add.i79 = add i32 %mul.i77, %56
  %max.i80 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %57 = ptrtoint ptr %max.i80 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %max.i80, align 4
  %59 = tail call i32 @llvm.smin.i32(i32 %add.i79, i32 %58) #13
  br label %get_abs_value.exit83

get_abs_value.exit83:                             ; preds = %if.end3.i81, %if.then.i72
  %retval.0.i82 = phi i32 [ %49, %if.then.i72 ], [ %59, %if.end3.i81 ]
  %60 = ptrtoint ptr %oval to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %oval, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i82, i32 %61)
  %cmp30.not = icmp eq i32 %retval.0.i82, %61
  br i1 %cmp30.not, label %get_abs_value.exit83.cleanup_crit_edge, label %if.then31

get_abs_value.exit83.cleanup_crit_edge:           ; preds = %get_abs_value.exit83
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then31:                                        ; preds = %get_abs_value.exit83
  %master_readonly.i84 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 5
  %62 = ptrtoint ptr %master_readonly.i84 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %master_readonly.i84, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool.not.i87 = icmp eq i32 %63, 0
  br i1 %tobool.not.i87, label %if.end6.i98, label %do.body.i89

do.body.i89:                                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mixer_ctl_feature_put, %if.then4.i93)) #13
          to label %cleanup [label %if.then4.i93], !srcloc !716

if.then4.i93:                                     ; preds = %do.body.i89
  call void @__sanitizer_cov_trace_pc() #15
  %64 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %1, align 4
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %65, align 4
  %dev.i90 = getelementptr inbounds %struct.snd_usb_audio, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %dev.i90 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %dev.i90, align 4
  %dev5.i91 = getelementptr inbounds %struct.usb_device, ptr %69, i32 0, i32 15
  %control.i92 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %70 = ptrtoint ptr %control.i92 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %control.i92, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i91, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef 0, i32 noundef %71) #13
  br label %cleanup

if.end6.i98:                                      ; preds = %if.then31
  %control7.i94 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %72 = ptrtoint ptr %control7.i94 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %control7.i94, align 4
  %shl8.i95 = shl i32 %73, 8
  %call9.i96 = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %1, i32 noundef 1, i32 noundef %shl8.i95, i32 noundef %retval.0.i82) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i96)
  %cmp10.i97 = icmp slt i32 %call9.i96, 0
  br i1 %cmp10.i97, label %if.end6.i98.cleanup_crit_edge, label %if.end12.i102

if.end6.i98.cleanup_crit_edge:                    ; preds = %if.end6.i98
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end12.i102:                                    ; preds = %if.end6.i98
  call void @__sanitizer_cov_trace_pc() #15
  %cached.i99 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 13
  %74 = ptrtoint ptr %cached.i99 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %cached.i99, align 4
  %or14.i100 = or i32 %75, 1
  store i32 %or14.i100, ptr %cached.i99, align 4
  %arrayidx.i101 = getelementptr %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 14, i32 0
  %76 = ptrtoint ptr %arrayidx.i101 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %retval.0.i82, ptr %arrayidx.i101, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12.i102, %if.end6.i98.cleanup_crit_edge, %if.then4.i93, %do.body.i89, %get_abs_value.exit83.cleanup_crit_edge, %if.then17, %for.inc.cleanup_crit_edge, %if.then5
  %retval.0 = phi i32 [ %spec.select, %if.then5 ], [ %spec.select66, %if.then17 ], [ 0, %get_abs_value.exit83.cleanup_crit_edge ], [ 1, %do.body.i89 ], [ 1, %if.then4.i93 ], [ 1, %if.end6.i98.cleanup_crit_edge ], [ 1, %if.end12.i102 ], [ %changed.2, %for.inc.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %oval) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_min_max_with_quirks(ptr noundef %cval, i32 noundef %default_min, ptr noundef readonly %kctl) unnamed_addr #0 align 64 {
entry:
  %saved = alloca i32, align 4
  %check = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 8
  %0 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %default_min, ptr %min, align 4
  %add = add i32 %default_min, 1
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 9
  %1 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %add, ptr %max, align 4
  %res = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 10
  %2 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %res, align 4
  %dBmax = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 12
  %3 = ptrtoint ptr %dBmax to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %dBmax, align 4
  %dBmin = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 11
  %4 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %dBmin, align 4
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 7
  %5 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %switch = icmp ult i32 %6, 2
  br i1 %switch, label %entry.if.end122_crit_edge, label %if.else

entry.if.end122_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end122

if.else:                                          ; preds = %entry
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 2
  %7 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cmask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %if.else.if.end10_crit_edge, label %for.body.preheader

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.body.preheader:                               ; preds = %if.else
  %and = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %for.inc, label %for.body.preheader.if.end10_crit_edge

for.body.preheader.if.end10_crit_edge:            ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc:                                          ; preds = %for.body.preheader
  %and.1 = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool7.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool7.not.1, label %for.inc.1, label %for.inc.if.end10_crit_edge

for.inc.if.end10_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.1:                                        ; preds = %for.inc
  %and.2 = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool7.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool7.not.2, label %for.inc.2, label %for.inc.1.if.end10_crit_edge

for.inc.1.if.end10_crit_edge:                     ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.2:                                        ; preds = %for.inc.1
  %and.3 = and i32 %8, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool7.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool7.not.3, label %for.inc.3, label %for.inc.2.if.end10_crit_edge

for.inc.2.if.end10_crit_edge:                     ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.3:                                        ; preds = %for.inc.2
  %and.4 = and i32 %8, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool7.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool7.not.4, label %for.inc.4, label %for.inc.3.if.end10_crit_edge

for.inc.3.if.end10_crit_edge:                     ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.4:                                        ; preds = %for.inc.3
  %and.5 = and i32 %8, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5)
  %tobool7.not.5 = icmp eq i32 %and.5, 0
  br i1 %tobool7.not.5, label %for.inc.5, label %for.inc.4.if.end10_crit_edge

for.inc.4.if.end10_crit_edge:                     ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.5:                                        ; preds = %for.inc.4
  %and.6 = and i32 %8, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6)
  %tobool7.not.6 = icmp eq i32 %and.6, 0
  br i1 %tobool7.not.6, label %for.inc.6, label %for.inc.5.if.end10_crit_edge

for.inc.5.if.end10_crit_edge:                     ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.6:                                        ; preds = %for.inc.5
  %and.7 = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7)
  %tobool7.not.7 = icmp eq i32 %and.7, 0
  br i1 %tobool7.not.7, label %for.inc.7, label %for.inc.6.if.end10_crit_edge

for.inc.6.if.end10_crit_edge:                     ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.7:                                        ; preds = %for.inc.6
  %and.8 = and i32 %8, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.8)
  %tobool7.not.8 = icmp eq i32 %and.8, 0
  br i1 %tobool7.not.8, label %for.inc.8, label %for.inc.7.if.end10_crit_edge

for.inc.7.if.end10_crit_edge:                     ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.8:                                        ; preds = %for.inc.7
  %and.9 = and i32 %8, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.9)
  %tobool7.not.9 = icmp eq i32 %and.9, 0
  br i1 %tobool7.not.9, label %for.inc.9, label %for.inc.8.if.end10_crit_edge

for.inc.8.if.end10_crit_edge:                     ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.9:                                        ; preds = %for.inc.8
  %and.10 = and i32 %8, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.10)
  %tobool7.not.10 = icmp eq i32 %and.10, 0
  br i1 %tobool7.not.10, label %for.inc.10, label %for.inc.9.if.end10_crit_edge

for.inc.9.if.end10_crit_edge:                     ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.10:                                       ; preds = %for.inc.9
  %and.11 = and i32 %8, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.11)
  %tobool7.not.11 = icmp eq i32 %and.11, 0
  br i1 %tobool7.not.11, label %for.inc.11, label %for.inc.10.if.end10_crit_edge

for.inc.10.if.end10_crit_edge:                    ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.11:                                       ; preds = %for.inc.10
  %and.12 = and i32 %8, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.12)
  %tobool7.not.12 = icmp eq i32 %and.12, 0
  br i1 %tobool7.not.12, label %for.inc.12, label %for.inc.11.if.end10_crit_edge

for.inc.11.if.end10_crit_edge:                    ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.12:                                       ; preds = %for.inc.11
  %and.13 = and i32 %8, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.13)
  %tobool7.not.13 = icmp eq i32 %and.13, 0
  br i1 %tobool7.not.13, label %for.inc.13, label %for.inc.12.if.end10_crit_edge

for.inc.12.if.end10_crit_edge:                    ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.13:                                       ; preds = %for.inc.12
  %and.14 = and i32 %8, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.14)
  %tobool7.not.14 = icmp eq i32 %and.14, 0
  br i1 %tobool7.not.14, label %for.inc.14, label %for.inc.13.if.end10_crit_edge

for.inc.13.if.end10_crit_edge:                    ; preds = %for.inc.13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.inc.14:                                       ; preds = %for.inc.13
  call void @__sanitizer_cov_trace_pc() #15
  %and.15 = lshr i32 %8, 11
  %9 = and i32 %and.15, 16
  br label %if.end10

if.end10:                                         ; preds = %for.inc.14, %for.inc.13.if.end10_crit_edge, %for.inc.12.if.end10_crit_edge, %for.inc.11.if.end10_crit_edge, %for.inc.10.if.end10_crit_edge, %for.inc.9.if.end10_crit_edge, %for.inc.8.if.end10_crit_edge, %for.inc.7.if.end10_crit_edge, %for.inc.6.if.end10_crit_edge, %for.inc.5.if.end10_crit_edge, %for.inc.4.if.end10_crit_edge, %for.inc.3.if.end10_crit_edge, %for.inc.2.if.end10_crit_edge, %for.inc.1.if.end10_crit_edge, %for.inc.if.end10_crit_edge, %for.body.preheader.if.end10_crit_edge, %if.else.if.end10_crit_edge
  %minchn.0 = phi i32 [ 0, %if.else.if.end10_crit_edge ], [ 1, %for.body.preheader.if.end10_crit_edge ], [ 2, %for.inc.if.end10_crit_edge ], [ 3, %for.inc.1.if.end10_crit_edge ], [ 4, %for.inc.2.if.end10_crit_edge ], [ 5, %for.inc.3.if.end10_crit_edge ], [ 6, %for.inc.4.if.end10_crit_edge ], [ 7, %for.inc.5.if.end10_crit_edge ], [ 8, %for.inc.6.if.end10_crit_edge ], [ 9, %for.inc.7.if.end10_crit_edge ], [ 10, %for.inc.8.if.end10_crit_edge ], [ 11, %for.inc.9.if.end10_crit_edge ], [ 12, %for.inc.10.if.end10_crit_edge ], [ 13, %for.inc.11.if.end10_crit_edge ], [ 14, %for.inc.12.if.end10_crit_edge ], [ 15, %for.inc.13.if.end10_crit_edge ], [ %9, %for.inc.14 ]
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %10 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %control, align 4
  %shl11 = shl i32 %11, 8
  %or = or i32 %shl11, %minchn.0
  %idx_off.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 3
  %12 = ptrtoint ptr %idx_off.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %idx_off.i, align 4
  %add.i = add i32 %or, %13
  %14 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cval, align 4
  %protocol.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %15, i32 0, i32 6
  %16 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %protocol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i = icmp eq i32 %17, 0
  br i1 %cmp.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 131, i32 noundef %add.i, ptr noundef %max) #13
  br label %get_ctl_value.exit

cond.false.i:                                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i = tail call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 131, i32 noundef %add.i, ptr noundef %max) #13
  br label %get_ctl_value.exit

get_ctl_value.exit:                               ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call1.i, %cond.false.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i)
  %cmp13 = icmp slt i32 %cond.i, 0
  br i1 %cmp13, label %get_ctl_value.exit.cleanup119_crit_edge, label %lor.lhs.false14

get_ctl_value.exit.cleanup119_crit_edge:          ; preds = %get_ctl_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup119

lor.lhs.false14:                                  ; preds = %get_ctl_value.exit
  %18 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %control, align 4
  %shl16 = shl i32 %19, 8
  %or17 = or i32 %shl16, %minchn.0
  %20 = ptrtoint ptr %idx_off.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %idx_off.i, align 4
  %add.i2 = add i32 %or17, %21
  %22 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cval, align 4
  %protocol.i3 = getelementptr inbounds %struct.usb_mixer_interface, ptr %23, i32 0, i32 6
  %24 = ptrtoint ptr %protocol.i3 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %protocol.i3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i4 = icmp eq i32 %25, 0
  br i1 %cmp.i4, label %cond.true.i6, label %cond.false.i8

cond.true.i6:                                     ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #15
  %call.i5 = tail call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 130, i32 noundef %add.i2, ptr noundef %min) #13
  br label %get_ctl_value.exit10

cond.false.i8:                                    ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i7 = tail call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 130, i32 noundef %add.i2, ptr noundef %min) #13
  br label %get_ctl_value.exit10

get_ctl_value.exit10:                             ; preds = %cond.false.i8, %cond.true.i6
  %cond.i9 = phi i32 [ %call.i5, %cond.true.i6 ], [ %call1.i7, %cond.false.i8 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i9)
  %cmp20 = icmp slt i32 %cond.i9, 0
  br i1 %cmp20, label %get_ctl_value.exit10.cleanup119_crit_edge, label %if.end30

get_ctl_value.exit10.cleanup119_crit_edge:        ; preds = %get_ctl_value.exit10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup119

if.end30:                                         ; preds = %get_ctl_value.exit10
  %26 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %control, align 4
  %shl32 = shl i32 %27, 8
  %or33 = or i32 %shl32, %minchn.0
  %28 = ptrtoint ptr %idx_off.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %idx_off.i, align 4
  %add.i12 = add i32 %or33, %29
  %30 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cval, align 4
  %protocol.i13 = getelementptr inbounds %struct.usb_mixer_interface, ptr %31, i32 0, i32 6
  %32 = ptrtoint ptr %protocol.i13 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %protocol.i13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp.i14 = icmp eq i32 %33, 0
  br i1 %cmp.i14, label %cond.true.i16, label %cond.false.i18

cond.true.i16:                                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  %call.i15 = tail call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 132, i32 noundef %add.i12, ptr noundef %res) #13
  br label %get_ctl_value.exit20

cond.false.i18:                                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i17 = tail call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 132, i32 noundef %add.i12, ptr noundef %res) #13
  br label %get_ctl_value.exit20

get_ctl_value.exit20:                             ; preds = %cond.false.i18, %cond.true.i16
  %cond.i19 = phi i32 [ %call.i15, %cond.true.i16 ], [ %call1.i17, %cond.false.i18 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i19)
  %cmp36 = icmp slt i32 %cond.i19, 0
  br i1 %cmp36, label %get_ctl_value.exit20.if.end72.sink.split_crit_edge, label %if.else39

get_ctl_value.exit20.if.end72.sink.split_crit_edge: ; preds = %get_ctl_value.exit20
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end72.sink.split

if.else39:                                        ; preds = %get_ctl_value.exit20
  %34 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %cval, align 4
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %35, i32 0, i32 6
  %36 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp42 = icmp eq i32 %37, 0
  br i1 %cmp42, label %if.then43, label %if.else39.if.end67thread-pre-split_crit_edge

if.else39.if.end67thread-pre-split_crit_edge:     ; preds = %if.else39
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end67thread-pre-split

if.then43:                                        ; preds = %if.else39
  %38 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %39)
  %cmp46167 = icmp sgt i32 %39, 1
  br i1 %cmp46167, label %if.then43.while.body_crit_edge, label %if.then43.while.end_crit_edge

if.then43.while.end_crit_edge:                    ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.then43.while.body_crit_edge:                   ; preds = %if.then43
  br label %while.body

while.body:                                       ; preds = %if.end54.while.body_crit_edge, %if.then43.while.body_crit_edge
  %40 = phi i32 [ %div56, %if.end54.while.body_crit_edge ], [ %39, %if.then43.while.body_crit_edge ]
  %41 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %control, align 4
  %shl48 = shl i32 %42, 8
  %or49 = or i32 %shl48, %minchn.0
  %div160163 = lshr i32 %40, 1
  %call51 = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %cval, i32 noundef 4, i32 noundef %or49, i32 noundef %div160163)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %cmp52 = icmp slt i32 %call51, 0
  br i1 %cmp52, label %while.body.while.end_crit_edge, label %if.end54

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end54:                                         ; preds = %while.body
  %43 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %res, align 4
  %div56 = sdiv i32 %44, 2
  store i32 %div56, ptr %res, align 4
  %cmp46 = icmp sgt i32 %44, 3
  br i1 %cmp46, label %if.end54.while.body_crit_edge, label %if.end54.while.end_crit_edge

if.end54.while.end_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end54.while.body_crit_edge:                    ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

while.end:                                        ; preds = %if.end54.while.end_crit_edge, %while.body.while.end_crit_edge, %if.then43.while.end_crit_edge
  %45 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %control, align 4
  %shl58 = shl i32 %46, 8
  %or59 = or i32 %shl58, %minchn.0
  %47 = ptrtoint ptr %idx_off.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %idx_off.i, align 4
  %add.i22 = add i32 %or59, %48
  %49 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %cval, align 4
  %protocol.i23 = getelementptr inbounds %struct.usb_mixer_interface, ptr %50, i32 0, i32 6
  %51 = ptrtoint ptr %protocol.i23 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %protocol.i23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %cmp.i24 = icmp eq i32 %52, 0
  br i1 %cmp.i24, label %cond.true.i26, label %cond.false.i28

cond.true.i26:                                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i25 = tail call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 132, i32 noundef %add.i22, ptr noundef %res) #13
  br label %get_ctl_value.exit30

cond.false.i28:                                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i27 = tail call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 132, i32 noundef %add.i22, ptr noundef %res) #13
  br label %get_ctl_value.exit30

get_ctl_value.exit30:                             ; preds = %cond.false.i28, %cond.true.i26
  %cond.i29 = phi i32 [ %call.i25, %cond.true.i26 ], [ %call1.i27, %cond.false.i28 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i29)
  %cmp62 = icmp slt i32 %cond.i29, 0
  br i1 %cmp62, label %if.then63, label %get_ctl_value.exit30.if.end67thread-pre-split_crit_edge

get_ctl_value.exit30.if.end67thread-pre-split_crit_edge: ; preds = %get_ctl_value.exit30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end67thread-pre-split

if.then63:                                        ; preds = %get_ctl_value.exit30
  call void @__sanitizer_cov_trace_pc() #15
  %53 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %39, ptr %res, align 4
  br label %if.end67

if.end67thread-pre-split:                         ; preds = %get_ctl_value.exit30.if.end67thread-pre-split_crit_edge, %if.else39.if.end67thread-pre-split_crit_edge
  %54 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %54)
  %.pr = load i32, ptr %res, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.end67thread-pre-split, %if.then63
  %55 = phi i32 [ %.pr, %if.end67thread-pre-split ], [ %39, %if.then63 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %cmp69 = icmp eq i32 %55, 0
  br i1 %cmp69, label %if.end67.if.end72.sink.split_crit_edge, label %if.end67.if.end72_crit_edge

if.end67.if.end72_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end72

if.end67.if.end72.sink.split_crit_edge:           ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end72.sink.split

if.end72.sink.split:                              ; preds = %if.end67.if.end72.sink.split_crit_edge, %get_ctl_value.exit20.if.end72.sink.split_crit_edge
  %56 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 1, ptr %res, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.end72.sink.split, %if.end67.if.end72_crit_edge
  %57 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %min, align 4
  %59 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %res, align 4
  %add75 = add i32 %60, %58
  %61 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add75, i32 %62)
  %cmp77 = icmp slt i32 %add75, %62
  br i1 %cmp77, label %if.then78, label %if.end72.if.end122_crit_edge

if.end72.if.end122_crit_edge:                     ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end122

if.then78:                                        ; preds = %if.end72
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %saved) #13
  %63 = ptrtoint ptr %saved to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 -1, ptr %saved, align 4, !annotation !719
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %check) #13
  %64 = ptrtoint ptr %check to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 -1, ptr %check, align 4, !annotation !719
  %65 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %control, align 4
  %shl.i = shl i32 %66, 8
  %or.i = or i32 %shl.i, %minchn.0
  %67 = ptrtoint ptr %idx_off.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %idx_off.i, align 4
  %add.i.i = add i32 %or.i, %68
  %69 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %cval, align 4
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %70, i32 0, i32 6
  %71 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %cmp.i.i = icmp eq i32 %72, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %saved) #13
  br label %get_cur_mix_raw.exit

cond.false.i.i:                                   ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %saved) #13
  br label %get_cur_mix_raw.exit

get_cur_mix_raw.exit:                             ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp82 = icmp slt i32 %cond.i.i, 0
  br i1 %cmp82, label %get_cur_mix_raw.exit.cleanup.thread_crit_edge, label %for.cond85.preheader

get_cur_mix_raw.exit.cleanup.thread_crit_edge:    ; preds = %get_cur_mix_raw.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

for.cond85.preheader:                             ; preds = %get_cur_mix_raw.exit
  %73 = ptrtoint ptr %saved to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %saved, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %minchn.0)
  %cmp.i31 = icmp eq i32 %minchn.0, 0
  %ch_readonly.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 4
  %sub.i = add nsw i32 %minchn.0, -1
  %shl.i33 = shl nuw i32 1, %sub.i
  %master_readonly.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 5
  %shl13.i = shl nuw i32 1, %minchn.0
  %cached.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 13
  %arrayidx.i = getelementptr %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 14, i32 0
  %75 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %74, i32 %76)
  %cmp87172 = icmp slt i32 %74, %76
  %77 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %res, align 4
  %79 = sub i32 0, %78
  %test.0.p173 = select i1 %cmp87172, i32 %78, i32 %79
  %test.0174 = add i32 %74, %test.0.p173
  %80 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %min, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %test.0174, i32 %81)
  %cmp95175 = icmp slt i32 %test.0174, %81
  call void @__sanitizer_cov_trace_cmp4(i32 %test.0174, i32 %76)
  %cmp98176 = icmp sgt i32 %test.0174, %76
  %or.cond177 = select i1 %cmp95175, i1 true, i1 %cmp98176
  br i1 %or.cond177, label %for.cond85.preheader.if.then105_crit_edge, label %for.cond85.preheader.lor.lhs.false99_crit_edge

for.cond85.preheader.lor.lhs.false99_crit_edge:   ; preds = %for.cond85.preheader
  br label %lor.lhs.false99

for.cond85.preheader.if.then105_crit_edge:        ; preds = %for.cond85.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then105

lor.lhs.false99:                                  ; preds = %if.end110.lor.lhs.false99_crit_edge, %for.cond85.preheader.lor.lhs.false99_crit_edge
  %test.0178 = phi i32 [ %test.0, %if.end110.lor.lhs.false99_crit_edge ], [ %test.0174, %for.cond85.preheader.lor.lhs.false99_crit_edge ]
  br i1 %cmp.i31, label %cond.true.i32, label %cond.false.i34

cond.true.i32:                                    ; preds = %lor.lhs.false99
  call void @__sanitizer_cov_trace_pc() #15
  %82 = ptrtoint ptr %master_readonly.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %master_readonly.i, align 4
  br label %cond.end.i

cond.false.i34:                                   ; preds = %lor.lhs.false99
  call void @__sanitizer_cov_trace_pc() #15
  %84 = ptrtoint ptr %ch_readonly.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %ch_readonly.i, align 4
  %and.i = and i32 %85, %shl.i33
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i34, %cond.true.i32
  %cond.i35 = phi i32 [ %83, %cond.true.i32 ], [ %and.i, %cond.false.i34 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i35)
  %tobool.not.i = icmp eq i32 %cond.i35, 0
  br i1 %tobool.not.i, label %if.end6.i, label %do.body.i

do.body.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@get_min_max_with_quirks, %if.then4.i)) #13
          to label %lor.lhs.false102 [label %if.then4.i], !srcloc !716

if.then4.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %86 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %cval, align 4
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %87, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %89, i32 0, i32 1
  %90 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %dev.i, align 4
  %dev5.i = getelementptr inbounds %struct.usb_device, ptr %91, i32 0, i32 15
  %92 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %control, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef %minchn.0, i32 noundef %93) #13
  br label %lor.lhs.false102

if.end6.i:                                        ; preds = %cond.end.i
  %94 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %control, align 4
  %shl8.i = shl i32 %95, 8
  %or.i37 = or i32 %shl8.i, %minchn.0
  %call9.i = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %cval, i32 noundef 1, i32 noundef %or.i37, i32 noundef %test.0178) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp10.i = icmp slt i32 %call9.i, 0
  br i1 %cmp10.i, label %if.end6.i.if.then105_crit_edge, label %if.end12.i

if.end6.i.if.then105_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then105

if.end12.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  %96 = ptrtoint ptr %cached.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %cached.i, align 4
  %or14.i = or i32 %97, %shl13.i
  store i32 %or14.i, ptr %cached.i, align 4
  %98 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %test.0178, ptr %arrayidx.i, align 4
  br label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %if.end12.i, %if.then4.i, %do.body.i
  %99 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %control, align 4
  %shl.i39 = shl i32 %100, 8
  %or.i40 = or i32 %shl.i39, %minchn.0
  %101 = ptrtoint ptr %idx_off.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %idx_off.i, align 4
  %add.i.i42 = add i32 %or.i40, %102
  %103 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %cval, align 4
  %protocol.i.i43 = getelementptr inbounds %struct.usb_mixer_interface, ptr %104, i32 0, i32 6
  %105 = ptrtoint ptr %protocol.i.i43 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %protocol.i.i43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %cmp.i.i44 = icmp eq i32 %106, 0
  br i1 %cmp.i.i44, label %cond.true.i.i46, label %cond.false.i.i48

cond.true.i.i46:                                  ; preds = %lor.lhs.false102
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i45 = call fastcc i32 @get_ctl_value_v1(ptr noundef %cval, i32 noundef 129, i32 noundef %add.i.i42, ptr noundef nonnull %check) #13
  br label %get_cur_mix_raw.exit50

cond.false.i.i48:                                 ; preds = %lor.lhs.false102
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i47 = call fastcc i32 @get_ctl_value_v2(ptr noundef %cval, i32 noundef 129, i32 noundef %add.i.i42, ptr noundef nonnull %check) #13
  br label %get_cur_mix_raw.exit50

get_cur_mix_raw.exit50:                           ; preds = %cond.false.i.i48, %cond.true.i.i46
  %cond.i.i49 = phi i32 [ %call.i.i45, %cond.true.i.i46 ], [ %call1.i.i47, %cond.false.i.i48 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i49)
  %tobool104.not = icmp eq i32 %cond.i.i49, 0
  br i1 %tobool104.not, label %if.end107, label %get_cur_mix_raw.exit50.if.then105_crit_edge

get_cur_mix_raw.exit50.if.then105_crit_edge:      ; preds = %get_cur_mix_raw.exit50
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then105

if.then105:                                       ; preds = %if.end110.if.then105_crit_edge, %get_cur_mix_raw.exit50.if.then105_crit_edge, %if.end6.i.if.then105_crit_edge, %for.cond85.preheader.if.then105_crit_edge
  %107 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %60, ptr %res, align 4
  br label %for.end112

if.end107:                                        ; preds = %get_cur_mix_raw.exit50
  %108 = ptrtoint ptr %check to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %check, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %test.0178, i32 %109)
  %cmp108 = icmp eq i32 %test.0178, %109
  br i1 %cmp108, label %if.end107.for.end112_crit_edge, label %if.end110

if.end107.for.end112_crit_edge:                   ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end112

if.end110:                                        ; preds = %if.end107
  %110 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %res, align 4
  %mul = shl i32 %111, 1
  store i32 %mul, ptr %res, align 4
  %112 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %74, i32 %113)
  %cmp87 = icmp slt i32 %74, %113
  %114 = sub i32 0, %mul
  %test.0.p = select i1 %cmp87, i32 %mul, i32 %114
  %test.0 = add i32 %74, %test.0.p
  %115 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %min, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %test.0, i32 %116)
  %cmp95 = icmp slt i32 %test.0, %116
  call void @__sanitizer_cov_trace_cmp4(i32 %test.0, i32 %113)
  %cmp98 = icmp sgt i32 %test.0, %113
  %or.cond = select i1 %cmp95, i1 true, i1 %cmp98
  br i1 %or.cond, label %if.end110.if.then105_crit_edge, label %if.end110.lor.lhs.false99_crit_edge

if.end110.lor.lhs.false99_crit_edge:              ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false99

if.end110.if.then105_crit_edge:                   ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then105

for.end112:                                       ; preds = %if.end107.for.end112_crit_edge, %if.then105
  br i1 %cmp.i31, label %cond.true.i53, label %cond.false.i58

cond.true.i53:                                    ; preds = %for.end112
  call void @__sanitizer_cov_trace_pc() #15
  %117 = ptrtoint ptr %master_readonly.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %master_readonly.i, align 4
  br label %cond.end.i61

cond.false.i58:                                   ; preds = %for.end112
  call void @__sanitizer_cov_trace_pc() #15
  %119 = ptrtoint ptr %ch_readonly.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %ch_readonly.i, align 4
  %and.i57 = and i32 %120, %shl.i33
  br label %cond.end.i61

cond.end.i61:                                     ; preds = %cond.false.i58, %cond.true.i53
  %cond.i59 = phi i32 [ %118, %cond.true.i53 ], [ %and.i57, %cond.false.i58 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i59)
  %tobool.not.i60 = icmp eq i32 %cond.i59, 0
  br i1 %tobool.not.i60, label %if.end6.i72, label %do.body.i62

do.body.i62:                                      ; preds = %cond.end.i61
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@get_min_max_with_quirks, %if.then4.i66)) #13
          to label %cleanup [label %if.then4.i66], !srcloc !716

if.then4.i66:                                     ; preds = %do.body.i62
  call void @__sanitizer_cov_trace_pc() #15
  %121 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %cval, align 4
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %122, align 4
  %dev.i63 = getelementptr inbounds %struct.snd_usb_audio, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %dev.i63 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %dev.i63, align 4
  %dev5.i64 = getelementptr inbounds %struct.usb_device, ptr %126, i32 0, i32 15
  %127 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %control, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i64, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef %minchn.0, i32 noundef %128) #13
  br label %cleanup.thread

if.end6.i72:                                      ; preds = %cond.end.i61
  %129 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %control, align 4
  %shl8.i68 = shl i32 %130, 8
  %or.i69 = or i32 %shl8.i68, %minchn.0
  %call9.i70 = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %cval, i32 noundef 1, i32 noundef %or.i69, i32 noundef %74) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i70)
  %cmp10.i71 = icmp slt i32 %call9.i70, 0
  br i1 %cmp10.i71, label %if.end6.i72.cleanup.thread_crit_edge, label %if.end12.i77

if.end6.i72.cleanup.thread_crit_edge:             ; preds = %if.end6.i72
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end12.i77:                                     ; preds = %if.end6.i72
  call void @__sanitizer_cov_trace_pc() #15
  %131 = ptrtoint ptr %cached.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %cached.i, align 4
  %or14.i75 = or i32 %132, %shl13.i
  store i32 %or14.i75, ptr %cached.i, align 4
  %133 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %74, ptr %arrayidx.i, align 4
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end12.i77, %if.end6.i72.cleanup.thread_crit_edge, %if.then4.i66, %get_cur_mix_raw.exit.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %check) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %saved) #13
  br label %if.end122

cleanup:                                          ; preds = %do.body.i62
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %check) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %saved) #13
  br label %if.end122

cleanup119:                                       ; preds = %get_ctl_value.exit10.cleanup119_crit_edge, %get_ctl_value.exit.cleanup119_crit_edge
  %134 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %cval, align 4
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %135, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %dev, align 4
  %dev22 = getelementptr inbounds %struct.usb_device, ptr %139, i32 0, i32 15
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %140 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %id, align 4
  %hostif.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %135, i32 0, i32 1
  %142 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %143, i32 0, i32 2
  %144 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %144)
  %145 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %145 to i32
  %146 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %control, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev22, ptr noundef nonnull @.str.20, i32 noundef %141, i32 noundef %conv.i, i32 noundef %147, i32 noundef %141) #19
  br label %cleanup198

if.end122:                                        ; preds = %cleanup, %cleanup.thread, %if.end72.if.end122_crit_edge, %entry.if.end122_crit_edge
  %initialized118 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 15
  %148 = ptrtoint ptr %initialized118 to i32
  call void @__asan_store1_noabort(i32 %148)
  store i8 1, ptr %initialized118, align 4
  %tobool123.not = icmp eq ptr %kctl, null
  br i1 %tobool123.not, label %if.end122.if.end125_crit_edge, label %if.then124

if.end122.if.end125_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

if.then124:                                       ; preds = %if.end122
  %149 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %cval, align 4
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %150, align 4
  %usb_id.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 4
  %153 = ptrtoint ptr %usb_id.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %usb_id.i, align 4
  %155 = zext i32 %154 to i64
  call void @__sanitizer_cov_trace_switch(i64 %155, ptr @__sancov_gen_cov_switch_values.295)
  switch i32 %154, label %if.then124.if.end125_crit_edge [
    i32 123936816, label %if.then124.sw.bb.i_crit_edge
    i32 123936817, label %if.then124.sw.bb.i_crit_edge180
    i32 123936897, label %if.then124.sw.bb42.i_crit_edge
    i32 123936896, label %if.then124.sw.bb42.i_crit_edge181
    i32 227279107, label %sw.bb74.i
    i32 74514689, label %if.then124.sw.bb87.i_crit_edge
    i32 74514692, label %if.then124.sw.bb87.i_crit_edge182
    i32 74514693, label %if.then124.sw.bb87.i_crit_edge183
    i32 108138561, label %if.then124.sw.bb87.i_crit_edge184
    i32 74254756, label %sw.bb103.i
    i32 74254343, label %if.then124.sw.bb119.i_crit_edge
    i32 74254344, label %if.then124.sw.bb119.i_crit_edge185
    i32 74254345, label %if.then124.sw.bb119.i_crit_edge186
    i32 74254361, label %if.then124.sw.bb119.i_crit_edge187
    i32 74254363, label %if.then124.sw.bb119.i_crit_edge188
    i32 74254365, label %if.then124.sw.bb119.i_crit_edge189
    i32 74254373, label %if.then124.sw.bb119.i_crit_edge190
    i32 74254374, label %if.then124.sw.bb119.i_crit_edge191
    i32 74254538, label %if.then124.sw.bb119.i_crit_edge192
    i32 74254737, label %if.then124.sw.bb119.i_crit_edge193
    i32 74254754, label %if.then124.sw.bb119.i_crit_edge194
    i32 76886082, label %sw.bb133.i
    i32 304359973, label %sw.bb150.i
  ]

if.then124.sw.bb119.i_crit_edge194:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge193:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge192:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge191:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge190:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge189:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge188:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge187:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge186:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge185:               ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb119.i_crit_edge:                  ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb119.i

if.then124.sw.bb87.i_crit_edge184:                ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb87.i

if.then124.sw.bb87.i_crit_edge183:                ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb87.i

if.then124.sw.bb87.i_crit_edge182:                ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb87.i

if.then124.sw.bb87.i_crit_edge:                   ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb87.i

if.then124.sw.bb42.i_crit_edge181:                ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb42.i

if.then124.sw.bb42.i_crit_edge:                   ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb42.i

if.then124.sw.bb.i_crit_edge180:                  ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.then124.sw.bb.i_crit_edge:                     ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

if.then124.if.end125_crit_edge:                   ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

sw.bb.i:                                          ; preds = %if.then124.sw.bb.i_crit_edge, %if.then124.sw.bb.i_crit_edge180
  %name.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call.i80 = tail call i32 @strcmp(ptr noundef %name.i, ptr noundef nonnull dereferenceable(16) @.str.28) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i80)
  %cmp.i81 = icmp eq i32 %call.i80, 0
  br i1 %cmp.i81, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  %156 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 0, ptr %min, align 4
  %157 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 65535, ptr %max, align 4
  %158 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 230, ptr %res, align 4
  br label %if.end125

if.end.i:                                         ; preds = %sw.bb.i
  %call5.i = tail call i32 @strcmp(ptr noundef %name.i, ptr noundef nonnull dereferenceable(14) @.str.29) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp eq i32 %call5.i, 0
  br i1 %cmp6.i, label %if.end.i.if.then12.i_crit_edge, label %lor.lhs.false.i

if.end.i.if.then12.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then12.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %call10.i = tail call i32 @strcmp(ptr noundef %name.i, ptr noundef nonnull dereferenceable(23) @.str.30) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %cmp11.i = icmp eq i32 %call10.i, 0
  br i1 %cmp11.i, label %lor.lhs.false.i.if.then12.i_crit_edge, label %if.end15.i

lor.lhs.false.i.if.then12.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then12.i

if.then12.i:                                      ; preds = %lor.lhs.false.i.if.then12.i_crit_edge, %if.end.i.if.then12.i_crit_edge
  %159 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 0, ptr %min, align 4
  %160 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 255, ptr %max, align 4
  br label %if.end125

if.end15.i:                                       ; preds = %lor.lhs.false.i
  %call19.i = tail call ptr @strstr(ptr noundef %name.i, ptr noundef nonnull @.str.31) #13
  %cmp20.not.i = icmp eq ptr %call19.i, null
  br i1 %cmp20.not.i, label %if.end25.i, label %if.then21.i

if.then21.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #15
  %161 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 46854, ptr %min, align 4
  %162 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 65403, ptr %max, align 4
  %163 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 115, ptr %res, align 4
  br label %if.end125

if.end25.i:                                       ; preds = %if.end15.i
  %call29.i = tail call ptr @strstr(ptr noundef %name.i, ptr noundef nonnull @.str.32) #13
  %cmp30.not.i = icmp eq ptr %call29.i, null
  br i1 %cmp30.not.i, label %lor.lhs.false31.i, label %if.end25.i.if.then37.i_crit_edge

if.end25.i.if.then37.i_crit_edge:                 ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then37.i

lor.lhs.false31.i:                                ; preds = %if.end25.i
  %call35.i = tail call ptr @strstr(ptr noundef %name.i, ptr noundef nonnull @.str.33) #13
  %cmp36.not.i = icmp eq ptr %call35.i, null
  br i1 %cmp36.not.i, label %lor.lhs.false31.i.if.end125_crit_edge, label %lor.lhs.false31.i.if.then37.i_crit_edge

lor.lhs.false31.i.if.then37.i_crit_edge:          ; preds = %lor.lhs.false31.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then37.i

lor.lhs.false31.i.if.end125_crit_edge:            ; preds = %lor.lhs.false31.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

if.then37.i:                                      ; preds = %lor.lhs.false31.i.if.then37.i_crit_edge, %if.end25.i.if.then37.i_crit_edge
  %164 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 46587, ptr %min, align 4
  %165 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 64766, ptr %max, align 4
  %166 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 115, ptr %res, align 4
  br label %if.end125

sw.bb42.i:                                        ; preds = %if.then124.sw.bb42.i_crit_edge, %if.then124.sw.bb42.i_crit_edge181
  %name44.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call46.i = tail call i32 @strcmp(ptr noundef %name44.i, ptr noundef nonnull dereferenceable(16) @.str.28) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46.i)
  %cmp47.i = icmp eq i32 %call46.i, 0
  br i1 %cmp47.i, label %do.end.i, label %if.end53.i

do.end.i:                                         ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev.i82 = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %167 = ptrtoint ptr %dev.i82 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %dev.i82, align 4
  %dev49.i = getelementptr inbounds %struct.usb_device, ptr %168, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev49.i, ptr noundef nonnull @.str.34) #19
  %169 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 0, ptr %min, align 4
  %170 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %170)
  store i32 32512, ptr %max, align 4
  %171 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 256, ptr %res, align 4
  br label %if.end125

if.end53.i:                                       ; preds = %sw.bb42.i
  %call57.i = tail call i32 @strcmp(ptr noundef %name44.i, ptr noundef nonnull dereferenceable(14) @.str.29) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i)
  %cmp58.i = icmp eq i32 %call57.i, 0
  br i1 %cmp58.i, label %if.end53.i.do.end68.i_crit_edge, label %lor.lhs.false59.i

if.end53.i.do.end68.i_crit_edge:                  ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end68.i

lor.lhs.false59.i:                                ; preds = %if.end53.i
  %call63.i = tail call i32 @strcmp(ptr noundef %name44.i, ptr noundef nonnull dereferenceable(23) @.str.30) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63.i)
  %cmp64.i = icmp eq i32 %call63.i, 0
  br i1 %cmp64.i, label %lor.lhs.false59.i.do.end68.i_crit_edge, label %lor.lhs.false59.i.if.end125_crit_edge

lor.lhs.false59.i.if.end125_crit_edge:            ; preds = %lor.lhs.false59.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

lor.lhs.false59.i.do.end68.i_crit_edge:           ; preds = %lor.lhs.false59.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end68.i

do.end68.i:                                       ; preds = %lor.lhs.false59.i.do.end68.i_crit_edge, %if.end53.i.do.end68.i_crit_edge
  %dev69.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %172 = ptrtoint ptr %dev69.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %dev69.i, align 4
  %dev70.i = getelementptr inbounds %struct.usb_device, ptr %173, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev70.i, ptr noundef nonnull @.str.37) #19
  %174 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 0, ptr %min, align 4
  %175 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 127, ptr %max, align 4
  br label %if.end125

sw.bb74.i:                                        ; preds = %if.then124
  %name76.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call78.i = tail call i32 @strcmp(ptr noundef %name76.i, ptr noundef nonnull dereferenceable(20) @.str.39) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78.i)
  %tobool.not.i83 = icmp eq i32 %call78.i, 0
  br i1 %tobool.not.i83, label %do.end82.i, label %sw.bb74.i.if.end125_crit_edge

sw.bb74.i.if.end125_crit_edge:                    ; preds = %sw.bb74.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

do.end82.i:                                       ; preds = %sw.bb74.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev83.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %176 = ptrtoint ptr %dev83.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %dev83.i, align 4
  %dev84.i = getelementptr inbounds %struct.usb_device, ptr %177, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev84.i, ptr noundef nonnull @.str.41) #19
  %178 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 -256, ptr %min, align 4
  br label %if.end125

sw.bb87.i:                                        ; preds = %if.then124.sw.bb87.i_crit_edge, %if.then124.sw.bb87.i_crit_edge182, %if.then124.sw.bb87.i_crit_edge183, %if.then124.sw.bb87.i_crit_edge184
  %name89.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call91.i = tail call i32 @strcmp(ptr noundef %name89.i, ptr noundef nonnull dereferenceable(20) @.str.39) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91.i)
  %tobool92.not.i = icmp eq i32 %call91.i, 0
  br i1 %tobool92.not.i, label %land.lhs.true.i, label %sw.bb87.i.if.end125_crit_edge

sw.bb87.i.if.end125_crit_edge:                    ; preds = %sw.bb87.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

land.lhs.true.i:                                  ; preds = %sw.bb87.i
  %179 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %min, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15616, i32 %180)
  %cmp94.i = icmp eq i32 %180, -15616
  br i1 %cmp94.i, label %do.end98.i, label %land.lhs.true.i.if.end125_crit_edge

land.lhs.true.i.if.end125_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

do.end98.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev99.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %181 = ptrtoint ptr %dev99.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %dev99.i, align 4
  %dev100.i = getelementptr inbounds %struct.usb_device, ptr %182, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev100.i, ptr noundef nonnull @.str.44) #19
  %183 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 -256, ptr %max, align 4
  br label %if.end125

sw.bb103.i:                                       ; preds = %if.then124
  %name105.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call107.i = tail call i32 @strcmp(ptr noundef %name105.i, ptr noundef nonnull dereferenceable(19) @.str.46) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call107.i)
  %tobool108.not.i = icmp eq i32 %call107.i, 0
  br i1 %tobool108.not.i, label %do.end112.i, label %sw.bb103.i.if.end125_crit_edge

sw.bb103.i.if.end125_crit_edge:                   ; preds = %sw.bb103.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

do.end112.i:                                      ; preds = %sw.bb103.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev113.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %184 = ptrtoint ptr %dev113.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %dev113.i, align 4
  %dev114.i = getelementptr inbounds %struct.usb_device, ptr %185, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev114.i, ptr noundef nonnull @.str.48) #19
  %186 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %186)
  store i32 6080, ptr %min, align 4
  %187 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %187)
  store i32 8768, ptr %max, align 4
  %188 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 192, ptr %res, align 4
  br label %if.end125

sw.bb119.i:                                       ; preds = %if.then124.sw.bb119.i_crit_edge, %if.then124.sw.bb119.i_crit_edge185, %if.then124.sw.bb119.i_crit_edge186, %if.then124.sw.bb119.i_crit_edge187, %if.then124.sw.bb119.i_crit_edge188, %if.then124.sw.bb119.i_crit_edge189, %if.then124.sw.bb119.i_crit_edge190, %if.then124.sw.bb119.i_crit_edge191, %if.then124.sw.bb119.i_crit_edge192, %if.then124.sw.bb119.i_crit_edge193, %if.then124.sw.bb119.i_crit_edge194
  %name121.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call123.i = tail call i32 @strcmp(ptr noundef %name121.i, ptr noundef nonnull dereferenceable(19) @.str.46) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call123.i)
  %tobool124.not.i = icmp eq i32 %call123.i, 0
  br i1 %tobool124.not.i, label %do.end128.i, label %sw.bb119.i.if.end125_crit_edge

sw.bb119.i.if.end125_crit_edge:                   ; preds = %sw.bb119.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

do.end128.i:                                      ; preds = %sw.bb119.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev129.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %189 = ptrtoint ptr %dev129.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %dev129.i, align 4
  %dev130.i = getelementptr inbounds %struct.usb_device, ptr %190, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev130.i, ptr noundef nonnull @.str.51) #19
  %191 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 384, ptr %res, align 4
  br label %if.end125

sw.bb133.i:                                       ; preds = %if.then124
  %name135.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call137.i = tail call ptr @strstr(ptr noundef %name135.i, ptr noundef nonnull @.str.32) #13
  %cmp138.not.i = icmp eq ptr %call137.i, null
  br i1 %cmp138.not.i, label %lor.lhs.false139.i, label %sw.bb133.i.if.then145.i_crit_edge

sw.bb133.i.if.then145.i_crit_edge:                ; preds = %sw.bb133.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then145.i

lor.lhs.false139.i:                               ; preds = %sw.bb133.i
  %call143.i = tail call ptr @strstr(ptr noundef %name135.i, ptr noundef nonnull @.str.53) #13
  %cmp144.not.i = icmp eq ptr %call143.i, null
  br i1 %cmp144.not.i, label %lor.lhs.false139.i.if.end125_crit_edge, label %lor.lhs.false139.i.if.then145.i_crit_edge

lor.lhs.false139.i.if.then145.i_crit_edge:        ; preds = %lor.lhs.false139.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then145.i

lor.lhs.false139.i.if.end125_crit_edge:           ; preds = %lor.lhs.false139.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

if.then145.i:                                     ; preds = %lor.lhs.false139.i.if.then145.i_crit_edge, %sw.bb133.i.if.then145.i_crit_edge
  %192 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %min, align 4
  %shr.i = ashr i32 %193, 8
  store i32 %shr.i, ptr %min, align 4
  %194 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 0, ptr %max, align 4
  %195 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 1, ptr %res, align 4
  br label %if.end125

sw.bb150.i:                                       ; preds = %if.then124
  %name152.i = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call154.i = tail call i32 @strcmp(ptr noundef %name152.i, ptr noundef nonnull dereferenceable(19) @.str.46) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call154.i)
  %tobool155.not.i = icmp eq i32 %call154.i, 0
  br i1 %tobool155.not.i, label %do.end159.i, label %sw.bb150.i.if.end125_crit_edge

sw.bb150.i.if.end125_crit_edge:                   ; preds = %sw.bb150.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end125

do.end159.i:                                      ; preds = %sw.bb150.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev160.i = getelementptr inbounds %struct.snd_usb_audio, ptr %152, i32 0, i32 1
  %196 = ptrtoint ptr %dev160.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %dev160.i, align 4
  %dev161.i = getelementptr inbounds %struct.usb_device, ptr %197, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev161.i, ptr noundef nonnull @.str.55) #19
  %198 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 16, ptr %res, align 4
  br label %if.end125

if.end125:                                        ; preds = %do.end159.i, %sw.bb150.i.if.end125_crit_edge, %if.then145.i, %lor.lhs.false139.i.if.end125_crit_edge, %do.end128.i, %sw.bb119.i.if.end125_crit_edge, %do.end112.i, %sw.bb103.i.if.end125_crit_edge, %do.end98.i, %land.lhs.true.i.if.end125_crit_edge, %sw.bb87.i.if.end125_crit_edge, %do.end82.i, %sw.bb74.i.if.end125_crit_edge, %do.end68.i, %lor.lhs.false59.i.if.end125_crit_edge, %do.end.i, %if.then37.i, %lor.lhs.false31.i.if.end125_crit_edge, %if.then21.i, %if.then12.i, %if.then.i, %if.then124.if.end125_crit_edge, %if.end122.if.end125_crit_edge
  %199 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %min, align 4
  %201 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %val_type, align 4
  %203 = zext i32 %202 to i64
  call void @__sanitizer_cov_trace_switch(i64 %203, ptr @__sancov_gen_cov_switch_values.296)
  switch i32 %202, label %convert_signed_value.exit [
    i32 0, label %convert_signed_value.exit.thread
    i32 1, label %convert_signed_value.exit.thread128
    i32 3, label %convert_signed_value.exit.thread133
    i32 2, label %convert_signed_value.exit.thread138
    i32 5, label %convert_signed_value.exit.thread143
    i32 4, label %convert_signed_value.exit.thread148
  ]

convert_signed_value.exit.thread:                 ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #15
  %204 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 0, ptr %dBmin, align 4
  %205 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %206)
  %tobool.i89 = icmp ne i32 %206, 0
  %lnot.ext.i90 = zext i1 %tobool.i89 to i32
  br label %convert_signed_value.exit110

convert_signed_value.exit.thread128:              ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #15
  %207 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %207)
  store i32 0, ptr %dBmin, align 4
  %208 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %209)
  %tobool3.not.i92 = icmp eq i32 %209, 0
  %lnot.ext5.i93 = zext i1 %tobool3.not.i92 to i32
  br label %convert_signed_value.exit110

convert_signed_value.exit.thread133:              ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #15
  %210 = and i32 %200, 255
  %div129136157.lhs.trunc = mul nuw nsw i32 %210, 100
  %div129136157158162 = lshr i32 %div129136157.lhs.trunc, 8
  %211 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %211)
  store i32 %div129136157158162, ptr %dBmin, align 4
  %212 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %max, align 4
  br label %sw.bb6.i96

convert_signed_value.exit.thread138:              ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #15
  %and8.i = and i32 %200, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %and8.i)
  %cmp.i86 = icmp ugt i32 %and8.i, 127
  %masksel28.i = select i1 %cmp.i86, i32 -256, i32 0
  %spec.select.i = or i32 %masksel28.i, %and8.i
  %mul128140 = mul nsw i32 %spec.select.i, 100
  %div129141 = sdiv i32 %mul128140, 256
  %214 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 %div129141, ptr %dBmin, align 4
  %215 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %max, align 4
  %and8.i97 = and i32 %216, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %and8.i97)
  %cmp.i98 = icmp ugt i32 %and8.i97, 127
  %masksel28.i99 = select i1 %cmp.i98, i32 -256, i32 0
  %spec.select.i100 = or i32 %masksel28.i99, %and8.i97
  br label %convert_signed_value.exit110

convert_signed_value.exit.thread143:              ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #15
  %and10.i = and i32 %200, 65535
  %mul128145 = mul nuw nsw i32 %and10.i, 100
  %div129146159161 = lshr i32 %mul128145, 8
  %217 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 %div129146159161, ptr %dBmin, align 4
  %218 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %max, align 4
  br label %sw.bb9.i103

convert_signed_value.exit.thread148:              ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #15
  %and12.i = and i32 %200, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %and12.i)
  %cmp13.i = icmp ugt i32 %and12.i, 32767
  %masksel.i = select i1 %cmp13.i, i32 -65536, i32 0
  %spec.select27.i = or i32 %masksel.i, %and12.i
  %mul128150 = mul nsw i32 %spec.select27.i, 100
  %div129151 = sdiv i32 %mul128150, 256
  %220 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %220)
  store i32 %div129151, ptr %dBmin, align 4
  %221 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %max, align 4
  br label %sw.bb11.i108

convert_signed_value.exit:                        ; preds = %if.end125
  %mul128 = mul i32 %200, 100
  %div129 = sdiv i32 %mul128, 256
  %223 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %223)
  store i32 %div129, ptr %dBmin, align 4
  %224 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %max, align 4
  %226 = zext i32 %202 to i64
  call void @__sanitizer_cov_trace_switch(i64 %226, ptr @__sancov_gen_cov_switch_values.297)
  switch i32 %202, label %convert_signed_value.exit.convert_signed_value.exit110_crit_edge [
    i32 4, label %convert_signed_value.exit.sw.bb11.i108_crit_edge
    i32 5, label %convert_signed_value.exit.sw.bb9.i103_crit_edge
    i32 3, label %convert_signed_value.exit.sw.bb6.i96_crit_edge
  ]

convert_signed_value.exit.sw.bb6.i96_crit_edge:   ; preds = %convert_signed_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb6.i96

convert_signed_value.exit.sw.bb9.i103_crit_edge:  ; preds = %convert_signed_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb9.i103

convert_signed_value.exit.sw.bb11.i108_crit_edge: ; preds = %convert_signed_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11.i108

convert_signed_value.exit.convert_signed_value.exit110_crit_edge: ; preds = %convert_signed_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %convert_signed_value.exit110

sw.bb6.i96:                                       ; preds = %convert_signed_value.exit.sw.bb6.i96_crit_edge, %convert_signed_value.exit.thread133
  %227 = phi i32 [ %213, %convert_signed_value.exit.thread133 ], [ %225, %convert_signed_value.exit.sw.bb6.i96_crit_edge ]
  %div129137 = phi i32 [ %div129136157158162, %convert_signed_value.exit.thread133 ], [ %div129, %convert_signed_value.exit.sw.bb6.i96_crit_edge ]
  %and.i95 = and i32 %227, 255
  br label %convert_signed_value.exit110

sw.bb9.i103:                                      ; preds = %convert_signed_value.exit.sw.bb9.i103_crit_edge, %convert_signed_value.exit.thread143
  %228 = phi i32 [ %219, %convert_signed_value.exit.thread143 ], [ %225, %convert_signed_value.exit.sw.bb9.i103_crit_edge ]
  %div129147 = phi i32 [ %div129146159161, %convert_signed_value.exit.thread143 ], [ %div129, %convert_signed_value.exit.sw.bb9.i103_crit_edge ]
  %and10.i102 = and i32 %228, 65535
  br label %convert_signed_value.exit110

sw.bb11.i108:                                     ; preds = %convert_signed_value.exit.sw.bb11.i108_crit_edge, %convert_signed_value.exit.thread148
  %229 = phi i32 [ %222, %convert_signed_value.exit.thread148 ], [ %225, %convert_signed_value.exit.sw.bb11.i108_crit_edge ]
  %div129152 = phi i32 [ %div129151, %convert_signed_value.exit.thread148 ], [ %div129, %convert_signed_value.exit.sw.bb11.i108_crit_edge ]
  %and12.i104 = and i32 %229, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %and12.i104)
  %cmp13.i105 = icmp ugt i32 %and12.i104, 32767
  %masksel.i106 = select i1 %cmp13.i105, i32 -65536, i32 0
  %spec.select27.i107 = or i32 %masksel.i106, %and12.i104
  br label %convert_signed_value.exit110

convert_signed_value.exit110:                     ; preds = %sw.bb11.i108, %sw.bb9.i103, %sw.bb6.i96, %convert_signed_value.exit.convert_signed_value.exit110_crit_edge, %convert_signed_value.exit.thread138, %convert_signed_value.exit.thread128, %convert_signed_value.exit.thread
  %div129127 = phi i32 [ 0, %convert_signed_value.exit.thread128 ], [ 0, %convert_signed_value.exit.thread ], [ %div129, %convert_signed_value.exit.convert_signed_value.exit110_crit_edge ], [ %div129147, %sw.bb9.i103 ], [ %div129137, %sw.bb6.i96 ], [ %div129141, %convert_signed_value.exit.thread138 ], [ %div129152, %sw.bb11.i108 ]
  %retval.0.i109 = phi i32 [ %lnot.ext5.i93, %convert_signed_value.exit.thread128 ], [ %lnot.ext.i90, %convert_signed_value.exit.thread ], [ %225, %convert_signed_value.exit.convert_signed_value.exit110_crit_edge ], [ %and10.i102, %sw.bb9.i103 ], [ %and.i95, %sw.bb6.i96 ], [ %spec.select.i100, %convert_signed_value.exit.thread138 ], [ %spec.select27.i107, %sw.bb11.i108 ]
  %mul133 = mul i32 %retval.0.i109, 100
  %div134 = sdiv i32 %mul133, 256
  %230 = ptrtoint ptr %dBmax to i32
  call void @__asan_store4_noabort(i32 %230)
  store i32 %div134, ptr %dBmax, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %div129127, i32 %div134)
  %cmp138 = icmp sgt i32 %div129127, %div134
  br i1 %cmp138, label %if.then139, label %if.else156

if.then139:                                       ; preds = %convert_signed_value.exit110
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div129127)
  %cmp141 = icmp slt i32 %div129127, 0
  br i1 %cmp141, label %if.then139.if.end150.sink.split_crit_edge, label %if.else144

if.then139.if.end150.sink.split_crit_edge:        ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end150.sink.split

if.else144:                                       ; preds = %if.then139
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div129127)
  %cmp146.not = icmp eq i32 %div129127, 0
  br i1 %cmp146.not, label %if.else144.if.end150_crit_edge, label %if.else144.if.end150.sink.split_crit_edge

if.else144.if.end150.sink.split_crit_edge:        ; preds = %if.else144
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end150.sink.split

if.else144.if.end150_crit_edge:                   ; preds = %if.else144
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end150

if.end150.sink.split:                             ; preds = %if.else144.if.end150.sink.split_crit_edge, %if.then139.if.end150.sink.split_crit_edge
  %dBmin.sink = phi ptr [ %dBmax, %if.then139.if.end150.sink.split_crit_edge ], [ %dBmin, %if.else144.if.end150.sink.split_crit_edge ]
  %231 = ptrtoint ptr %dBmin.sink to i32
  call void @__asan_store4_noabort(i32 %231)
  store i32 0, ptr %dBmin.sink, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.end150.sink.split, %if.else144.if.end150_crit_edge
  %232 = ptrtoint ptr %dBmin to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %dBmin, align 4
  %234 = ptrtoint ptr %dBmax to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %dBmax, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %233, i32 %235)
  %cmp153 = icmp sgt i32 %233, %235
  br i1 %cmp153, label %if.end150.cleanup198_crit_edge, label %if.end150.if.end178_crit_edge

if.end150.if.end178_crit_edge:                    ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end178

if.end150.cleanup198_crit_edge:                   ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup198

if.else156:                                       ; preds = %convert_signed_value.exit110
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2457599, i32 %mul133)
  %cmp158 = icmp slt i32 %mul133, -2457599
  br i1 %cmp158, label %do.end162, label %if.else156.if.end178_crit_edge

if.else156.if.end178_crit_edge:                   ; preds = %if.else156
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end178

do.end162:                                        ; preds = %if.else156
  call void @__sanitizer_cov_trace_pc() #15
  %236 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %cval, align 4
  %238 = ptrtoint ptr %237 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %237, align 4
  %dev166 = getelementptr inbounds %struct.snd_usb_audio, ptr %239, i32 0, i32 1
  %240 = ptrtoint ptr %dev166 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %dev166, align 4
  %dev167 = getelementptr inbounds %struct.usb_device, ptr %241, i32 0, i32 15
  %id169 = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %242 = ptrtoint ptr %id169 to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %id169, align 4
  %hostif.i111 = getelementptr inbounds %struct.usb_mixer_interface, ptr %237, i32 0, i32 1
  %244 = ptrtoint ptr %hostif.i111 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %hostif.i111, align 4
  %bInterfaceNumber.i112 = getelementptr inbounds %struct.usb_interface_descriptor, ptr %245, i32 0, i32 2
  %246 = ptrtoint ptr %bInterfaceNumber.i112 to i32
  call void @__asan_load1_noabort(i32 %246)
  %247 = load i8, ptr %bInterfaceNumber.i112, align 2
  %conv.i113 = zext i8 %247 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev167, ptr noundef nonnull @.str.25, i32 noundef %243, i32 noundef %conv.i113, i32 noundef %div129127, i32 noundef %div134) #19
  %248 = ptrtoint ptr %dBmax to i32
  call void @__asan_store4_noabort(i32 %248)
  store i32 0, ptr %dBmax, align 4
  %249 = ptrtoint ptr %dBmin to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 0, ptr %dBmin, align 4
  br label %if.end178

if.end178:                                        ; preds = %do.end162, %if.else156.if.end178_crit_edge, %if.end150.if.end178_crit_edge
  %cmask179 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 2
  %250 = ptrtoint ptr %cmask179 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %cmask179, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %251)
  %tobool180.not = icmp eq i32 %251, 0
  br i1 %tobool180.not, label %if.then181, label %if.end178.for.body185_crit_edge

if.end178.for.body185_crit_edge:                  ; preds = %if.end178
  br label %for.body185

if.then181:                                       ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @init_cur_mix_raw(ptr noundef %cval, i32 noundef 0, i32 noundef 0)
  br label %cleanup198

for.body185:                                      ; preds = %for.inc194.for.body185_crit_edge, %if.end178.for.body185_crit_edge
  %idx.0170 = phi i32 [ %idx.1, %for.inc194.for.body185_crit_edge ], [ 0, %if.end178.for.body185_crit_edge ]
  %i.1168 = phi i32 [ %.pre, %for.inc194.for.body185_crit_edge ], [ 0, %if.end178.for.body185_crit_edge ]
  %252 = ptrtoint ptr %cmask179 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %cmask179, align 4
  %shl187 = shl nuw nsw i32 1, %i.1168
  %and188 = and i32 %253, %shl187
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and188)
  %tobool189.not = icmp eq i32 %and188, 0
  %.pre = add nuw nsw i32 %i.1168, 1
  br i1 %tobool189.not, label %for.body185.for.inc194_crit_edge, label %if.then190

for.body185.for.inc194_crit_edge:                 ; preds = %for.body185
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc194

if.then190:                                       ; preds = %for.body185
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @init_cur_mix_raw(ptr noundef %cval, i32 noundef %.pre, i32 noundef %idx.0170)
  %inc192 = add i32 %idx.0170, 1
  br label %for.inc194

for.inc194:                                       ; preds = %if.then190, %for.body185.for.inc194_crit_edge
  %idx.1 = phi i32 [ %inc192, %if.then190 ], [ %idx.0170, %for.body185.for.inc194_crit_edge ]
  %exitcond.not = icmp eq i32 %.pre, 16
  br i1 %exitcond.not, label %for.inc194.cleanup198_crit_edge, label %for.inc194.for.body185_crit_edge

for.inc194.for.body185_crit_edge:                 ; preds = %for.inc194
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body185

for.inc194.cleanup198_crit_edge:                  ; preds = %for.inc194
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup198

cleanup198:                                       ; preds = %for.inc194.cleanup198_crit_edge, %if.then181, %if.end150.cleanup198_crit_edge, %cleanup119
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_cur_mix_raw(ptr nocapture noundef %cval, i32 noundef %ch, i32 noundef %idx) unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !719
  %call = call i32 @snd_usb_get_cur_mix_value(ptr noundef %cval, i32 noundef %ch, i32 noundef %idx, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cval, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %do.end, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %2, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev, align 4
  %dev5 = getelementptr inbounds %struct.usb_device, ptr %8, i32 0, i32 15
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %9 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id, align 4
  %hostif.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %2, i32 0, i32 1
  %11 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %14 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev5, ptr noundef nonnull @.str.57, i32 noundef %10, i32 noundef %conv.i, i32 noundef %ch, i32 noundef %call) #19
  br label %if.end10

if.end10:                                         ; preds = %do.end, %if.end.if.end10_crit_edge
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 8
  %15 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %min, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ch)
  %cmp.i = icmp eq i32 %ch, 0
  br i1 %cmp.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %master_readonly.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 5
  %17 = ptrtoint ptr %master_readonly.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %master_readonly.i, align 4
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %ch_readonly.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 4
  %19 = ptrtoint ptr %ch_readonly.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ch_readonly.i, align 4
  %sub.i = add i32 %ch, -1
  %shl.i = shl nuw i32 1, %sub.i
  %and.i = and i32 %20, %shl.i
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %18, %cond.true.i ], [ %and.i, %cond.false.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i)
  %tobool.not.i = icmp eq i32 %cond.i, 0
  br i1 %tobool.not.i, label %if.end6.i, label %do.body.i

do.body.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@init_cur_mix_raw, %if.then4.i)) #13
          to label %cleanup [label %if.then4.i], !srcloc !716

if.then4.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %21 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %cval, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev.i, align 4
  %dev5.i = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 15
  %control.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %27 = ptrtoint ptr %control.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %control.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, ptr noundef %dev5.i, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.7, i32 noundef %ch, i32 noundef %28) #13
  br label %cleanup

if.end6.i:                                        ; preds = %cond.end.i
  %control7.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %29 = ptrtoint ptr %control7.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %control7.i, align 4
  %shl8.i = shl i32 %30, 8
  %or.i = or i32 %shl8.i, %ch
  %call9.i = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %cval, i32 noundef 1, i32 noundef %or.i, i32 noundef %16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp10.i = icmp slt i32 %call9.i, 0
  br i1 %cmp10.i, label %if.end6.i.cleanup_crit_edge, label %if.end12.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end12.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  %shl13.i = shl nuw i32 1, %ch
  %cached.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 13
  %31 = ptrtoint ptr %cached.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cached.i, align 4
  %or14.i = or i32 %32, %shl13.i
  store i32 %or14.i, ptr %cached.i, align 4
  %arrayidx.i = getelementptr %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 14, i32 %idx
  %33 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %16, ptr %arrayidx.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12.i, %if.end6.i.cleanup_crit_edge, %if.then4.i, %do.body.i, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @build_connector_control(ptr noundef %mixer, ptr noundef readonly %imap, ptr nocapture noundef readonly %term, i1 noundef zeroext %is_input) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %term to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %term, align 4
  %tobool.not.i = icmp eq ptr %imap, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %for.cond.preheader.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.cond.preheader.i:                             ; preds = %entry
  %2 = ptrtoint ptr %imap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %imap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool1.not19.i = icmp eq i32 %3, 0
  br i1 %tobool1.not19.i, label %for.cond.preheader.i.if.end_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.if.end_crit_edge:            ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %4 = phi i32 [ %6, %for.inc.i.for.body.i_crit_edge ], [ %3, %for.cond.preheader.i.for.body.i_crit_edge ]
  %p.addr.020.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %imap, %for.cond.preheader.i.for.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %1)
  %cmp.i = icmp eq i32 %4, %1
  br i1 %cmp.i, label %find_map.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr %struct.usbmix_name_map, ptr %p.addr.020.i, i32 1
  %5 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %incdec.ptr.i, align 4
  %tobool1.not.i = icmp eq i32 %6, 0
  br i1 %tobool1.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

find_map.exit:                                    ; preds = %for.body.i
  %tobool.not.i56 = icmp eq ptr %p.addr.020.i, null
  br i1 %tobool.not.i56, label %find_map.exit.if.end_crit_edge, label %lor.lhs.false.i

find_map.exit.if.end_crit_edge:                   ; preds = %find_map.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

lor.lhs.false.i:                                  ; preds = %find_map.exit
  %name.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 1
  %7 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name.i, align 4
  %tobool1.not.i57 = icmp eq ptr %8, null
  br i1 %tobool1.not.i57, label %check_ignored_ctl.exit, label %lor.lhs.false.i.if.end_crit_edge

lor.lhs.false.i.if.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

check_ignored_ctl.exit:                           ; preds = %lor.lhs.false.i
  %dB.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 3
  %9 = ptrtoint ptr %dB.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dB.i, align 4
  %tobool3.not.i.not = icmp eq ptr %10, null
  br i1 %tobool3.not.i.not, label %check_ignored_ctl.exit.cleanup_crit_edge, label %check_ignored_ctl.exit.if.end_crit_edge

check_ignored_ctl.exit.if.end_crit_edge:          ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

check_ignored_ctl.exit.cleanup_crit_edge:         ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %check_ignored_ctl.exit.if.end_crit_edge, %lor.lhs.false.i.if.end_crit_edge, %find_map.exit.if.end_crit_edge, %for.inc.i.if.end_crit_edge, %for.cond.preheader.i.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i7077 = phi ptr [ %p.addr.020.i, %check_ignored_ctl.exit.if.end_crit_edge ], [ null, %find_map.exit.if.end_crit_edge ], [ %p.addr.020.i, %lor.lhs.false.i.if.end_crit_edge ], [ null, %entry.if.end_crit_edge ], [ null, %for.cond.preheader.i.if.end_crit_edge ], [ null, %for.inc.i.if.end_crit_edge ]
  %tobool.not.i567176 = phi i1 [ false, %check_ignored_ctl.exit.if.end_crit_edge ], [ true, %find_map.exit.if.end_crit_edge ], [ false, %lor.lhs.false.i.if.end_crit_edge ], [ true, %entry.if.end_crit_edge ], [ true, %for.cond.preheader.i.if.end_crit_edge ], [ true, %for.inc.i.if.end_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %11 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 152) #17
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %12 = ptrtoint ptr %term to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %term, align 4
  %14 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %mixer, ptr %call7.i.i, align 8
  %id.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 3
  %15 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %13, ptr %id.i, align 4
  %dump.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 5
  %16 = ptrtoint ptr %dump.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump.i, align 4
  %resume.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 6
  %17 = ptrtoint ptr %resume.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @connector_mixer_resume, ptr %resume.i, align 8
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 6
  %18 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %19)
  %cmp = icmp eq i32 %19, 32
  %spec.select = select i1 %cmp, i32 2, i32 1
  %20 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %spec.select, ptr %20, align 4
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 7
  %22 = ptrtoint ptr %val_type to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %val_type, align 4
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %23 = ptrtoint ptr %channels to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %channels, align 8
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %24 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %min, align 8
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %25 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 1, ptr %max, align 4
  %call11 = tail call ptr @snd_ctl_new1(ptr noundef nonnull @usb_connector_ctl_ro, ptr noundef nonnull %call7.i.i) #13
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %do.end, label %if.end15

do.end:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  %26 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mixer, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev, align 4
  %dev14 = getelementptr inbounds %struct.usb_device, ptr %29, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev14, ptr noundef nonnull @.str.86) #19
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

if.end15:                                         ; preds = %if.end5
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %call11, i32 0, i32 1, i32 4
  br i1 %tobool.not.i567176, label %if.end15.if.else24_crit_edge, label %lor.lhs.false.i62

if.end15.if.else24_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else24

lor.lhs.false.i62:                                ; preds = %if.end15
  %name.i60 = getelementptr inbounds %struct.usbmix_name_map, ptr %retval.0.i7077, i32 0, i32 1
  %30 = ptrtoint ptr %name.i60 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %name.i60, align 4
  %tobool1.not.i61 = icmp eq ptr %31, null
  br i1 %tobool1.not.i61, label %lor.lhs.false.i62.if.else24_crit_edge, label %if.end.i

lor.lhs.false.i62.if.else24_crit_edge:            ; preds = %lor.lhs.false.i62
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else24

if.end.i:                                         ; preds = %lor.lhs.false.i62
  %call.i = tail call i32 @strscpy(ptr noundef %name, ptr noundef nonnull %31, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool18.not = icmp eq i32 %call.i, 0
  br i1 %tobool18.not, label %if.end.i.if.else24_crit_edge, label %if.end.i.if.end29_crit_edge

if.end.i.if.end29_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.end.i.if.else24_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else24

if.else24:                                        ; preds = %if.end.i.if.else24_crit_edge, %lor.lhs.false.i62.if.else24_crit_edge, %if.end15.if.else24_crit_edge
  %32 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mixer, align 4
  %call.i65 = tail call fastcc i32 @get_term_name(ptr noundef %33, ptr noundef %term, ptr noundef %name, i32 noundef 44, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i65)
  %cmp.i66 = icmp eq i32 %call.i65, 0
  br i1 %cmp.i66, label %if.then.i, label %if.else24.get_connector_control_name.exit_crit_edge

if.else24.get_connector_control_name.exit_crit_edge: ; preds = %if.else24
  call void @__sanitizer_cov_trace_pc() #15
  br label %get_connector_control_name.exit

if.then.i:                                        ; preds = %if.else24
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i = tail call i32 @strscpy(ptr noundef %name, ptr noundef nonnull @.str.165, i32 noundef 44) #13
  br label %get_connector_control_name.exit

get_connector_control_name.exit:                  ; preds = %if.then.i, %if.else24.get_connector_control_name.exit_crit_edge
  %.str.166..str.167.i = select i1 %is_input, ptr @.str.166, ptr @.str.167
  br label %if.end29

if.end29:                                         ; preds = %get_connector_control_name.exit, %if.end.i.if.end29_crit_edge
  %.str.166..str.167.i.sink = phi ptr [ %.str.166..str.167.i, %get_connector_control_name.exit ], [ @.str.162, %if.end.i.if.end29_crit_edge ]
  %call4.i = tail call i32 @strlcat(ptr noundef %name, ptr noundef nonnull %.str.166..str.167.i.sink, i32 noundef 44) #13
  %private_free = getelementptr inbounds %struct.snd_kcontrol, ptr %call11, i32 0, i32 9
  %34 = ptrtoint ptr %private_free to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @snd_usb_mixer_elem_free, ptr %private_free, align 4
  %call31 = tail call i32 @snd_usb_mixer_add_list(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call11, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %do.end, %if.end.cleanup_crit_edge, %check_ignored_ctl.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__build_feature_ctl(ptr noundef %mixer, ptr noundef readonly %imap, i32 noundef %ctl_mask, i32 noundef %control, ptr noundef readonly %iterm, ptr noundef readonly %oterm, i32 noundef %unitid, i32 noundef %nameid, i32 noundef %readonly_mask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %control)
  %cmp = icmp eq i32 %control, 6
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %imap, null
  br i1 %tobool.not.i, label %if.end.if.end3_crit_edge, label %for.cond.preheader.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

for.cond.preheader.i:                             ; preds = %if.end
  %0 = ptrtoint ptr %imap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %imap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not19.i = icmp eq i32 %1, 0
  br i1 %tobool1.not19.i, label %for.cond.preheader.i.if.end3_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.if.end3_crit_edge:           ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %control)
  %tobool3.not.i = icmp eq i32 %control, 0
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %2 = phi i32 [ %1, %for.body.lr.ph.i ], [ %6, %for.inc.i.for.body.i_crit_edge ]
  %p.addr.020.i = phi ptr [ %imap, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %unitid)
  %cmp.i = icmp eq i32 %2, %unitid
  br i1 %cmp.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  br i1 %tobool3.not.i, label %land.lhs.true.i.find_map.exit_crit_edge, label %lor.lhs.false.i

land.lhs.true.i.find_map.exit_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %find_map.exit

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %control4.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 2
  %3 = ptrtoint ptr %control4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %control4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not.i = icmp eq i32 %4, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %control)
  %cmp8.i = icmp eq i32 %4, %control
  %or.cond.i = or i1 %tobool5.not.i, %cmp8.i
  br i1 %or.cond.i, label %lor.lhs.false.i.find_map.exit_crit_edge, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

lor.lhs.false.i.find_map.exit_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %find_map.exit

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.usbmix_name_map, ptr %p.addr.020.i, i32 1
  %5 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %incdec.ptr.i, align 4
  %tobool1.not.i = icmp eq i32 %6, 0
  br i1 %tobool1.not.i, label %for.inc.i.if.end3_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.if.end3_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

find_map.exit:                                    ; preds = %lor.lhs.false.i.find_map.exit_crit_edge, %land.lhs.true.i.find_map.exit_crit_edge
  %tobool.not.i317 = icmp eq ptr %p.addr.020.i, null
  br i1 %tobool.not.i317, label %find_map.exit.if.end3_crit_edge, label %lor.lhs.false.i319

find_map.exit.if.end3_crit_edge:                  ; preds = %find_map.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

lor.lhs.false.i319:                               ; preds = %find_map.exit
  %name.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 1
  %7 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name.i, align 4
  %tobool1.not.i318 = icmp eq ptr %8, null
  br i1 %tobool1.not.i318, label %check_ignored_ctl.exit, label %lor.lhs.false.i319.if.end3_crit_edge

lor.lhs.false.i319.if.end3_crit_edge:             ; preds = %lor.lhs.false.i319
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

check_ignored_ctl.exit:                           ; preds = %lor.lhs.false.i319
  %dB.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 3
  %9 = ptrtoint ptr %dB.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dB.i, align 4
  %tobool3.not.i320.not = icmp eq ptr %10, null
  br i1 %tobool3.not.i320.not, label %check_ignored_ctl.exit.cleanup_crit_edge, label %check_ignored_ctl.exit.if.end3_crit_edge

check_ignored_ctl.exit.if.end3_crit_edge:         ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

check_ignored_ctl.exit.cleanup_crit_edge:         ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %check_ignored_ctl.exit.if.end3_crit_edge, %lor.lhs.false.i319.if.end3_crit_edge, %find_map.exit.if.end3_crit_edge, %for.inc.i.if.end3_crit_edge, %for.cond.preheader.i.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %retval.0.i316346354 = phi ptr [ %p.addr.020.i, %check_ignored_ctl.exit.if.end3_crit_edge ], [ null, %find_map.exit.if.end3_crit_edge ], [ %p.addr.020.i, %lor.lhs.false.i319.if.end3_crit_edge ], [ null, %if.end.if.end3_crit_edge ], [ null, %for.cond.preheader.i.if.end3_crit_edge ], [ null, %for.inc.i.if.end3_crit_edge ]
  %tobool.not.i317348353 = phi i1 [ false, %check_ignored_ctl.exit.if.end3_crit_edge ], [ true, %find_map.exit.if.end3_crit_edge ], [ false, %lor.lhs.false.i319.if.end3_crit_edge ], [ true, %if.end.if.end3_crit_edge ], [ true, %for.cond.preheader.i.if.end3_crit_edge ], [ true, %for.inc.i.if.end3_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %11 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 152) #17
  %tobool5.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool5.not, label %if.end3.cleanup_crit_edge, label %if.end7

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %mixer, ptr %call7.i.i, align 8
  %id.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 3
  %13 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %unitid, ptr %id.i, align 4
  %dump.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 5
  %14 = ptrtoint ptr %dump.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump.i, align 4
  %resume.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 6
  %15 = ptrtoint ptr %resume.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @restore_mixer_value, ptr %resume.i, align 8
  %control8 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %control8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %control, ptr %control8, align 4
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 2
  %17 = ptrtoint ptr %cmask to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %ctl_mask, ptr %cmask, align 8
  %switch.tableidx = add i32 %control, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %switch.tableidx)
  %18 = icmp ult i32 %switch.tableidx, 13
  br i1 %18, label %switch.lookup, label %if.then11

if.then11:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

switch.lookup:                                    ; preds = %if.end7
  %switch.gep = getelementptr inbounds [13 x ptr], ptr @switch.table.__build_feature_ctl, i32 0, i32 %switch.tableidx
  %19 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %19)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 6
  %20 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp13 = icmp eq i32 %21, 0
  br i1 %cmp13, label %switch.lookup.if.end19.sink.split_crit_edge, label %if.else

switch.lookup.if.end19.sink.split_crit_edge:      ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19.sink.split

if.else:                                          ; preds = %switch.lookup
  %type_uac2 = getelementptr inbounds %struct.usb_feature_control_info, ptr %switch.load, i32 0, i32 3
  %22 = ptrtoint ptr %type_uac2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %type_uac2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %23)
  %cmp15 = icmp sgt i32 %23, -1
  br i1 %cmp15, label %if.else.if.end19_crit_edge, label %if.else.if.end19.sink.split_crit_edge

if.else.if.end19.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19.sink.split

if.else.if.end19_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.end19.sink.split:                              ; preds = %if.else.if.end19.sink.split_crit_edge, %switch.lookup.if.end19.sink.split_crit_edge
  %type17 = getelementptr inbounds %struct.usb_feature_control_info, ptr %switch.load, i32 0, i32 2
  %24 = ptrtoint ptr %type17 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %type17, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.end19.sink.split, %if.else.if.end19_crit_edge
  %cond.sink = phi i32 [ %23, %if.else.if.end19_crit_edge ], [ %25, %if.end19.sink.split ]
  %val_type18 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 7
  %26 = ptrtoint ptr %val_type18 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %cond.sink, ptr %val_type18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ctl_mask)
  %cmp20 = icmp eq i32 %ctl_mask, 0
  br i1 %cmp20, label %if.then21, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %27 = and i32 %ctl_mask, 1
  %28 = lshr i32 %ctl_mask, 1
  %29 = and i32 %28, 1
  %spec.select.1 = add nuw nsw i32 %29, %27
  %30 = lshr i32 %ctl_mask, 2
  %31 = and i32 %30, 1
  %spec.select.2 = add nuw nsw i32 %31, %spec.select.1
  %32 = lshr i32 %ctl_mask, 3
  %33 = and i32 %32, 1
  %spec.select.3 = add nuw nsw i32 %33, %spec.select.2
  %34 = lshr i32 %ctl_mask, 4
  %35 = and i32 %34, 1
  %spec.select.4 = add nuw nsw i32 %35, %spec.select.3
  %36 = lshr i32 %ctl_mask, 5
  %37 = and i32 %36, 1
  %spec.select.5 = add nuw nsw i32 %37, %spec.select.4
  %38 = lshr i32 %ctl_mask, 6
  %39 = and i32 %38, 1
  %spec.select.6 = add nuw nsw i32 %39, %spec.select.5
  %40 = lshr i32 %ctl_mask, 7
  %41 = and i32 %40, 1
  %spec.select.7 = add nuw nsw i32 %41, %spec.select.6
  %42 = lshr i32 %ctl_mask, 8
  %43 = and i32 %42, 1
  %spec.select.8 = add nuw nsw i32 %43, %spec.select.7
  %44 = lshr i32 %ctl_mask, 9
  %45 = and i32 %44, 1
  %spec.select.9 = add nuw nsw i32 %45, %spec.select.8
  %46 = lshr i32 %ctl_mask, 10
  %47 = and i32 %46, 1
  %spec.select.10 = add nuw nsw i32 %47, %spec.select.9
  %48 = lshr i32 %ctl_mask, 11
  %49 = and i32 %48, 1
  %spec.select.11 = add nuw nsw i32 %49, %spec.select.10
  %50 = lshr i32 %ctl_mask, 12
  %51 = and i32 %50, 1
  %spec.select.12 = add nuw nsw i32 %51, %spec.select.11
  %52 = lshr i32 %ctl_mask, 13
  %53 = and i32 %52, 1
  %spec.select.13 = add nuw nsw i32 %53, %spec.select.12
  %54 = lshr i32 %ctl_mask, 14
  %55 = and i32 %54, 1
  %spec.select.14 = add nuw nsw i32 %55, %spec.select.13
  %56 = lshr i32 %ctl_mask, 15
  %57 = and i32 %56, 1
  %spec.select.15 = add nuw nsw i32 %57, %spec.select.14
  %channels28 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %58 = ptrtoint ptr %channels28 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %spec.select.15, ptr %channels28, align 8
  %ch_readonly = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 4
  %59 = ptrtoint ptr %ch_readonly to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %readonly_mask, ptr %ch_readonly, align 8
  br label %if.end29

if.then21:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %60 = ptrtoint ptr %channels to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 1, ptr %channels, align 8
  %master_readonly = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 5
  %61 = ptrtoint ptr %master_readonly to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %readonly_mask, ptr %master_readonly, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then21, %for.body.preheader
  %channels30 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %62 = ptrtoint ptr %channels30 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %channels30, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %63, i32 %readonly_mask)
  %cmp31 = icmp eq i32 %63, %readonly_mask
  %usb_feature_unit_ctl_ro.usb_feature_unit_ctl = select i1 %cmp31, ptr @usb_feature_unit_ctl_ro, ptr @usb_feature_unit_ctl
  %call35 = tail call ptr @snd_ctl_new1(ptr noundef nonnull %usb_feature_unit_ctl_ro.usb_feature_unit_ctl, ptr noundef nonnull %call7.i.i) #13
  %tobool37.not = icmp eq ptr %call35, null
  br i1 %tobool37.not, label %do.end, label %if.end40

do.end:                                           ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %64 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %mixer, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %dev, align 4
  %dev39 = getelementptr inbounds %struct.usb_device, ptr %67, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev39, ptr noundef nonnull @.str.86) #19
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

if.end40:                                         ; preds = %if.end29
  %private_free = getelementptr inbounds %struct.snd_kcontrol, ptr %call35, i32 0, i32 9
  %68 = ptrtoint ptr %private_free to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @snd_usb_mixer_elem_free, ptr %private_free, align 4
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %call35, i32 0, i32 1, i32 4
  br i1 %tobool.not.i317348353, label %if.end40.land.lhs.true_crit_edge, label %lor.lhs.false.i326

if.end40.land.lhs.true_crit_edge:                 ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

lor.lhs.false.i326:                               ; preds = %if.end40
  %name.i324 = getelementptr inbounds %struct.usbmix_name_map, ptr %retval.0.i316346354, i32 0, i32 1
  %69 = ptrtoint ptr %name.i324 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %name.i324, align 4
  %tobool1.not.i325 = icmp eq ptr %70, null
  br i1 %tobool1.not.i325, label %lor.lhs.false.i326.land.lhs.true_crit_edge, label %if.end.i

lor.lhs.false.i326.land.lhs.true_crit_edge:       ; preds = %lor.lhs.false.i326
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

if.end.i:                                         ; preds = %lor.lhs.false.i326
  %call.i = tail call i32 @strscpy(ptr noundef %name, ptr noundef nonnull %70, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i327 = icmp slt i32 %call.i, 0
  br i1 %cmp.i327, label %if.end51.thread, label %check_mapped_name.exit

check_mapped_name.exit:                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp42.not = icmp eq i32 %call.i, 0
  br i1 %cmp42.not, label %check_mapped_name.exit.land.lhs.true_crit_edge, label %check_mapped_name.exit.if.end51_crit_edge

check_mapped_name.exit.if.end51_crit_edge:        ; preds = %check_mapped_name.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

check_mapped_name.exit.land.lhs.true_crit_edge:   ; preds = %check_mapped_name.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %check_mapped_name.exit.land.lhs.true_crit_edge, %lor.lhs.false.i326.land.lhs.true_crit_edge, %if.end40.land.lhs.true_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nameid)
  %tobool44.not = icmp eq i32 %nameid, 0
  br i1 %tobool44.not, label %land.lhs.true.if.end51_crit_edge, label %if.then45

land.lhs.true.if.end51_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

if.then45:                                        ; preds = %land.lhs.true
  %71 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %mixer, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %dev.i, align 4
  %call.i329 = tail call i32 @usb_string(ptr noundef %74, i32 noundef %nameid, ptr noundef %name, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i329)
  %cmp.i330 = icmp slt i32 %call.i329, 0
  br i1 %cmp.i330, label %if.then45.if.end51_crit_edge, label %if.end.i331

if.then45.if.end51_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

if.end.i331:                                      ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i = getelementptr i8, ptr %name, i32 %call.i329
  %75 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 0, ptr %arrayidx.i, align 1
  br label %if.end51

if.end51:                                         ; preds = %if.end.i331, %if.then45.if.end51_crit_edge, %land.lhs.true.if.end51_crit_edge, %check_mapped_name.exit.if.end51_crit_edge
  %cmp42.not363 = phi i1 [ false, %check_mapped_name.exit.if.end51_crit_edge ], [ true, %land.lhs.true.if.end51_crit_edge ], [ true, %if.then45.if.end51_crit_edge ], [ true, %if.end.i331 ]
  %len.0 = phi i32 [ %call.i, %check_mapped_name.exit.if.end51_crit_edge ], [ 0, %land.lhs.true.if.end51_crit_edge ], [ 0, %if.then45.if.end51_crit_edge ], [ %call.i329, %if.end.i331 ]
  %control.off = add nsw i32 %control, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %control.off)
  %switch = icmp ult i32 %control.off, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.0)
  %tobool52.not = icmp eq i32 %len.0, 0
  br i1 %switch, label %sw.bb, label %sw.default

if.end51.thread:                                  ; preds = %if.end.i
  %control.off372 = add nsw i32 %control, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %control.off372)
  %switch373 = icmp ult i32 %control.off372, 2
  br i1 %switch373, label %if.end51.thread.if.end100_crit_edge, label %if.end51.thread.sw.epilog_crit_edge

if.end51.thread.sw.epilog_crit_edge:              ; preds = %if.end51.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end51.thread.if.end100_crit_edge:              ; preds = %if.end51.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

sw.bb:                                            ; preds = %if.end51
  br i1 %tobool52.not, label %if.then53, label %sw.bb.if.end79_crit_edge

sw.bb.if.end79_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end79

if.then53:                                        ; preds = %sw.bb
  %tobool54.not = icmp eq ptr %iterm, null
  br i1 %tobool54.not, label %if.then53.land.lhs.true63_crit_edge, label %if.end61

if.then53.land.lhs.true63_crit_edge:              ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true63

if.end61:                                         ; preds = %if.then53
  %76 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %mixer, align 4
  %call60 = tail call fastcc i32 @get_term_name(ptr noundef %77, ptr noundef nonnull %iterm, ptr noundef %name, i32 noundef 44, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool62.not = icmp eq i32 %call60, 0
  br i1 %tobool62.not, label %if.end61.land.lhs.true63_crit_edge, label %if.end71.thread391

if.end61.land.lhs.true63_crit_edge:               ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true63

if.end71.thread391:                               ; preds = %if.end61
  br i1 %cmp42.not363, label %if.end71.thread391.if.then81_crit_edge, label %if.end71.thread391.if.end100_crit_edge

if.end71.thread391.if.end100_crit_edge:           ; preds = %if.end71.thread391
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

if.end71.thread391.if.then81_crit_edge:           ; preds = %if.end71.thread391
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then81

land.lhs.true63:                                  ; preds = %if.end61.land.lhs.true63_crit_edge, %if.then53.land.lhs.true63_crit_edge
  %tobool64.not = icmp eq ptr %oterm, null
  br i1 %tobool64.not, label %land.lhs.true63.if.then73_crit_edge, label %if.end71

land.lhs.true63.if.then73_crit_edge:              ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then73

if.end71:                                         ; preds = %land.lhs.true63
  %78 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %mixer, align 4
  %call70 = tail call fastcc i32 @get_term_name(ptr noundef %79, ptr noundef nonnull %oterm, ptr noundef %name, i32 noundef 44, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool72.not = icmp eq i32 %call70, 0
  br i1 %tobool72.not, label %if.end71.if.then73_crit_edge, label %if.end71.if.end79_crit_edge

if.end71.if.end79_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end79

if.end71.if.then73_crit_edge:                     ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then73

if.then73:                                        ; preds = %if.end71.if.then73_crit_edge, %land.lhs.true63.if.then73_crit_edge
  %call77 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name, i32 noundef 44, ptr noundef nonnull @.str.88, i32 noundef %unitid)
  br i1 %cmp42.not363, label %if.then73.if.then81_crit_edge, label %if.then73.if.end100_crit_edge

if.then73.if.end100_crit_edge:                    ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

if.then73.if.then81_crit_edge:                    ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then81

if.end79:                                         ; preds = %if.end71.if.end79_crit_edge, %sw.bb.if.end79_crit_edge
  br i1 %cmp42.not363, label %if.end79.if.then81_crit_edge, label %if.end79.if.end100_crit_edge

if.end79.if.end100_crit_edge:                     ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

if.end79.if.then81_crit_edge:                     ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then81

if.then81:                                        ; preds = %if.end79.if.then81_crit_edge, %if.then73.if.then81_crit_edge, %if.end71.thread391.if.then81_crit_edge
  %80 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %mixer, align 4
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %81, i32 0, i32 2
  %82 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %card, align 4
  tail call fastcc void @check_no_speaker_on_headset(ptr noundef nonnull %call35, ptr noundef %83)
  %tobool86.not = icmp eq ptr %oterm, null
  br i1 %tobool86.not, label %if.then81.if.end100_crit_edge, label %land.lhs.true87

if.then81.if.end100_crit_edge:                    ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

land.lhs.true87:                                  ; preds = %if.then81
  %type88 = getelementptr inbounds %struct.usb_audio_term, ptr %oterm, i32 0, i32 1
  %84 = ptrtoint ptr %type88 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %type88, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %85)
  %tobool89.not = icmp ult i32 %85, 65536
  br i1 %tobool89.not, label %if.then90, label %land.lhs.true87.if.end100_crit_edge

land.lhs.true87.if.end100_crit_edge:              ; preds = %land.lhs.true87
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100

if.then90:                                        ; preds = %land.lhs.true87
  call void @__sanitizer_cov_trace_pc() #15
  %and92 = and i32 %85, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %and92)
  %cmp93 = icmp eq i32 %and92, 256
  %.str.89..str.90 = select i1 %cmp93, ptr @.str.89, ptr @.str.90
  %call.i334 = tail call i32 @strlcat(ptr noundef %name, ptr noundef nonnull %.str.89..str.90, i32 noundef 44) #13
  br label %if.end100

if.end100:                                        ; preds = %if.then90, %land.lhs.true87.if.end100_crit_edge, %if.then81.if.end100_crit_edge, %if.end79.if.end100_crit_edge, %if.then73.if.end100_crit_edge, %if.end71.thread391.if.end100_crit_edge, %if.end51.thread.if.end100_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %control)
  %cmp101 = icmp eq i32 %control, 1
  %cond103 = select i1 %cmp101, ptr @.str.91, ptr @.str.92
  %call.i338 = tail call i32 @strlcat(ptr noundef %name, ptr noundef nonnull %cond103, i32 noundef 44) #13
  br label %sw.epilog

sw.default:                                       ; preds = %if.end51
  br i1 %tobool52.not, label %if.then106, label %sw.default.sw.epilog_crit_edge

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then106:                                       ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  %name110 = getelementptr [13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 %control.off, i32 1
  %86 = ptrtoint ptr %name110 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %name110, align 4
  %call111 = tail call i32 @strscpy(ptr noundef %name, ptr noundef %87, i32 noundef 44) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then106, %sw.default.sw.epilog_crit_edge, %if.end100, %if.end51.thread.sw.epilog_crit_edge
  tail call fastcc void @get_min_max_with_quirks(ptr noundef nonnull %call7.i.i, i32 noundef 0, ptr noundef nonnull %call35)
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %88 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %max, align 4
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %90 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %min, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %89, i32 %91)
  %cmp114.not = icmp sgt i32 %89, %91
  br i1 %cmp114.not, label %if.end134, label %do.body117

do.body117:                                       ; preds = %sw.epilog
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__build_feature_ctl.__UNIQUE_ID_ddebug245, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__build_feature_ctl, %if.then122)) #13
          to label %do.end133 [label %if.then122], !srcloc !716

if.then122:                                       ; preds = %do.body117
  call void @__sanitizer_cov_trace_pc() #15
  %92 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %mixer, align 4
  %dev124 = getelementptr inbounds %struct.snd_usb_audio, ptr %93, i32 0, i32 1
  %94 = ptrtoint ptr %dev124 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %dev124, align 4
  %dev125 = getelementptr inbounds %struct.usb_device, ptr %95, i32 0, i32 15
  %96 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %id.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__build_feature_ctl.__UNIQUE_ID_ddebug245, ptr noundef %dev125, ptr noundef nonnull @.str.93, i32 noundef %97, ptr noundef %name) #13
  br label %do.end133

do.end133:                                        ; preds = %if.then122, %do.body117
  tail call void @snd_ctl_free_one(ptr noundef nonnull %call35) #13
  br label %cleanup

if.end134:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %control)
  %cmp135 = icmp eq i32 %control, 2
  br i1 %cmp135, label %if.then137, label %if.end134.if.end144_crit_edge

if.end134.if.end144_crit_edge:                    ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end144

if.then137:                                       ; preds = %if.end134
  br i1 %tobool.not.i317348353, label %if.then137.check_mapped_dB.exit_crit_edge, label %land.lhs.true.i342

if.then137.check_mapped_dB.exit_crit_edge:        ; preds = %if.then137
  call void @__sanitizer_cov_trace_pc() #15
  br label %check_mapped_dB.exit

land.lhs.true.i342:                               ; preds = %if.then137
  %dB.i340 = getelementptr inbounds %struct.usbmix_name_map, ptr %retval.0.i316346354, i32 0, i32 3
  %98 = ptrtoint ptr %dB.i340 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %dB.i340, align 4
  %tobool1.not.i341 = icmp eq ptr %99, null
  br i1 %tobool1.not.i341, label %land.lhs.true.i342.check_mapped_dB.exit_crit_edge, label %if.then.i

land.lhs.true.i342.check_mapped_dB.exit_crit_edge: ; preds = %land.lhs.true.i342
  call void @__sanitizer_cov_trace_pc() #15
  br label %check_mapped_dB.exit

if.then.i:                                        ; preds = %land.lhs.true.i342
  call void @__sanitizer_cov_trace_pc() #15
  %100 = ptrtoint ptr %99 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %99, align 4
  %dBmin.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 11
  %102 = ptrtoint ptr %dBmin.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %101, ptr %dBmin.i, align 4
  %103 = ptrtoint ptr %dB.i340 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %dB.i340, align 4
  %max.i = getelementptr inbounds %struct.usbmix_dB_map, ptr %104, i32 0, i32 1
  %105 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %max.i, align 4
  %dBmax.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 12
  %107 = ptrtoint ptr %dBmax.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %106, ptr %dBmax.i, align 8
  %108 = load ptr, ptr %dB.i340, align 4
  %min_mute.i = getelementptr inbounds %struct.usbmix_dB_map, ptr %108, i32 0, i32 2
  %109 = ptrtoint ptr %min_mute.i to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %min_mute.i, align 4, !range !718
  %min_mute6.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 16
  %111 = ptrtoint ptr %min_mute6.i to i32
  call void @__asan_store1_noabort(i32 %111)
  store i8 %110, ptr %min_mute6.i, align 1
  %initialized.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 15
  %112 = ptrtoint ptr %initialized.i to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 1, ptr %initialized.i, align 8
  br label %check_mapped_dB.exit

check_mapped_dB.exit:                             ; preds = %if.then.i, %land.lhs.true.i342.check_mapped_dB.exit_crit_edge, %if.then137.check_mapped_dB.exit_crit_edge
  %dBmin = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 11
  %113 = ptrtoint ptr %dBmin to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %dBmin, align 4
  %dBmax = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 12
  %115 = ptrtoint ptr %dBmax to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %dBmax, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %114, i32 %116)
  %cmp138 = icmp slt i32 %114, %116
  br i1 %cmp138, label %check_mapped_dB.exit.if.then141_crit_edge, label %lor.lhs.false

check_mapped_dB.exit.if.then141_crit_edge:        ; preds = %check_mapped_dB.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then141

lor.lhs.false:                                    ; preds = %check_mapped_dB.exit
  %initialized = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 15
  %117 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %initialized, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %118)
  %tobool140.not = icmp eq i8 %118, 0
  br i1 %tobool140.not, label %lor.lhs.false.if.then141_crit_edge, label %lor.lhs.false.if.end144_crit_edge

lor.lhs.false.if.end144_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end144

lor.lhs.false.if.then141_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then141

if.then141:                                       ; preds = %lor.lhs.false.if.then141_crit_edge, %check_mapped_dB.exit.if.then141_crit_edge
  %tlv = getelementptr inbounds %struct.snd_kcontrol, ptr %call35, i32 0, i32 6
  %119 = ptrtoint ptr %tlv to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr @snd_usb_mixer_vol_tlv, ptr %tlv, align 4
  %access = getelementptr inbounds %struct.snd_kcontrol, ptr %call35, i32 1, i32 0, i32 1
  %120 = ptrtoint ptr %access to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %access, align 4
  %or = or i32 %121, 268435472
  store i32 %or, ptr %access, align 4
  br label %if.end144

if.end144:                                        ; preds = %if.then141, %lor.lhs.false.if.end144_crit_edge, %if.end134.if.end144_crit_edge
  tail call void @snd_usb_mixer_fu_apply_quirk(ptr noundef %mixer, ptr noundef nonnull %call7.i.i, i32 noundef %unitid, ptr noundef nonnull %call35) #13
  %122 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %max, align 4
  %124 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %min, align 8
  %sub147 = sub i32 %123, %125
  %res = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 10
  %126 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %res, align 8
  %div = sdiv i32 %sub147, %127
  call void @__sanitizer_cov_trace_const_cmp4(i32 384, i32 %div)
  %cmp148 = icmp ugt i32 %div, 384
  br i1 %cmp148, label %do.end153, label %if.end144.do.body173_crit_edge

if.end144.do.body173_crit_edge:                   ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body173

do.end153:                                        ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #15
  %128 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %mixer, align 4
  %dev155 = getelementptr inbounds %struct.snd_usb_audio, ptr %129, i32 0, i32 1
  %130 = ptrtoint ptr %dev155 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %dev155, align 4
  %dev156 = getelementptr inbounds %struct.usb_device, ptr %131, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev156, ptr noundef nonnull @.str.95, i32 noundef %div) #19
  %132 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %mixer, align 4
  %dev161 = getelementptr inbounds %struct.snd_usb_audio, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %dev161 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %dev161, align 4
  %dev162 = getelementptr inbounds %struct.usb_device, ptr %135, i32 0, i32 15
  %136 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %id.i, align 4
  %138 = ptrtoint ptr %channels30 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %channels30, align 8
  %140 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %min, align 8
  %142 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %max, align 4
  %144 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %res, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev162, ptr noundef nonnull @.str.98, i32 noundef %137, ptr noundef %name, i32 noundef %139, i32 noundef %141, i32 noundef %143, i32 noundef %145) #19
  br label %do.body173

do.body173:                                       ; preds = %do.end153, %if.end144.do.body173_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__build_feature_ctl.__UNIQUE_ID_ddebug246, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__build_feature_ctl, %if.then185)) #13
          to label %do.end200 [label %if.then185], !srcloc !716

if.then185:                                       ; preds = %do.body173
  call void @__sanitizer_cov_trace_pc() #15
  %146 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %mixer, align 4
  %dev187 = getelementptr inbounds %struct.snd_usb_audio, ptr %147, i32 0, i32 1
  %148 = ptrtoint ptr %dev187 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %dev187, align 4
  %dev188 = getelementptr inbounds %struct.usb_device, ptr %149, i32 0, i32 15
  %150 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %id.i, align 4
  %152 = ptrtoint ptr %channels30 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %channels30, align 8
  %154 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %min, align 8
  %156 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %max, align 4
  %158 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %res, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__build_feature_ctl.__UNIQUE_ID_ddebug246, ptr noundef %dev188, ptr noundef nonnull @.str.100, i32 noundef %151, ptr noundef %name, i32 noundef %153, i32 noundef %155, i32 noundef %157, i32 noundef %159) #13
  br label %do.end200

do.end200:                                        ; preds = %if.then185, %do.body173
  %call202 = tail call i32 @snd_usb_mixer_add_list(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call35, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %do.end200, %do.end133, %do.end, %if.then11, %if.end3.cleanup_crit_edge, %check_ignored_ctl.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_ctl_new1(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_term_name(ptr nocapture noundef readonly %chip, ptr nocapture noundef readonly %iterm, ptr noundef %name, i32 noundef %maxlen, i32 noundef %term_only) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %name1 = getelementptr inbounds %struct.usb_audio_term, ptr %iterm, i32 0, i32 4
  %0 = ptrtoint ptr %name1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %name1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.then:                                          ; preds = %entry
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %chip, i32 0, i32 1
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %sub.i = add i32 %maxlen, -1
  %call.i = tail call i32 @usb_string(ptr noundef %3, i32 noundef %1, ptr noundef %name, i32 noundef %sub.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then.if.end5_crit_edge, label %snd_usb_copy_string_desc.exit

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

snd_usb_copy_string_desc.exit:                    ; preds = %if.then
  %arrayidx.i = getelementptr i8, ptr %name, i32 %call.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not = icmp eq i32 %call.i, 0
  br i1 %tobool3.not, label %snd_usb_copy_string_desc.exit.if.end5_crit_edge, label %snd_usb_copy_string_desc.exit.cleanup_crit_edge

snd_usb_copy_string_desc.exit.cleanup_crit_edge:  ; preds = %snd_usb_copy_string_desc.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

snd_usb_copy_string_desc.exit.if.end5_crit_edge:  ; preds = %snd_usb_copy_string_desc.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.end5:                                          ; preds = %snd_usb_copy_string_desc.exit.if.end5_crit_edge, %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  %type = getelementptr inbounds %struct.usb_audio_term, ptr %iterm, i32 0, i32 1
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type, align 4
  %shr = ashr i32 %6, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %6)
  %tobool6.not = icmp ult i32 %6, 65536
  br i1 %tobool6.not, label %if.end21, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %term_only)
  %tobool8.not = icmp eq i32 %term_only, 0
  br i1 %tobool8.not, label %if.end10, label %if.then7.cleanup_crit_edge

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end10:                                         ; preds = %if.then7
  %7 = zext i32 %shr to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.298)
  switch i32 %shr, label %sw.default [
    i32 6, label %sw.bb
    i32 9, label %sw.bb14
    i32 10, label %sw.bb16
    i32 5, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %8 = call ptr @memcpy(ptr %name, ptr @.str.101, i32 9)
  br label %cleanup

sw.bb14:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %9 = call ptr @memcpy(ptr %name, ptr @.str.102, i32 13)
  br label %cleanup

sw.bb16:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %10 = call ptr @memcpy(ptr %name, ptr @.str.103, i32 9)
  br label %cleanup

sw.bb18:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %11 = call ptr @memcpy(ptr %name, ptr @.str.104, i32 6)
  br label %cleanup

sw.default:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  %12 = ptrtoint ptr %iterm to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %iterm, align 4
  %call20 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %name, ptr noundef nonnull @.str.105, i32 noundef %13)
  br label %cleanup

if.end21:                                         ; preds = %if.end5
  %and = and i32 %6, 65280
  %14 = add nsw i32 %and, -256
  %15 = lshr exact i32 %14, 8
  %16 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.299)
  switch i32 %15, label %for.body.preheader [
    i32 0, label %sw.bb23
    i32 1, label %sw.bb25
    i32 3, label %sw.bb27
    i32 4, label %sw.bb29
  ]

for.body.preheader:                               ; preds = %if.end21
  %17 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.300)
  switch i32 %6, label %for.body.preheader.cleanup_crit_edge [
    i32 768, label %for.body.preheader.if.then35_crit_edge
    i32 769, label %if.then35.fold.split
    i32 770, label %if.then35.fold.split69
    i32 771, label %if.then35.fold.split70
    i32 772, label %if.then35.fold.split71
    i32 773, label %if.then35.fold.split72
    i32 774, label %if.then35.fold.split73
    i32 775, label %if.then35.fold.split74
    i32 1536, label %if.then35.fold.split75
    i32 1537, label %if.then35.fold.split76
    i32 1538, label %if.then35.fold.split77
    i32 1539, label %if.then35.fold.split78
    i32 1540, label %if.then35.fold.split79
    i32 1541, label %if.then35.fold.split80
    i32 1542, label %if.then35.fold.split81
    i32 1543, label %if.then35.fold.split82
    i32 1792, label %if.then35.fold.split83
    i32 1793, label %if.then35.fold.split84
    i32 1794, label %if.then35.fold.split85
    i32 1795, label %if.then35.fold.split86
    i32 1796, label %if.then35.fold.split87
    i32 1797, label %if.then35.fold.split88
    i32 1798, label %if.then35.fold.split89
    i32 1799, label %if.then35.fold.split90
    i32 1800, label %if.then35.fold.split91
    i32 1801, label %if.then35.fold.split92
    i32 1802, label %if.then35.fold.split93
    i32 1803, label %if.then35.fold.split94
    i32 1804, label %if.then35.fold.split95
    i32 1805, label %if.then35.fold.split96
    i32 1806, label %if.then35.fold.split97
    i32 1807, label %if.then35.fold.split98
    i32 1808, label %if.then35.fold.split99
    i32 1809, label %if.then35.fold.split100
    i32 1810, label %if.then35.fold.split101
    i32 1811, label %if.then35.fold.split102
  ]

for.body.preheader.if.then35_crit_edge:           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

for.body.preheader.cleanup_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb23:                                          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  %18 = ptrtoint ptr %name to i32
  call void @__asan_storeN_noabort(i32 %18, i32 4)
  store i32 1346587904, ptr %name, align 1
  br label %cleanup

sw.bb25:                                          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  %19 = ptrtoint ptr %name to i32
  call void @__asan_storeN_noabort(i32 %19, i32 4)
  store i32 1298752256, ptr %name, align 1
  br label %cleanup

sw.bb27:                                          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  %20 = ptrtoint ptr %name to i32
  call void @__asan_storeN_noabort(i32 %20, i32 8)
  store i64 5216682827439240192, ptr %name, align 1
  br label %cleanup

sw.bb29:                                          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  %21 = call ptr @memcpy(ptr %name, ptr @.str.109, i32 6)
  br label %cleanup

if.then35.fold.split:                             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split69:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split70:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split71:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split72:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split73:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split74:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split75:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split76:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split77:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split78:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split79:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split80:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split81:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split82:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split83:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split84:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split85:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split86:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split87:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split88:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split89:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split90:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split91:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split92:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split93:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split94:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split95:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split96:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split97:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split98:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split99:                           ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split100:                          ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split101:                          ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35.fold.split102:                          ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then35

if.then35:                                        ; preds = %if.then35.fold.split102, %if.then35.fold.split101, %if.then35.fold.split100, %if.then35.fold.split99, %if.then35.fold.split98, %if.then35.fold.split97, %if.then35.fold.split96, %if.then35.fold.split95, %if.then35.fold.split94, %if.then35.fold.split93, %if.then35.fold.split92, %if.then35.fold.split91, %if.then35.fold.split90, %if.then35.fold.split89, %if.then35.fold.split88, %if.then35.fold.split87, %if.then35.fold.split86, %if.then35.fold.split85, %if.then35.fold.split84, %if.then35.fold.split83, %if.then35.fold.split82, %if.then35.fold.split81, %if.then35.fold.split80, %if.then35.fold.split79, %if.then35.fold.split78, %if.then35.fold.split77, %if.then35.fold.split76, %if.then35.fold.split75, %if.then35.fold.split74, %if.then35.fold.split73, %if.then35.fold.split72, %if.then35.fold.split71, %if.then35.fold.split70, %if.then35.fold.split69, %if.then35.fold.split, %for.body.preheader.if.then35_crit_edge
  %names.067.lcssa = phi ptr [ @iterm_names, %for.body.preheader.if.then35_crit_edge ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 1), %if.then35.fold.split ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 2), %if.then35.fold.split69 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 3), %if.then35.fold.split70 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 4), %if.then35.fold.split71 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 5), %if.then35.fold.split72 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 6), %if.then35.fold.split73 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 7), %if.then35.fold.split74 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 8), %if.then35.fold.split75 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 9), %if.then35.fold.split76 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 10), %if.then35.fold.split77 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 11), %if.then35.fold.split78 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 12), %if.then35.fold.split79 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 13), %if.then35.fold.split80 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 14), %if.then35.fold.split81 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 15), %if.then35.fold.split82 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 16), %if.then35.fold.split83 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 17), %if.then35.fold.split84 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 18), %if.then35.fold.split85 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 19), %if.then35.fold.split86 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 20), %if.then35.fold.split87 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 21), %if.then35.fold.split88 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 22), %if.then35.fold.split89 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 23), %if.then35.fold.split90 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 24), %if.then35.fold.split91 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 25), %if.then35.fold.split92 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 26), %if.then35.fold.split93 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 27), %if.then35.fold.split94 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 28), %if.then35.fold.split95 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 29), %if.then35.fold.split96 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 30), %if.then35.fold.split97 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 31), %if.then35.fold.split98 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 32), %if.then35.fold.split99 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 33), %if.then35.fold.split100 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 34), %if.then35.fold.split101 ], [ getelementptr inbounds ([37 x %struct.iterm_name_combo], ptr @iterm_names, i32 0, i32 35), %if.then35.fold.split102 ]
  %name36 = getelementptr inbounds %struct.iterm_name_combo, ptr %names.067.lcssa, i32 0, i32 1
  %22 = ptrtoint ptr %name36 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %name36, align 4
  %call37 = tail call ptr @strcpy(ptr noundef %name, ptr noundef %23) #21
  %24 = ptrtoint ptr %name36 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %name36, align 4
  %call39 = tail call i32 @strlen(ptr noundef %25) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then35, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %for.body.preheader.cleanup_crit_edge, %sw.default, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb, %if.then7.cleanup_crit_edge, %snd_usb_copy_string_desc.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call20, %sw.default ], [ 5, %sw.bb18 ], [ 8, %sw.bb16 ], [ 12, %sw.bb14 ], [ 8, %sw.bb ], [ %call39, %if.then35 ], [ 5, %sw.bb29 ], [ 7, %sw.bb27 ], [ 3, %sw.bb25 ], [ 3, %sw.bb23 ], [ %call.i, %snd_usb_copy_string_desc.exit.cleanup_crit_edge ], [ 0, %if.then7.cleanup_crit_edge ], [ 0, %for.body.preheader.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_no_speaker_on_headset(ptr noundef %kctl, ptr noundef readonly %card) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 1, i32 4
  %call = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.111, ptr noundef %name) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %shortname = getelementptr inbounds %struct.snd_card, ptr %card, i32 0, i32 3
  %call3 = tail call ptr @strstr(ptr noundef %shortname, ptr noundef nonnull @.str.108)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %for.cond, label %for.cond.preheader.if.end9_crit_edge

for.cond.preheader.if.end9_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

for.cond:                                         ; preds = %for.cond.preheader
  %call3.1 = tail call ptr @strstr(ptr noundef %shortname, ptr noundef nonnull @.str.146)
  %tobool4.not.1 = icmp eq ptr %call3.1, null
  br i1 %tobool4.not.1, label %for.cond.1, label %for.cond.if.end9_crit_edge

for.cond.if.end9_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

for.cond.1:                                       ; preds = %for.cond
  %call3.2 = tail call ptr @strstr(ptr noundef %shortname, ptr noundef nonnull @.str.112)
  %tobool4.not.2 = icmp eq ptr %call3.2, null
  br i1 %tobool4.not.2, label %for.cond.2, label %for.cond.1.if.end9_crit_edge

for.cond.1.if.end9_crit_edge:                     ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

for.cond.2:                                       ; preds = %for.cond.1
  %call3.3 = tail call ptr @strstr(ptr noundef %shortname, ptr noundef nonnull @.str.147)
  %tobool4.not.3 = icmp eq ptr %call3.3, null
  br i1 %tobool4.not.3, label %for.cond.2.cleanup_crit_edge, label %for.cond.2.if.end9_crit_edge

for.cond.2.if.end9_crit_edge:                     ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

for.cond.2.cleanup_crit_edge:                     ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9:                                          ; preds = %for.cond.2.if.end9_crit_edge, %for.cond.1.if.end9_crit_edge, %for.cond.if.end9_crit_edge, %for.cond.preheader.if.end9_crit_edge
  %call13 = tail call i32 @strscpy(ptr noundef %name, ptr noundef nonnull @.str.112, i32 noundef 44) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %for.cond.2.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_ctl_free_one(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_usb_mixer_fu_apply_quirk(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_string(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #6

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcat(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @connector_mixer_resume(ptr nocapture noundef readonly %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @get_connector_value(ptr noundef %list, ptr noundef null, ptr noundef null)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_connector_value(ptr nocapture noundef readonly %cval, ptr noundef readonly %name, ptr noundef writeonly %val) unnamed_addr #0 align 64 {
entry:
  %uac2_conn = alloca %struct.uac2_connectors_ctl_blk, align 1
  %uac3_conn = alloca %struct.uac3_insertion_ctl_blk, align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cval, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 1
  %4 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %control, align 4
  %shl = shl i32 %5, 8
  %call = tail call i32 @snd_usb_lock_shutdown(ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cval, align 4
  %hostif.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %hostif.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hostif.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv.i = zext i8 %11 to i32
  %id = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %cval, i32 0, i32 3
  %12 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id, align 4
  %shl7 = shl i32 %13, 8
  %or8 = or i32 %shl7, %conv.i
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %7, i32 0, i32 6
  %14 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %15)
  %cmp = icmp eq i32 %15, 32
  br i1 %cmp, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %uac2_conn) #13
  %16 = ptrtoint ptr %uac2_conn to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 -1, ptr %uac2_conn, align 1, !annotation !719
  %17 = getelementptr inbounds %struct.uac2_connectors_ctl_blk, ptr %uac2_conn, i32 0, i32 1
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_storeN_noabort(i32 %18, i32 4)
  store i32 -1, ptr %17, align 1, !annotation !719
  %19 = getelementptr inbounds %struct.uac2_connectors_ctl_blk, ptr %uac2_conn, i32 0, i32 2
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 -1, ptr %19, align 1, !annotation !719
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 8
  %shl.i = shl i32 %24, 8
  %or15 = or i32 %shl.i, -2147483520
  %conv = trunc i32 %shl to i16
  %conv16 = trunc i32 %or8 to i16
  %call17 = call i32 @snd_usb_ctl_msg(ptr noundef %22, i32 noundef %or15, i8 noundef zeroext 1, i8 noundef zeroext -95, i16 noundef zeroext %conv, i16 noundef zeroext %conv16, ptr noundef nonnull %uac2_conn, i16 noundef zeroext 6) #13
  %tobool18.not = icmp eq ptr %val, null
  br i1 %tobool18.not, label %if.then11.if.end22_crit_edge, label %if.then19

if.then11.if.end22_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end22

if.then19:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  %25 = ptrtoint ptr %uac2_conn to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %uac2_conn, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool20 = icmp ne i8 %26, 0
  %lnot.ext = zext i1 %tobool20 to i32
  %27 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %lnot.ext, ptr %val, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.then11.if.end22_crit_edge
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %uac2_conn) #13
  br label %if.end39

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %uac3_conn) #13
  %28 = ptrtoint ptr %uac3_conn to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 -1, ptr %uac3_conn, align 1, !annotation !719
  %29 = getelementptr inbounds %struct.uac3_insertion_ctl_blk, ptr %uac3_conn, i32 0, i32 1
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 -1, ptr %29, align 1, !annotation !719
  %dev23 = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %31 = ptrtoint ptr %dev23 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dev23, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %32, align 8
  %shl.i91 = shl i32 %34, 8
  %or27 = or i32 %shl.i91, -2147483520
  %conv28 = trunc i32 %shl to i16
  %conv29 = trunc i32 %or8 to i16
  %call30 = call i32 @snd_usb_ctl_msg(ptr noundef %32, i32 noundef %or27, i8 noundef zeroext 1, i8 noundef zeroext -95, i16 noundef zeroext %conv28, i16 noundef zeroext %conv29, ptr noundef nonnull %uac3_conn, i16 noundef zeroext 2) #13
  %tobool31.not = icmp eq ptr %val, null
  br i1 %tobool31.not, label %if.else.if.end38_crit_edge, label %if.then32

if.else.if.end38_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38

if.then32:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %35 = ptrtoint ptr %29 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %29, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool33 = icmp ne i8 %36, 0
  %lnot.ext37 = zext i1 %tobool33 to i32
  %37 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %lnot.ext37, ptr %val, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then32, %if.else.if.end38_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %uac3_conn) #13
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end22
  %ret.0 = phi i32 [ %call17, %if.end22 ], [ %call30, %if.end38 ]
  call void @snd_usb_unlock_shutdown(ptr noundef %3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %cmp40 = icmp slt i32 %ret.0, 0
  br i1 %cmp40, label %if.then42, label %if.end39.cleanup_crit_edge

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then42:                                        ; preds = %if.end39
  %tobool43.not = icmp eq ptr %name, null
  br i1 %tobool43.not, label %if.then42.do.end_crit_edge, label %land.lhs.true

if.then42.do.end_crit_edge:                       ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

land.lhs.true:                                    ; preds = %if.then42
  %call44 = call ptr @strstr(ptr noundef nonnull %name, ptr noundef nonnull @.str.111)
  %tobool45.not = icmp eq ptr %call44, null
  br i1 %tobool45.not, label %land.lhs.true.do.end_crit_edge, label %if.then46

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.then46:                                        ; preds = %land.lhs.true
  %tobool47.not = icmp eq ptr %val, null
  br i1 %tobool47.not, label %if.then46.cleanup_crit_edge, label %if.then48

if.then46.cleanup_crit_edge:                      ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then48:                                        ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #15
  %38 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 1, ptr %val, align 4
  br label %cleanup

do.end:                                           ; preds = %land.lhs.true.do.end_crit_edge, %if.then42.do.end_crit_edge, %entry.do.end_crit_edge
  %idx.0 = phi i32 [ 0, %entry.do.end_crit_edge ], [ %or8, %land.lhs.true.do.end_crit_edge ], [ %or8, %if.then42.do.end_crit_edge ]
  %ret.1 = phi i32 [ -5, %entry.do.end_crit_edge ], [ %ret.0, %land.lhs.true.do.end_crit_edge ], [ %ret.0, %if.then42.do.end_crit_edge ]
  %dev51 = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %39 = ptrtoint ptr %dev51 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev51, align 4
  %dev52 = getelementptr inbounds %struct.usb_device, ptr %40, i32 0, i32 15
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %cval, i32 0, i32 7
  %41 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %val_type, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev52, ptr noundef nonnull @.str.163, i32 noundef 129, i32 noundef %shl, i32 noundef %idx.0, i32 noundef %42) #19
  %tobool53.not = icmp eq ptr %val, null
  br i1 %tobool53.not, label %do.end.if.end55_crit_edge, label %if.then54

do.end.if.end55_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

if.then54:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  %43 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %val, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %do.end.if.end55_crit_edge
  %44 = ptrtoint ptr %cval to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %cval, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %45, i32 0, i32 3
  %46 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool58.not = icmp eq i32 %47, 0
  %spec.select = select i1 %tobool58.not, i32 %ret.1, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.then48, %if.then46.cleanup_crit_edge, %if.end39.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.select, %if.end55 ], [ 0, %if.then48 ], [ 0, %if.then46.cleanup_crit_edge ], [ %ret.0, %if.end39.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_boolean_mono_info(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_connector_get(ptr noundef %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !719
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 1, i32 4
  %call = call fastcc i32 @get_connector_value(ptr noundef %1, ptr noundef %name, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %val, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %5 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %value, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_usb_find_csint_desc(ptr noundef, i32 noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @snd_usb_validate_audio_desc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @parse_audio_unit(ptr noundef %state, i32 noundef %unitid) unnamed_addr #0 align 64 {
entry:
  %iterm.i88 = alloca %struct.usb_audio_term, align 4
  %iterm.i81 = alloca %struct.usb_audio_term, align 4
  %iterm.i = alloca %struct.usb_audio_term, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %0 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mixer, align 4
  %protocol1 = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %protocol1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %protocol1, align 4
  %unitbitmap = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 4
  %call = tail call i32 @_test_and_set_bit(i32 noundef %unitid, ptr noundef %unitbitmap) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = trunc i32 %unitid to i8
  %buffer.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 2
  %buflen.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 3
  %4 = ptrtoint ptr %buffer.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buffer.i, align 4
  %6 = ptrtoint ptr %buflen.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buflen.i, align 4
  %call22.i = tail call ptr @snd_usb_find_desc(ptr noundef %5, i32 noundef %7, ptr noundef null, i8 noundef zeroext 36) #13
  %cmp.not23.i = icmp eq ptr %call22.i, null
  br i1 %cmp.not23.i, label %if.end.do.end_crit_edge, label %if.end.while.body.i_crit_edge

if.end.while.body.i_crit_edge:                    ; preds = %if.end
  br label %while.body.i

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %if.end.while.body.i_crit_edge
  %call24.i = phi ptr [ %call.i, %if.end.i.while.body.i_crit_edge ], [ %call22.i, %if.end.while.body.i_crit_edge ]
  %8 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %call24.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %9)
  %cmp1.i = icmp ugt i8 %9, 3
  br i1 %cmp1.i, label %land.lhs.true.i, label %while.body.i.if.end.i_crit_edge

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %bDescriptorSubtype.i = getelementptr %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 2
  %10 = ptrtoint ptr %bDescriptorSubtype.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bDescriptorSubtype.i, align 1
  %12 = add i8 %11, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 13, i8 %12)
  %13 = icmp ult i8 %12, 13
  br i1 %13, label %land.lhs.true11.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %bUnitID.i = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 3
  %14 = ptrtoint ptr %bUnitID.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bUnitID.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %15, i8 %conv)
  %cmp14.i = icmp eq i8 %15, %conv
  br i1 %cmp14.i, label %if.end6, label %land.lhs.true11.i.if.end.i_crit_edge

land.lhs.true11.i.if.end.i_crit_edge:             ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true11.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %16 = ptrtoint ptr %buffer.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %buffer.i, align 4
  %18 = ptrtoint ptr %buflen.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %buflen.i, align 4
  %call.i = tail call ptr @snd_usb_find_desc(ptr noundef %17, i32 noundef %19, ptr noundef nonnull %call24.i, i8 noundef zeroext 36) #13
  %cmp.not.i = icmp eq ptr %call.i, null
  br i1 %cmp.not.i, label %if.end.i.do.end_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i

if.end.i.do.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

do.end:                                           ; preds = %if.end.i.do.end_crit_edge, %if.end.do.end_crit_edge
  %20 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %state, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev, align 4
  %dev5 = getelementptr inbounds %struct.usb_device, ptr %23, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.208, i32 noundef %unitid) #19
  br label %cleanup

if.end6:                                          ; preds = %land.lhs.true11.i
  %bUnitID.i.le = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 3
  %call7 = tail call zeroext i1 @snd_usb_validate_audio_desc(ptr noundef nonnull %call24.i, i32 noundef %3) #13
  br i1 %call7, label %if.end21, label %do.body9

do.body9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @parse_audio_unit.__UNIQUE_ID_ddebug250, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@parse_audio_unit, %if.then14)) #13
          to label %cleanup [label %if.then14], !srcloc !716

if.then14:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %state, align 4
  %dev16 = getelementptr inbounds %struct.snd_usb_audio, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %dev16 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev16, align 4
  %dev17 = getelementptr inbounds %struct.usb_device, ptr %27, i32 0, i32 15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @parse_audio_unit.__UNIQUE_ID_ddebug250, ptr noundef %dev17, ptr noundef nonnull @.str.210, i32 noundef %unitid) #13
  br label %cleanup

if.end21:                                         ; preds = %if.end6
  %bDescriptorSubtype.i.le = getelementptr %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 2
  %shl = shl i32 %3, 8
  %28 = ptrtoint ptr %bDescriptorSubtype.i.le to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %bDescriptorSubtype.i.le, align 1
  %conv22 = zext i8 %29 to i32
  %or = or i32 %shl, %conv22
  %30 = zext i32 %or to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.301)
  switch i32 %or, label %do.end39 [
    i32 2, label %if.end21.sw.bb_crit_edge
    i32 8194, label %if.end21.sw.bb_crit_edge242
    i32 12290, label %if.end21.sw.bb_crit_edge243
    i32 4, label %if.end21.sw.bb24_crit_edge
    i32 8196, label %if.end21.sw.bb24_crit_edge244
    i32 12293, label %if.end21.sw.bb24_crit_edge245
    i32 8202, label %if.end21.sw.bb26_crit_edge
    i32 12299, label %if.end21.sw.bb26_crit_edge246
    i32 5, label %if.end21.sw.bb28_crit_edge
    i32 8197, label %if.end21.sw.bb28_crit_edge247
    i32 12294, label %if.end21.sw.bb28_crit_edge248
    i32 8203, label %if.end21.sw.bb28_crit_edge249
    i32 12300, label %if.end21.sw.bb28_crit_edge250
    i32 6, label %if.end21.sw.bb30_crit_edge
    i32 8198, label %if.end21.sw.bb30_crit_edge251
    i32 12295, label %if.end21.sw.bb30_crit_edge252
    i32 7, label %if.end21.sw.bb32_crit_edge
    i32 8200, label %if.end21.sw.bb32_crit_edge253
    i32 12297, label %if.end21.sw.bb32_crit_edge254
    i32 8, label %if.end21.sw.bb34_crit_edge
    i32 8201, label %if.end21.sw.bb34_crit_edge255
    i32 12298, label %if.end21.sw.bb34_crit_edge256
    i32 8199, label %if.end21.cleanup_crit_edge
    i32 12296, label %if.end21.cleanup_crit_edge257
  ]

if.end21.cleanup_crit_edge257:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end21.sw.bb34_crit_edge256:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb34

if.end21.sw.bb34_crit_edge255:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb34

if.end21.sw.bb34_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb34

if.end21.sw.bb32_crit_edge254:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

if.end21.sw.bb32_crit_edge253:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

if.end21.sw.bb32_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

if.end21.sw.bb30_crit_edge252:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb30

if.end21.sw.bb30_crit_edge251:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb30

if.end21.sw.bb30_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb30

if.end21.sw.bb28_crit_edge250:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb28

if.end21.sw.bb28_crit_edge249:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb28

if.end21.sw.bb28_crit_edge248:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb28

if.end21.sw.bb28_crit_edge247:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb28

if.end21.sw.bb28_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb28

if.end21.sw.bb26_crit_edge246:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end21.sw.bb26_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end21.sw.bb24_crit_edge245:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24

if.end21.sw.bb24_crit_edge244:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24

if.end21.sw.bb24_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24

if.end21.sw.bb_crit_edge243:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end21.sw.bb_crit_edge242:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end21.sw.bb_crit_edge:                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

sw.bb:                                            ; preds = %if.end21.sw.bb_crit_edge, %if.end21.sw.bb_crit_edge242, %if.end21.sw.bb_crit_edge243
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %iterm.i) #13
  %31 = getelementptr inbounds %struct.usb_audio_term, ptr %iterm.i, i32 0, i32 1
  %32 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mixer, align 4
  %protocol.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %33, i32 0, i32 6
  %34 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %protocol.i, align 4
  %36 = zext i32 %35 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.302)
  switch i32 %35, label %sw.bb.parse_audio_input_terminal.exit_crit_edge [
    i32 32, label %if.then.i
    i32 48, label %if.then6.i
  ]

sw.bb.parse_audio_input_terminal.exit_crit_edge:  ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_input_terminal.exit

if.then.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %bmControls.i = getelementptr inbounds %struct.uac2_input_terminal_descriptor, ptr %call24.i, i32 0, i32 10
  %37 = ptrtoint ptr %bmControls.i to i32
  call void @__asan_loadN_noabort(i32 %37, i32 2)
  %38 = load i16, ptr %bmControls.i, align 1
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #13
  %conv1.i = zext i16 %39 to i32
  br label %if.end11.i

if.then6.i:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %bmControls9.i = getelementptr inbounds %struct.uac3_input_terminal_descriptor, ptr %call24.i, i32 0, i32 7
  %40 = ptrtoint ptr %bmControls9.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 4)
  %41 = load i32, ptr %bmControls9.i, align 1
  %42 = tail call i32 @llvm.bswap.i32(i32 %41) #13
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then6.i, %if.then.i
  %bmctls.0.i = phi i32 [ %conv1.i, %if.then.i ], [ %42, %if.then6.i ]
  %control.0.i = phi i32 [ 2, %if.then.i ], [ 0, %if.then6.i ]
  %43 = ptrtoint ptr %bUnitID.i.le to i32
  call void @__asan_load1_noabort(i32 %43)
  %term_id.0.in.i = load i8, ptr %bUnitID.i.le, align 1
  %term_id.0.i = zext i8 %term_id.0.in.i to i32
  %44 = call ptr @memset(ptr %iterm.i, i32 0, i32 20)
  %termbitmap.i.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 5
  %45 = call ptr @memset(ptr %termbitmap.i.i, i32 0, i32 32)
  %call.i.i = call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %term_id.0.i, ptr noundef nonnull %iterm.i) #13
  %46 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %31, align 4
  %and.i = and i32 %47, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %and.i)
  %cmp12.not.i = icmp eq i32 %and.i, 256
  br i1 %cmp12.not.i, label %if.end11.i.parse_audio_input_terminal.exit_crit_edge, label %land.lhs.true.i80

if.end11.i.parse_audio_input_terminal.exit_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_input_terminal.exit

land.lhs.true.i80:                                ; preds = %if.end11.i
  %48 = shl nuw nsw i32 1, %control.0.i
  %49 = and i32 %48, %bmctls.0.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.i.not.i = icmp eq i32 %49, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i80.parse_audio_input_terminal.exit_crit_edge, label %if.then17.i

land.lhs.true.i80.parse_audio_input_terminal.exit_crit_edge: ; preds = %land.lhs.true.i80
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_input_terminal.exit

if.then17.i:                                      ; preds = %land.lhs.true.i80
  call void @__sanitizer_cov_trace_pc() #15
  %50 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %mixer, align 4
  %map.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 7
  %52 = ptrtoint ptr %map.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %map.i, align 4
  call fastcc void @build_connector_control(ptr noundef %51, ptr noundef %53, ptr noundef nonnull %iterm.i, i1 noundef zeroext true) #13
  br label %parse_audio_input_terminal.exit

parse_audio_input_terminal.exit:                  ; preds = %if.then17.i, %land.lhs.true.i80.parse_audio_input_terminal.exit_crit_edge, %if.end11.i.parse_audio_input_terminal.exit_crit_edge, %sw.bb.parse_audio_input_terminal.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %iterm.i) #13
  br label %cleanup

sw.bb24:                                          ; preds = %if.end21.sw.bb24_crit_edge, %if.end21.sw.bb24_crit_edge244, %if.end21.sw.bb24_crit_edge245
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %iterm.i81) #13
  %54 = getelementptr inbounds %struct.usb_audio_term, ptr %iterm.i81, i32 0, i32 2
  %55 = call ptr @memset(ptr %iterm.i81, i32 255, i32 20)
  %call.i82 = tail call fastcc i32 @uac_mixer_unit_get_channels(ptr noundef %state, ptr noundef nonnull %call24.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i82)
  %cmp.i = icmp slt i32 %call.i82, 0
  br i1 %cmp.i, label %do.end.i, label %if.end.i83

do.end.i:                                         ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #15
  %56 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %state, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dev.i, align 4
  %dev1.i = getelementptr inbounds %struct.usb_device, ptr %59, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1.i, ptr noundef nonnull @.str.216, i32 noundef %unitid) #19
  br label %parse_audio_mixer_unit.exit

if.end.i83:                                       ; preds = %sw.bb24
  %bNrInPins.i = getelementptr inbounds %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 4
  %60 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %bNrInPins.i, align 1
  %conv.i = zext i8 %61 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %cmp2.i195.not = icmp eq i8 %61, 0
  br i1 %cmp2.i195.not, label %if.end.i83.parse_audio_mixer_unit.exit_crit_edge, label %for.body.i.lr.ph

if.end.i83.parse_audio_mixer_unit.exit_crit_edge: ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_mixer_unit.exit

for.body.i.lr.ph:                                 ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i82)
  %tobool.not.i = icmp eq i32 %call.i82, 0
  %termbitmap.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc44.i.for.body.i_crit_edge, %for.body.i.lr.ph
  %ich.0.i198 = phi i32 [ 0, %for.body.i.lr.ph ], [ %ich.2.i, %for.inc44.i.for.body.i_crit_edge ]
  %pin.0.i197 = phi i32 [ 0, %for.body.i.lr.ph ], [ %inc45.i, %for.inc44.i.for.body.i_crit_edge ]
  %num_ins.0.i196 = phi i32 [ 0, %for.body.i.lr.ph ], [ %num_ins.1.i, %for.inc44.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %pin.0.i197
  %62 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %arrayidx.i, align 1
  %conv4.i = zext i8 %63 to i32
  %call5.i = call fastcc i32 @parse_audio_unit(ptr noundef %state, i32 noundef %conv4.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  %or.cond.i = select i1 %cmp6.i, i1 true, i1 %tobool.not.i
  br i1 %or.cond.i, label %for.body.i.for.inc44.i_crit_edge, label %if.end11.i84

for.body.i.for.inc44.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc44.i

if.end11.i84:                                     ; preds = %for.body.i
  %64 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %arrayidx.i, align 1
  %conv14.i = zext i8 %65 to i32
  %66 = call ptr @memset(ptr %iterm.i81, i32 0, i32 20)
  %67 = call ptr @memset(ptr %termbitmap.i, i32 0, i32 32)
  %call.i125 = call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv14.i, ptr noundef nonnull %iterm.i81) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i125)
  %cmp16.i = icmp slt i32 %call.i125, 0
  br i1 %cmp16.i, label %if.end11.i84.parse_audio_mixer_unit.exit_crit_edge, label %if.end19.i

if.end11.i84.parse_audio_mixer_unit.exit_crit_edge: ; preds = %if.end11.i84
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_mixer_unit.exit

if.end19.i:                                       ; preds = %if.end11.i84
  %68 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %54, align 4
  %add.i = add i32 %69, %num_ins.0.i196
  %70 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %mixer, align 4
  %protocol.i86 = getelementptr inbounds %struct.usb_mixer_interface, ptr %71, i32 0, i32 6
  %72 = ptrtoint ptr %protocol.i86 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %protocol.i86, align 4
  %74 = zext i32 %73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %74, ptr @__sancov_gen_cov_switch_values.303)
  switch i32 %73, label %if.end19.i.mixer_bitmap_overflow.exit_crit_edge [
    i32 0, label %if.end19.i.return.sink.split.i.i_crit_edge
    i32 32, label %sw.bb1.i.i
    i32 48, label %sw.bb7.i.i
  ]

if.end19.i.return.sink.split.i.i_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i.i

if.end19.i.mixer_bitmap_overflow.exit_crit_edge:  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mixer_bitmap_overflow.exit

sw.bb1.i.i:                                       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i.i

sw.bb7.i.i:                                       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i.i

return.sink.split.i.i:                            ; preds = %sw.bb7.i.i, %sw.bb1.i.i, %if.end19.i.return.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 2, %sw.bb7.i.i ], [ 6, %sw.bb1.i.i ], [ 4, %if.end19.i.return.sink.split.i.i_crit_edge ]
  %75 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %bNrInPins.i, align 1
  %conv10.i.i = zext i8 %76 to i32
  %add11.i.i = add nuw nsw i32 %.sink.i.i, %conv10.i.i
  %arrayidx12.i.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add11.i.i
  br label %mixer_bitmap_overflow.exit

mixer_bitmap_overflow.exit:                       ; preds = %return.sink.split.i.i, %if.end19.i.mixer_bitmap_overflow.exit_crit_edge
  %retval.0.i.i = phi ptr [ null, %if.end19.i.mixer_bitmap_overflow.exit_crit_edge ], [ %arrayidx12.i.i, %return.sink.split.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %73)
  %switch.selectcmp.i = icmp eq i32 %73, 32
  %switch.select.i = select i1 %switch.selectcmp.i, i32 2, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %73)
  %switch.selectcmp9.i = icmp eq i32 %73, 48
  %switch.select10.i = select i1 %switch.selectcmp9.i, i32 6, i32 %switch.select.i
  %mul.i119 = mul i32 %add.i, %call.i82
  %add.i120 = add i32 %mul.i119, 7
  %div.i121 = sdiv i32 %add.i120, 8
  %add.ptr.i122 = getelementptr i8, ptr %retval.0.i.i, i32 %div.i121
  %add.ptr3.i = getelementptr i8, ptr %add.ptr.i122, i32 %switch.select10.i
  %77 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %call24.i, align 1
  %conv.i123 = zext i8 %78 to i32
  %add.ptr4.i = getelementptr i8, ptr %call24.i, i32 %conv.i123
  %cmp.i124 = icmp ugt ptr %add.ptr3.i, %add.ptr4.i
  br i1 %cmp.i124, label %mixer_bitmap_overflow.exit.parse_audio_mixer_unit.exit_crit_edge, label %for.cond23.i.preheader

mixer_bitmap_overflow.exit.parse_audio_mixer_unit.exit_crit_edge: ; preds = %mixer_bitmap_overflow.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_mixer_unit.exit

for.cond23.i.preheader:                           ; preds = %mixer_bitmap_overflow.exit
  call void @__sanitizer_cov_trace_cmp4(i32 %ich.0.i198, i32 %add.i)
  %cmp24.i190 = icmp slt i32 %ich.0.i198, %add.i
  br i1 %cmp24.i190, label %for.cond23.i.preheader.for.body30.i.lr.ph_crit_edge, label %for.cond23.i.preheader.for.inc44.i_crit_edge

for.cond23.i.preheader.for.inc44.i_crit_edge:     ; preds = %for.cond23.i.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc44.i

for.cond23.i.preheader.for.body30.i.lr.ph_crit_edge: ; preds = %for.cond23.i.preheader
  br label %for.body30.i.lr.ph

for.body30.i.lr.ph:                               ; preds = %if.end40.i.for.body30.i.lr.ph_crit_edge, %for.cond23.i.preheader.for.body30.i.lr.ph_crit_edge
  %ich.1.i191 = phi i32 [ %inc42.i, %if.end40.i.for.body30.i.lr.ph_crit_edge ], [ %ich.0.i198, %for.cond23.i.preheader.for.body30.i.lr.ph_crit_edge ]
  %79 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %mixer, align 4
  %protocol32.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %80, i32 0, i32 6
  %81 = ptrtoint ptr %protocol32.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %protocol32.i, align 4
  %mul.i111 = mul i32 %ich.1.i191, %call.i82
  br label %for.body30.i

for.cond27.i:                                     ; preds = %uac_mixer_unit_bmControls.exit
  %inc.i = add nuw nsw i32 %och.0.i189, 1
  %exitcond207.not = icmp eq i32 %inc.i, %call.i82
  br i1 %exitcond207.not, label %for.cond27.i.if.end40.i_crit_edge, label %for.cond27.i.for.body30.i_crit_edge

for.cond27.i.for.body30.i_crit_edge:              ; preds = %for.cond27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body30.i

for.cond27.i.if.end40.i_crit_edge:                ; preds = %for.cond27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end40.i

for.body30.i:                                     ; preds = %for.cond27.i.for.body30.i_crit_edge, %for.body30.i.lr.ph
  %och.0.i189 = phi i32 [ 0, %for.body30.i.lr.ph ], [ %inc.i, %for.cond27.i.for.body30.i_crit_edge ]
  %83 = zext i32 %82 to i64
  call void @__sanitizer_cov_trace_switch(i64 %83, ptr @__sancov_gen_cov_switch_values.304)
  switch i32 %82, label %for.body30.i.uac_mixer_unit_bmControls.exit_crit_edge [
    i32 0, label %for.body30.i.return.sink.split.i_crit_edge
    i32 32, label %sw.bb1.i116
    i32 48, label %sw.bb7.i
  ]

for.body30.i.return.sink.split.i_crit_edge:       ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

for.body30.i.uac_mixer_unit_bmControls.exit_crit_edge: ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac_mixer_unit_bmControls.exit

sw.bb1.i116:                                      ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

sw.bb7.i:                                         ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %sw.bb7.i, %sw.bb1.i116, %for.body30.i.return.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 2, %sw.bb7.i ], [ 6, %sw.bb1.i116 ], [ 4, %for.body30.i.return.sink.split.i_crit_edge ]
  %84 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %bNrInPins.i, align 1
  %conv10.i117 = zext i8 %85 to i32
  %add11.i = add nuw nsw i32 %.sink.i, %conv10.i117
  %arrayidx12.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add11.i
  br label %uac_mixer_unit_bmControls.exit

uac_mixer_unit_bmControls.exit:                   ; preds = %return.sink.split.i, %for.body30.i.uac_mixer_unit_bmControls.exit_crit_edge
  %retval.0.i118 = phi ptr [ null, %for.body30.i.uac_mixer_unit_bmControls.exit_crit_edge ], [ %arrayidx12.i, %return.sink.split.i ]
  %add.i112 = add i32 %och.0.i189, %mul.i111
  %shr.i = ashr i32 %add.i112, 3
  %arrayidx.i113 = getelementptr i8, ptr %retval.0.i118, i32 %shr.i
  %86 = ptrtoint ptr %arrayidx.i113 to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %arrayidx.i113, align 1
  %conv.i114 = zext i8 %87 to i32
  %and.i115 = and i32 %add.i112, 7
  %shr1.i = lshr i32 128, %and.i115
  %and2.i = and i32 %shr1.i, %conv.i114
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool35.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool35.not.i, label %for.cond27.i, label %if.then39.i.critedge

if.then39.i.critedge:                             ; preds = %uac_mixer_unit_bmControls.exit
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @build_mixer_unit_ctl(ptr noundef %state, ptr noundef %call24.i, i32 noundef %ich.1.i191, i32 noundef %call.i82, i32 noundef %unitid, ptr noundef nonnull %iterm.i81) #13
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.then39.i.critedge, %for.cond27.i.if.end40.i_crit_edge
  %inc42.i = add nsw i32 %ich.1.i191, 1
  %exitcond208.not = icmp eq i32 %inc42.i, %add.i
  br i1 %exitcond208.not, label %if.end40.i.for.inc44.i_crit_edge, label %if.end40.i.for.body30.i.lr.ph_crit_edge

if.end40.i.for.body30.i.lr.ph_crit_edge:          ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body30.i.lr.ph

if.end40.i.for.inc44.i_crit_edge:                 ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc44.i

for.inc44.i:                                      ; preds = %if.end40.i.for.inc44.i_crit_edge, %for.cond23.i.preheader.for.inc44.i_crit_edge, %for.body.i.for.inc44.i_crit_edge
  %num_ins.1.i = phi i32 [ %num_ins.0.i196, %for.body.i.for.inc44.i_crit_edge ], [ %add.i, %for.cond23.i.preheader.for.inc44.i_crit_edge ], [ %add.i, %if.end40.i.for.inc44.i_crit_edge ]
  %ich.2.i = phi i32 [ %ich.0.i198, %for.body.i.for.inc44.i_crit_edge ], [ %ich.0.i198, %for.cond23.i.preheader.for.inc44.i_crit_edge ], [ %add.i, %if.end40.i.for.inc44.i_crit_edge ]
  %inc45.i = add nuw nsw i32 %pin.0.i197, 1
  %exitcond209.not = icmp eq i32 %inc45.i, %conv.i
  br i1 %exitcond209.not, label %for.inc44.i.parse_audio_mixer_unit.exit_crit_edge, label %for.inc44.i.for.body.i_crit_edge

for.inc44.i.for.body.i_crit_edge:                 ; preds = %for.inc44.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc44.i.parse_audio_mixer_unit.exit_crit_edge: ; preds = %for.inc44.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_mixer_unit.exit

parse_audio_mixer_unit.exit:                      ; preds = %for.inc44.i.parse_audio_mixer_unit.exit_crit_edge, %mixer_bitmap_overflow.exit.parse_audio_mixer_unit.exit_crit_edge, %if.end11.i84.parse_audio_mixer_unit.exit_crit_edge, %if.end.i83.parse_audio_mixer_unit.exit_crit_edge, %do.end.i
  %retval.0.i87 = phi i32 [ %call.i82, %do.end.i ], [ 0, %if.end.i83.parse_audio_mixer_unit.exit_crit_edge ], [ 0, %for.inc44.i.parse_audio_mixer_unit.exit_crit_edge ], [ %call.i125, %if.end11.i84.parse_audio_mixer_unit.exit_crit_edge ], [ 0, %mixer_bitmap_overflow.exit.parse_audio_mixer_unit.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %iterm.i81) #13
  br label %cleanup

sw.bb26:                                          ; preds = %if.end21.sw.bb26_crit_edge, %if.end21.sw.bb26_crit_edge246
  %call27 = tail call fastcc i32 @parse_clock_source_unit(ptr noundef %state, ptr noundef nonnull %call24.i)
  br label %cleanup

sw.bb28:                                          ; preds = %if.end21.sw.bb28_crit_edge, %if.end21.sw.bb28_crit_edge247, %if.end21.sw.bb28_crit_edge248, %if.end21.sw.bb28_crit_edge249, %if.end21.sw.bb28_crit_edge250
  %call29 = tail call fastcc i32 @parse_audio_selector_unit(ptr noundef %state, i32 noundef %unitid, ptr noundef nonnull %call24.i)
  br label %cleanup

sw.bb30:                                          ; preds = %if.end21.sw.bb30_crit_edge, %if.end21.sw.bb30_crit_edge251, %if.end21.sw.bb30_crit_edge252
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %iterm.i88) #13
  %88 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %mixer, align 4
  %protocol.i90 = getelementptr inbounds %struct.usb_mixer_interface, ptr %89, i32 0, i32 6
  %90 = ptrtoint ptr %protocol.i90 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %protocol.i90, align 4
  %92 = zext i32 %91 to i64
  call void @__sanitizer_cov_trace_switch(i64 %92, ptr @__sancov_gen_cov_switch_values.305)
  switch i32 %91, label %if.else16.i [
    i32 0, label %if.then.i93
    i32 32, label %if.then8.i
  ]

if.then.i93:                                      ; preds = %sw.bb30
  call void @__sanitizer_cov_trace_pc() #15
  %bControlSize.i = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 5
  %93 = ptrtoint ptr %bControlSize.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %bControlSize.i, align 1
  %conv.i91 = zext i8 %94 to i32
  %95 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %call24.i, align 1
  %conv1.i92 = zext i8 %96 to i16
  %sub.i = add nsw i16 %conv1.i92, -7
  %div.i.rhs.trunc = zext i8 %94 to i16
  %div.i172 = sdiv i16 %sub.i, %div.i.rhs.trunc
  %bmaControls3.i = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 6
  br label %if.end25.i

if.then8.i:                                       ; preds = %sw.bb30
  call void @__sanitizer_cov_trace_pc() #15
  %97 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %call24.i, align 1
  %conv10.i = zext i8 %98 to i16
  %sub11.i = add nsw i16 %conv10.i, -6
  %div12.i173 = sdiv i16 %sub11.i, 4
  %bmaControls14.i = getelementptr inbounds %struct.uac2_feature_unit_descriptor, ptr %call24.i, i32 0, i32 5
  br label %if.end25.i

if.else16.i:                                      ; preds = %sw.bb30
  call void @__sanitizer_cov_trace_pc() #15
  %99 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %call24.i, align 1
  %conv19.i = zext i8 %100 to i16
  %sub20.i = add nsw i16 %conv19.i, -7
  %div21.i171 = sdiv i16 %sub20.i, 4
  %bmaControls23.i = getelementptr inbounds %struct.uac3_feature_unit_descriptor, ptr %call24.i, i32 0, i32 5
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.else16.i, %if.then8.i, %if.then.i93
  %csize.0.i = phi i32 [ %conv.i91, %if.then.i93 ], [ 4, %if.then8.i ], [ 4, %if.else16.i ]
  %bmaControls.0.i = phi ptr [ %bmaControls3.i, %if.then.i93 ], [ %bmaControls14.i, %if.then8.i ], [ %bmaControls23.i, %if.else16.i ]
  %channels.0.in.i.in = phi i16 [ %div.i172, %if.then.i93 ], [ %div12.i173, %if.then8.i ], [ %div21.i171, %if.else16.i ]
  %channels.0.in.i = sext i16 %channels.0.in.i.in to i32
  %channels.0.i = add nsw i32 %channels.0.in.i, -1
  %bSourceID.i = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 4
  %101 = ptrtoint ptr %bSourceID.i to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %bSourceID.i, align 1
  %conv26.i = zext i8 %102 to i32
  %call.i94 = tail call fastcc i32 @parse_audio_unit(ptr noundef %state, i32 noundef %conv26.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i94)
  %cmp27.i = icmp slt i32 %call.i94, 0
  br i1 %cmp27.i, label %if.end25.i.parse_audio_feature_unit.exit_crit_edge, label %if.end30.i

if.end25.i.parse_audio_feature_unit.exit_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_feature_unit.exit

if.end30.i:                                       ; preds = %if.end25.i
  %103 = ptrtoint ptr %bSourceID.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %bSourceID.i, align 1
  %conv32.i = zext i8 %104 to i32
  %105 = call ptr @memset(ptr %iterm.i88, i32 0, i32 20)
  %termbitmap.i165 = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 5
  %106 = call ptr @memset(ptr %termbitmap.i165, i32 0, i32 32)
  %call.i166 = call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv32.i, ptr noundef nonnull %iterm.i88) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i166)
  %cmp34.i = icmp slt i32 %call.i166, 0
  br i1 %cmp34.i, label %if.end30.i.parse_audio_feature_unit.exit_crit_edge, label %if.end37.i

if.end30.i.parse_audio_feature_unit.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_feature_unit.exit

if.end37.i:                                       ; preds = %if.end30.i
  %call38.i = call i32 @snd_usb_combine_bytes(ptr noundef %bmaControls.0.i, i32 noundef %csize.0.i) #13
  %107 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %state, align 4
  %usb_id.i = getelementptr inbounds %struct.snd_usb_audio, ptr %108, i32 0, i32 4
  %109 = ptrtoint ptr %usb_id.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %usb_id.i, align 4
  %111 = zext i32 %110 to i64
  call void @__sanitizer_cov_trace_switch(i64 %111, ptr @__sancov_gen_cov_switch_values.306)
  switch i32 %110, label %if.end37.i.sw.epilog.i_crit_edge [
    i32 146482946, label %do.end.i98
    i32 288420369, label %do.end44.i
  ]

if.end37.i.sw.epilog.i_crit_edge:                 ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

do.end.i98:                                       ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev.i96 = getelementptr inbounds %struct.snd_usb_audio, ptr %108, i32 0, i32 1
  %112 = ptrtoint ptr %dev.i96 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %dev.i96, align 4
  %dev40.i = getelementptr inbounds %struct.usb_device, ptr %113, i32 0, i32 15
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev40.i, ptr noundef nonnull @.str.230) #19
  %and.i97 = and i32 %call38.i, -3
  br label %sw.epilog.i

do.end44.i:                                       ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #15
  %dev46.i = getelementptr inbounds %struct.snd_usb_audio, ptr %108, i32 0, i32 1
  %114 = ptrtoint ptr %dev46.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %dev46.i, align 4
  %dev47.i = getelementptr inbounds %struct.usb_device, ptr %115, i32 0, i32 15
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev47.i, ptr noundef nonnull @.str.233) #19
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %do.end44.i, %do.end.i98, %if.end37.i.sw.epilog.i_crit_edge
  %master_bits.0.i = phi i32 [ %call38.i, %if.end37.i.sw.epilog.i_crit_edge ], [ %call38.i, %do.end44.i ], [ %and.i97, %do.end.i98 ]
  %channels.1.i = phi i32 [ %channels.0.i, %if.end37.i.sw.epilog.i_crit_edge ], [ 0, %do.end44.i ], [ %channels.0.i, %do.end.i98 ]
  %116 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %mixer, align 4
  %protocol49.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %117, i32 0, i32 6
  %118 = ptrtoint ptr %protocol49.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %protocol49.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %cmp50.i = icmp eq i32 %119, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %channels.1.i)
  %cmp57.i182 = icmp sgt i32 %channels.1.i, 0
  %map.i163 = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 7
  %oterm.i164 = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 6
  br i1 %cmp50.i, label %sw.epilog.i.for.body.i101_crit_edge, label %sw.epilog.i.for.body81.i_crit_edge

sw.epilog.i.for.body81.i_crit_edge:               ; preds = %sw.epilog.i
  br label %for.body81.i

sw.epilog.i.for.body.i101_crit_edge:              ; preds = %sw.epilog.i
  br label %for.body.i101

for.body.i101:                                    ; preds = %if.end73.i.for.body.i101_crit_edge, %sw.epilog.i.for.body.i101_crit_edge
  %i.0.i186 = phi i32 [ %inc75.i, %if.end73.i.for.body.i101_crit_edge ], [ 0, %sw.epilog.i.for.body.i101_crit_edge ]
  %arrayidx.i100 = getelementptr [13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 %i.0.i186
  %120 = ptrtoint ptr %arrayidx.i100 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx.i100, align 4
  %shl.i = shl nuw i32 1, %i.0.i186
  br i1 %cmp57.i182, label %for.body.i101.for.body59.i_crit_edge, label %for.body.i101.if.end68.i_crit_edge

for.body.i101.if.end68.i_crit_edge:               ; preds = %for.body.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end68.i

for.body.i101.for.body59.i_crit_edge:             ; preds = %for.body.i101
  br label %for.body59.i

for.body59.i:                                     ; preds = %for.body59.i.for.body59.i_crit_edge, %for.body.i101.for.body59.i_crit_edge
  %ch_bits.0.i184 = phi i32 [ %ch_bits.1.i, %for.body59.i.for.body59.i_crit_edge ], [ 0, %for.body.i101.for.body59.i_crit_edge ]
  %j.0.i183 = phi i32 [ %add.i102, %for.body59.i.for.body59.i_crit_edge ], [ 0, %for.body.i101.for.body59.i_crit_edge ]
  %add.i102 = add nuw nsw i32 %j.0.i183, 1
  %mul.i = mul nuw nsw i32 %add.i102, %csize.0.i
  %add.ptr.i = getelementptr i8, ptr %bmaControls.0.i, i32 %mul.i
  %call60.i = call i32 @snd_usb_combine_bytes(ptr noundef %add.ptr.i, i32 noundef %csize.0.i) #13
  %and61.i = and i32 %call60.i, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61.i)
  %tobool.not.i103 = icmp eq i32 %and61.i, 0
  %shl63.i = shl nuw i32 1, %j.0.i183
  %or.i = select i1 %tobool.not.i103, i32 0, i32 %shl63.i
  %ch_bits.1.i = or i32 %or.i, %ch_bits.0.i184
  %exitcond205.not = icmp eq i32 %add.i102, %channels.1.i
  br i1 %exitcond205.not, label %for.end.i104, label %for.body59.i.for.body59.i_crit_edge

for.body59.i.for.body59.i_crit_edge:              ; preds = %for.body59.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body59.i

for.end.i104:                                     ; preds = %for.body59.i
  %and65.i = and i32 %ch_bits.1.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65.i)
  %tobool66.not.i = icmp eq i32 %and65.i, 0
  br i1 %tobool66.not.i, label %for.end.i104.if.end68.i_crit_edge, label %if.then67.i

for.end.i104.if.end68.i_crit_edge:                ; preds = %for.end.i104
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end68.i

if.then67.i:                                      ; preds = %for.end.i104
  call void @__sanitizer_cov_trace_pc() #15
  %122 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %call24.i, align 1
  %conv.i.i158 = zext i8 %123 to i32
  %sub.i.i159 = add nsw i32 %conv.i.i158, -1
  %arrayidx.i.i160 = getelementptr i8, ptr %call24.i, i32 %sub.i.i159
  %124 = ptrtoint ptr %arrayidx.i.i160 to i32
  call void @__asan_load1_noabort(i32 %124)
  %125 = load i8, ptr %arrayidx.i.i160, align 1
  %conv.i161 = zext i8 %125 to i32
  %126 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %mixer, align 4
  %128 = ptrtoint ptr %map.i163 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %map.i163, align 4
  call fastcc void @__build_feature_ctl(ptr noundef %127, ptr noundef %129, i32 noundef %ch_bits.1.i, i32 noundef %121, ptr noundef nonnull %iterm.i88, ptr noundef %oterm.i164, i32 noundef %unitid, i32 noundef %conv.i161, i32 noundef 0) #13
  br label %if.end68.i

if.end68.i:                                       ; preds = %if.then67.i, %for.end.i104.if.end68.i_crit_edge, %for.body.i101.if.end68.i_crit_edge
  %and70.i = and i32 %shl.i, %master_bits.0.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70.i)
  %tobool71.not.i = icmp eq i32 %and70.i, 0
  br i1 %tobool71.not.i, label %if.end68.i.if.end73.i_crit_edge, label %if.then72.i

if.end68.i.if.end73.i_crit_edge:                  ; preds = %if.end68.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end73.i

if.then72.i:                                      ; preds = %if.end68.i
  call void @__sanitizer_cov_trace_pc() #15
  %130 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %130)
  %131 = load i8, ptr %call24.i, align 1
  %conv.i.i151 = zext i8 %131 to i32
  %sub.i.i152 = add nsw i32 %conv.i.i151, -1
  %arrayidx.i.i153 = getelementptr i8, ptr %call24.i, i32 %sub.i.i152
  %132 = ptrtoint ptr %arrayidx.i.i153 to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %arrayidx.i.i153, align 1
  %conv.i154 = zext i8 %133 to i32
  %134 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %mixer, align 4
  %136 = ptrtoint ptr %map.i163 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %map.i163, align 4
  call fastcc void @__build_feature_ctl(ptr noundef %135, ptr noundef %137, i32 noundef 0, i32 noundef %121, ptr noundef nonnull %iterm.i88, ptr noundef %oterm.i164, i32 noundef %unitid, i32 noundef %conv.i154, i32 noundef 0) #13
  br label %if.end73.i

if.end73.i:                                       ; preds = %if.then72.i, %if.end68.i.if.end73.i_crit_edge
  %inc75.i = add nuw nsw i32 %i.0.i186, 1
  %exitcond206.not = icmp eq i32 %inc75.i, 10
  br i1 %exitcond206.not, label %if.end73.i.parse_audio_feature_unit.exit_crit_edge, label %if.end73.i.for.body.i101_crit_edge

if.end73.i.for.body.i101_crit_edge:               ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i101

if.end73.i.parse_audio_feature_unit.exit_crit_edge: ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_feature_unit.exit

for.body81.i:                                     ; preds = %if.end119.i.for.body81.i_crit_edge, %sw.epilog.i.for.body81.i_crit_edge
  %i.1.i181 = phi i32 [ %inc121.i, %if.end119.i.for.body81.i_crit_edge ], [ 0, %sw.epilog.i.for.body81.i_crit_edge ]
  %arrayidx84.i = getelementptr [13 x %struct.usb_feature_control_info], ptr @audio_feature_info, i32 0, i32 %i.1.i181
  %138 = ptrtoint ptr %arrayidx84.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %arrayidx84.i, align 4
  %conv.i147 = shl i32 %139, 1
  %sub.i148 = and i32 %conv.i147, 510
  %mul.i149 = add nsw i32 %sub.i148, -2
  %140 = shl nuw i32 1, %mul.i149
  br i1 %cmp57.i182, label %for.body89.i.lr.ph, label %for.body81.i.if.end113.i_crit_edge

for.body81.i.if.end113.i_crit_edge:               ; preds = %for.body81.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end113.i

for.body89.i.lr.ph:                               ; preds = %for.body81.i
  %141 = shl i32 2, %mul.i149
  br label %for.body89.i

for.body89.i:                                     ; preds = %if.end106.i.for.body89.i_crit_edge, %for.body89.i.lr.ph
  %ch_read_only.0.i179 = phi i32 [ 0, %for.body89.i.lr.ph ], [ %ch_read_only.1.i, %if.end106.i.for.body89.i_crit_edge ]
  %ch_bits82.0.i178 = phi i32 [ 0, %for.body89.i.lr.ph ], [ %ch_bits82.1.i, %if.end106.i.for.body89.i_crit_edge ]
  %j.1.i177 = phi i32 [ 0, %for.body89.i.lr.ph ], [ %add91.i, %if.end106.i.for.body89.i_crit_edge ]
  %add91.i = add nuw nsw i32 %j.1.i177, 1
  %mul92.i = mul nuw nsw i32 %add91.i, %csize.0.i
  %add.ptr93.i = getelementptr i8, ptr %bmaControls.0.i, i32 %mul92.i
  %call94.i = call i32 @snd_usb_combine_bytes(ptr noundef %add.ptr93.i, i32 noundef %csize.0.i) #13
  %142 = and i32 %call94.i, %140
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool.i150.not = icmp eq i32 %142, 0
  br i1 %tobool.i150.not, label %for.body89.i.if.end106.i_crit_edge, label %if.then97.i

for.body89.i.if.end106.i_crit_edge:               ; preds = %for.body89.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end106.i

if.then97.i:                                      ; preds = %for.body89.i
  call void @__sanitizer_cov_trace_pc() #15
  %shl98.i = shl nuw i32 1, %j.1.i177
  %or99.i = or i32 %shl98.i, %ch_bits82.0.i178
  %143 = and i32 %call94.i, %141
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %143)
  %tobool.i146.not = icmp eq i32 %143, 0
  %or104.i = select i1 %tobool.i146.not, i32 %shl98.i, i32 0
  %spec.select.i = or i32 %or104.i, %ch_read_only.0.i179
  br label %if.end106.i

if.end106.i:                                      ; preds = %if.then97.i, %for.body89.i.if.end106.i_crit_edge
  %ch_bits82.1.i = phi i32 [ %ch_bits82.0.i178, %for.body89.i.if.end106.i_crit_edge ], [ %or99.i, %if.then97.i ]
  %ch_read_only.1.i = phi i32 [ %ch_read_only.0.i179, %for.body89.i.if.end106.i_crit_edge ], [ %spec.select.i, %if.then97.i ]
  %exitcond.not = icmp eq i32 %add91.i, %channels.1.i
  br i1 %exitcond.not, label %for.end109.i, label %if.end106.i.for.body89.i_crit_edge

if.end106.i.for.body89.i_crit_edge:               ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body89.i

for.end109.i:                                     ; preds = %if.end106.i
  %and110.i = and i32 %ch_bits82.1.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and110.i)
  %tobool111.not.i = icmp eq i32 %and110.i, 0
  br i1 %tobool111.not.i, label %for.end109.i.if.end113.i_crit_edge, label %if.then112.i

for.end109.i.if.end113.i_crit_edge:               ; preds = %for.end109.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end113.i

if.then112.i:                                     ; preds = %for.end109.i
  call void @__sanitizer_cov_trace_pc() #15
  %144 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %144)
  %145 = load i8, ptr %call24.i, align 1
  %conv.i.i136 = zext i8 %145 to i32
  %sub.i.i137 = add nsw i32 %conv.i.i136, -1
  %arrayidx.i.i138 = getelementptr i8, ptr %call24.i, i32 %sub.i.i137
  %146 = ptrtoint ptr %arrayidx.i.i138 to i32
  call void @__asan_load1_noabort(i32 %146)
  %147 = load i8, ptr %arrayidx.i.i138, align 1
  %conv.i139 = zext i8 %147 to i32
  %148 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %mixer, align 4
  %150 = ptrtoint ptr %map.i163 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %map.i163, align 4
  call fastcc void @__build_feature_ctl(ptr noundef %149, ptr noundef %151, i32 noundef %ch_bits82.1.i, i32 noundef %139, ptr noundef nonnull %iterm.i88, ptr noundef %oterm.i164, i32 noundef %unitid, i32 noundef %conv.i139, i32 noundef %ch_read_only.1.i) #13
  br label %if.end113.i

if.end113.i:                                      ; preds = %if.then112.i, %for.end109.i.if.end113.i_crit_edge, %for.body81.i.if.end113.i_crit_edge
  %152 = and i32 %140, %master_bits.0.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %152)
  %tobool.i135.not = icmp eq i32 %152, 0
  br i1 %tobool.i135.not, label %if.end113.i.if.end119.i_crit_edge, label %if.then116.i

if.end113.i.if.end119.i_crit_edge:                ; preds = %if.end113.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end119.i

if.then116.i:                                     ; preds = %if.end113.i
  call void @__sanitizer_cov_trace_pc() #15
  %153 = shl i32 2, %mul.i149
  %154 = and i32 %153, %master_bits.0.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %154)
  %tobool.i.not = icmp eq i32 %154, 0
  %lnot.ext.i = zext i1 %tobool.i.not to i32
  %155 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %155)
  %156 = load i8, ptr %call24.i, align 1
  %conv.i.i = zext i8 %156 to i32
  %sub.i.i = add nsw i32 %conv.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %call24.i, i32 %sub.i.i
  %157 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %157)
  %158 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i126 = zext i8 %158 to i32
  %159 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %mixer, align 4
  %161 = ptrtoint ptr %map.i163 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %map.i163, align 4
  call fastcc void @__build_feature_ctl(ptr noundef %160, ptr noundef %162, i32 noundef 0, i32 noundef %139, ptr noundef nonnull %iterm.i88, ptr noundef %oterm.i164, i32 noundef %unitid, i32 noundef %conv.i126, i32 noundef %lnot.ext.i) #13
  br label %if.end119.i

if.end119.i:                                      ; preds = %if.then116.i, %if.end113.i.if.end119.i_crit_edge
  %inc121.i = add nuw nsw i32 %i.1.i181, 1
  %exitcond204.not = icmp eq i32 %inc121.i, 13
  br i1 %exitcond204.not, label %if.end119.i.parse_audio_feature_unit.exit_crit_edge, label %if.end119.i.for.body81.i_crit_edge

if.end119.i.for.body81.i_crit_edge:               ; preds = %if.end119.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body81.i

if.end119.i.parse_audio_feature_unit.exit_crit_edge: ; preds = %if.end119.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %parse_audio_feature_unit.exit

parse_audio_feature_unit.exit:                    ; preds = %if.end119.i.parse_audio_feature_unit.exit_crit_edge, %if.end73.i.parse_audio_feature_unit.exit_crit_edge, %if.end30.i.parse_audio_feature_unit.exit_crit_edge, %if.end25.i.parse_audio_feature_unit.exit_crit_edge
  %retval.0.i105 = phi i32 [ %call.i94, %if.end25.i.parse_audio_feature_unit.exit_crit_edge ], [ %call.i166, %if.end30.i.parse_audio_feature_unit.exit_crit_edge ], [ 0, %if.end73.i.parse_audio_feature_unit.exit_crit_edge ], [ 0, %if.end119.i.parse_audio_feature_unit.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %iterm.i88) #13
  br label %cleanup

sw.bb32:                                          ; preds = %if.end21.sw.bb32_crit_edge, %if.end21.sw.bb32_crit_edge253, %if.end21.sw.bb32_crit_edge254
  %163 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %mixer, align 4
  %protocol.i107 = getelementptr inbounds %struct.usb_mixer_interface, ptr %164, i32 0, i32 6
  %165 = ptrtoint ptr %protocol.i107 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %protocol.i107, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %166)
  %cond.i = icmp eq i32 %166, 48
  br i1 %cond.i, label %sw.bb1.i, label %sw.default.i

sw.default.i:                                     ; preds = %sw.bb32
  call void @__sanitizer_cov_trace_pc() #15
  %call.i108 = tail call fastcc i32 @build_audio_procunit(ptr noundef %state, i32 noundef %unitid, ptr noundef nonnull %call24.i, ptr noundef nonnull @procunits, i1 noundef zeroext false) #13
  br label %cleanup

sw.bb1.i:                                         ; preds = %sw.bb32
  call void @__sanitizer_cov_trace_pc() #15
  %call2.i = tail call fastcc i32 @build_audio_procunit(ptr noundef %state, i32 noundef %unitid, ptr noundef nonnull %call24.i, ptr noundef nonnull @uac3_procunits, i1 noundef zeroext false) #13
  br label %cleanup

sw.bb34:                                          ; preds = %if.end21.sw.bb34_crit_edge, %if.end21.sw.bb34_crit_edge255, %if.end21.sw.bb34_crit_edge256
  %call.i110 = tail call fastcc i32 @build_audio_procunit(ptr noundef %state, i32 noundef %unitid, ptr noundef nonnull %call24.i, ptr noundef nonnull @extunits, i1 noundef zeroext true) #13
  br label %cleanup

do.end39:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  %167 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %state, align 4
  %dev41 = getelementptr inbounds %struct.snd_usb_audio, ptr %168, i32 0, i32 1
  %169 = ptrtoint ptr %dev41 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %dev41, align 4
  %dev42 = getelementptr inbounds %struct.usb_device, ptr %170, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev42, ptr noundef nonnull @.str.212, i32 noundef %unitid, i32 noundef %conv22) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end39, %sw.bb34, %sw.bb1.i, %sw.default.i, %parse_audio_feature_unit.exit, %sw.bb28, %sw.bb26, %parse_audio_mixer_unit.exit, %parse_audio_input_terminal.exit, %if.end21.cleanup_crit_edge, %if.end21.cleanup_crit_edge257, %if.then14, %do.body9, %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end39 ], [ %call.i110, %sw.bb34 ], [ %retval.0.i105, %parse_audio_feature_unit.exit ], [ %call29, %sw.bb28 ], [ %call27, %sw.bb26 ], [ %retval.0.i87, %parse_audio_mixer_unit.exit ], [ 0, %parse_audio_input_terminal.exit ], [ -22, %do.end ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.then14 ], [ 0, %if.end21.cleanup_crit_edge ], [ 0, %if.end21.cleanup_crit_edge257 ], [ 0, %do.body9 ], [ %call2.i, %sw.bb1.i ], [ %call.i108, %sw.default.i ]
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @parse_clock_source_unit(ptr nocapture noundef readonly %state, ptr nocapture noundef readonly %_ftr) unnamed_addr #0 align 64 {
entry:
  %name = alloca [44 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %name) #13
  %0 = call ptr @memset(ptr %name, i32 255, i32 44)
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %1 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mixer, align 4
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %2, i32 0, i32 6
  %3 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %4)
  %cmp.not = icmp eq i32 %4, 32
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %bmControls = getelementptr inbounds %struct.uac_clock_source_descriptor, ptr %_ftr, i32 0, i32 5
  %5 = ptrtoint ptr %bmControls to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %bmControls, align 1
  %7 = and i8 %6, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end2:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 152) #17
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %if.end2.cleanup_crit_edge, label %if.end5

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end2
  %9 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mixer, align 4
  %bClockID = getelementptr inbounds %struct.uac_clock_source_descriptor, ptr %_ftr, i32 0, i32 3
  %11 = ptrtoint ptr %bClockID to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %bClockID, align 1
  %conv7 = zext i8 %12 to i32
  %13 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %call7.i.i, align 8
  %id.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 3
  %14 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv7, ptr %id.i, align 4
  %dump.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 5
  %15 = ptrtoint ptr %dump.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump.i, align 4
  %resume.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 6
  %16 = ptrtoint ptr %resume.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @restore_mixer_value, ptr %resume.i, align 8
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %17 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %min, align 8
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %18 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %max, align 4
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %19 = ptrtoint ptr %channels to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1, ptr %channels, align 8
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 7
  %20 = ptrtoint ptr %val_type to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %val_type, align 4
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %control to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 2, ptr %control, align 4
  %master_readonly = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 5
  %22 = ptrtoint ptr %master_readonly to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %master_readonly, align 4
  %call8 = tail call ptr @snd_ctl_new1(ptr noundef nonnull @usb_bool_master_control_ctl_ro, ptr noundef nonnull %call7.i.i) #13
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

if.end11:                                         ; preds = %if.end5
  %private_free = getelementptr inbounds %struct.snd_kcontrol, ptr %call8, i32 0, i32 9
  %23 = ptrtoint ptr %private_free to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @snd_usb_mixer_elem_free, ptr %private_free, align 4
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %state, align 4
  %iClockSource = getelementptr inbounds %struct.uac_clock_source_descriptor, ptr %_ftr, i32 0, i32 7
  %26 = ptrtoint ptr %iClockSource to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %iClockSource, align 1
  %conv12 = zext i8 %27 to i32
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %25, i32 0, i32 1
  %28 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev.i, align 4
  %call.i = call i32 @usb_string(ptr noundef %29, i32 noundef %conv12, ptr noundef nonnull %name, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.end11.if.else_crit_edge, label %snd_usb_copy_string_desc.exit

if.end11.if.else_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

snd_usb_copy_string_desc.exit:                    ; preds = %if.end11
  %arrayidx.i = getelementptr i8, ptr %name, i32 %call.i
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 0, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp14.not = icmp eq i32 %call.i, 0
  br i1 %cmp14.not, label %snd_usb_copy_string_desc.exit.if.else_crit_edge, label %if.then16

snd_usb_copy_string_desc.exit.if.else_crit_edge:  ; preds = %snd_usb_copy_string_desc.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.then16:                                        ; preds = %snd_usb_copy_string_desc.exit
  call void @__sanitizer_cov_trace_pc() #15
  %name17 = getelementptr inbounds %struct.snd_kcontrol, ptr %call8, i32 0, i32 1, i32 4
  %call20 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name17, i32 noundef 44, ptr noundef nonnull @.str.221, ptr noundef nonnull %name)
  br label %if.end27

if.else:                                          ; preds = %snd_usb_copy_string_desc.exit.if.else_crit_edge, %if.end11.if.else_crit_edge
  %name22 = getelementptr inbounds %struct.snd_kcontrol, ptr %call8, i32 0, i32 1, i32 4
  %31 = ptrtoint ptr %bClockID to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %bClockID, align 1
  %conv25 = zext i8 %32 to i32
  %call26 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name22, i32 noundef 44, ptr noundef nonnull @.str.222, i32 noundef %conv25)
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then16
  %call29 = call i32 @snd_usb_mixer_add_list(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call8, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.then10, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call29, %if.end27 ], [ -12, %if.then10 ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ -12, %if.end2.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %name) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @parse_audio_selector_unit(ptr noundef %state, i32 noundef %unitid, ptr nocapture noundef readonly %raw_desc) unnamed_addr #0 align 64 {
entry:
  %iterm = alloca %struct.usb_audio_term, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %bNrInPins = getelementptr inbounds %struct.uac_selector_unit_descriptor, ptr %raw_desc, i32 0, i32 4
  %0 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %bNrInPins, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp338.not = icmp eq i8 %1, 0
  br i1 %cmp338.not, label %entry.if.end10_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0339, 1
  %2 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %bNrInPins, align 1
  %conv = zext i8 %3 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.end

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %entry.for.body_crit_edge
  %i.0339 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.uac_selector_unit_descriptor, ptr %raw_desc, i32 0, i32 5, i32 %i.0339
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 1
  %conv2 = zext i8 %5 to i32
  %call = tail call fastcc i32 @parse_audio_unit(ptr noundef %state, i32 noundef %conv2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp3 = icmp slt i32 %call, 0
  br i1 %cmp3, label %for.body.cleanup166_crit_edge, label %for.cond

for.body.cleanup166_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup166

for.end:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %3)
  %cmp7 = icmp eq i8 %3, 1
  br i1 %cmp7, label %for.end.cleanup166_crit_edge, label %for.end.if.end10_crit_edge

for.end.if.end10_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

for.end.cleanup166_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup166

if.end10:                                         ; preds = %for.end.if.end10_crit_edge, %entry.if.end10_crit_edge
  %map11 = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 7
  %6 = ptrtoint ptr %map11 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %map11, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end10.if.end15_crit_edge, label %for.cond.preheader.i

if.end10.if.end15_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

for.cond.preheader.i:                             ; preds = %if.end10
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool1.not19.i = icmp eq i32 %9, 0
  br i1 %tobool1.not19.i, label %for.cond.preheader.i.if.end15_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.if.end15_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %10 = phi i32 [ %12, %for.inc.i.for.body.i_crit_edge ], [ %9, %for.cond.preheader.i.for.body.i_crit_edge ]
  %p.addr.020.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %7, %for.cond.preheader.i.for.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %unitid)
  %cmp.i = icmp eq i32 %10, %unitid
  br i1 %cmp.i, label %find_map.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr %struct.usbmix_name_map, ptr %p.addr.020.i, i32 1
  %11 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %incdec.ptr.i, align 4
  %tobool1.not.i = icmp eq i32 %12, 0
  br i1 %tobool1.not.i, label %for.inc.i.if.end15_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.if.end15_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

find_map.exit:                                    ; preds = %for.body.i
  %tobool.not.i262 = icmp eq ptr %p.addr.020.i, null
  br i1 %tobool.not.i262, label %find_map.exit.if.end15_crit_edge, label %lor.lhs.false.i

find_map.exit.if.end15_crit_edge:                 ; preds = %find_map.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

lor.lhs.false.i:                                  ; preds = %find_map.exit
  %name.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 1
  %13 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %name.i, align 4
  %tobool1.not.i263 = icmp eq ptr %14, null
  br i1 %tobool1.not.i263, label %check_ignored_ctl.exit, label %lor.lhs.false.i.if.end15_crit_edge

lor.lhs.false.i.if.end15_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

check_ignored_ctl.exit:                           ; preds = %lor.lhs.false.i
  %dB.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 3
  %15 = ptrtoint ptr %dB.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dB.i, align 4
  %tobool3.not.i.not = icmp eq ptr %16, null
  br i1 %tobool3.not.i.not, label %check_ignored_ctl.exit.cleanup166_crit_edge, label %check_ignored_ctl.exit.if.end15_crit_edge

check_ignored_ctl.exit.if.end15_crit_edge:        ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

check_ignored_ctl.exit.cleanup166_crit_edge:      ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup166

if.end15:                                         ; preds = %check_ignored_ctl.exit.if.end15_crit_edge, %lor.lhs.false.i.if.end15_crit_edge, %find_map.exit.if.end15_crit_edge, %for.inc.i.if.end15_crit_edge, %for.cond.preheader.i.if.end15_crit_edge, %if.end10.if.end15_crit_edge
  %retval.0.i261296303 = phi ptr [ %p.addr.020.i, %check_ignored_ctl.exit.if.end15_crit_edge ], [ null, %find_map.exit.if.end15_crit_edge ], [ %p.addr.020.i, %lor.lhs.false.i.if.end15_crit_edge ], [ null, %if.end10.if.end15_crit_edge ], [ null, %for.cond.preheader.i.if.end15_crit_edge ], [ null, %for.inc.i.if.end15_crit_edge ]
  %tobool.not.i262297302 = phi i1 [ false, %check_ignored_ctl.exit.if.end15_crit_edge ], [ true, %find_map.exit.if.end15_crit_edge ], [ false, %lor.lhs.false.i.if.end15_crit_edge ], [ true, %if.end10.if.end15_crit_edge ], [ true, %for.cond.preheader.i.if.end15_crit_edge ], [ true, %for.inc.i.if.end15_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %17 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %17, i32 noundef 3520, i32 noundef 152) #17
  %tobool17.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool17.not, label %if.end15.cleanup166_crit_edge, label %if.end19

if.end15.cleanup166_crit_edge:                    ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup166

if.end19:                                         ; preds = %if.end15
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %18 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mixer, align 4
  %20 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %call7.i.i, align 8
  %id.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 3
  %21 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %unitid, ptr %id.i, align 4
  %dump.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 5
  %22 = ptrtoint ptr %dump.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump.i, align 4
  %resume.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 6
  %23 = ptrtoint ptr %resume.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @restore_mixer_value, ptr %resume.i, align 8
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 7
  %24 = ptrtoint ptr %val_type to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 3, ptr %val_type, align 4
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %25 = ptrtoint ptr %channels to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 1, ptr %channels, align 8
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %26 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %min, align 8
  %27 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bNrInPins, align 1
  %conv21 = zext i8 %28 to i32
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %29 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv21, ptr %max, align 4
  %res = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 10
  %30 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %res, align 8
  %initialized = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 15
  %31 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 1, ptr %initialized, align 8
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %19, i32 0, i32 6
  %32 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %protocol, align 4
  %34 = add i32 %33, -32
  %switch.and = and i32 %34, -17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %switch.and)
  %switch.selectcmp = icmp eq i32 %switch.and, 0
  %35 = zext i1 %switch.selectcmp to i32
  %control32 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 1
  %36 = ptrtoint ptr %control32 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %control32, align 4
  %37 = shl nuw nsw i32 %conv21, 2
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %37, i32 noundef 3520) #18
  %tobool38.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool38.not, label %if.end19.error_cval_crit_edge, label %for.cond41.preheader

if.end19.error_cval_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %error_cval

for.cond41.preheader:                             ; preds = %if.end19
  %38 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %bNrInPins, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %cmp44341.not = icmp eq i8 %39, 0
  br i1 %cmp44341.not, label %for.cond41.preheader.for.end73_crit_edge, label %for.body46.lr.ph

for.cond41.preheader.for.end73_crit_edge:         ; preds = %for.cond41.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end73

for.body46.lr.ph:                                 ; preds = %for.cond41.preheader
  %selector_map.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 8
  %termbitmap.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 5
  br label %for.body46

for.body46:                                       ; preds = %for.inc71.for.body46_crit_edge, %for.body46.lr.ph
  %i.1342 = phi i32 [ 0, %for.body46.lr.ph ], [ %inc72, %for.inc71.for.body46_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %iterm) #13
  %40 = call ptr @memset(ptr %iterm, i32 255, i32 20)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %41 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %41, i32 noundef 3264, i32 noundef 64) #17
  %arrayidx48 = getelementptr ptr, ptr %call8.i.i, i32 %i.1342
  %42 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %call7.i, ptr %arrayidx48, align 4
  %tobool50.not = icmp eq ptr %call7.i, null
  br i1 %tobool50.not, label %cleanup, label %if.end52

if.end52:                                         ; preds = %for.body46
  %43 = ptrtoint ptr %selector_map.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %selector_map.i, align 4
  %tobool.not.i265 = icmp eq ptr %44, null
  br i1 %tobool.not.i265, label %if.end52.land.lhs.true_crit_edge, label %for.cond.preheader.i266

if.end52.land.lhs.true_crit_edge:                 ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

for.cond.preheader.i266:                          ; preds = %if.end52
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool2.not2.i = icmp eq i32 %46, 0
  br i1 %tobool2.not2.i, label %for.cond.preheader.i266.land.lhs.true_crit_edge, label %for.cond.preheader.i266.for.body.i268_crit_edge

for.cond.preheader.i266.for.body.i268_crit_edge:  ; preds = %for.cond.preheader.i266
  br label %for.body.i268

for.cond.preheader.i266.land.lhs.true_crit_edge:  ; preds = %for.cond.preheader.i266
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

for.body.i268:                                    ; preds = %for.inc.i271.for.body.i268_crit_edge, %for.cond.preheader.i266.for.body.i268_crit_edge
  %47 = phi i32 [ %55, %for.inc.i271.for.body.i268_crit_edge ], [ %46, %for.cond.preheader.i266.for.body.i268_crit_edge ]
  %p.03.i = phi ptr [ %incdec.ptr.i270, %for.inc.i271.for.body.i268_crit_edge ], [ %44, %for.cond.preheader.i266.for.body.i268_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %unitid)
  %cmp.i267 = icmp eq i32 %47, %unitid
  br i1 %cmp.i267, label %land.lhs.true.i269, label %for.body.i268.for.inc.i271_crit_edge

for.body.i268.for.inc.i271_crit_edge:             ; preds = %for.body.i268
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i271

land.lhs.true.i269:                               ; preds = %for.body.i268
  %count.i = getelementptr inbounds %struct.usbmix_selector_map, ptr %p.03.i, i32 0, i32 1
  %48 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %count.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %i.1342)
  %cmp4.i = icmp sgt i32 %49, %i.1342
  br i1 %cmp4.i, label %if.then5.i, label %land.lhs.true.i269.for.inc.i271_crit_edge

land.lhs.true.i269.for.inc.i271_crit_edge:        ; preds = %land.lhs.true.i269
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i271

if.then5.i:                                       ; preds = %land.lhs.true.i269
  %names.i = getelementptr inbounds %struct.usbmix_selector_map, ptr %p.03.i, i32 0, i32 2
  %50 = ptrtoint ptr %names.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %names.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %51, i32 %i.1342
  %52 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx.i, align 4
  %call.i = call i32 @strscpy(ptr noundef nonnull %call7.i, ptr noundef %53, i32 noundef 64) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool55.not = icmp eq i32 %call.i, 0
  br i1 %tobool55.not, label %if.then5.i.land.lhs.true_crit_edge, label %if.then5.i.for.inc71_crit_edge

if.then5.i.for.inc71_crit_edge:                   ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc71

if.then5.i.land.lhs.true_crit_edge:               ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

for.inc.i271:                                     ; preds = %land.lhs.true.i269.for.inc.i271_crit_edge, %for.body.i268.for.inc.i271_crit_edge
  %incdec.ptr.i270 = getelementptr %struct.usbmix_selector_map, ptr %p.03.i, i32 1
  %54 = ptrtoint ptr %incdec.ptr.i270 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %incdec.ptr.i270, align 4
  %tobool2.not.i = icmp eq i32 %55, 0
  br i1 %tobool2.not.i, label %for.inc.i271.land.lhs.true_crit_edge, label %for.inc.i271.for.body.i268_crit_edge

for.inc.i271.for.body.i268_crit_edge:             ; preds = %for.inc.i271
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i268

for.inc.i271.land.lhs.true_crit_edge:             ; preds = %for.inc.i271
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %for.inc.i271.land.lhs.true_crit_edge, %if.then5.i.land.lhs.true_crit_edge, %for.cond.preheader.i266.land.lhs.true_crit_edge, %if.end52.land.lhs.true_crit_edge
  %arrayidx57 = getelementptr %struct.uac_selector_unit_descriptor, ptr %raw_desc, i32 0, i32 5, i32 %i.1342
  %56 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx57, align 1
  %conv58 = zext i8 %57 to i32
  %58 = call ptr @memset(ptr %iterm, i32 0, i32 20)
  %59 = call ptr @memset(ptr %termbitmap.i, i32 0, i32 32)
  %call.i273 = call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv58, ptr noundef nonnull %iterm) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i273)
  %cmp60 = icmp sgt i32 %call.i273, -1
  br i1 %cmp60, label %if.end65, label %land.lhs.true.if.then67_crit_edge

land.lhs.true.if.then67_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then67

if.end65:                                         ; preds = %land.lhs.true
  %60 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %state, align 4
  %62 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx48, align 4
  %call64 = call fastcc i32 @get_term_name(ptr noundef %61, ptr noundef nonnull %iterm, ptr noundef %63, i32 noundef 64, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool66.not = icmp eq i32 %call64, 0
  br i1 %tobool66.not, label %if.end65.if.then67_crit_edge, label %if.end65.for.inc71_crit_edge

if.end65.for.inc71_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc71

if.end65.if.then67_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then67

if.then67:                                        ; preds = %if.end65.if.then67_crit_edge, %land.lhs.true.if.then67_crit_edge
  %64 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx48, align 4
  %call69 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %65, ptr noundef nonnull @.str.223, i32 noundef %i.1342)
  br label %for.inc71

cleanup:                                          ; preds = %for.body46
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %iterm) #13
  br label %error_name

for.inc71:                                        ; preds = %if.then67, %if.end65.for.inc71_crit_edge, %if.then5.i.for.inc71_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %iterm) #13
  %inc72 = add nuw nsw i32 %i.1342, 1
  %66 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %bNrInPins, align 1
  %conv43 = zext i8 %67 to i32
  %cmp44 = icmp ult i32 %inc72, %conv43
  br i1 %cmp44, label %for.inc71.for.body46_crit_edge, label %for.inc71.for.end73_crit_edge

for.inc71.for.end73_crit_edge:                    ; preds = %for.inc71
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end73

for.inc71.for.body46_crit_edge:                   ; preds = %for.inc71
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body46

for.end73:                                        ; preds = %for.inc71.for.end73_crit_edge, %for.cond41.preheader.for.end73_crit_edge
  %call74 = call ptr @snd_ctl_new1(ptr noundef nonnull @mixer_selectunit_ctl, ptr noundef nonnull %call7.i.i) #13
  %tobool75.not = icmp eq ptr %call74, null
  br i1 %tobool75.not, label %do.end, label %if.end79

do.end:                                           ; preds = %for.end73
  call void @__sanitizer_cov_trace_pc() #15
  %68 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %state, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %dev, align 4
  %dev78 = getelementptr inbounds %struct.usb_device, ptr %71, i32 0, i32 15
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev78, ptr noundef nonnull @.str.86) #19
  br label %error_name

if.end79:                                         ; preds = %for.end73
  %72 = ptrtoint ptr %call8.i.i to i32
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %call74, i32 0, i32 7
  %73 = ptrtoint ptr %private_value to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %private_value, align 4
  %private_free = getelementptr inbounds %struct.snd_kcontrol, ptr %call74, i32 0, i32 9
  %74 = ptrtoint ptr %private_free to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr @usb_mixer_selector_elem_free, ptr %private_free, align 4
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %call74, i32 0, i32 1, i32 4
  br i1 %tobool.not.i262297302, label %if.end79.if.then82_crit_edge, label %lor.lhs.false.i277

if.end79.if.then82_crit_edge:                     ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then82

lor.lhs.false.i277:                               ; preds = %if.end79
  %name.i275 = getelementptr inbounds %struct.usbmix_name_map, ptr %retval.0.i261296303, i32 0, i32 1
  %75 = ptrtoint ptr %name.i275 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %name.i275, align 4
  %tobool1.not.i276 = icmp eq ptr %76, null
  br i1 %tobool1.not.i276, label %lor.lhs.false.i277.if.then82_crit_edge, label %if.end.i

lor.lhs.false.i277.if.then82_crit_edge:           ; preds = %lor.lhs.false.i277
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then82

if.end.i:                                         ; preds = %lor.lhs.false.i277
  %call.i278 = call i32 @strscpy(ptr noundef %name, ptr noundef nonnull %76, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i278)
  %tobool81.not = icmp eq i32 %call.i278, 0
  br i1 %tobool81.not, label %if.end.i.if.then82_crit_edge, label %if.end.i.do.body135_crit_edge

if.end.i.do.body135_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body135

if.end.i.if.then82_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then82

if.then82:                                        ; preds = %if.end.i.if.then82_crit_edge, %lor.lhs.false.i277.if.then82_crit_edge, %if.end79.if.then82_crit_edge
  %77 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mixer, align 4
  %protocol84 = getelementptr inbounds %struct.usb_mixer_interface, ptr %78, i32 0, i32 6
  %79 = ptrtoint ptr %protocol84 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %protocol84, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %80)
  %cond = icmp eq i32 %80, 48
  br i1 %cond, label %if.then82.if.end105_crit_edge, label %sw.default86

if.then82.if.end105_crit_edge:                    ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

sw.default86:                                     ; preds = %if.then82
  %81 = ptrtoint ptr %raw_desc to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %raw_desc, align 1
  %conv.i = zext i8 %82 to i32
  %sub.i = add nsw i32 %conv.i, -1
  %arrayidx.i282 = getelementptr i8, ptr %raw_desc, i32 %sub.i
  %83 = ptrtoint ptr %arrayidx.i282 to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %arrayidx.i282, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %tobool89.not = icmp eq i8 %84, 0
  br i1 %tobool89.not, label %sw.default86.if.end105_crit_edge, label %if.then90

sw.default86.if.end105_crit_edge:                 ; preds = %sw.default86
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

if.then90:                                        ; preds = %sw.default86
  %conv88 = zext i8 %84 to i32
  %85 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %state, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %dev.i, align 4
  %call.i283 = call i32 @usb_string(ptr noundef %88, i32 noundef %conv88, ptr noundef %name, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i283)
  %cmp.i284 = icmp slt i32 %call.i283, 0
  br i1 %cmp.i284, label %if.then90.if.end105_crit_edge, label %sw.epilog97

if.then90.if.end105_crit_edge:                    ; preds = %if.then90
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

sw.epilog97:                                      ; preds = %if.then90
  %arrayidx.i285 = getelementptr i8, ptr %name, i32 %call.i283
  %89 = ptrtoint ptr %arrayidx.i285 to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 0, ptr %arrayidx.i285, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i283)
  %tobool98.not = icmp eq i32 %call.i283, 0
  br i1 %tobool98.not, label %sw.epilog97.if.end105_crit_edge, label %sw.epilog97.if.end112_crit_edge

sw.epilog97.if.end112_crit_edge:                  ; preds = %sw.epilog97
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end112

sw.epilog97.if.end105_crit_edge:                  ; preds = %sw.epilog97
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

if.end105:                                        ; preds = %sw.epilog97.if.end105_crit_edge, %if.then90.if.end105_crit_edge, %sw.default86.if.end105_crit_edge, %if.then82.if.end105_crit_edge
  %90 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %state, align 4
  %oterm = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 6
  %call104 = call fastcc i32 @get_term_name(ptr noundef %91, ptr noundef %oterm, ptr noundef %name, i32 noundef 44, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool106.not = icmp eq i32 %call104, 0
  br i1 %tobool106.not, label %if.then107, label %if.end105.if.end112_crit_edge

if.end105.if.end112_crit_edge:                    ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end112

if.then107:                                       ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #15
  %call111 = call i32 @strscpy(ptr noundef %name, ptr noundef nonnull @.str.225, i32 noundef 44) #13
  br label %if.end112

if.end112:                                        ; preds = %if.then107, %if.end105.if.end112_crit_edge, %sw.epilog97.if.end112_crit_edge
  %bDescriptorSubtype113 = getelementptr inbounds %struct.uac_selector_unit_descriptor, ptr %raw_desc, i32 0, i32 2
  %92 = ptrtoint ptr %bDescriptorSubtype113 to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %bDescriptorSubtype113, align 1
  %.off259 = add i8 %93, -11
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %.off259)
  %switch260 = icmp ult i8 %.off259, 2
  br i1 %switch260, label %if.end112.do.body135.sink.split_crit_edge, label %if.else124

if.end112.do.body135.sink.split_crit_edge:        ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body135.sink.split

if.else124:                                       ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #15
  %type = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 6, i32 1
  %94 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %type, align 4
  %and = and i32 %95, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %and)
  %cmp126 = icmp eq i32 %and, 256
  %.str.227..str.228 = select i1 %cmp126, ptr @.str.227, ptr @.str.228
  br label %do.body135.sink.split

do.body135.sink.split:                            ; preds = %if.else124, %if.end112.do.body135.sink.split_crit_edge
  %.str.227.sink = phi ptr [ @.str.226, %if.end112.do.body135.sink.split_crit_edge ], [ %.str.227..str.228, %if.else124 ]
  %call.i291 = call i32 @strlcat(ptr noundef %name, ptr noundef nonnull %.str.227.sink, i32 noundef 44) #13
  br label %do.body135

do.body135:                                       ; preds = %do.body135.sink.split, %if.end.i.do.body135_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @parse_audio_selector_unit.__UNIQUE_ID_ddebug249, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@parse_audio_selector_unit, %if.then140)) #13
          to label %do.end153 [label %if.then140], !srcloc !716

if.then140:                                       ; preds = %do.body135
  call void @__sanitizer_cov_trace_pc() #15
  %96 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %state, align 4
  %dev142 = getelementptr inbounds %struct.snd_usb_audio, ptr %97, i32 0, i32 1
  %98 = ptrtoint ptr %dev142 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %dev142, align 4
  %dev143 = getelementptr inbounds %struct.usb_device, ptr %99, i32 0, i32 15
  %100 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %id.i, align 4
  %102 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %bNrInPins, align 1
  %conv150 = zext i8 %103 to i32
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @parse_audio_selector_unit.__UNIQUE_ID_ddebug249, ptr noundef %dev143, ptr noundef nonnull @.str.229, i32 noundef %101, ptr noundef %name, i32 noundef %conv150) #13
  br label %do.end153

do.end153:                                        ; preds = %if.then140, %do.body135
  %call155 = call i32 @snd_usb_mixer_add_list(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call74, i1 noundef zeroext true)
  br label %cleanup166

error_name:                                       ; preds = %do.end, %cleanup
  %104 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %bNrInPins, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %105)
  %cmp159346.not = icmp eq i8 %105, 0
  br i1 %cmp159346.not, label %error_name.for.end165_crit_edge, label %error_name.for.body161_crit_edge

error_name.for.body161_crit_edge:                 ; preds = %error_name
  br label %for.body161

error_name.for.end165_crit_edge:                  ; preds = %error_name
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end165

for.body161:                                      ; preds = %for.body161.for.body161_crit_edge, %error_name.for.body161_crit_edge
  %i.2347 = phi i32 [ %inc164, %for.body161.for.body161_crit_edge ], [ 0, %error_name.for.body161_crit_edge ]
  %arrayidx162 = getelementptr ptr, ptr %call8.i.i, i32 %i.2347
  %106 = ptrtoint ptr %arrayidx162 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %arrayidx162, align 4
  call void @kfree(ptr noundef %107) #13
  %inc164 = add nuw nsw i32 %i.2347, 1
  %108 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %bNrInPins, align 1
  %conv158 = zext i8 %109 to i32
  %cmp159 = icmp ult i32 %inc164, %conv158
  br i1 %cmp159, label %for.body161.for.body161_crit_edge, label %for.body161.for.end165_crit_edge

for.body161.for.end165_crit_edge:                 ; preds = %for.body161
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end165

for.body161.for.body161_crit_edge:                ; preds = %for.body161
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body161

for.end165:                                       ; preds = %for.body161.for.end165_crit_edge, %error_name.for.end165_crit_edge
  call void @kfree(ptr noundef nonnull %call8.i.i) #13
  br label %error_cval

error_cval:                                       ; preds = %for.end165, %if.end19.error_cval_crit_edge
  call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup166

cleanup166:                                       ; preds = %error_cval, %do.end153, %if.end15.cleanup166_crit_edge, %check_ignored_ctl.exit.cleanup166_crit_edge, %for.end.cleanup166_crit_edge, %for.body.cleanup166_crit_edge
  %retval.0 = phi i32 [ -12, %error_cval ], [ %call155, %do.end153 ], [ 0, %for.end.cleanup166_crit_edge ], [ 0, %check_ignored_ctl.exit.cleanup166_crit_edge ], [ -12, %if.end15.cleanup166_crit_edge ], [ %call, %for.body.cleanup166_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @snd_usb_find_desc(ptr noundef, i32 noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %id, ptr noundef %term) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %0 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mixer, align 4
  %protocol1 = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %protocol1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %protocol1, align 4
  %termbitmap = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 5
  %call243 = tail call i32 @_test_and_set_bit(i32 noundef %id, ptr noundef %termbitmap) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call243)
  %tobool.not244 = icmp eq i32 %call243, 0
  br i1 %tobool.not244, label %if.end.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.lr.ph:                                     ; preds = %entry
  %buffer.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 2
  %buflen.i = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 3
  %shl = shl i32 %3, 8
  br label %if.end

if.end:                                           ; preds = %sw.bb.if.end_crit_edge, %if.end.lr.ph
  %id.addr.0245 = phi i32 [ %id, %if.end.lr.ph ], [ %conv11, %sw.bb.if.end_crit_edge ]
  %conv = trunc i32 %id.addr.0245 to i8
  %4 = ptrtoint ptr %buffer.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buffer.i, align 4
  %6 = ptrtoint ptr %buflen.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buflen.i, align 4
  %call22.i = tail call ptr @snd_usb_find_desc(ptr noundef %5, i32 noundef %7, ptr noundef null, i8 noundef zeroext 36) #13
  %cmp.not23.i = icmp eq ptr %call22.i, null
  br i1 %cmp.not23.i, label %if.end.cleanup_crit_edge, label %if.end.while.body.i_crit_edge

if.end.while.body.i_crit_edge:                    ; preds = %if.end
  br label %while.body.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %if.end.while.body.i_crit_edge
  %call24.i = phi ptr [ %call.i, %if.end.i.while.body.i_crit_edge ], [ %call22.i, %if.end.while.body.i_crit_edge ]
  %8 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %call24.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %9)
  %cmp1.i = icmp ugt i8 %9, 3
  br i1 %cmp1.i, label %land.lhs.true.i, label %while.body.i.if.end.i_crit_edge

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %bDescriptorSubtype.i = getelementptr %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 2
  %10 = ptrtoint ptr %bDescriptorSubtype.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bDescriptorSubtype.i, align 1
  %12 = add i8 %11, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 13, i8 %12)
  %13 = icmp ult i8 %12, 13
  br i1 %13, label %land.lhs.true11.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %bUnitID.i = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 3
  %14 = ptrtoint ptr %bUnitID.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bUnitID.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %15, i8 %conv)
  %cmp14.i = icmp eq i8 %15, %conv
  br i1 %cmp14.i, label %if.end5, label %land.lhs.true11.i.if.end.i_crit_edge

land.lhs.true11.i.if.end.i_crit_edge:             ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true11.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %16 = ptrtoint ptr %buffer.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %buffer.i, align 4
  %18 = ptrtoint ptr %buflen.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %buflen.i, align 4
  %call.i = tail call ptr @snd_usb_find_desc(ptr noundef %17, i32 noundef %19, ptr noundef nonnull %call24.i, i8 noundef zeroext 36) #13
  %cmp.not.i = icmp eq ptr %call.i, null
  br i1 %cmp.not.i, label %if.end.i.cleanup_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %land.lhs.true11.i
  %call6 = tail call zeroext i1 @snd_usb_validate_audio_desc(ptr noundef nonnull %call24.i, i32 noundef %3) #13
  br i1 %call6, label %if.end8, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end8:                                          ; preds = %if.end5
  %bDescriptorSubtype.i.le = getelementptr %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 2
  %20 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %id.addr.0245, ptr %term, align 4
  %21 = ptrtoint ptr %bDescriptorSubtype.i.le to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %bDescriptorSubtype.i.le, align 1
  %conv10 = zext i8 %22 to i32
  %or = or i32 %shl, %conv10
  %23 = zext i32 %or to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.307)
  switch i32 %or, label %if.end8.cleanup_crit_edge [
    i32 6, label %if.end8.sw.bb_crit_edge
    i32 8198, label %if.end8.sw.bb_crit_edge472
    i32 12295, label %if.end8.sw.bb_crit_edge473
    i32 2, label %sw.bb12
    i32 8194, label %sw.bb14
    i32 12290, label %sw.bb16
    i32 4, label %if.end8.sw.bb18_crit_edge
    i32 8196, label %if.end8.sw.bb18_crit_edge474
    i32 12293, label %if.end8.sw.bb18_crit_edge475
    i32 5, label %if.end8.sw.bb20_crit_edge
    i32 8197, label %if.end8.sw.bb20_crit_edge476
    i32 8203, label %if.end8.sw.bb20_crit_edge477
    i32 12294, label %if.end8.sw.bb20_crit_edge478
    i32 12300, label %if.end8.sw.bb20_crit_edge479
    i32 7, label %if.end8.sw.bb22_crit_edge
    i32 8200, label %if.end8.sw.bb22_crit_edge480
    i32 12297, label %if.end8.sw.bb22_crit_edge481
    i32 8199, label %if.end8.sw.bb24_crit_edge
    i32 12296, label %if.end8.sw.bb24_crit_edge482
    i32 8, label %if.end8.sw.bb26_crit_edge
    i32 8201, label %if.end8.sw.bb26_crit_edge483
    i32 12298, label %if.end8.sw.bb26_crit_edge484
    i32 8202, label %sw.bb28
    i32 12299, label %sw.bb30
  ]

if.end8.sw.bb26_crit_edge484:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end8.sw.bb26_crit_edge483:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end8.sw.bb26_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end8.sw.bb24_crit_edge482:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24

if.end8.sw.bb24_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb24

if.end8.sw.bb22_crit_edge481:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb22

if.end8.sw.bb22_crit_edge480:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb22

if.end8.sw.bb22_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb22

if.end8.sw.bb20_crit_edge479:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

if.end8.sw.bb20_crit_edge478:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

if.end8.sw.bb20_crit_edge477:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

if.end8.sw.bb20_crit_edge476:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

if.end8.sw.bb20_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb20

if.end8.sw.bb18_crit_edge475:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb18

if.end8.sw.bb18_crit_edge474:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb18

if.end8.sw.bb18_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb18

if.end8.sw.bb_crit_edge473:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end8.sw.bb_crit_edge472:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end8.sw.bb_crit_edge:                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.end8.sw.bb_crit_edge, %if.end8.sw.bb_crit_edge472, %if.end8.sw.bb_crit_edge473
  %bSourceID = getelementptr inbounds %struct.uac_feature_unit_descriptor, ptr %call24.i, i32 0, i32 4
  %24 = ptrtoint ptr %bSourceID to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %bSourceID, align 1
  %conv11 = zext i8 %25 to i32
  %call = tail call i32 @_test_and_set_bit(i32 noundef %conv11, ptr noundef %termbitmap) #13
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %sw.bb.if.end_crit_edge, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

sw.bb12:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  %wTerminalType.i = getelementptr inbounds %struct.uac_input_terminal_descriptor, ptr %call24.i, i32 0, i32 4
  %26 = ptrtoint ptr %wTerminalType.i to i32
  call void @__asan_loadN_noabort(i32 %26, i32 2)
  %27 = load i16, ptr %wTerminalType.i, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #13
  %conv.i = zext i16 %28 to i32
  %type.i = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %29 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv.i, ptr %type.i, align 4
  %bNrChannels.i = getelementptr inbounds %struct.uac_input_terminal_descriptor, ptr %call24.i, i32 0, i32 6
  %30 = ptrtoint ptr %bNrChannels.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %bNrChannels.i, align 1
  %conv1.i = zext i8 %31 to i32
  %channels.i = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 2
  %32 = ptrtoint ptr %channels.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %conv1.i, ptr %channels.i, align 4
  %wChannelConfig.i = getelementptr inbounds %struct.uac_input_terminal_descriptor, ptr %call24.i, i32 0, i32 7
  %33 = ptrtoint ptr %wChannelConfig.i to i32
  call void @__asan_loadN_noabort(i32 %33, i32 2)
  %34 = load i16, ptr %wChannelConfig.i, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #13
  %conv2.i = zext i16 %35 to i32
  %chconfig.i = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 3
  %36 = ptrtoint ptr %chconfig.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %conv2.i, ptr %chconfig.i, align 4
  %iTerminal.i = getelementptr inbounds %struct.uac_input_terminal_descriptor, ptr %call24.i, i32 0, i32 9
  %37 = ptrtoint ptr %iTerminal.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %iTerminal.i, align 1
  %conv3.i = zext i8 %38 to i32
  %name.i = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %39 = ptrtoint ptr %name.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %conv3.i, ptr %name.i, align 4
  br label %cleanup

sw.bb14:                                          ; preds = %if.end8
  %bCSourceID.i = getelementptr inbounds %struct.uac2_input_terminal_descriptor, ptr %call24.i, i32 0, i32 6
  %40 = ptrtoint ptr %bCSourceID.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %bCSourceID.i, align 1
  %conv.i82 = zext i8 %41 to i32
  %call.i83 = tail call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv.i82, ptr noundef %term) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i83)
  %cmp.i = icmp slt i32 %call.i83, 0
  br i1 %cmp.i, label %sw.bb14.cleanup_crit_edge, label %if.end.i92

sw.bb14.cleanup_crit_edge:                        ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i92:                                       ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #15
  %42 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %id.addr.0245, ptr %term, align 4
  %wTerminalType.i84 = getelementptr inbounds %struct.uac2_input_terminal_descriptor, ptr %call24.i, i32 0, i32 4
  %43 = ptrtoint ptr %wTerminalType.i84 to i32
  call void @__asan_loadN_noabort(i32 %43, i32 2)
  %44 = load i16, ptr %wTerminalType.i84, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #13
  %conv3.i85 = zext i16 %45 to i32
  %type.i86 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %46 = ptrtoint ptr %type.i86 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %conv3.i85, ptr %type.i86, align 4
  %bNrChannels.i87 = getelementptr inbounds %struct.uac2_input_terminal_descriptor, ptr %call24.i, i32 0, i32 7
  %47 = ptrtoint ptr %bNrChannels.i87 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %bNrChannels.i87, align 1
  %conv4.i = zext i8 %48 to i32
  %channels.i88 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 2
  %49 = ptrtoint ptr %channels.i88 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %conv4.i, ptr %channels.i88, align 4
  %bmChannelConfig.i = getelementptr inbounds %struct.uac2_input_terminal_descriptor, ptr %call24.i, i32 0, i32 8
  %50 = ptrtoint ptr %bmChannelConfig.i to i32
  call void @__asan_loadN_noabort(i32 %50, i32 4)
  %51 = load i32, ptr %bmChannelConfig.i, align 1
  %52 = tail call i32 @llvm.bswap.i32(i32 %51) #13
  %chconfig.i89 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 3
  %53 = ptrtoint ptr %chconfig.i89 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %chconfig.i89, align 4
  %iTerminal.i90 = getelementptr inbounds %struct.uac2_input_terminal_descriptor, ptr %call24.i, i32 0, i32 11
  %54 = ptrtoint ptr %iTerminal.i90 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %iTerminal.i90, align 1
  %conv5.i = zext i8 %55 to i32
  %name.i91 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %56 = ptrtoint ptr %name.i91 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %conv5.i, ptr %name.i91, align 4
  br label %cleanup

sw.bb16:                                          ; preds = %if.end8
  %bCSourceID.i93 = getelementptr inbounds %struct.uac3_input_terminal_descriptor, ptr %call24.i, i32 0, i32 6
  %57 = ptrtoint ptr %bCSourceID.i93 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %bCSourceID.i93, align 1
  %conv.i94 = zext i8 %58 to i32
  %call.i95 = tail call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv.i94, ptr noundef %term) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i95)
  %cmp.i96 = icmp slt i32 %call.i95, 0
  br i1 %cmp.i96, label %sw.bb16.cleanup_crit_edge, label %if.end.i101

sw.bb16.cleanup_crit_edge:                        ; preds = %sw.bb16
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i101:                                      ; preds = %sw.bb16
  %59 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %id.addr.0245, ptr %term, align 4
  %wTerminalType.i97 = getelementptr inbounds %struct.uac3_input_terminal_descriptor, ptr %call24.i, i32 0, i32 4
  %60 = ptrtoint ptr %wTerminalType.i97 to i32
  call void @__asan_loadN_noabort(i32 %60, i32 2)
  %61 = load i16, ptr %wTerminalType.i97, align 1
  %62 = tail call i16 @llvm.bswap.i16(i16 %61) #13
  %conv3.i98 = zext i16 %62 to i32
  %type.i99 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %63 = ptrtoint ptr %type.i99 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %conv3.i98, ptr %type.i99, align 4
  %wClusterDescrID.i = getelementptr inbounds %struct.uac3_input_terminal_descriptor, ptr %call24.i, i32 0, i32 8
  %64 = ptrtoint ptr %wClusterDescrID.i to i32
  call void @__asan_loadN_noabort(i32 %64, i32 2)
  %65 = load i16, ptr %wClusterDescrID.i, align 1
  %66 = tail call i16 @llvm.bswap.i16(i16 %65) #13
  %conv4.i100 = zext i16 %66 to i32
  %call5.i = tail call fastcc i32 @get_cluster_channels_v3(ptr noundef %state, i32 noundef %conv4.i100) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  br i1 %cmp6.i, label %if.end.i101.cleanup_crit_edge, label %if.end9.i

if.end.i101.cleanup_crit_edge:                    ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i:                                        ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #15
  %channels.i102 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 2
  %67 = ptrtoint ptr %channels.i102 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %call5.i, ptr %channels.i102, align 4
  %chconfig.i103 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 3
  %68 = ptrtoint ptr %chconfig.i103 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 0, ptr %chconfig.i103, align 4
  %wTerminalDescrStr.i = getelementptr inbounds %struct.uac3_input_terminal_descriptor, ptr %call24.i, i32 0, i32 11
  %69 = ptrtoint ptr %wTerminalDescrStr.i to i32
  call void @__asan_loadN_noabort(i32 %69, i32 2)
  %70 = load i16, ptr %wTerminalDescrStr.i, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #13
  %conv10.i = zext i16 %71 to i32
  %name.i104 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %72 = ptrtoint ptr %name.i104 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %conv10.i, ptr %name.i104, align 4
  br label %cleanup

sw.bb18:                                          ; preds = %if.end8.sw.bb18_crit_edge, %if.end8.sw.bb18_crit_edge474, %if.end8.sw.bb18_crit_edge475
  %73 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %mixer, align 4
  %protocol1.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %74, i32 0, i32 6
  %75 = ptrtoint ptr %protocol1.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %protocol1.i, align 4
  %call.i106 = tail call fastcc i32 @uac_mixer_unit_get_channels(ptr noundef %state, ptr noundef nonnull %call24.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i106)
  %cmp.i107 = icmp slt i32 %call.i106, 1
  br i1 %cmp.i107, label %sw.bb18.cleanup_crit_edge, label %if.end.i110

sw.bb18.cleanup_crit_edge:                        ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i110:                                      ; preds = %sw.bb18
  %type.i108 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %77 = ptrtoint ptr %type.i108 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 327680, ptr %type.i108, align 4
  %channels.i109 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 2
  %78 = ptrtoint ptr %channels.i109 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %call.i106, ptr %channels.i109, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %76)
  %cmp2.not.i = icmp eq i32 %76, 48
  br i1 %cmp2.not.i, label %if.end.i110.cleanup_crit_edge, label %if.then3.i

if.end.i110.cleanup_crit_edge:                    ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then3.i:                                       ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %cmp.i.i = icmp eq i32 %76, 0
  %bNrInPins.i.i = getelementptr inbounds %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 4
  %79 = ptrtoint ptr %bNrInPins.i.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %bNrInPins.i.i, align 1
  %conv.i.i = zext i8 %80 to i32
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.i.i = add nuw nsw i32 %conv.i.i, 2
  %arrayidx.i.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add.i.i
  %81 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %arrayidx.i.i, align 1
  %conv1.i.i = zext i8 %82 to i32
  %shl.i.i = shl nuw nsw i32 %conv1.i.i, 8
  br label %uac_mixer_unit_wChannelConfig.exit.i

if.else.i.i:                                      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #15
  %add11.i.i = add nuw nsw i32 %conv.i.i, 4
  %arrayidx12.i.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add11.i.i
  %83 = ptrtoint ptr %arrayidx12.i.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %arrayidx12.i.i, align 1
  %conv13.i.i = zext i8 %84 to i32
  %shl14.i.i = shl nuw i32 %conv13.i.i, 24
  %add18.i.i = add nuw nsw i32 %conv.i.i, 3
  %arrayidx19.i.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add18.i.i
  %85 = ptrtoint ptr %arrayidx19.i.i to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %arrayidx19.i.i, align 1
  %conv20.i.i = zext i8 %86 to i32
  %shl21.i.i = shl nuw nsw i32 %conv20.i.i, 16
  %or22.i.i = or i32 %shl21.i.i, %shl14.i.i
  %add26.i.i = add nuw nsw i32 %conv.i.i, 2
  %arrayidx27.i.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add26.i.i
  %87 = ptrtoint ptr %arrayidx27.i.i to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %arrayidx27.i.i, align 1
  %conv28.i.i = zext i8 %88 to i32
  %shl29.i.i = shl nuw nsw i32 %conv28.i.i, 8
  %or30.i.i = or i32 %or22.i.i, %shl29.i.i
  br label %uac_mixer_unit_wChannelConfig.exit.i

uac_mixer_unit_wChannelConfig.exit.i:             ; preds = %if.else.i.i, %if.then.i.i
  %or30.sink.i.i = phi i32 [ %or30.i.i, %if.else.i.i ], [ %shl.i.i, %if.then.i.i ]
  %add34.i.i = add nuw nsw i32 %conv.i.i, 1
  %arrayidx35.i.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %call24.i, i32 0, i32 5, i32 %add34.i.i
  %89 = ptrtoint ptr %arrayidx35.i.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %arrayidx35.i.i, align 1
  %conv36.i.i = zext i8 %90 to i32
  %or37.i.i = or i32 %or30.sink.i.i, %conv36.i.i
  %chconfig.i111 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 3
  %91 = ptrtoint ptr %chconfig.i111 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %or37.i.i, ptr %chconfig.i111, align 4
  %92 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %call24.i, align 1
  %conv.i1.i = zext i8 %93 to i32
  %sub.i.i = add nsw i32 %conv.i1.i, -1
  %arrayidx.i2.i = getelementptr i8, ptr %call24.i, i32 %sub.i.i
  %94 = ptrtoint ptr %arrayidx.i2.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %arrayidx.i2.i, align 1
  %conv.i112 = zext i8 %95 to i32
  %name.i113 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %96 = ptrtoint ptr %name.i113 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %conv.i112, ptr %name.i113, align 4
  br label %cleanup

sw.bb20:                                          ; preds = %if.end8.sw.bb20_crit_edge, %if.end8.sw.bb20_crit_edge476, %if.end8.sw.bb20_crit_edge477, %if.end8.sw.bb20_crit_edge478, %if.end8.sw.bb20_crit_edge479
  %baSourceID.i = getelementptr inbounds %struct.uac_selector_unit_descriptor, ptr %call24.i, i32 0, i32 5
  %97 = ptrtoint ptr %baSourceID.i to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %baSourceID.i, align 1
  %conv.i115 = zext i8 %98 to i32
  %call.i116 = tail call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv.i115, ptr noundef %term) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i116)
  %cmp.i117 = icmp slt i32 %call.i116, 0
  br i1 %cmp.i117, label %sw.bb20.cleanup_crit_edge, label %if.end.i120

sw.bb20.cleanup_crit_edge:                        ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i120:                                      ; preds = %sw.bb20
  %type.i118 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %99 = ptrtoint ptr %type.i118 to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 393216, ptr %type.i118, align 4
  %100 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %id.addr.0245, ptr %term, align 4
  %101 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %mixer, align 4
  %protocol.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %102, i32 0, i32 6
  %103 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %protocol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %104)
  %cmp3.not.i = icmp eq i32 %104, 48
  br i1 %cmp3.not.i, label %if.end.i120.cleanup_crit_edge, label %if.then5.i

if.end.i120.cleanup_crit_edge:                    ; preds = %if.end.i120
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then5.i:                                       ; preds = %if.end.i120
  call void @__sanitizer_cov_trace_pc() #15
  %105 = ptrtoint ptr %call24.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %call24.i, align 1
  %conv.i174 = zext i8 %106 to i32
  %sub.i = add nsw i32 %conv.i174, -1
  %arrayidx.i = getelementptr i8, ptr %call24.i, i32 %sub.i
  %107 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %arrayidx.i, align 1
  %conv7.i = zext i8 %108 to i32
  %name.i121 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %109 = ptrtoint ptr %name.i121 to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %conv7.i, ptr %name.i121, align 4
  br label %cleanup

sw.bb22:                                          ; preds = %if.end8.sw.bb22_crit_edge, %if.end8.sw.bb22_crit_edge480, %if.end8.sw.bb22_crit_edge481
  %110 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %mixer, align 4
  %protocol1.i124 = getelementptr inbounds %struct.usb_mixer_interface, ptr %111, i32 0, i32 6
  %112 = ptrtoint ptr %protocol1.i124 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %protocol1.i124, align 4
  %bNrInPins.i = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 5
  %114 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %114)
  %115 = load i8, ptr %bNrInPins.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %115)
  %tobool.not.i = icmp eq i8 %115, 0
  br i1 %tobool.not.i, label %sw.bb22.if.end4.i_crit_edge, label %if.then.i

sw.bb22.if.end4.i_crit_edge:                      ; preds = %sw.bb22
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4.i

if.then.i:                                        ; preds = %sw.bb22
  %baSourceID.i125 = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6
  %116 = ptrtoint ptr %baSourceID.i125 to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %baSourceID.i125, align 1
  %conv.i126 = zext i8 %117 to i32
  %call.i127 = tail call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv.i126, ptr noundef %term) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i127)
  %cmp.i128 = icmp slt i32 %call.i127, 0
  br i1 %cmp.i128, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end4.i_crit_edge

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4.i:                                        ; preds = %if.then.i.if.end4.i_crit_edge, %sw.bb22.if.end4.i_crit_edge
  %type.i129 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %118 = ptrtoint ptr %type.i129 to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 589824, ptr %type.i129, align 4
  %119 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %id.addr.0245, ptr %term, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %113)
  %cmp6.i130 = icmp eq i32 %113, 48
  br i1 %cmp6.i130, label %if.end4.i.cleanup_crit_edge, label %if.end9.i132

if.end4.i.cleanup_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i132:                                     ; preds = %if.end4.i
  %channels.i131 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 2
  %120 = ptrtoint ptr %channels.i131 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %channels.i131, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool10.not.i = icmp eq i32 %121, 0
  br i1 %tobool10.not.i, label %if.then11.i, label %if.end9.i132.if.end16.i_crit_edge

if.end9.i132.if.end16.i_crit_edge:                ; preds = %if.end9.i132
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.i

if.then11.i:                                      ; preds = %if.end9.i132
  call void @__sanitizer_cov_trace_pc() #15
  %122 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %bNrInPins.i, align 1
  %idxprom.i = zext i8 %123 to i32
  %arrayidx.i184 = getelementptr %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6, i32 %idxprom.i
  %124 = ptrtoint ptr %arrayidx.i184 to i32
  call void @__asan_load1_noabort(i32 %124)
  %125 = load i8, ptr %arrayidx.i184, align 1
  %conv13.i = zext i8 %125 to i32
  %126 = ptrtoint ptr %channels.i131 to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 %conv13.i, ptr %channels.i131, align 4
  %call15.i = tail call fastcc i32 @uac_processing_unit_wChannelConfig(ptr noundef nonnull %call24.i, i32 noundef %113) #13
  %chconfig.i133 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 3
  %127 = ptrtoint ptr %chconfig.i133 to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %call15.i, ptr %chconfig.i133, align 4
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then11.i, %if.end9.i132.if.end16.i_crit_edge
  %128 = zext i32 %113 to i64
  call void @__sanitizer_cov_trace_switch(i64 %128, ptr @__sancov_gen_cov_switch_values.308)
  switch i32 %113, label %if.end16.i.uac_processing_unit_bmControls.exit.i_crit_edge [
    i32 0, label %sw.default.thread.i
    i32 32, label %if.end16.i.return.sink.split.i.i_crit_edge
  ]

if.end16.i.return.sink.split.i.i_crit_edge:       ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i.i

if.end16.i.uac_processing_unit_bmControls.exit.i_crit_edge: ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac_processing_unit_bmControls.exit.i

sw.default.thread.i:                              ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #15
  %129 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %bNrInPins.i, align 1
  %conv.i.i176 = zext i8 %130 to i32
  %add.i.i177 = add nuw nsw i32 %conv.i.i176, 4
  %arrayidx.i.i178 = getelementptr %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6, i32 %add.i.i177
  %131 = ptrtoint ptr %arrayidx.i.i178 to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %arrayidx.i.i178, align 1
  br label %return.sink.split.i.i

return.sink.split.i.i:                            ; preds = %sw.default.thread.i, %if.end16.i.return.sink.split.i.i_crit_edge
  %retval.0.i.ph11.i = phi i8 [ %132, %sw.default.thread.i ], [ 2, %if.end16.i.return.sink.split.i.i_crit_edge ]
  %.sink.i.i = phi i32 [ 5, %sw.default.thread.i ], [ 6, %if.end16.i.return.sink.split.i.i_crit_edge ]
  %133 = ptrtoint ptr %bNrInPins.i to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load i8, ptr %bNrInPins.i, align 1
  %conv10.i.i = zext i8 %134 to i32
  %add11.i.i179 = add nuw nsw i32 %.sink.i.i, %conv10.i.i
  %arrayidx12.i.i180 = getelementptr %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6, i32 %add11.i.i179
  br label %uac_processing_unit_bmControls.exit.i

uac_processing_unit_bmControls.exit.i:            ; preds = %return.sink.split.i.i, %if.end16.i.uac_processing_unit_bmControls.exit.i_crit_edge
  %retval.0.i.ph12.i = phi i8 [ %retval.0.i.ph11.i, %return.sink.split.i.i ], [ 1, %if.end16.i.uac_processing_unit_bmControls.exit.i_crit_edge ]
  %retval.0.i6.i = phi ptr [ %arrayidx12.i.i180, %return.sink.split.i.i ], [ null, %if.end16.i.uac_processing_unit_bmControls.exit.i_crit_edge ]
  %conv.i181 = zext i8 %retval.0.i.ph12.i to i32
  %add.ptr.i = getelementptr i8, ptr %retval.0.i6.i, i32 %conv.i181
  %135 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %135)
  %136 = load i8, ptr %add.ptr.i, align 1
  %conv18.i = zext i8 %136 to i32
  %name.i134 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %137 = ptrtoint ptr %name.i134 to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %conv18.i, ptr %name.i134, align 4
  br label %cleanup

sw.bb24:                                          ; preds = %if.end8.sw.bb24_crit_edge, %if.end8.sw.bb24_crit_edge482
  %bSourceID.i = getelementptr inbounds %struct.uac2_effect_unit_descriptor, ptr %call24.i, i32 0, i32 5
  %138 = ptrtoint ptr %bSourceID.i to i32
  call void @__asan_load1_noabort(i32 %138)
  %139 = load i8, ptr %bSourceID.i, align 1
  %conv.i136 = zext i8 %139 to i32
  %call.i137 = tail call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv.i136, ptr noundef %term) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i137)
  %cmp.i138 = icmp slt i32 %call.i137, 0
  br i1 %cmp.i138, label %sw.bb24.cleanup_crit_edge, label %if.end.i140

sw.bb24.cleanup_crit_edge:                        ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i140:                                      ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #15
  %type.i139 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %140 = ptrtoint ptr %type.i139 to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 524288, ptr %type.i139, align 4
  %141 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 %id.addr.0245, ptr %term, align 4
  br label %cleanup

sw.bb26:                                          ; preds = %if.end8.sw.bb26_crit_edge, %if.end8.sw.bb26_crit_edge483, %if.end8.sw.bb26_crit_edge484
  %142 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %mixer, align 4
  %protocol1.i143 = getelementptr inbounds %struct.usb_mixer_interface, ptr %143, i32 0, i32 6
  %144 = ptrtoint ptr %protocol1.i143 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %protocol1.i143, align 4
  %bNrInPins.i144 = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 5
  %146 = ptrtoint ptr %bNrInPins.i144 to i32
  call void @__asan_load1_noabort(i32 %146)
  %147 = load i8, ptr %bNrInPins.i144, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %147)
  %tobool.not.i145 = icmp eq i8 %147, 0
  br i1 %tobool.not.i145, label %sw.bb26.if.end4.i153_crit_edge, label %if.then.i150

sw.bb26.if.end4.i153_crit_edge:                   ; preds = %sw.bb26
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4.i153

if.then.i150:                                     ; preds = %sw.bb26
  %baSourceID.i146 = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6
  %148 = ptrtoint ptr %baSourceID.i146 to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %baSourceID.i146, align 1
  %conv.i147 = zext i8 %149 to i32
  %call.i148 = tail call fastcc i32 @__check_input_term(ptr noundef %state, i32 noundef %conv.i147, ptr noundef %term) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i148)
  %cmp.i149 = icmp slt i32 %call.i148, 0
  br i1 %cmp.i149, label %if.then.i150.cleanup_crit_edge, label %if.then.i150.if.end4.i153_crit_edge

if.then.i150.if.end4.i153_crit_edge:              ; preds = %if.then.i150
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4.i153

if.then.i150.cleanup_crit_edge:                   ; preds = %if.then.i150
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4.i153:                                     ; preds = %if.then.i150.if.end4.i153_crit_edge, %sw.bb26.if.end4.i153_crit_edge
  %type.i151 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %150 = ptrtoint ptr %type.i151 to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 655360, ptr %type.i151, align 4
  %151 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %id.addr.0245, ptr %term, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %145)
  %cmp6.i152 = icmp eq i32 %145, 48
  br i1 %cmp6.i152, label %if.end4.i153.cleanup_crit_edge, label %if.end9.i156

if.end4.i153.cleanup_crit_edge:                   ; preds = %if.end4.i153
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i156:                                     ; preds = %if.end4.i153
  %channels.i154 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 2
  %152 = ptrtoint ptr %channels.i154 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %channels.i154, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool10.not.i155 = icmp eq i32 %153, 0
  br i1 %tobool10.not.i155, label %if.then11.i161, label %if.end9.i156.if.end16.i165_crit_edge

if.end9.i156.if.end16.i165_crit_edge:             ; preds = %if.end9.i156
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.i165

if.then11.i161:                                   ; preds = %if.end9.i156
  call void @__sanitizer_cov_trace_pc() #15
  %154 = ptrtoint ptr %bNrInPins.i144 to i32
  call void @__asan_load1_noabort(i32 %154)
  %155 = load i8, ptr %bNrInPins.i144, align 1
  %idxprom.i205 = zext i8 %155 to i32
  %arrayidx.i206 = getelementptr %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6, i32 %idxprom.i205
  %156 = ptrtoint ptr %arrayidx.i206 to i32
  call void @__asan_load1_noabort(i32 %156)
  %157 = load i8, ptr %arrayidx.i206, align 1
  %conv13.i158 = zext i8 %157 to i32
  %158 = ptrtoint ptr %channels.i154 to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 %conv13.i158, ptr %channels.i154, align 4
  %call15.i159 = tail call fastcc i32 @uac_processing_unit_wChannelConfig(ptr noundef nonnull %call24.i, i32 noundef %145) #13
  %chconfig.i160 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 3
  %159 = ptrtoint ptr %chconfig.i160 to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 %call15.i159, ptr %chconfig.i160, align 4
  br label %if.end16.i165

if.end16.i165:                                    ; preds = %if.then11.i161, %if.end9.i156.if.end16.i165_crit_edge
  %160 = zext i32 %145 to i64
  call void @__sanitizer_cov_trace_switch(i64 %160, ptr @__sancov_gen_cov_switch_values.309)
  switch i32 %145, label %if.end16.i165.uac_processing_unit_bmControls.exit.i201_crit_edge [
    i32 0, label %sw.default.thread.i189
    i32 32, label %if.end16.i165.return.sink.split.i.i196_crit_edge
  ]

if.end16.i165.return.sink.split.i.i196_crit_edge: ; preds = %if.end16.i165
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i.i196

if.end16.i165.uac_processing_unit_bmControls.exit.i201_crit_edge: ; preds = %if.end16.i165
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac_processing_unit_bmControls.exit.i201

sw.default.thread.i189:                           ; preds = %if.end16.i165
  call void @__sanitizer_cov_trace_pc() #15
  %161 = ptrtoint ptr %bNrInPins.i144 to i32
  call void @__asan_load1_noabort(i32 %161)
  %162 = load i8, ptr %bNrInPins.i144, align 1
  %conv.i.i186 = zext i8 %162 to i32
  %add.i.i187 = add nuw nsw i32 %conv.i.i186, 4
  %arrayidx.i.i188 = getelementptr %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6, i32 %add.i.i187
  %163 = ptrtoint ptr %arrayidx.i.i188 to i32
  call void @__asan_load1_noabort(i32 %163)
  %164 = load i8, ptr %arrayidx.i.i188, align 1
  br label %return.sink.split.i.i196

return.sink.split.i.i196:                         ; preds = %sw.default.thread.i189, %if.end16.i165.return.sink.split.i.i196_crit_edge
  %retval.0.i.ph11.i190 = phi i8 [ %164, %sw.default.thread.i189 ], [ 2, %if.end16.i165.return.sink.split.i.i196_crit_edge ]
  %.sink.i.i191 = phi i32 [ 5, %sw.default.thread.i189 ], [ 6, %if.end16.i165.return.sink.split.i.i196_crit_edge ]
  %165 = ptrtoint ptr %bNrInPins.i144 to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %bNrInPins.i144, align 1
  %conv10.i.i193 = zext i8 %166 to i32
  %add11.i.i194 = add nuw nsw i32 %.sink.i.i191, %conv10.i.i193
  %arrayidx12.i.i195 = getelementptr %struct.uac_processing_unit_descriptor, ptr %call24.i, i32 0, i32 6, i32 %add11.i.i194
  br label %uac_processing_unit_bmControls.exit.i201

uac_processing_unit_bmControls.exit.i201:         ; preds = %return.sink.split.i.i196, %if.end16.i165.uac_processing_unit_bmControls.exit.i201_crit_edge
  %retval.0.i.ph12.i197 = phi i8 [ %retval.0.i.ph11.i190, %return.sink.split.i.i196 ], [ 1, %if.end16.i165.uac_processing_unit_bmControls.exit.i201_crit_edge ]
  %retval.0.i6.i198 = phi ptr [ %arrayidx12.i.i195, %return.sink.split.i.i196 ], [ null, %if.end16.i165.uac_processing_unit_bmControls.exit.i201_crit_edge ]
  %conv.i199 = zext i8 %retval.0.i.ph12.i197 to i32
  %add.ptr.i200 = getelementptr i8, ptr %retval.0.i6.i198, i32 %conv.i199
  %167 = ptrtoint ptr %add.ptr.i200 to i32
  call void @__asan_load1_noabort(i32 %167)
  %168 = load i8, ptr %add.ptr.i200, align 1
  %conv18.i163 = zext i8 %168 to i32
  %name.i164 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %169 = ptrtoint ptr %name.i164 to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %conv18.i163, ptr %name.i164, align 4
  br label %cleanup

sw.bb28:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  %type.i168 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %170 = ptrtoint ptr %type.i168 to i32
  call void @__asan_store4_noabort(i32 %170)
  store i32 720896, ptr %type.i168, align 4
  %171 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %id.addr.0245, ptr %term, align 4
  %iClockSource.i = getelementptr inbounds %struct.uac_clock_source_descriptor, ptr %call24.i, i32 0, i32 7
  %172 = ptrtoint ptr %iClockSource.i to i32
  call void @__asan_load1_noabort(i32 %172)
  %173 = load i8, ptr %iClockSource.i, align 1
  %conv.i169 = zext i8 %173 to i32
  %name.i170 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %174 = ptrtoint ptr %name.i170 to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 %conv.i169, ptr %name.i170, align 4
  br label %cleanup

sw.bb30:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  %type.i171 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 1
  %175 = ptrtoint ptr %type.i171 to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 720896, ptr %type.i171, align 4
  %176 = ptrtoint ptr %term to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 %id.addr.0245, ptr %term, align 4
  %wClockSourceStr.i = getelementptr inbounds %struct.uac3_clock_source_descriptor, ptr %call24.i, i32 0, i32 7
  %177 = ptrtoint ptr %wClockSourceStr.i to i32
  call void @__asan_loadN_noabort(i32 %177, i32 2)
  %178 = load i16, ptr %wClockSourceStr.i, align 1
  %179 = tail call i16 @llvm.bswap.i16(i16 %178) #13
  %conv.i172 = zext i16 %179 to i32
  %name.i173 = getelementptr inbounds %struct.usb_audio_term, ptr %term, i32 0, i32 4
  %180 = ptrtoint ptr %name.i173 to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 %conv.i172, ptr %name.i173, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.bb30, %sw.bb28, %uac_processing_unit_bmControls.exit.i201, %if.end4.i153.cleanup_crit_edge, %if.then.i150.cleanup_crit_edge, %if.end.i140, %sw.bb24.cleanup_crit_edge, %uac_processing_unit_bmControls.exit.i, %if.end4.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then5.i, %if.end.i120.cleanup_crit_edge, %sw.bb20.cleanup_crit_edge, %uac_mixer_unit_wChannelConfig.exit.i, %if.end.i110.cleanup_crit_edge, %sw.bb18.cleanup_crit_edge, %if.end9.i, %if.end.i101.cleanup_crit_edge, %sw.bb16.cleanup_crit_edge, %if.end.i92, %sw.bb14.cleanup_crit_edge, %sw.bb12, %sw.bb.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.bb30 ], [ 0, %sw.bb28 ], [ 0, %sw.bb12 ], [ 0, %if.end.i92 ], [ %call.i83, %sw.bb14.cleanup_crit_edge ], [ 0, %if.end9.i ], [ %call.i95, %sw.bb16.cleanup_crit_edge ], [ %call5.i, %if.end.i101.cleanup_crit_edge ], [ %call.i106, %sw.bb18.cleanup_crit_edge ], [ 0, %uac_mixer_unit_wChannelConfig.exit.i ], [ 0, %if.end.i110.cleanup_crit_edge ], [ %call.i116, %sw.bb20.cleanup_crit_edge ], [ 0, %if.then5.i ], [ 0, %if.end.i120.cleanup_crit_edge ], [ 0, %uac_processing_unit_bmControls.exit.i ], [ %call.i127, %if.then.i.cleanup_crit_edge ], [ 0, %if.end4.i.cleanup_crit_edge ], [ 0, %if.end.i140 ], [ %call.i137, %sw.bb24.cleanup_crit_edge ], [ 0, %uac_processing_unit_bmControls.exit.i201 ], [ %call.i148, %if.then.i150.cleanup_crit_edge ], [ 0, %if.end4.i153.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -19, %if.end.i.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %if.end5.cleanup_crit_edge ], [ -19, %if.end8.cleanup_crit_edge ], [ -22, %sw.bb.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_cluster_channels_v3(ptr nocapture noundef readonly %state, i32 noundef %cluster_id) unnamed_addr #0 align 64 {
entry:
  %c_header = alloca %struct.uac3_cluster_header_descriptor, align 2
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %c_header) #13
  %0 = getelementptr inbounds %struct.uac3_cluster_header_descriptor, ptr %c_header, i32 0, i32 4
  %1 = call ptr @memset(ptr %c_header, i32 255, i32 7)
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %state, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %shl.i = shl i32 %7, 8
  %or3 = or i32 %shl.i, -2147483520
  %conv = trunc i32 %cluster_id to i16
  %ctrl_intf.i = getelementptr inbounds %struct.snd_usb_audio, ptr %3, i32 0, i32 28
  %8 = ptrtoint ptr %ctrl_intf.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ctrl_intf.i, align 4
  %bInterfaceNumber.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %bInterfaceNumber.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bInterfaceNumber.i, align 2
  %conv6 = zext i8 %11 to i16
  %call7 = call i32 @snd_usb_ctl_msg(ptr noundef %5, i32 noundef %or3, i8 noundef zeroext 6, i8 noundef zeroext -95, i16 noundef zeroext %conv, i16 noundef zeroext %conv6, ptr noundef nonnull %c_header, i16 noundef zeroext 7) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %cmp = icmp slt i32 %call7, 0
  br i1 %cmp, label %entry.do.end_crit_edge, label %if.end

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %call7)
  %cmp9.not = icmp eq i32 %call7, 7
  br i1 %cmp9.not, label %if.end12, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end12:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %0, align 2
  %conv13 = zext i8 %13 to i32
  br label %cleanup

do.end:                                           ; preds = %if.end.do.end_crit_edge, %entry.do.end_crit_edge
  %err.0 = phi i32 [ %call7, %entry.do.end_crit_edge ], [ -5, %if.end.do.end_crit_edge ]
  %14 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %state, align 4
  %dev15 = getelementptr inbounds %struct.snd_usb_audio, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %dev15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev15, align 4
  %dev16 = getelementptr inbounds %struct.usb_device, ptr %17, i32 0, i32 15
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16, ptr noundef nonnull @.str.214, i32 noundef %cluster_id, i32 noundef %err.0) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end12
  %retval.0 = phi i32 [ %err.0, %do.end ], [ %conv13, %if.end12 ]
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %c_header) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @uac_mixer_unit_get_channels(ptr nocapture noundef readonly %state, ptr nocapture noundef readonly %desc) unnamed_addr #0 align 64 {
entry:
  %c_header.i = alloca %struct.uac3_cluster_header_descriptor, align 2
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %0 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mixer, align 4
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %3)
  %cond = icmp eq i32 %3, 48
  br i1 %cond, label %sw.bb5, label %sw.default

sw.default:                                       ; preds = %entry
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %desc, align 1
  %conv = zext i8 %5 to i32
  %bNrInPins = getelementptr inbounds %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 4
  %6 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %bNrInPins, align 1
  %conv1 = zext i8 %7 to i32
  %add2 = add nuw nsw i32 %conv1, 6
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %conv)
  %cmp = icmp ugt i32 %add2, %conv
  br i1 %cmp, label %sw.default.cleanup_crit_edge, label %if.end

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 5, i32 %conv1
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.i, align 1
  %conv4 = zext i8 %9 to i32
  br label %cleanup

sw.bb5:                                           ; preds = %entry
  %bNrInPins.i13 = getelementptr inbounds %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 4
  %10 = ptrtoint ptr %bNrInPins.i13 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %bNrInPins.i13, align 1
  %conv.i = zext i8 %11 to i32
  %add.i = add nuw nsw i32 %conv.i, 1
  %arrayidx.i14 = getelementptr %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 5, i32 %add.i
  %12 = ptrtoint ptr %arrayidx.i14 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.i14, align 1
  %conv1.i = zext i8 %13 to i16
  %shl.i = shl nuw i16 %conv1.i, 8
  %arrayidx4.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 5, i32 %conv.i
  %14 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx4.i, align 1
  %conv5.i = zext i8 %15 to i16
  %or.i = or i16 %shl.i, %conv5.i
  %conv7 = zext i16 %or.i to i32
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %c_header.i) #13
  %16 = getelementptr inbounds %struct.uac3_cluster_header_descriptor, ptr %c_header.i, i32 0, i32 4
  %17 = call ptr @memset(ptr %c_header.i, i32 255, i32 7)
  %18 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %state, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 8
  %shl.i.i = shl i32 %23, 8
  %or3.i = or i32 %shl.i.i, -2147483520
  %ctrl_intf.i.i = getelementptr inbounds %struct.snd_usb_audio, ptr %19, i32 0, i32 28
  %24 = ptrtoint ptr %ctrl_intf.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ctrl_intf.i.i, align 4
  %bInterfaceNumber.i.i = getelementptr inbounds %struct.usb_interface_descriptor, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %bInterfaceNumber.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %bInterfaceNumber.i.i, align 2
  %conv6.i = zext i8 %27 to i16
  %call7.i = call i32 @snd_usb_ctl_msg(ptr noundef %21, i32 noundef %or3.i, i8 noundef zeroext 6, i8 noundef zeroext -95, i16 noundef zeroext %or.i, i16 noundef zeroext %conv6.i, ptr noundef nonnull %c_header.i, i16 noundef zeroext 7) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %cmp.i = icmp slt i32 %call7.i, 0
  br i1 %cmp.i, label %sw.bb5.do.end.i_crit_edge, label %if.end.i

sw.bb5.do.end.i_crit_edge:                        ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end.i

if.end.i:                                         ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %call7.i)
  %cmp9.not.i = icmp eq i32 %call7.i, 7
  br i1 %cmp9.not.i, label %if.end12.i, label %if.end.i.do.end.i_crit_edge

if.end.i.do.end.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end.i

if.end12.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %28 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %16, align 2
  %conv13.i = zext i8 %29 to i32
  br label %get_cluster_channels_v3.exit

do.end.i:                                         ; preds = %if.end.i.do.end.i_crit_edge, %sw.bb5.do.end.i_crit_edge
  %err.0.i = phi i32 [ %call7.i, %sw.bb5.do.end.i_crit_edge ], [ -5, %if.end.i.do.end.i_crit_edge ]
  %30 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %state, align 4
  %dev15.i = getelementptr inbounds %struct.snd_usb_audio, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %dev15.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dev15.i, align 4
  %dev16.i = getelementptr inbounds %struct.usb_device, ptr %33, i32 0, i32 15
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16.i, ptr noundef nonnull @.str.214, i32 noundef %conv7, i32 noundef %err.0.i) #19
  br label %get_cluster_channels_v3.exit

get_cluster_channels_v3.exit:                     ; preds = %do.end.i, %if.end12.i
  %retval.0.i = phi i32 [ %err.0.i, %do.end.i ], [ %conv13.i, %if.end12.i ]
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %c_header.i) #13
  br label %cleanup

cleanup:                                          ; preds = %get_cluster_channels_v3.exit, %if.end, %sw.default.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.default.cleanup_crit_edge ], [ %retval.0.i, %get_cluster_channels_v3.exit ], [ %conv4, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @uac_processing_unit_wChannelConfig(ptr nocapture noundef readonly %desc, i32 noundef %protocol) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %protocol)
  %cmp = icmp eq i32 %protocol, 0
  %bNrInPins = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %desc, i32 0, i32 5
  %0 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %bNrInPins, align 1
  %conv = zext i8 %1 to i32
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %add = add nuw nsw i32 %conv, 2
  %arrayidx = getelementptr %struct.uac_processing_unit_descriptor, ptr %desc, i32 0, i32 6, i32 %add
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  %conv1 = zext i8 %3 to i32
  %shl = shl nuw nsw i32 %conv1, 8
  br label %return

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %add11 = add nuw nsw i32 %conv, 4
  %arrayidx12 = getelementptr %struct.uac_processing_unit_descriptor, ptr %desc, i32 0, i32 6, i32 %add11
  %4 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx12, align 1
  %conv13 = zext i8 %5 to i32
  %shl14 = shl nuw i32 %conv13, 24
  %add18 = add nuw nsw i32 %conv, 3
  %arrayidx19 = getelementptr %struct.uac_processing_unit_descriptor, ptr %desc, i32 0, i32 6, i32 %add18
  %6 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx19, align 1
  %conv20 = zext i8 %7 to i32
  %shl21 = shl nuw nsw i32 %conv20, 16
  %or22 = or i32 %shl21, %shl14
  %add26 = add nuw nsw i32 %conv, 2
  %arrayidx27 = getelementptr %struct.uac_processing_unit_descriptor, ptr %desc, i32 0, i32 6, i32 %add26
  %8 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx27, align 1
  %conv28 = zext i8 %9 to i32
  %shl29 = shl nuw nsw i32 %conv28, 8
  %or30 = or i32 %or22, %shl29
  br label %return

return:                                           ; preds = %if.else, %if.then
  %or30.sink = phi i32 [ %or30, %if.else ], [ %shl, %if.then ]
  %add34 = add nuw nsw i32 %conv, 1
  %arrayidx35 = getelementptr %struct.uac_processing_unit_descriptor, ptr %desc, i32 0, i32 6, i32 %add34
  %10 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx35, align 1
  %conv36 = zext i8 %11 to i32
  %or37 = or i32 %or30.sink, %conv36
  ret i32 %or37
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @build_mixer_unit_ctl(ptr nocapture noundef readonly %state, ptr nocapture noundef readonly %desc, i32 noundef %in_ch, i32 noundef %num_outs, i32 noundef %unitid, ptr nocapture noundef readonly %iterm) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %map1 = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 7
  %0 = ptrtoint ptr %map1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map1, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %for.cond.preheader.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.cond.preheader.i:                             ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool1.not19.i = icmp eq i32 %3, 0
  br i1 %tobool1.not19.i, label %for.cond.preheader.i.if.end_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.if.end_crit_edge:            ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %4 = phi i32 [ %6, %for.inc.i.for.body.i_crit_edge ], [ %3, %for.cond.preheader.i.for.body.i_crit_edge ]
  %p.addr.020.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %1, %for.cond.preheader.i.for.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %unitid)
  %cmp.i = icmp eq i32 %4, %unitid
  br i1 %cmp.i, label %find_map.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr %struct.usbmix_name_map, ptr %p.addr.020.i, i32 1
  %5 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %incdec.ptr.i, align 4
  %tobool1.not.i = icmp eq i32 %6, 0
  br i1 %tobool1.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

find_map.exit:                                    ; preds = %for.body.i
  %tobool.not.i2 = icmp eq ptr %p.addr.020.i, null
  br i1 %tobool.not.i2, label %find_map.exit.if.end_crit_edge, label %lor.lhs.false.i

find_map.exit.if.end_crit_edge:                   ; preds = %find_map.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

lor.lhs.false.i:                                  ; preds = %find_map.exit
  %name.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 1
  %7 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name.i, align 4
  %tobool1.not.i3 = icmp eq ptr %8, null
  br i1 %tobool1.not.i3, label %check_ignored_ctl.exit, label %lor.lhs.false.i.if.end_crit_edge

lor.lhs.false.i.if.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

check_ignored_ctl.exit:                           ; preds = %lor.lhs.false.i
  %dB.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 3
  %9 = ptrtoint ptr %dB.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dB.i, align 4
  %tobool3.not.i.not = icmp eq ptr %10, null
  br i1 %tobool3.not.i.not, label %check_ignored_ctl.exit.cleanup_crit_edge, label %check_ignored_ctl.exit.if.end_crit_edge

check_ignored_ctl.exit.if.end_crit_edge:          ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

check_ignored_ctl.exit.cleanup_crit_edge:         ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %check_ignored_ctl.exit.if.end_crit_edge, %lor.lhs.false.i.if.end_crit_edge, %find_map.exit.if.end_crit_edge, %for.inc.i.if.end_crit_edge, %for.cond.preheader.i.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i11623 = phi ptr [ %p.addr.020.i, %check_ignored_ctl.exit.if.end_crit_edge ], [ null, %find_map.exit.if.end_crit_edge ], [ %p.addr.020.i, %lor.lhs.false.i.if.end_crit_edge ], [ null, %entry.if.end_crit_edge ], [ null, %for.cond.preheader.i.if.end_crit_edge ], [ null, %for.inc.i.if.end_crit_edge ]
  %tobool.not.i21722 = phi i1 [ false, %check_ignored_ctl.exit.if.end_crit_edge ], [ true, %find_map.exit.if.end_crit_edge ], [ false, %lor.lhs.false.i.if.end_crit_edge ], [ true, %entry.if.end_crit_edge ], [ true, %for.cond.preheader.i.if.end_crit_edge ], [ true, %for.inc.i.if.end_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %11 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 152) #17
  %tobool4.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %12 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mixer, align 4
  %14 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %call7.i.i, align 8
  %id.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 3
  %15 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %unitid, ptr %id.i, align 4
  %dump.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 5
  %16 = ptrtoint ptr %dump.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump.i, align 4
  %resume.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 6
  %17 = ptrtoint ptr %resume.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @restore_mixer_value, ptr %resume.i, align 8
  %add = add i32 %in_ch, 1
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %control to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %add, ptr %control, align 4
  %val_type = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 7
  %19 = ptrtoint ptr %val_type to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 4, ptr %val_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_outs)
  %cmp33.not = icmp eq i32 %num_outs, 0
  br i1 %cmp33.not, label %if.end6.for.end_crit_edge, label %for.body.lr.ph

if.end6.for.end_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end6
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %13, i32 0, i32 6
  %bNrInPins9.i = getelementptr inbounds %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 4
  %mul.i = mul i32 %num_outs, %in_ch
  %cmask = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 2
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  br label %for.body

for.body:                                         ; preds = %if.end12.for.body_crit_edge, %for.body.lr.ph
  %i.034 = phi i32 [ 0, %for.body.lr.ph ], [ %inc13, %if.end12.for.body_crit_edge ]
  %20 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %protocol, align 4
  %22 = zext i32 %21 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.310)
  switch i32 %21, label %for.body.uac_mixer_unit_bmControls.exit_crit_edge [
    i32 0, label %for.body.return.sink.split.i_crit_edge
    i32 32, label %sw.bb1.i
    i32 48, label %sw.bb7.i
  ]

for.body.return.sink.split.i_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

for.body.uac_mixer_unit_bmControls.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac_mixer_unit_bmControls.exit

sw.bb1.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

sw.bb7.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %sw.bb7.i, %sw.bb1.i, %for.body.return.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 2, %sw.bb7.i ], [ 6, %sw.bb1.i ], [ 4, %for.body.return.sink.split.i_crit_edge ]
  %23 = ptrtoint ptr %bNrInPins9.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %bNrInPins9.i, align 1
  %conv10.i = zext i8 %24 to i32
  %add11.i = add nuw nsw i32 %.sink.i, %conv10.i
  %arrayidx12.i = getelementptr %struct.uac_mixer_unit_descriptor, ptr %desc, i32 0, i32 5, i32 %add11.i
  br label %uac_mixer_unit_bmControls.exit

uac_mixer_unit_bmControls.exit:                   ; preds = %return.sink.split.i, %for.body.uac_mixer_unit_bmControls.exit_crit_edge
  %retval.0.i5 = phi ptr [ null, %for.body.uac_mixer_unit_bmControls.exit_crit_edge ], [ %arrayidx12.i, %return.sink.split.i ]
  %add.i = add i32 %i.034, %mul.i
  %shr.i = ashr i32 %add.i, 3
  %arrayidx.i = getelementptr i8, ptr %retval.0.i5, i32 %shr.i
  %25 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %26 to i32
  %and.i = and i32 %add.i, 7
  %shr1.i = lshr i32 128, %and.i
  %and2.i = and i32 %shr1.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool10.not = icmp eq i32 %and2.i, 0
  br i1 %tobool10.not, label %uac_mixer_unit_bmControls.exit.if.end12_crit_edge, label %if.then11

uac_mixer_unit_bmControls.exit.if.end12_crit_edge: ; preds = %uac_mixer_unit_bmControls.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12

if.then11:                                        ; preds = %uac_mixer_unit_bmControls.exit
  call void @__sanitizer_cov_trace_pc() #15
  %shl = shl nuw i32 1, %i.034
  %27 = ptrtoint ptr %cmask to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cmask, align 8
  %or = or i32 %28, %shl
  store i32 %or, ptr %cmask, align 8
  %29 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %channels, align 8
  %inc = add i32 %30, 1
  store i32 %inc, ptr %channels, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %uac_mixer_unit_bmControls.exit.if.end12_crit_edge
  %inc13 = add nuw i32 %i.034, 1
  %exitcond.not = icmp eq i32 %inc13, %num_outs
  br i1 %exitcond.not, label %if.end12.for.end_crit_edge, label %if.end12.for.body_crit_edge

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

if.end12.for.end_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %if.end12.for.end_crit_edge, %if.end6.for.end_crit_edge
  tail call fastcc void @get_min_max_with_quirks(ptr noundef nonnull %call7.i.i, i32 noundef 0, ptr noundef null)
  %call15 = tail call ptr @snd_ctl_new1(ptr noundef nonnull @usb_feature_unit_ctl, ptr noundef nonnull %call7.i.i) #13
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %do.end, label %if.end19

do.end:                                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %state, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev, align 4
  %dev18 = getelementptr inbounds %struct.usb_device, ptr %34, i32 0, i32 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev18, ptr noundef nonnull @.str.86) #19
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup

if.end19:                                         ; preds = %for.end
  %private_free = getelementptr inbounds %struct.snd_kcontrol, ptr %call15, i32 0, i32 9
  %35 = ptrtoint ptr %private_free to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @snd_usb_mixer_elem_free, ptr %private_free, align 4
  %name = getelementptr inbounds %struct.snd_kcontrol, ptr %call15, i32 0, i32 1, i32 4
  br i1 %tobool.not.i21722, label %if.end19.if.end28_crit_edge, label %lor.lhs.false.i9

if.end19.if.end28_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

lor.lhs.false.i9:                                 ; preds = %if.end19
  %name.i7 = getelementptr inbounds %struct.usbmix_name_map, ptr %retval.0.i11623, i32 0, i32 1
  %36 = ptrtoint ptr %name.i7 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %name.i7, align 4
  %tobool1.not.i8 = icmp eq ptr %37, null
  br i1 %tobool1.not.i8, label %lor.lhs.false.i9.if.end28_crit_edge, label %if.end.i

lor.lhs.false.i9.if.end28_crit_edge:              ; preds = %lor.lhs.false.i9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.end.i:                                         ; preds = %lor.lhs.false.i9
  %call.i = tail call i32 @strscpy(ptr noundef %name, ptr noundef nonnull %37, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool21.not = icmp eq i32 %call.i, 0
  br i1 %tobool21.not, label %if.end.i.if.end28_crit_edge, label %if.end.i.if.end36_crit_edge

if.end.i.if.end36_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.end.i.if.end28_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.end28:                                         ; preds = %if.end.i.if.end28_crit_edge, %lor.lhs.false.i9.if.end28_crit_edge, %if.end19.if.end28_crit_edge
  %38 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %state, align 4
  %call27 = tail call fastcc i32 @get_term_name(ptr noundef %39, ptr noundef %iterm, ptr noundef %name, i32 noundef 44, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool29.not = icmp eq i32 %call27, 0
  br i1 %tobool29.not, label %if.then30, label %if.end28.if.end36_crit_edge

if.end28.if.end36_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.then30:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  %call35 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %name, ptr noundef nonnull @.str.219, i32 noundef %add)
  br label %if.end36

if.end36:                                         ; preds = %if.then30, %if.end28.if.end36_crit_edge, %if.end.i.if.end36_crit_edge
  %call.i13 = tail call i32 @strlcat(ptr noundef %name, ptr noundef nonnull @.str.92, i32 noundef 44) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @build_mixer_unit_ctl.__UNIQUE_ID_ddebug247, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@build_mixer_unit_ctl, %if.then43)) #13
          to label %do.end55 [label %if.then43], !srcloc !716

if.then43:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #15
  %40 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %state, align 4
  %dev45 = getelementptr inbounds %struct.snd_usb_audio, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %dev45 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %dev45, align 4
  %dev46 = getelementptr inbounds %struct.usb_device, ptr %43, i32 0, i32 15
  %44 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %id.i, align 4
  %channels52 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %46 = ptrtoint ptr %channels52 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %channels52, align 8
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %48 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %min, align 8
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %50 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %max, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @build_mixer_unit_ctl.__UNIQUE_ID_ddebug247, ptr noundef %dev46, ptr noundef nonnull @.str.220, i32 noundef %45, ptr noundef %name, i32 noundef %47, i32 noundef %49, i32 noundef %51) #13
  br label %do.end55

do.end55:                                         ; preds = %if.then43, %if.end36
  %call57 = tail call i32 @snd_usb_mixer_add_list(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call15, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %do.end55, %do.end, %if.end.cleanup_crit_edge, %check_ignored_ctl.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_master_bool_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !719
  %call = call i32 @snd_usb_get_cur_mix_value(ptr noundef %1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  %spec.select = select i1 %tobool.not, i32 %call, i32 0
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %7 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp1 = icmp ne i32 %8, 0
  %conv = zext i1 %cmp1 to i32
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %9 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %conv, ptr %value, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %spec.select, %if.then ], [ 0, %if.end ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @usb_mixer_selector_elem_free(ptr nocapture noundef %kctl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end.thread, label %if.end

if.end:                                           ; preds = %entry
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %max, align 4
  tail call void @kfree(ptr noundef nonnull %1) #13
  %4 = ptrtoint ptr %private_data to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %private_data, align 4
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 7
  %5 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %private_value, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not = icmp eq i32 %6, 0
  br i1 %tobool3.not, label %if.end.if.end7_crit_edge, label %if.then4

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.end.thread:                                    ; preds = %entry
  %private_value21 = getelementptr inbounds %struct.snd_kcontrol, ptr %kctl, i32 0, i32 7
  %7 = ptrtoint ptr %private_value21 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %private_value21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.not22 = icmp eq i32 %8, 0
  br i1 %tobool3.not22, label %if.end.thread.if.end7_crit_edge, label %if.then4.thread

if.end.thread.if.end7_crit_edge:                  ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then4.thread:                                  ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #15
  %9 = inttoptr i32 %8 to ptr
  br label %for.end

if.then4:                                         ; preds = %if.end
  %10 = inttoptr i32 %6 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp18 = icmp sgt i32 %3, 0
  br i1 %cmp18, label %if.then4.for.body_crit_edge, label %if.then4.for.end_crit_edge

if.then4.for.end_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.then4.for.body_crit_edge:                      ; preds = %if.then4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then4.for.body_crit_edge
  %i.019 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.then4.for.body_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %10, i32 %i.019
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx, align 4
  tail call void @kfree(ptr noundef %12) #13
  %inc = add nuw nsw i32 %i.019, 1
  %exitcond.not = icmp eq i32 %inc, %3
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.then4.for.end_crit_edge, %if.then4.thread
  %13 = phi ptr [ %9, %if.then4.thread ], [ %10, %if.then4.for.end_crit_edge ], [ %10, %for.body.for.end_crit_edge ]
  %private_value2428 = phi ptr [ %private_value21, %if.then4.thread ], [ %private_value, %if.then4.for.end_crit_edge ], [ %private_value, %for.body.for.end_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %13) #13
  %14 = ptrtoint ptr %private_value2428 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %private_value2428, align 4
  br label %if.end7

if.end7:                                          ; preds = %for.end, %if.end.thread.if.end7_crit_edge, %if.end.if.end7_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_selector_info(ptr nocapture noundef readonly %kcontrol, ptr noundef %uinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_value = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 7
  %0 = ptrtoint ptr %private_value to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %private_value, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !720

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2650, i32 noundef 9, ptr noundef null) #13
  br label %cleanup

if.end23:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = inttoptr i32 %1 to ptr
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %3 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data, align 4
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %4, i32 0, i32 9
  %5 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max, align 4
  %call = tail call i32 @snd_ctl_enum_info(ptr noundef %uinfo, i32 noundef 1, i32 noundef %6, ptr noundef nonnull %2) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_selector_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !719
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %control, align 4
  %shl = shl i32 %4, 8
  %idx_off.i.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %idx_off.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %idx_off.i.i, align 4
  %add.i.i = add i32 %6, %shl
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = call fastcc i32 @get_ctl_value_v1(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %val) #13
  br label %get_cur_ctl_value.exit

cond.false.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = call fastcc i32 @get_ctl_value_v2(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %val) #13
  br label %get_cur_ctl_value.exit

get_cur_ctl_value.exit:                           ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp = icmp slt i32 %cond.i.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %get_cur_ctl_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %11 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %value, align 8
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not = icmp eq i32 %15, 0
  %spec.select = select i1 %tobool.not, i32 %cond.i.i, i32 0
  br label %cleanup

if.end:                                           ; preds = %get_cur_ctl_value.exit
  %16 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %val, align 4
  %res.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %res.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.if.end.i_crit_edge

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %20 = ptrtoint ptr %res.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %res.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end.if.end.i_crit_edge
  %min.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %21 = ptrtoint ptr %min.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %min.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %22)
  %cmp.i = icmp slt i32 %17, %22
  br i1 %cmp.i, label %if.end.i.get_relative_value.exit_crit_edge, label %if.else.i

if.end.i.get_relative_value.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %get_relative_value.exit

if.else.i:                                        ; preds = %if.end.i
  %max.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %23 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %max.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %17)
  %cmp3.not.i = icmp sgt i32 %24, %17
  br i1 %cmp3.not.i, label %if.else10.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  %25 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %res.i, align 4
  %sub.i = xor i32 %22, -1
  %add.i = add i32 %24, %sub.i
  %sub8.i = add i32 %add.i, %26
  %div.i = sdiv i32 %sub8.i, %26
  br label %get_relative_value.exit

if.else10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub12.i = sub i32 %17, %22
  %27 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %res.i, align 4
  %div14.i = sdiv i32 %sub12.i, %28
  br label %get_relative_value.exit

get_relative_value.exit:                          ; preds = %if.else10.i, %if.then4.i, %if.end.i.get_relative_value.exit_crit_edge
  %retval.0.i = phi i32 [ %div.i, %if.then4.i ], [ %div14.i, %if.else10.i ], [ 0, %if.end.i.get_relative_value.exit_crit_edge ]
  %value2 = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %29 = ptrtoint ptr %value2 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %retval.0.i, ptr %value2, align 8
  br label %cleanup

cleanup:                                          ; preds = %get_relative_value.exit, %if.then
  %retval.0 = phi i32 [ %spec.select, %if.then ], [ 0, %get_relative_value.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_selector_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  %oval = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %oval) #13
  %2 = ptrtoint ptr %oval to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %oval, align 4, !annotation !719
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %control, align 4
  %shl = shl i32 %4, 8
  %idx_off.i.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %idx_off.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %idx_off.i.i, align 4
  %add.i.i = add i32 %6, %shl
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = call fastcc i32 @get_ctl_value_v1(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %oval) #13
  br label %get_cur_ctl_value.exit

cond.false.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = call fastcc i32 @get_ctl_value_v2(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %oval) #13
  br label %get_cur_ctl_value.exit

get_cur_ctl_value.exit:                           ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp = icmp slt i32 %cond.i.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %get_cur_ctl_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  %spec.select = select i1 %tobool.not, i32 %cond.i.i, i32 0
  br label %cleanup

if.end:                                           ; preds = %get_cur_ctl_value.exit
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %15 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i = icmp slt i32 %16, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %min.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %17 = ptrtoint ptr %min.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %min.i, align 4
  br label %get_abs_value.exit

if.end.i:                                         ; preds = %if.end
  %res.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %19 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %res.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.then1.i, label %if.end.i.if.end3.i_crit_edge

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %21 = ptrtoint ptr %res.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %res.i, align 4
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then1.i, %if.end.i.if.end3.i_crit_edge
  %22 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %res.i, align 4
  %mul.i = mul i32 %23, %16
  %min5.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %24 = ptrtoint ptr %min5.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %min5.i, align 4
  %add.i = add i32 %mul.i, %25
  %max.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %26 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %max.i, align 4
  %28 = tail call i32 @llvm.smin.i32(i32 %add.i, i32 %27) #13
  br label %get_abs_value.exit

get_abs_value.exit:                               ; preds = %if.end3.i, %if.then.i
  %retval.0.i = phi i32 [ %18, %if.then.i ], [ %28, %if.end3.i ]
  %29 = ptrtoint ptr %oval to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %oval, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %30)
  %cmp2.not = icmp eq i32 %retval.0.i, %30
  br i1 %cmp2.not, label %get_abs_value.exit.cleanup_crit_edge, label %if.then3

get_abs_value.exit.cleanup_crit_edge:             ; preds = %get_abs_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then3:                                         ; preds = %get_abs_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %control, align 4
  %shl5 = shl i32 %32, 8
  %call.i = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %1, i32 noundef 1, i32 noundef %shl5, i32 noundef %retval.0.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %get_abs_value.exit.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %spec.select, %if.then ], [ 1, %if.then3 ], [ 0, %get_abs_value.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %oval) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_ctl_enum_info(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @build_audio_procunit(ptr noundef %state, i32 noundef %unitid, ptr nocapture noundef readonly %raw_desc, ptr noundef readonly %list, i1 noundef zeroext %extension_unit) unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %cond = select i1 %extension_unit, ptr @.str.236, ptr @.str.237
  %bNrInPins = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 5
  %0 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %bNrInPins, align 1
  %conv = zext i8 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp384.not = icmp eq i8 %1, 0
  br i1 %cmp384.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0385, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %entry.for.body_crit_edge
  %i.0385 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %i.0385
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  %conv2 = zext i8 %3 to i32
  %call = tail call fastcc i32 @parse_audio_unit(ptr noundef %state, i32 noundef %conv2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp3 = icmp slt i32 %call, 0
  br i1 %cmp3, label %for.body.cleanup191_crit_edge, label %for.cond

for.body.cleanup191_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry.for.end_crit_edge
  %wProcessType = getelementptr inbounds %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 4
  %4 = ptrtoint ptr %wProcessType to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %wProcessType, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %conv5 = zext i16 %6 to i32
  %tobool7.not386 = icmp eq ptr %list, null
  br i1 %tobool7.not386, label %for.end.if.then21_crit_edge, label %for.end.land.rhs_crit_edge

for.end.land.rhs_crit_edge:                       ; preds = %for.end
  br label %land.rhs

for.end.if.then21_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then21

land.rhs:                                         ; preds = %for.inc16.land.rhs_crit_edge, %for.end.land.rhs_crit_edge
  %info.0387 = phi ptr [ %incdec.ptr, %for.inc16.land.rhs_crit_edge ], [ %list, %for.end.land.rhs_crit_edge ]
  %7 = ptrtoint ptr %info.0387 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %info.0387, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool9.not = icmp eq i32 %8, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv5)
  %cmp12 = icmp eq i32 %8, %conv5
  %or.cond = select i1 %tobool9.not, i1 true, i1 %cmp12
  br i1 %or.cond, label %lor.lhs.false.critedge, label %for.inc16

for.inc16:                                        ; preds = %land.rhs
  %incdec.ptr = getelementptr %struct.procunit_info, ptr %info.0387, i32 1
  %tobool7.not = icmp eq ptr %incdec.ptr, null
  br i1 %tobool7.not, label %for.inc16.if.then21_crit_edge, label %for.inc16.land.rhs_crit_edge

for.inc16.land.rhs_crit_edge:                     ; preds = %for.inc16
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs

for.inc16.if.then21_crit_edge:                    ; preds = %for.inc16
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then21

lor.lhs.false.critedge:                           ; preds = %land.rhs
  br i1 %tobool9.not, label %lor.lhs.false.critedge.if.then21_crit_edge, label %lor.lhs.false.critedge.if.end22_crit_edge

lor.lhs.false.critedge.if.end22_crit_edge:        ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end22

lor.lhs.false.critedge.if.then21_crit_edge:       ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then21

if.then21:                                        ; preds = %lor.lhs.false.critedge.if.then21_crit_edge, %for.inc16.if.then21_crit_edge, %for.end.if.then21_crit_edge
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %lor.lhs.false.critedge.if.end22_crit_edge
  %info.1 = phi ptr [ %info.0387, %lor.lhs.false.critedge.if.end22_crit_edge ], [ @build_audio_procunit.default_info, %if.then21 ]
  %values = getelementptr inbounds %struct.procunit_info, ptr %info.1, i32 0, i32 2
  %9 = ptrtoint ptr %values to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %values, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool24.not388 = icmp eq i32 %12, 0
  br i1 %tobool24.not388, label %if.end22.cleanup191_crit_edge, label %for.body25.lr.ph

if.end22.cleanup191_crit_edge:                    ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191

for.body25.lr.ph:                                 ; preds = %if.end22
  %mixer = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 1
  %map49 = getelementptr inbounds %struct.mixer_build, ptr %state, i32 0, i32 7
  %name125 = getelementptr inbounds %struct.procunit_info, ptr %info.1, i32 0, i32 1
  br label %for.body25

for.body25:                                       ; preds = %for.inc188.for.body25_crit_edge, %for.body25.lr.ph
  %13 = phi i32 [ %12, %for.body25.lr.ph ], [ %136, %for.inc188.for.body25_crit_edge ]
  %valinfo.0389 = phi ptr [ %10, %for.body25.lr.ph ], [ %incdec.ptr189, %for.inc188.for.body25_crit_edge ]
  %14 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mixer, align 4
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %15, i32 0, i32 6
  %16 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %protocol, align 4
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.311)
  switch i32 %17, label %for.body25.uac_processing_unit_bmControls.exit_crit_edge [
    i32 0, label %for.body25.return.sink.split.i_crit_edge
    i32 32, label %sw.bb1.i
    i32 48, label %sw.bb7.i
  ]

for.body25.return.sink.split.i_crit_edge:         ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

for.body25.uac_processing_unit_bmControls.exit_crit_edge: ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac_processing_unit_bmControls.exit

sw.bb1.i:                                         ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

sw.bb7.i:                                         ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %sw.bb7.i, %sw.bb1.i, %for.body25.return.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 2, %sw.bb7.i ], [ 6, %sw.bb1.i ], [ 5, %for.body25.return.sink.split.i_crit_edge ]
  %19 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %bNrInPins, align 1
  %conv10.i = zext i8 %20 to i32
  %add11.i = add nuw nsw i32 %.sink.i, %conv10.i
  %arrayidx12.i = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %add11.i
  br label %uac_processing_unit_bmControls.exit

uac_processing_unit_bmControls.exit:              ; preds = %return.sink.split.i, %for.body25.uac_processing_unit_bmControls.exit_crit_edge
  %retval.0.i295 = phi ptr [ null, %for.body25.uac_processing_unit_bmControls.exit_crit_edge ], [ %arrayidx12.i, %return.sink.split.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp29 = icmp eq i32 %17, 0
  %.frozen = freeze i32 %13
  %div = sdiv i32 %.frozen, 8
  %arrayidx33 = getelementptr i8, ptr %retval.0.i295, i32 %div
  %21 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx33, align 1
  %conv34 = zext i8 %22 to i32
  br i1 %cmp29, label %if.then31, label %if.else

if.then31:                                        ; preds = %uac_processing_unit_bmControls.exit
  %23 = mul i32 %div, 8
  %rem.decomposed = sub i32 %.frozen, %23
  %sub = add nsw i32 %rem.decomposed, -1
  %shl = shl nuw nsw i32 1, %sub
  %and = and i32 %shl, %conv34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool36.not = icmp eq i32 %and, 0
  br i1 %tobool36.not, label %if.then31.for.inc188_crit_edge, label %if.then31.if.end48_crit_edge

if.then31.if.end48_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.then31.for.inc188_crit_edge:                   ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc188

if.else:                                          ; preds = %uac_processing_unit_bmControls.exit
  %conv.i = shl i32 %13, 1
  %sub.i = and i32 %conv.i, 510
  %mul.i = add nsw i32 %sub.i, -2
  %24 = shl nuw i32 1, %mul.i
  %25 = and i32 %24, %conv34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i.not = icmp eq i32 %25, 0
  br i1 %tobool.i.not, label %if.else.for.inc188_crit_edge, label %if.else.if.end48_crit_edge

if.else.if.end48_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.else.for.inc188_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc188

if.end48:                                         ; preds = %if.else.if.end48_crit_edge, %if.then31.if.end48_crit_edge
  %26 = ptrtoint ptr %map49 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %map49, align 4
  %tobool.not.i = icmp eq ptr %27, null
  br i1 %tobool.not.i, label %if.end48.if.end55_crit_edge, label %for.cond.preheader.i

if.end48.if.end55_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

for.cond.preheader.i:                             ; preds = %if.end48
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool1.not19.i = icmp eq i32 %29, 0
  br i1 %tobool1.not19.i, label %for.cond.preheader.i.if.end55_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.if.end55_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %30 = phi i32 [ %34, %for.inc.i.for.body.i_crit_edge ], [ %29, %for.cond.preheader.i.for.body.i_crit_edge ]
  %p.addr.020.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %27, %for.cond.preheader.i.for.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %unitid)
  %cmp.i = icmp eq i32 %30, %unitid
  br i1 %cmp.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %control4.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 2
  %31 = ptrtoint ptr %control4.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %control4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool5.not.i = icmp eq i32 %32, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %13)
  %cmp8.i = icmp eq i32 %32, %13
  %or.cond.i = or i1 %tobool5.not.i, %cmp8.i
  br i1 %or.cond.i, label %find_map.exit, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.usbmix_name_map, ptr %p.addr.020.i, i32 1
  %33 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %incdec.ptr.i, align 4
  %tobool1.not.i = icmp eq i32 %34, 0
  br i1 %tobool1.not.i, label %for.inc.i.if.end55_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.if.end55_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

find_map.exit:                                    ; preds = %lor.lhs.false.i
  %tobool.not.i297 = icmp eq ptr %p.addr.020.i, null
  br i1 %tobool.not.i297, label %find_map.exit.if.end55_crit_edge, label %lor.lhs.false.i299

find_map.exit.if.end55_crit_edge:                 ; preds = %find_map.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

lor.lhs.false.i299:                               ; preds = %find_map.exit
  %name.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 1
  %35 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %name.i, align 4
  %tobool1.not.i298 = icmp eq ptr %36, null
  br i1 %tobool1.not.i298, label %check_ignored_ctl.exit, label %lor.lhs.false.i299.if.end55_crit_edge

lor.lhs.false.i299.if.end55_crit_edge:            ; preds = %lor.lhs.false.i299
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

check_ignored_ctl.exit:                           ; preds = %lor.lhs.false.i299
  %dB.i = getelementptr inbounds %struct.usbmix_name_map, ptr %p.addr.020.i, i32 0, i32 3
  %37 = ptrtoint ptr %dB.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dB.i, align 4
  %tobool3.not.i300.not = icmp eq ptr %38, null
  br i1 %tobool3.not.i300.not, label %check_ignored_ctl.exit.for.inc188_crit_edge, label %check_ignored_ctl.exit.if.end55_crit_edge

check_ignored_ctl.exit.if.end55_crit_edge:        ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end55

check_ignored_ctl.exit.for.inc188_crit_edge:      ; preds = %check_ignored_ctl.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc188

if.end55:                                         ; preds = %check_ignored_ctl.exit.if.end55_crit_edge, %lor.lhs.false.i299.if.end55_crit_edge, %find_map.exit.if.end55_crit_edge, %for.inc.i.if.end55_crit_edge, %for.cond.preheader.i.if.end55_crit_edge, %if.end48.if.end55_crit_edge
  %retval.0.i296358365 = phi ptr [ %p.addr.020.i, %check_ignored_ctl.exit.if.end55_crit_edge ], [ null, %find_map.exit.if.end55_crit_edge ], [ %p.addr.020.i, %lor.lhs.false.i299.if.end55_crit_edge ], [ null, %if.end48.if.end55_crit_edge ], [ null, %for.cond.preheader.i.if.end55_crit_edge ], [ null, %for.inc.i.if.end55_crit_edge ]
  %tobool.not.i297359364 = phi i1 [ false, %check_ignored_ctl.exit.if.end55_crit_edge ], [ true, %find_map.exit.if.end55_crit_edge ], [ false, %lor.lhs.false.i299.if.end55_crit_edge ], [ true, %if.end48.if.end55_crit_edge ], [ true, %for.cond.preheader.i.if.end55_crit_edge ], [ true, %for.inc.i.if.end55_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %39 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %39, i32 noundef 3520, i32 noundef 152) #17
  %tobool57.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool57.not, label %if.end55.cleanup191_crit_edge, label %if.end59

if.end55.cleanup191_crit_edge:                    ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191

if.end59:                                         ; preds = %if.end55
  %40 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %mixer, align 4
  %42 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %41, ptr %call7.i.i, align 8
  %id.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 3
  %43 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %unitid, ptr %id.i, align 4
  %dump.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 5
  %44 = ptrtoint ptr %dump.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr @snd_usb_mixer_dump_cval, ptr %dump.i, align 4
  %resume.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %call7.i.i, i32 0, i32 6
  %45 = ptrtoint ptr %resume.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr @restore_mixer_value, ptr %resume.i, align 8
  %46 = ptrtoint ptr %valinfo.0389 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %valinfo.0389, align 4
  %control62 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 1
  %48 = ptrtoint ptr %control62 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %control62, align 4
  %val_type = getelementptr inbounds %struct.procunit_value_info, ptr %valinfo.0389, i32 0, i32 2
  %49 = ptrtoint ptr %val_type to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %val_type, align 4
  %val_type63 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 7
  %51 = ptrtoint ptr %val_type63 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %val_type63, align 4
  %channels = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 6
  %52 = ptrtoint ptr %channels to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 1, ptr %channels, align 8
  %protocol65 = getelementptr inbounds %struct.usb_mixer_interface, ptr %41, i32 0, i32 6
  %53 = ptrtoint ptr %protocol65 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %protocol65, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %cmp66 = icmp sgt i32 %54, 0
  br i1 %cmp66, label %land.lhs.true, label %if.end59.if.end76_crit_edge

if.end59.if.end76_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end76

land.lhs.true:                                    ; preds = %if.end59
  %55 = ptrtoint ptr %valinfo.0389 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %valinfo.0389, align 4
  %div69 = sdiv i32 %56, 8
  %arrayidx70 = getelementptr i8, ptr %retval.0.i295, i32 %div69
  %57 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx70, align 1
  %conv71 = zext i8 %58 to i32
  %conv.i302 = shl i32 %56, 1
  %sub.i303 = and i32 %conv.i302, 510
  %mul.i304 = add nsw i32 %sub.i303, -2
  %59 = shl i32 2, %mul.i304
  %60 = and i32 %59, %conv71
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.i305.not = icmp eq i32 %60, 0
  br i1 %tobool.i305.not, label %if.then75, label %land.lhs.true.if.end76_crit_edge

land.lhs.true.if.end76_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end76

if.then75:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %master_readonly = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 5
  %61 = ptrtoint ptr %master_readonly to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 1, ptr %master_readonly, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %land.lhs.true.if.end76_crit_edge, %if.end59.if.end76_crit_edge
  %62 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.312)
  switch i16 %6, label %sw.default105 [
    i16 1, label %sw.bb
    i16 -7423, label %sw.bb100
  ]

sw.bb:                                            ; preds = %if.end76
  %63 = ptrtoint ptr %protocol65 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %protocol65, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %64)
  %cond205 = icmp eq i32 %64, 48
  %65 = ptrtoint ptr %control62 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %control62, align 4
  br i1 %cond205, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %66)
  %cmp81 = icmp eq i32 %66, 2
  br i1 %cmp81, label %if.then92, label %sw.default.if.end98_crit_edge

sw.default.if.end98_crit_edge:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end98

sw.epilog:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %66)
  %cmp87 = icmp eq i32 %66, 1
  br i1 %cmp87, label %sw.bb3.i, label %sw.epilog.if.end98_crit_edge

sw.epilog.if.end98_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end98

if.then92:                                        ; preds = %sw.default
  %67 = zext i32 %64 to i64
  call void @__sanitizer_cov_trace_switch(i64 %67, ptr @__sancov_gen_cov_switch_values.313)
  switch i32 %64, label %if.then92.uac_processing_unit_bmControls.exit.i_crit_edge [
    i32 0, label %sw.default.thread.i
    i32 32, label %if.then92.return.sink.split.i.i_crit_edge
  ]

if.then92.return.sink.split.i.i_crit_edge:        ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #15
  br label %return.sink.split.i.i

if.then92.uac_processing_unit_bmControls.exit.i_crit_edge: ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #15
  br label %uac_processing_unit_bmControls.exit.i

sw.default.thread.i:                              ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #15
  %68 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %bNrInPins, align 1
  %conv.i.i = zext i8 %69 to i32
  %add.i.i = add nuw nsw i32 %conv.i.i, 4
  %arrayidx.i.i = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %add.i.i
  %70 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %arrayidx.i.i, align 1
  br label %return.sink.split.i.i

return.sink.split.i.i:                            ; preds = %sw.default.thread.i, %if.then92.return.sink.split.i.i_crit_edge
  %retval.0.i.ph26.i = phi i8 [ %71, %sw.default.thread.i ], [ 2, %if.then92.return.sink.split.i.i_crit_edge ]
  %.sink.i.i = phi i32 [ 5, %sw.default.thread.i ], [ 6, %if.then92.return.sink.split.i.i_crit_edge ]
  %72 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %bNrInPins, align 1
  %conv10.i.i = zext i8 %73 to i32
  %add11.i.i = add nuw nsw i32 %.sink.i.i, %conv10.i.i
  %arrayidx12.i.i = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %add11.i.i
  br label %uac_processing_unit_bmControls.exit.i

uac_processing_unit_bmControls.exit.i:            ; preds = %return.sink.split.i.i, %if.then92.uac_processing_unit_bmControls.exit.i_crit_edge
  %retval.0.i.ph27.i = phi i8 [ %retval.0.i.ph26.i, %return.sink.split.i.i ], [ 1, %if.then92.uac_processing_unit_bmControls.exit.i_crit_edge ]
  %retval.0.i13.i = phi ptr [ %arrayidx12.i.i, %return.sink.split.i.i ], [ null, %if.then92.uac_processing_unit_bmControls.exit.i_crit_edge ]
  %conv.i306 = zext i8 %retval.0.i.ph27.i to i32
  %add.ptr.i = getelementptr i8, ptr %retval.0.i13.i, i32 1
  %add.ptr2.i = getelementptr i8, ptr %add.ptr.i, i32 %conv.i306
  br label %uac_processing_unit_specific.exit

sw.bb3.i:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %74 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %bNrInPins, align 1
  %conv10.i17.i = zext i8 %75 to i32
  %add11.i18.i = add nuw nsw i32 %conv10.i17.i, 2
  %arrayidx12.i19.i = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %add11.i18.i
  %add.ptr6.i = getelementptr i8, ptr %arrayidx12.i19.i, i32 4
  br label %uac_processing_unit_specific.exit

uac_processing_unit_specific.exit:                ; preds = %sw.bb3.i, %uac_processing_unit_bmControls.exit.i
  %retval.0.i307 = phi ptr [ %add.ptr6.i, %sw.bb3.i ], [ %add.ptr2.i, %uac_processing_unit_bmControls.exit.i ]
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %76 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 1, ptr %min, align 8
  %77 = ptrtoint ptr %retval.0.i307 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %retval.0.i307, align 1
  %conv97 = zext i8 %78 to i32
  %max = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %79 = ptrtoint ptr %max to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %conv97, ptr %max, align 4
  %res = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 10
  %80 = ptrtoint ptr %res to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 1, ptr %res, align 8
  %initialized = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 15
  %81 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 1, ptr %initialized, align 8
  br label %sw.epilog108

if.end98:                                         ; preds = %sw.epilog.if.end98_crit_edge, %sw.default.if.end98_crit_edge
  %min_value = getelementptr inbounds %struct.procunit_value_info, ptr %valinfo.0389, i32 0, i32 3
  %82 = ptrtoint ptr %min_value to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %min_value, align 4
  tail call fastcc void @get_min_max_with_quirks(ptr noundef nonnull %call7.i.i, i32 noundef %83, ptr noundef null)
  br label %sw.epilog108

sw.bb100:                                         ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #15
  %min101 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %84 = ptrtoint ptr %min101 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 0, ptr %min101, align 8
  %max102 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %85 = ptrtoint ptr %max102 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 5, ptr %max102, align 4
  %res103 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 10
  %86 = ptrtoint ptr %res103 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 1, ptr %res103, align 8
  %initialized104 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 15
  %87 = ptrtoint ptr %initialized104 to i32
  call void @__asan_store1_noabort(i32 %87)
  store i8 1, ptr %initialized104, align 8
  br label %sw.epilog108

sw.default105:                                    ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #15
  %min_value106 = getelementptr inbounds %struct.procunit_value_info, ptr %valinfo.0389, i32 0, i32 3
  %88 = ptrtoint ptr %min_value106 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %min_value106, align 4
  tail call fastcc void @get_min_max_with_quirks(ptr noundef nonnull %call7.i.i, i32 noundef %89, ptr noundef null)
  br label %sw.epilog108

sw.epilog108:                                     ; preds = %sw.default105, %sw.bb100, %if.end98, %uac_processing_unit_specific.exit
  %90 = ptrtoint ptr %control62 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %control62, align 4
  %shl110 = shl i32 %91, 8
  %idx_off.i.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 3
  %92 = ptrtoint ptr %idx_off.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %idx_off.i.i, align 4
  %add.i.i308 = add i32 %93, %shl110
  %94 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %call7.i.i, align 8
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %95, i32 0, i32 6
  %96 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %cmp.i.i = icmp eq i32 %97, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %sw.epilog108
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = call fastcc i32 @get_ctl_value_v1(ptr noundef nonnull %call7.i.i, i32 noundef 129, i32 noundef %add.i.i308, ptr noundef nonnull %val) #13
  br label %get_cur_ctl_value.exit

cond.false.i.i:                                   ; preds = %sw.epilog108
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = call fastcc i32 @get_ctl_value_v2(ptr noundef nonnull %call7.i.i, i32 noundef 129, i32 noundef %add.i.i308, ptr noundef nonnull %val) #13
  br label %get_cur_ctl_value.exit

get_cur_ctl_value.exit:                           ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp112 = icmp slt i32 %cond.i.i, 0
  br i1 %cmp112, label %get_cur_ctl_value.exit.cleanup191.sink.split_crit_edge, label %if.end115

get_cur_ctl_value.exit.cleanup191.sink.split_crit_edge: ; preds = %get_cur_ctl_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191.sink.split

if.end115:                                        ; preds = %get_cur_ctl_value.exit
  %call116 = tail call ptr @snd_ctl_new1(ptr noundef nonnull @mixer_procunit_ctl, ptr noundef nonnull %call7.i.i) #13
  %tobool117.not = icmp eq ptr %call116, null
  br i1 %tobool117.not, label %if.end115.cleanup191.sink.split_crit_edge, label %if.end119

if.end115.cleanup191.sink.split_crit_edge:        ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191.sink.split

if.end119:                                        ; preds = %if.end115
  %private_free = getelementptr inbounds %struct.snd_kcontrol, ptr %call116, i32 0, i32 9
  %98 = ptrtoint ptr %private_free to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr @snd_usb_mixer_elem_free, ptr %private_free, align 4
  %name120 = getelementptr inbounds %struct.snd_kcontrol, ptr %call116, i32 0, i32 1, i32 4
  br i1 %tobool.not.i297359364, label %if.end119.if.else124_crit_edge, label %lor.lhs.false.i312

if.end119.if.else124_crit_edge:                   ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else124

lor.lhs.false.i312:                               ; preds = %if.end119
  %name.i310 = getelementptr inbounds %struct.usbmix_name_map, ptr %retval.0.i296358365, i32 0, i32 1
  %99 = ptrtoint ptr %name.i310 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %name.i310, align 4
  %tobool1.not.i311 = icmp eq ptr %100, null
  br i1 %tobool1.not.i311, label %lor.lhs.false.i312.if.else124_crit_edge, label %if.end.i

lor.lhs.false.i312.if.else124_crit_edge:          ; preds = %lor.lhs.false.i312
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else124

if.end.i:                                         ; preds = %lor.lhs.false.i312
  %call.i = tail call i32 @strscpy(ptr noundef %name120, ptr noundef nonnull %100, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool122.not = icmp eq i32 %call.i, 0
  br i1 %tobool122.not, label %if.end.i.if.else124_crit_edge, label %if.end.i.if.end161_crit_edge

if.end.i.if.end161_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161

if.end.i.if.else124_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else124

if.else124:                                       ; preds = %if.end.i.if.else124_crit_edge, %lor.lhs.false.i312.if.else124_crit_edge, %if.end119.if.else124_crit_edge
  %101 = ptrtoint ptr %name125 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %name125, align 4
  %tobool126.not = icmp eq ptr %102, null
  br i1 %tobool126.not, label %if.else133, label %if.else124.if.end161.sink.split_crit_edge

if.else124.if.end161.sink.split_crit_edge:        ; preds = %if.else124
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161.sink.split

if.else133:                                       ; preds = %if.else124
  %103 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %mixer, align 4
  %protocol137 = getelementptr inbounds %struct.usb_mixer_interface, ptr %104, i32 0, i32 6
  %105 = ptrtoint ptr %protocol137 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %protocol137, align 4
  br i1 %extension_unit, label %if.then135, label %if.else140

if.then135:                                       ; preds = %if.else133
  %107 = zext i32 %106 to i64
  call void @__sanitizer_cov_trace_switch(i64 %107, ptr @__sancov_gen_cov_switch_values.314)
  switch i32 %106, label %if.then135.if.end145_crit_edge [
    i32 0, label %if.then135.if.end145.sink.split.sink.split_crit_edge
    i32 48, label %if.then135.if.end161.sink.split_crit_edge
    i32 32, label %if.then135.if.end145.sink.split_crit_edge
  ]

if.then135.if.end145.sink.split_crit_edge:        ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145.sink.split

if.then135.if.end161.sink.split_crit_edge:        ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161.sink.split

if.then135.if.end145.sink.split.sink.split_crit_edge: ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145.sink.split.sink.split

if.then135.if.end145_crit_edge:                   ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145

if.else140:                                       ; preds = %if.else133
  %108 = zext i32 %106 to i64
  call void @__sanitizer_cov_trace_switch(i64 %108, ptr @__sancov_gen_cov_switch_values.315)
  switch i32 %106, label %if.else140.if.end145_crit_edge [
    i32 0, label %if.else140.if.end145.sink.split.sink.split_crit_edge
    i32 32, label %if.else140.if.end145.sink.split_crit_edge
    i32 48, label %if.else140.if.end161.sink.split_crit_edge
  ]

if.else140.if.end161.sink.split_crit_edge:        ; preds = %if.else140
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161.sink.split

if.else140.if.end145.sink.split_crit_edge:        ; preds = %if.else140
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145.sink.split

if.else140.if.end145.sink.split.sink.split_crit_edge: ; preds = %if.else140
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145.sink.split.sink.split

if.else140.if.end145_crit_edge:                   ; preds = %if.else140
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145

if.end145.sink.split.sink.split:                  ; preds = %if.else140.if.end145.sink.split.sink.split_crit_edge, %if.then135.if.end145.sink.split.sink.split_crit_edge
  %109 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %bNrInPins, align 1
  %conv.i.i331 = zext i8 %110 to i32
  %add.i.i332 = add nuw nsw i32 %conv.i.i331, 4
  %arrayidx.i.i333 = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %add.i.i332
  %111 = ptrtoint ptr %arrayidx.i.i333 to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %arrayidx.i.i333, align 1
  br label %if.end145.sink.split

if.end145.sink.split:                             ; preds = %if.end145.sink.split.sink.split, %if.else140.if.end145.sink.split_crit_edge, %if.then135.if.end145.sink.split_crit_edge
  %.sink.i.i336.sink = phi i32 [ 6, %if.then135.if.end145.sink.split_crit_edge ], [ 6, %if.else140.if.end145.sink.split_crit_edge ], [ 5, %if.end145.sink.split.sink.split ]
  %retval.0.i.ph12.i342.sink.ph = phi i8 [ 1, %if.then135.if.end145.sink.split_crit_edge ], [ 2, %if.else140.if.end145.sink.split_crit_edge ], [ %112, %if.end145.sink.split.sink.split ]
  %113 = ptrtoint ptr %bNrInPins to i32
  call void @__asan_load1_noabort(i32 %113)
  %114 = load i8, ptr %bNrInPins, align 1
  %conv10.i.i338 = zext i8 %114 to i32
  %add11.i.i339 = add nuw nsw i32 %.sink.i.i336.sink, %conv10.i.i338
  %arrayidx12.i.i340 = getelementptr %struct.uac_processing_unit_descriptor, ptr %raw_desc, i32 0, i32 6, i32 %add11.i.i339
  br label %if.end145

if.end145:                                        ; preds = %if.end145.sink.split, %if.else140.if.end145_crit_edge, %if.then135.if.end145_crit_edge
  %retval.0.i.ph12.i342.sink = phi i8 [ 1, %if.then135.if.end145_crit_edge ], [ 1, %if.else140.if.end145_crit_edge ], [ %retval.0.i.ph12.i342.sink.ph, %if.end145.sink.split ]
  %retval.0.i6.i343.sink = phi ptr [ null, %if.then135.if.end145_crit_edge ], [ null, %if.else140.if.end145_crit_edge ], [ %arrayidx12.i.i340, %if.end145.sink.split ]
  %conv.i344 = zext i8 %retval.0.i.ph12.i342.sink to i32
  %add.ptr.i345 = getelementptr i8, ptr %retval.0.i6.i343.sink, i32 %conv.i344
  %115 = ptrtoint ptr %add.ptr.i345 to i32
  call void @__asan_load1_noabort(i32 %115)
  %nameid.0.in = load i8, ptr %add.ptr.i345, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %nameid.0.in)
  %tobool146.not = icmp eq i8 %nameid.0.in, 0
  br i1 %tobool146.not, label %if.end145.if.end161.sink.split_crit_edge, label %if.then147

if.end145.if.end161.sink.split_crit_edge:         ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161.sink.split

if.then147:                                       ; preds = %if.end145
  %nameid.0 = zext i8 %nameid.0.in to i32
  %116 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %state, align 4
  %dev.i = getelementptr inbounds %struct.snd_usb_audio, ptr %117, i32 0, i32 1
  %118 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %dev.i, align 4
  %call.i348 = tail call i32 @usb_string(ptr noundef %119, i32 noundef %nameid.0, ptr noundef %name120, i32 noundef 43) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i348)
  %cmp.i349 = icmp slt i32 %call.i348, 0
  br i1 %cmp.i349, label %if.then147.if.end161.sink.split_crit_edge, label %if.end152

if.then147.if.end161.sink.split_crit_edge:        ; preds = %if.then147
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161.sink.split

if.end152:                                        ; preds = %if.then147
  %arrayidx.i = getelementptr i8, ptr %name120, i32 %call.i348
  %120 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %120)
  store i8 0, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i348)
  %tobool153.not = icmp eq i32 %call.i348, 0
  br i1 %tobool153.not, label %if.end152.if.end161.sink.split_crit_edge, label %if.end152.if.end161_crit_edge

if.end152.if.end161_crit_edge:                    ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161

if.end152.if.end161.sink.split_crit_edge:         ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end161.sink.split

if.end161.sink.split:                             ; preds = %if.end152.if.end161.sink.split_crit_edge, %if.then147.if.end161.sink.split_crit_edge, %if.end145.if.end161.sink.split_crit_edge, %if.else140.if.end161.sink.split_crit_edge, %if.then135.if.end161.sink.split_crit_edge, %if.else124.if.end161.sink.split_crit_edge
  %.sink = phi ptr [ %102, %if.else124.if.end161.sink.split_crit_edge ], [ @.str.237, %if.else140.if.end161.sink.split_crit_edge ], [ @.str.236, %if.then135.if.end161.sink.split_crit_edge ], [ %cond, %if.then147.if.end161.sink.split_crit_edge ], [ %cond, %if.end145.if.end161.sink.split_crit_edge ], [ %cond, %if.end152.if.end161.sink.split_crit_edge ]
  %call132 = tail call i32 @strscpy(ptr noundef %name120, ptr noundef nonnull %.sink, i32 noundef 44) #13
  br label %if.end161

if.end161:                                        ; preds = %if.end161.sink.split, %if.end152.if.end161_crit_edge, %if.end.i.if.end161_crit_edge
  %call.i353 = tail call i32 @strlcat(ptr noundef %name120, ptr noundef nonnull @.str.238, i32 noundef 44) #13
  %suffix = getelementptr inbounds %struct.procunit_value_info, ptr %valinfo.0389, i32 0, i32 1
  %121 = ptrtoint ptr %suffix to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %suffix, align 4
  %call.i355 = tail call i32 @strlcat(ptr noundef %name120, ptr noundef %122, i32 noundef 44) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @build_audio_procunit.__UNIQUE_ID_ddebug248, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@build_audio_procunit, %if.then169)) #13
          to label %do.end [label %if.then169], !srcloc !716

if.then169:                                       ; preds = %if.end161
  call void @__sanitizer_cov_trace_pc() #15
  %123 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %state, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %dev, align 4
  %dev171 = getelementptr inbounds %struct.usb_device, ptr %126, i32 0, i32 15
  %127 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %id.i, align 4
  %129 = ptrtoint ptr %channels to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %channels, align 8
  %min178 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 8
  %131 = ptrtoint ptr %min178 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %min178, align 8
  %max179 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %call7.i.i, i32 0, i32 9
  %133 = ptrtoint ptr %max179 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %max179, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @build_audio_procunit.__UNIQUE_ID_ddebug248, ptr noundef %dev171, ptr noundef nonnull @.str.240, i32 noundef %128, ptr noundef %name120, i32 noundef %130, i32 noundef %132, i32 noundef %134) #13
  br label %do.end

do.end:                                           ; preds = %if.then169, %if.end161
  %call182 = tail call i32 @snd_usb_mixer_add_list(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call116, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call182)
  %cmp183 = icmp slt i32 %call182, 0
  br i1 %cmp183, label %do.end.cleanup191_crit_edge, label %do.end.for.inc188_crit_edge

do.end.for.inc188_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc188

do.end.cleanup191_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191

for.inc188:                                       ; preds = %do.end.for.inc188_crit_edge, %check_ignored_ctl.exit.for.inc188_crit_edge, %if.else.for.inc188_crit_edge, %if.then31.for.inc188_crit_edge
  %incdec.ptr189 = getelementptr %struct.procunit_value_info, ptr %valinfo.0389, i32 1
  %135 = ptrtoint ptr %incdec.ptr189 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %incdec.ptr189, align 4
  %tobool24.not = icmp eq i32 %136, 0
  br i1 %tobool24.not, label %for.inc188.cleanup191_crit_edge, label %for.inc188.for.body25_crit_edge

for.inc188.for.body25_crit_edge:                  ; preds = %for.inc188
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body25

for.inc188.cleanup191_crit_edge:                  ; preds = %for.inc188
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup191

cleanup191.sink.split:                            ; preds = %if.end115.cleanup191.sink.split_crit_edge, %get_cur_ctl_value.exit.cleanup191.sink.split_crit_edge
  %retval.2.ph = phi i32 [ -22, %get_cur_ctl_value.exit.cleanup191.sink.split_crit_edge ], [ -12, %if.end115.cleanup191.sink.split_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup191

cleanup191:                                       ; preds = %cleanup191.sink.split, %for.inc188.cleanup191_crit_edge, %do.end.cleanup191_crit_edge, %if.end55.cleanup191_crit_edge, %if.end22.cleanup191_crit_edge, %for.body.cleanup191_crit_edge
  %retval.2 = phi i32 [ 0, %if.end22.cleanup191_crit_edge ], [ %retval.2.ph, %cleanup191.sink.split ], [ %call182, %do.end.cleanup191_crit_edge ], [ -12, %if.end55.cleanup191_crit_edge ], [ 0, %for.inc188.cleanup191_crit_edge ], [ %call, %for.body.cleanup191_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_procunit_get(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef writeonly %ucontrol) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #13
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !719
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %control, align 4
  %shl = shl i32 %4, 8
  %idx_off.i.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %idx_off.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %idx_off.i.i, align 4
  %add.i.i = add i32 %6, %shl
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = call fastcc i32 @get_ctl_value_v1(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %val) #13
  br label %get_cur_ctl_value.exit

cond.false.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = call fastcc i32 @get_ctl_value_v2(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %val) #13
  br label %get_cur_ctl_value.exit

get_cur_ctl_value.exit:                           ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp = icmp slt i32 %cond.i.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %get_cur_ctl_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  %min = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %11 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %min, align 4
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %13 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %value, align 8
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not = icmp eq i32 %17, 0
  %spec.select = select i1 %tobool.not, i32 %cond.i.i, i32 0
  br label %cleanup

if.end:                                           ; preds = %get_cur_ctl_value.exit
  %18 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %val, align 4
  %res.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %res.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i = icmp eq i32 %21, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.if.end.i_crit_edge

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %22 = ptrtoint ptr %res.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %res.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end.if.end.i_crit_edge
  %min.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %23 = ptrtoint ptr %min.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %min.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %24)
  %cmp.i = icmp slt i32 %19, %24
  br i1 %cmp.i, label %if.end.i.get_relative_value.exit_crit_edge, label %if.else.i

if.end.i.get_relative_value.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %get_relative_value.exit

if.else.i:                                        ; preds = %if.end.i
  %max.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %25 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %max.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %19)
  %cmp3.not.i = icmp sgt i32 %26, %19
  br i1 %cmp3.not.i, label %if.else10.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  %27 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %res.i, align 4
  %sub.i = xor i32 %24, -1
  %add.i = add i32 %26, %sub.i
  %sub8.i = add i32 %add.i, %28
  %div.i = sdiv i32 %sub8.i, %28
  br label %get_relative_value.exit

if.else10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub12.i = sub i32 %19, %24
  %29 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %res.i, align 4
  %div14.i = sdiv i32 %sub12.i, %30
  br label %get_relative_value.exit

get_relative_value.exit:                          ; preds = %if.else10.i, %if.then4.i, %if.end.i.get_relative_value.exit_crit_edge
  %retval.0.i = phi i32 [ %div.i, %if.then4.i ], [ %div14.i, %if.else10.i ], [ 0, %if.end.i.get_relative_value.exit_crit_edge ]
  %value2 = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %31 = ptrtoint ptr %value2 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %retval.0.i, ptr %value2, align 8
  br label %cleanup

cleanup:                                          ; preds = %get_relative_value.exit, %if.then
  %retval.0 = phi i32 [ %spec.select, %if.then ], [ 0, %get_relative_value.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mixer_ctl_procunit_put(ptr nocapture noundef readonly %kcontrol, ptr nocapture noundef readonly %ucontrol) #0 align 64 {
entry:
  %oval = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.snd_kcontrol, ptr %kcontrol, i32 0, i32 8
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %oval) #13
  %2 = ptrtoint ptr %oval to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %oval, align 4, !annotation !719
  %control = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %control, align 4
  %shl = shl i32 %4, 8
  %idx_off.i.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %idx_off.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %idx_off.i.i, align 4
  %add.i.i = add i32 %6, %shl
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %protocol.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i = call fastcc i32 @get_ctl_value_v1(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %oval) #13
  br label %get_cur_ctl_value.exit

cond.false.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i.i = call fastcc i32 @get_ctl_value_v2(ptr noundef %1, i32 noundef 129, i32 noundef %add.i.i, ptr noundef nonnull %oval) #13
  br label %get_cur_ctl_value.exit

get_cur_ctl_value.exit:                           ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call1.i.i, %cond.false.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i)
  %cmp = icmp slt i32 %cond.i.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %get_cur_ctl_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %1, align 4
  %ignore_ctl_error = getelementptr inbounds %struct.usb_mixer_interface, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %ignore_ctl_error to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ignore_ctl_error, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  %spec.select = select i1 %tobool.not, i32 %cond.i.i, i32 0
  br label %cleanup

if.end:                                           ; preds = %get_cur_ctl_value.exit
  %value = getelementptr inbounds %struct.snd_ctl_elem_value, ptr %ucontrol, i32 0, i32 2
  %15 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i = icmp slt i32 %16, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %min.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %17 = ptrtoint ptr %min.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %min.i, align 4
  br label %get_abs_value.exit

if.end.i:                                         ; preds = %if.end
  %res.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 10
  %19 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %res.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.then1.i, label %if.end.i.if.end3.i_crit_edge

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %21 = ptrtoint ptr %res.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %res.i, align 4
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then1.i, %if.end.i.if.end3.i_crit_edge
  %22 = ptrtoint ptr %res.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %res.i, align 4
  %mul.i = mul i32 %23, %16
  %min5.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 8
  %24 = ptrtoint ptr %min5.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %min5.i, align 4
  %add.i = add i32 %mul.i, %25
  %max.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %1, i32 0, i32 9
  %26 = ptrtoint ptr %max.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %max.i, align 4
  %28 = tail call i32 @llvm.smin.i32(i32 %add.i, i32 %27) #13
  br label %get_abs_value.exit

get_abs_value.exit:                               ; preds = %if.end3.i, %if.then.i
  %retval.0.i = phi i32 [ %18, %if.then.i ], [ %28, %if.end3.i ]
  %29 = ptrtoint ptr %oval to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %oval, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %30)
  %cmp2.not = icmp eq i32 %retval.0.i, %30
  br i1 %cmp2.not, label %get_abs_value.exit.cleanup_crit_edge, label %if.then3

get_abs_value.exit.cleanup_crit_edge:             ; preds = %get_abs_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then3:                                         ; preds = %get_abs_value.exit
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %control to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %control, align 4
  %shl5 = shl i32 %32, 8
  %call.i = tail call i32 @snd_usb_mixer_set_ctl_value(ptr noundef %1, i32 noundef 1, i32 noundef %shl5, i32 noundef %retval.0.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %get_abs_value.exit.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %spec.select, %if.then ], [ 1, %if.then3 ], [ 0, %get_abs_value.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %oval) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @usb_alloc_urb(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @snd_usb_mixer_interrupt(ptr noundef %urb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %context = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 27
  %0 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %context, align 4
  %actual_length = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 20
  %2 = ptrtoint ptr %actual_length to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %actual_length, align 4
  %status = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 12
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %status, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.316)
  switch i32 %5, label %entry.if.then57_crit_edge [
    i32 0, label %if.end
    i32 -2, label %entry.if.end61_crit_edge
    i32 -104, label %entry.if.end61_crit_edge110
    i32 -108, label %entry.if.end61_crit_edge111
  ]

entry.if.end61_crit_edge111:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61

entry.if.end61_crit_edge110:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61

entry.if.end61_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61

entry.if.then57_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then57

if.end:                                           ; preds = %entry
  %protocol = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 6
  %7 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp1 = icmp eq i32 %8, 0
  br i1 %cmp1, label %if.then2, label %if.else27

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp497 = icmp ugt i32 %3, 1
  br i1 %cmp497, label %do.body.lr.ph, label %if.then2.if.then57_crit_edge

if.then2.if.then57_crit_edge:                     ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then57

do.body.lr.ph:                                    ; preds = %if.then2
  %transfer_buffer = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 14
  %9 = ptrtoint ptr %transfer_buffer to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %transfer_buffer, align 4
  %dev = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 8
  %connector_map.i.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 7
  %id_elems.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %1, i32 0, i32 5
  br label %do.body

do.body:                                          ; preds = %for.inc.do.body_crit_edge, %do.body.lr.ph
  %len.0100 = phi i32 [ %3, %do.body.lr.ph ], [ %sub, %for.inc.do.body_crit_edge ]
  %status3.098 = phi ptr [ %10, %do.body.lr.ph ], [ %incdec.ptr, %for.inc.do.body_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_interrupt.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_interrupt, %if.then7)) #13
          to label %do.end [label %if.then7], !srcloc !716

if.then7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev, align 4
  %dev8 = getelementptr inbounds %struct.usb_device, ptr %12, i32 0, i32 15
  %13 = ptrtoint ptr %status3.098 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %status3.098, align 1
  %conv = zext i8 %14 to i32
  %bOriginator = getelementptr inbounds %struct.uac1_status_word, ptr %status3.098, i32 0, i32 1
  %15 = ptrtoint ptr %bOriginator to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %bOriginator, align 1
  %conv9 = zext i8 %16 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_interrupt.__UNIQUE_ID_ddebug254, ptr noundef %dev8, ptr noundef nonnull @.str.269, i32 noundef %conv, i32 noundef %conv9) #13
  br label %do.end

do.end:                                           ; preds = %if.then7, %do.body
  %17 = ptrtoint ptr %status3.098 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %status3.098, align 1
  %conv12 = zext i8 %18 to i32
  %and = and i32 %conv12, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp13.not = icmp eq i32 %and, 0
  br i1 %cmp13.not, label %if.end16, label %do.end.for.inc_crit_edge

do.end.for.inc_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end16:                                         ; preds = %do.end
  %and19 = and i32 %conv12, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  %bOriginator24 = getelementptr inbounds %struct.uac1_status_word, ptr %status3.098, i32 0, i32 1
  %19 = ptrtoint ptr %bOriginator24 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %bOriginator24, align 1
  br i1 %tobool20.not, label %if.else, label %if.then21

if.then21:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  %conv23 = zext i8 %20 to i32
  tail call void @snd_usb_mixer_rc_memory_change(ptr noundef %1, i32 noundef %conv23) #13
  br label %for.inc

if.else:                                          ; preds = %if.end16
  %21 = ptrtoint ptr %connector_map.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %connector_map.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %if.else.delegate_notify.exit.i_crit_edge, label %for.cond.preheader.i.i

if.else.delegate_notify.exit.i_crit_edge:         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit.i

for.cond.preheader.i.i:                           ; preds = %if.else
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %22, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool1.not36.i.i = icmp eq i8 %24, 0
  br i1 %tobool1.not36.i.i, label %for.cond.preheader.i.i.delegate_notify.exit.i_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.delegate_notify.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %25 = phi i8 [ %29, %for.inc.i.i.for.body.i.i_crit_edge ], [ %24, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %map.037.i.i = phi ptr [ %incdec.ptr.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %22, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp1(i8 %25, i8 %20)
  %cmp.i.i = icmp eq i8 %25, %20
  br i1 %cmp.i.i, label %if.then4.i.i, label %for.inc.i.i

if.then4.i.i:                                     ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %delegated_id.i.i = getelementptr inbounds %struct.usbmix_connector_map, ptr %map.037.i.i, i32 0, i32 1
  %26 = ptrtoint ptr %delegated_id.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %delegated_id.i.i, align 1
  br label %delegate_notify.exit.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %incdec.ptr.i.i = getelementptr %struct.usbmix_connector_map, ptr %map.037.i.i, i32 1
  %28 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %incdec.ptr.i.i, align 1
  %tobool1.not.i.i = icmp eq i8 %29, 0
  br i1 %tobool1.not.i.i, label %for.inc.i.i.delegate_notify.exit.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

for.inc.i.i.delegate_notify.exit.i_crit_edge:     ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit.i

delegate_notify.exit.i:                           ; preds = %for.inc.i.i.delegate_notify.exit.i_crit_edge, %if.then4.i.i, %for.cond.preheader.i.i.delegate_notify.exit.i_crit_edge, %if.else.delegate_notify.exit.i_crit_edge
  %retval.0.i.i.in = phi i8 [ %27, %if.then4.i.i ], [ %20, %if.else.delegate_notify.exit.i_crit_edge ], [ %20, %for.cond.preheader.i.i.delegate_notify.exit.i_crit_edge ], [ %20, %for.inc.i.i.delegate_notify.exit.i_crit_edge ]
  %retval.0.i.i = zext i8 %retval.0.i.i.in to i32
  %30 = ptrtoint ptr %id_elems.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %id_elems.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %31, i32 %retval.0.i.i
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %list.010.i = load ptr, ptr %arrayidx.i, align 4
  %tobool.not11.i = icmp eq ptr %list.010.i, null
  br i1 %tobool.not11.i, label %delegate_notify.exit.i.for.inc_crit_edge, label %delegate_notify.exit.i.for.body.i_crit_edge

delegate_notify.exit.i.for.body.i_crit_edge:      ; preds = %delegate_notify.exit.i
  br label %for.body.i

delegate_notify.exit.i.for.inc_crit_edge:         ; preds = %delegate_notify.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %delegate_notify.exit.i.for.body.i_crit_edge
  %list.012.i = phi ptr [ %list.0.i, %cleanup.i.for.body.i_crit_edge ], [ %list.010.i, %delegate_notify.exit.i.for.body.i_crit_edge ]
  %is_std_info.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.012.i, i32 0, i32 4
  %33 = ptrtoint ptr %is_std_info.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %is_std_info.i, align 4, !range !718
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool1.not.i = icmp eq i8 %34, 0
  br i1 %tobool1.not.i, label %for.body.i.cleanup.i_crit_edge, label %if.end.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.i

if.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %cached.i = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list.012.i, i32 0, i32 13
  %35 = ptrtoint ptr %cached.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %cached.i, align 4
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 4
  %card.i = getelementptr inbounds %struct.snd_usb_audio, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %card.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %card.i, align 4
  %kctl.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.012.i, i32 0, i32 2
  %40 = ptrtoint ptr %kctl.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %kctl.i, align 4
  %id.i = getelementptr inbounds %struct.snd_kcontrol, ptr %41, i32 0, i32 1
  tail call void @snd_ctl_notify(ptr noundef %39, i32 noundef 1, ptr noundef %id.i) #13
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end.i, %for.body.i.cleanup.i_crit_edge
  %next_id_elem.i = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.012.i, i32 0, i32 1
  %42 = ptrtoint ptr %next_id_elem.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %list.0.i = load ptr, ptr %next_id_elem.i, align 4
  %tobool.not.i = icmp eq ptr %list.0.i, null
  br i1 %tobool.not.i, label %cleanup.i.for.inc_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

cleanup.i.for.inc_crit_edge:                      ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

for.inc:                                          ; preds = %cleanup.i.for.inc_crit_edge, %delegate_notify.exit.i.for.inc_crit_edge, %if.then21, %do.end.for.inc_crit_edge
  %sub = add i32 %len.0100, -2
  %incdec.ptr = getelementptr %struct.uac1_status_word, ptr %status3.098, i32 1
  %cmp4 = icmp ugt i32 %sub, 1
  br i1 %cmp4, label %for.inc.do.body_crit_edge, label %for.inc.if.then57_crit_edge

for.inc.if.then57_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then57

for.inc.do.body_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

if.else27:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %3)
  %cmp3093 = icmp ugt i32 %3, 5
  br i1 %cmp3093, label %for.body32.preheader, label %if.else27.if.then57_crit_edge

if.else27.if.then57_crit_edge:                    ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then57

for.body32.preheader:                             ; preds = %if.else27
  %transfer_buffer28 = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 14
  %43 = ptrtoint ptr %transfer_buffer28 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %transfer_buffer28, align 4
  br label %for.body32

for.body32:                                       ; preds = %for.inc45.for.body32_crit_edge, %for.body32.preheader
  %msg.095 = phi ptr [ %incdec.ptr47, %for.inc45.for.body32_crit_edge ], [ %44, %for.body32.preheader ]
  %len.194 = phi i32 [ %sub46, %for.inc45.for.body32_crit_edge ], [ %3, %for.body32.preheader ]
  %45 = ptrtoint ptr %msg.095 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %msg.095, align 1
  %47 = and i8 %46, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %if.end41, label %for.body32.for.inc45_crit_edge

for.body32.for.inc45_crit_edge:                   ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc45

if.end41:                                         ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #15
  %bAttribute = getelementptr inbounds %struct.uac2_interrupt_data_msg, ptr %msg.095, i32 0, i32 1
  %49 = ptrtoint ptr %bAttribute to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %bAttribute, align 1
  %conv42 = zext i8 %50 to i32
  %wValue = getelementptr inbounds %struct.uac2_interrupt_data_msg, ptr %msg.095, i32 0, i32 2
  %51 = ptrtoint ptr %wValue to i32
  call void @__asan_loadN_noabort(i32 %51, i32 2)
  %52 = load i16, ptr %wValue, align 1
  %53 = tail call i16 @llvm.bswap.i16(i16 %52)
  %conv43 = zext i16 %53 to i32
  %wIndex = getelementptr inbounds %struct.uac2_interrupt_data_msg, ptr %msg.095, i32 0, i32 3
  %54 = ptrtoint ptr %wIndex to i32
  call void @__asan_loadN_noabort(i32 %54, i32 2)
  %55 = load i16, ptr %wIndex, align 1
  %56 = tail call i16 @llvm.bswap.i16(i16 %55)
  %conv44 = zext i16 %56 to i32
  tail call fastcc void @snd_usb_mixer_interrupt_v2(ptr noundef %1, i32 noundef %conv42, i32 noundef %conv43, i32 noundef %conv44)
  br label %for.inc45

for.inc45:                                        ; preds = %if.end41, %for.body32.for.inc45_crit_edge
  %sub46 = add i32 %len.194, -6
  %incdec.ptr47 = getelementptr %struct.uac2_interrupt_data_msg, ptr %msg.095, i32 1
  %cmp30 = icmp ugt i32 %sub46, 5
  br i1 %cmp30, label %for.inc45.for.body32_crit_edge, label %for.inc45.if.then57_crit_edge

for.inc45.if.then57_crit_edge:                    ; preds = %for.inc45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then57

for.inc45.for.body32_crit_edge:                   ; preds = %for.inc45
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body32

if.then57:                                        ; preds = %for.inc45.if.then57_crit_edge, %if.else27.if.then57_crit_edge, %for.inc.if.then57_crit_edge, %if.then2.if.then57_crit_edge, %entry.if.then57_crit_edge
  %57 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %1, align 4
  %dev58 = getelementptr inbounds %struct.snd_usb_audio, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %dev58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %dev58, align 4
  %dev59 = getelementptr inbounds %struct.urb, ptr %urb, i32 0, i32 8
  %61 = ptrtoint ptr %dev59 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %60, ptr %dev59, align 4
  %call60 = tail call i32 @usb_submit_urb(ptr noundef %urb, i32 noundef 2592) #13
  br label %if.end61

if.end61:                                         ; preds = %if.then57, %entry.if.end61_crit_edge, %entry.if.end61_crit_edge110, %entry.if.end61_crit_edge111
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_submit_urb(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @snd_usb_mixer_rc_memory_change(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @snd_usb_mixer_interrupt_v2(ptr nocapture noundef readonly %mixer, i32 noundef %attribute, i32 noundef %value, i32 noundef %index) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = lshr i32 %value, 8
  %conv3 = trunc i32 %0 to i8
  %conv5 = trunc i32 %value to i8
  %conv6 = and i32 %value, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv6)
  %cmp.not = icmp eq i32 %conv6, 0
  br i1 %cmp.not, label %if.end13, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug252, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_interrupt_v2, %if.then10)) #13
          to label %cleanup73 [label %if.then10], !srcloc !716

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %1 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mixer, align 4
  %dev = getelementptr inbounds %struct.snd_usb_audio, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev, align 4
  %dev11 = getelementptr inbounds %struct.usb_device, ptr %4, i32 0, i32 15
  %conv12 = and i32 %value, 255
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug252, ptr noundef %dev11, ptr noundef nonnull @.str.271, ptr noundef nonnull @.str.270, i32 noundef %conv12) #13
  br label %cleanup73

if.end13:                                         ; preds = %entry
  %5 = lshr i32 %index, 8
  %conv14 = and i32 %5, 255
  %connector_map.i = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 7
  %6 = ptrtoint ptr %connector_map.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %connector_map.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end13.delegate_notify.exit_crit_edge, label %for.cond.preheader.i

if.end13.delegate_notify.exit_crit_edge:          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit

for.cond.preheader.i:                             ; preds = %if.end13
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool1.not36.i = icmp eq i8 %9, 0
  br i1 %tobool1.not36.i, label %for.cond.preheader.i.delegate_notify.exit_crit_edge, label %for.body.i.preheader

for.cond.preheader.i.delegate_notify.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %10 = trunc i32 %5 to i8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.i.preheader
  %11 = phi i8 [ %19, %for.inc.i.for.body.i_crit_edge ], [ %9, %for.body.i.preheader ]
  %map.037.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %7, %for.body.i.preheader ]
  call void @__sanitizer_cov_trace_cmp1(i8 %11, i8 %10)
  %cmp.i = icmp eq i8 %11, %10
  br i1 %cmp.i, label %if.then4.i, label %for.inc.i

if.then4.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %control6.i = getelementptr inbounds %struct.usbmix_connector_map, ptr %map.037.i, i32 0, i32 2
  %12 = ptrtoint ptr %control6.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %control6.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool8.not.i = icmp eq i8 %13, 0
  %spec.select = select i1 %tobool8.not.i, i8 %conv3, i8 %13
  %channel14.i = getelementptr inbounds %struct.usbmix_connector_map, ptr %map.037.i, i32 0, i32 3
  %14 = ptrtoint ptr %channel14.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %channel14.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool16.not.i = icmp eq i8 %15, 0
  %channel.0 = select i1 %tobool16.not.i, i8 %conv5, i8 %15
  %delegated_id.i = getelementptr inbounds %struct.usbmix_connector_map, ptr %map.037.i, i32 0, i32 1
  %16 = ptrtoint ptr %delegated_id.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %delegated_id.i, align 1
  %conv20.i = zext i8 %17 to i32
  br label %delegate_notify.exit

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr %struct.usbmix_connector_map, ptr %map.037.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %incdec.ptr.i, align 1
  %tobool1.not.i = icmp eq i8 %19, 0
  br i1 %tobool1.not.i, label %for.inc.i.delegate_notify.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.delegate_notify.exit_crit_edge:         ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %delegate_notify.exit

delegate_notify.exit:                             ; preds = %for.inc.i.delegate_notify.exit_crit_edge, %if.then4.i, %for.cond.preheader.i.delegate_notify.exit_crit_edge, %if.end13.delegate_notify.exit_crit_edge
  %control.1 = phi i8 [ %conv3, %if.end13.delegate_notify.exit_crit_edge ], [ %conv3, %for.cond.preheader.i.delegate_notify.exit_crit_edge ], [ %spec.select, %if.then4.i ], [ %conv3, %for.inc.i.delegate_notify.exit_crit_edge ]
  %channel.1 = phi i8 [ %conv5, %if.end13.delegate_notify.exit_crit_edge ], [ %conv5, %for.cond.preheader.i.delegate_notify.exit_crit_edge ], [ %channel.0, %if.then4.i ], [ %conv5, %for.inc.i.delegate_notify.exit_crit_edge ]
  %retval.0.i103 = phi i32 [ %conv14, %if.end13.delegate_notify.exit_crit_edge ], [ %conv14, %for.cond.preheader.i.delegate_notify.exit_crit_edge ], [ %conv20.i, %if.then4.i ], [ %conv14, %for.inc.i.delegate_notify.exit_crit_edge ]
  %id_elems = getelementptr inbounds %struct.usb_mixer_interface, ptr %mixer, i32 0, i32 5
  %20 = ptrtoint ptr %id_elems to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %id_elems, align 4
  %arrayidx = getelementptr ptr, ptr %21, i32 %retval.0.i103
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %list.0108 = load ptr, ptr %arrayidx, align 4
  %tobool17.not109 = icmp eq ptr %list.0108, null
  br i1 %tobool17.not109, label %delegate_notify.exit.cleanup73_crit_edge, label %delegate_notify.exit.for.body_crit_edge

delegate_notify.exit.for.body_crit_edge:          ; preds = %delegate_notify.exit
  br label %for.body

delegate_notify.exit.cleanup73_crit_edge:         ; preds = %delegate_notify.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup73

for.body:                                         ; preds = %for.body.for.body_crit_edge, %delegate_notify.exit.for.body_crit_edge
  %list.0111 = phi ptr [ %list.0, %for.body.for.body_crit_edge ], [ %list.0108, %delegate_notify.exit.for.body_crit_edge ]
  %count.0110 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %delegate_notify.exit.for.body_crit_edge ]
  %inc = add i32 %count.0110, 1
  %next_id_elem = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.0111, i32 0, i32 1
  %23 = ptrtoint ptr %next_id_elem to i32
  call void @__asan_load4_noabort(i32 %23)
  %list.0 = load ptr, ptr %next_id_elem, align 4
  %tobool17.not = icmp eq ptr %list.0, null
  br i1 %tobool17.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc)
  %cmp18 = icmp eq i32 %inc, 0
  br i1 %cmp18, label %for.end.cleanup73_crit_edge, label %for.cond25.preheader

for.end.cleanup73_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup73

for.cond25.preheader:                             ; preds = %for.end
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %list.1112 = load ptr, ptr %arrayidx, align 4
  %tobool26.not113 = icmp eq ptr %list.1112, null
  br i1 %tobool26.not113, label %for.cond25.preheader.cleanup73_crit_edge, label %for.body27.lr.ph

for.cond25.preheader.cleanup73_crit_edge:         ; preds = %for.cond25.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup73

for.body27.lr.ph:                                 ; preds = %for.cond25.preheader
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %inc)
  %cmp35 = icmp ugt i32 %inc, 1
  %conv38 = zext i8 %control.1 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %channel.1)
  %tobool43.not = icmp eq i8 %channel.1, 0
  %conv45 = zext i8 %channel.1 to i32
  %shl = shl nuw i32 1, %conv45
  %neg = xor i32 %shl, -1
  br label %for.body27

for.body27:                                       ; preds = %cleanup.for.body27_crit_edge, %for.body27.lr.ph
  %list.1114 = phi ptr [ %list.1112, %for.body27.lr.ph ], [ %list.1, %cleanup.for.body27_crit_edge ]
  %kctl = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.1114, i32 0, i32 2
  %25 = ptrtoint ptr %kctl to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %kctl, align 4
  %tobool28.not = icmp eq ptr %26, null
  br i1 %tobool28.not, label %for.body27.cleanup_crit_edge, label %if.end30

for.body27.cleanup_crit_edge:                     ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end30:                                         ; preds = %for.body27
  %is_std_info = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.1114, i32 0, i32 4
  %27 = ptrtoint ptr %is_std_info to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %is_std_info, align 4, !range !718
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool31.not = icmp eq i8 %28, 0
  br i1 %tobool31.not, label %if.end30.cleanup_crit_edge, label %if.end33

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end33:                                         ; preds = %if.end30
  br i1 %cmp35, label %land.lhs.true, label %if.end33.if.end42_crit_edge

if.end33.if.end42_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end42

land.lhs.true:                                    ; preds = %if.end33
  %control37 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list.1114, i32 0, i32 1
  %29 = ptrtoint ptr %control37 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %control37, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %conv38)
  %cmp39.not = icmp eq i32 %30, %conv38
  br i1 %cmp39.not, label %land.lhs.true.if.end42_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end42

if.end42:                                         ; preds = %land.lhs.true.if.end42_crit_edge, %if.end33.if.end42_crit_edge
  %31 = zext i32 %attribute to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.317)
  switch i32 %attribute, label %do.body51 [
    i32 1, label %sw.bb
    i32 2, label %if.end42.cleanup_crit_edge
    i32 3, label %if.end42.cleanup_crit_edge122
  ]

if.end42.cleanup_crit_edge122:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end42.cleanup_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.end42
  %cached47 = getelementptr inbounds %struct.usb_mixer_elem_info, ptr %list.1114, i32 0, i32 13
  br i1 %tobool43.not, label %sw.bb.if.end48_crit_edge, label %if.then44

sw.bb.if.end48_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.then44:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %cached47 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cached47, align 4
  %and46 = and i32 %33, %neg
  br label %if.end48

if.end48:                                         ; preds = %if.then44, %sw.bb.if.end48_crit_edge
  %.sink = phi i32 [ %and46, %if.then44 ], [ 0, %sw.bb.if.end48_crit_edge ]
  %34 = ptrtoint ptr %cached47 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %.sink, ptr %cached47, align 4
  %35 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %mixer, align 4
  %card = getelementptr inbounds %struct.snd_usb_audio, ptr %36, i32 0, i32 2
  %37 = ptrtoint ptr %card to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %card, align 4
  %39 = ptrtoint ptr %kctl to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %kctl, align 4
  %id = getelementptr inbounds %struct.snd_kcontrol, ptr %40, i32 0, i32 1
  tail call void @snd_ctl_notify(ptr noundef %38, i32 noundef 1, ptr noundef %id) #13
  br label %cleanup

do.body51:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@snd_usb_mixer_interrupt_v2, %if.then63)) #13
          to label %cleanup [label %if.then63], !srcloc !716

if.then63:                                        ; preds = %do.body51
  call void @__sanitizer_cov_trace_pc() #15
  %41 = ptrtoint ptr %mixer to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %mixer, align 4
  %dev65 = getelementptr inbounds %struct.snd_usb_audio, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %dev65 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dev65, align 4
  %dev66 = getelementptr inbounds %struct.usb_device, ptr %44, i32 0, i32 15
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug253, ptr noundef %dev66, ptr noundef nonnull @.str.272, i32 noundef %attribute) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then63, %do.body51, %if.end48, %if.end42.cleanup_crit_edge, %if.end42.cleanup_crit_edge122, %land.lhs.true.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %for.body27.cleanup_crit_edge
  %next_id_elem71 = getelementptr inbounds %struct.usb_mixer_elem_list, ptr %list.1114, i32 0, i32 1
  %45 = ptrtoint ptr %next_id_elem71 to i32
  call void @__asan_load4_noabort(i32 %45)
  %list.1 = load ptr, ptr %next_id_elem71, align 4
  %tobool26.not = icmp eq ptr %list.1, null
  br i1 %tobool26.not, label %cleanup.cleanup73_crit_edge, label %cleanup.for.body27_crit_edge

cleanup.for.body27_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body27

cleanup.cleanup73_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup73

cleanup73:                                        ; preds = %cleanup.cleanup73_crit_edge, %for.cond25.preheader.cleanup73_crit_edge, %for.end.cleanup73_crit_edge, %delegate_notify.exit.cleanup73_crit_edge, %if.then10, %do.body
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @snd_card_rw_proc_new(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_free_urb(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #13

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #14 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 360)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #14 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 360)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nounwind }
attributes #14 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #15 = { nomerge }
attributes #16 = { nounwind readnone }
attributes #17 = { nounwind allocsize(2) }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { cold nounwind }
attributes #20 = { nobuiltin nounwind }
attributes #21 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !8, !9, !10, !12, !13, !15, !16, !17, !19, !20, !21, !23, !25, !27, !29, !31, !32, !33, !35, !36, !38, !39, !41, !43, !45, !47, !49, !50, !51, !52, !53, !54, !56, !57, !58, !59, !61, !63, !65, !67, !69, !71, !73, !74, !75, !76, !78, !79, !80, !82, !84, !85, !86, !88, !89, !90, !92, !94, !95, !96, !98, !99, !100, !102, !104, !105, !106, !108, !109, !110, !111, !112, !114, !115, !116, !117, !119, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !169, !170, !171, !173, !174, !175, !177, !178, !179, !181, !182, !183, !184, !186, !188, !190, !192, !194, !196, !197, !199, !200, !201, !203, !204, !205, !207, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !324, !326, !328, !330, !332, !334, !336, !338, !339, !340, !342, !344, !345, !346, !347, !349, !351, !353, !355, !357, !359, !361, !363, !365, !367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !403, !405, !407, !409, !411, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !447, !449, !451, !453, !455, !457, !459, !461, !463, !465, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !487, !489, !491, !493, !495, !497, !498, !499, !500, !502, !503, !505, !506, !507, !509, !510, !511, !512, !514, !515, !516, !517, !519, !520, !521, !523, !525, !526, !528, !530, !532, !534, !536, !537, !538, !540, !542, !544, !546, !548, !549, !551, !553, !554, !555, !556, !558, !559, !560, !562, !564, !566, !568, !570, !572, !574, !575, !576, !578, !580, !582, !584, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !667, !668, !670, !671, !672, !674, !675, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !705}
!llvm.module.flags = !{!707, !708, !709, !710, !711, !712, !713, !714}
!llvm.ident = !{!715}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../sound/usb/mixer.c", i32 443, i32 4}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @.str.3, !1, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @snd_usb_get_cur_mix_value.__UNIQUE_ID_ddebug240, !1, !"__UNIQUE_ID_ddebug240", i1 false, i1 false}
!6 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../sound/usb/mixer.c", i32 474, i32 4}
!8 = !{ptr @.str.5, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug241, !7, !"__UNIQUE_ID_ddebug241", i1 false, i1 false}
!10 = !{ptr @.str.6, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../sound/usb/mixer.c", i32 504, i32 2}
!12 = !{ptr @snd_usb_mixer_set_ctl_value.__UNIQUE_ID_ddebug242, !11, !"__UNIQUE_ID_ddebug242", i1 false, i1 false}
!13 = !{ptr @.str.7, !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"../sound/usb/mixer.c", i32 528, i32 3}
!15 = !{ptr @.str.8, !14, !"<string literal>", i1 false, i1 false}
!16 = !{ptr @snd_usb_set_cur_mix_value.__UNIQUE_ID_ddebug243, !14, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!17 = !{ptr @.str.9, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../sound/usb/mixer.c", i32 600, i32 3}
!19 = !{ptr @.str.10, !18, !"<string literal>", i1 false, i1 false}
!20 = !{ptr @snd_usb_mixer_add_list.__UNIQUE_ID_ddebug244, !18, !"__UNIQUE_ID_ddebug244", i1 false, i1 false}
!21 = !{ptr @snd_usb_feature_unit_ctl, !22, !"snd_usb_feature_unit_ctl", i1 false, i1 false}
!22 = !{!"../sound/usb/mixer.c", i32 1599, i32 32}
!23 = !{ptr @snd_usb_create_mixer.dev_ops, !24, !"dev_ops", i1 false, i1 false}
!24 = !{!"../sound/usb/mixer.c", i32 3554, i32 37}
!25 = !{ptr @.str.11, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../sound/usb/mixer.c", i32 3560, i32 32}
!27 = !{ptr @.str.12, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../sound/usb/mixer.c", i32 3612, i32 36}
!29 = !{ptr @.str.13, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../sound/usb/mixer.c", i32 333, i32 2}
!31 = !{ptr @.str.14, !30, !"<string literal>", i1 false, i1 false}
!32 = !{ptr @get_ctl_value_v1.__UNIQUE_ID_ddebug238, !30, !"__UNIQUE_ID_ddebug238", i1 false, i1 false}
!33 = !{ptr @.str.15, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../sound/usb/mixer.c", i32 375, i32 3}
!35 = !{ptr @get_ctl_value_v2.__UNIQUE_ID_ddebug239, !34, !"__UNIQUE_ID_ddebug239", i1 false, i1 false}
!36 = distinct !{null, !37, !"__already_done", i1 false, i1 false}
!37 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!38 = distinct !{null, !37, !"<string literal>", i1 false, i1 false}
!39 = distinct !{null, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!41 = !{ptr @.str.18, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!43 = !{ptr @.str.19, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../sound/usb/mixer.c", i32 1558, i32 10}
!45 = !{ptr @usb_feature_unit_ctl, !46, !"usb_feature_unit_ctl", i1 false, i1 false}
!46 = !{!"../sound/usb/mixer.c", i32 1556, i32 38}
!47 = !{ptr @.str.20, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../sound/usb/mixer.c", i32 1256, i32 4}
!49 = !{ptr @.str.21, !48, !"<string literal>", i1 false, i1 false}
!50 = !{ptr @.str.22, !48, !"<string literal>", i1 false, i1 false}
!51 = !{ptr @.str.23, !48, !"<string literal>", i1 false, i1 false}
!52 = !{ptr @get_min_max_with_quirks._entry, !48, !"_entry", i1 false, i1 false}
!53 = !{ptr @get_min_max_with_quirks._entry_ptr, !48, !"_entry_ptr", i1 false, i1 false}
!54 = !{ptr @.str.25, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../sound/usb/mixer.c", i32 1340, i32 4}
!56 = !{ptr @.str.26, !55, !"<string literal>", i1 false, i1 false}
!57 = !{ptr @get_min_max_with_quirks._entry.24, !55, !"_entry", i1 false, i1 false}
!58 = !{ptr @get_min_max_with_quirks._entry_ptr.27, !55, !"_entry_ptr", i1 false, i1 false}
!59 = !{ptr @.str.28, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../sound/usb/mixer.c", i32 1090, i32 29}
!61 = !{ptr @.str.29, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../sound/usb/mixer.c", i32 1096, i32 29}
!63 = !{ptr @.str.30, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../sound/usb/mixer.c", i32 1097, i32 29}
!65 = !{ptr @.str.31, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../sound/usb/mixer.c", i32 1102, i32 29}
!67 = !{ptr @.str.32, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../sound/usb/mixer.c", i32 1108, i32 30}
!69 = !{ptr @.str.33, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../sound/usb/mixer.c", i32 1109, i32 27}
!71 = !{ptr @.str.34, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../sound/usb/mixer.c", i32 1119, i32 4}
!73 = !{ptr @.str.35, !72, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @volume_control_quirks._entry, !72, !"_entry", i1 false, i1 false}
!75 = !{ptr @volume_control_quirks._entry_ptr, !72, !"_entry_ptr", i1 false, i1 false}
!76 = !{ptr @.str.37, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../sound/usb/mixer.c", i32 1128, i32 4}
!78 = !{ptr @volume_control_quirks._entry.36, !77, !"_entry", i1 false, i1 false}
!79 = !{ptr @volume_control_quirks._entry_ptr.38, !77, !"_entry_ptr", i1 false, i1 false}
!80 = !{ptr @.str.39, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../sound/usb/mixer.c", i32 1137, i32 30}
!82 = !{ptr @.str.41, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../sound/usb/mixer.c", i32 1138, i32 4}
!84 = !{ptr @volume_control_quirks._entry.40, !83, !"_entry", i1 false, i1 false}
!85 = !{ptr @volume_control_quirks._entry_ptr.42, !83, !"_entry_ptr", i1 false, i1 false}
!86 = !{ptr @.str.44, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../sound/usb/mixer.c", i32 1155, i32 4}
!88 = !{ptr @volume_control_quirks._entry.43, !87, !"_entry", i1 false, i1 false}
!89 = !{ptr @volume_control_quirks._entry_ptr.45, !87, !"_entry_ptr", i1 false, i1 false}
!90 = !{ptr @.str.46, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../sound/usb/mixer.c", i32 1162, i32 30}
!92 = !{ptr @.str.48, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../sound/usb/mixer.c", i32 1163, i32 4}
!94 = !{ptr @volume_control_quirks._entry.47, !93, !"_entry", i1 false, i1 false}
!95 = !{ptr @volume_control_quirks._entry_ptr.49, !93, !"_entry_ptr", i1 false, i1 false}
!96 = !{ptr @.str.51, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../sound/usb/mixer.c", i32 1187, i32 4}
!98 = !{ptr @volume_control_quirks._entry.50, !97, !"_entry", i1 false, i1 false}
!99 = !{ptr @volume_control_quirks._entry_ptr.52, !97, !"_entry_ptr", i1 false, i1 false}
!100 = !{ptr @.str.53, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../sound/usb/mixer.c", i32 1194, i32 26}
!102 = !{ptr @.str.55, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../sound/usb/mixer.c", i32 1202, i32 4}
!104 = !{ptr @volume_control_quirks._entry.54, !103, !"_entry", i1 false, i1 false}
!105 = !{ptr @volume_control_quirks._entry_ptr.56, !103, !"_entry_ptr", i1 false, i1 false}
!106 = !{ptr @.str.57, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../sound/usb/mixer.c", i32 1221, i32 3}
!108 = !{ptr @.str.58, !107, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @.str.59, !107, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @init_cur_mix_raw._entry, !107, !"_entry", i1 false, i1 false}
!111 = !{ptr @init_cur_mix_raw._entry_ptr, !107, !"_entry_ptr", i1 false, i1 false}
!112 = !{ptr @.str.60, !113, !"<string literal>", i1 false, i1 false}
!113 = !{!"../sound/usb/mixer.c", i32 3107, i32 4}
!114 = !{ptr @.str.61, !113, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @snd_usb_mixer_controls_badd._entry, !113, !"_entry", i1 false, i1 false}
!116 = !{ptr @snd_usb_mixer_controls_badd._entry_ptr, !113, !"_entry_ptr", i1 false, i1 false}
!117 = !{ptr @.str.62, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../sound/usb/mixer.c", i32 3131, i32 2}
!119 = !{ptr @snd_usb_mixer_controls_badd.__UNIQUE_ID_ddebug251, !118, !"__UNIQUE_ID_ddebug251", i1 false, i1 false}
!120 = !{ptr @uac3_badd_usbmix_ctl_maps, !121, !"uac3_badd_usbmix_ctl_maps", i1 false, i1 false}
!121 = !{!"../sound/usb/mixer_maps.c", i32 648, i32 36}
!122 = !{ptr @.str.63, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../sound/usb/mixer_maps.c", i32 619, i32 22}
!124 = !{ptr @.str.64, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../sound/usb/mixer_maps.c", i32 620, i32 22}
!126 = !{ptr @uac3_badd_generic_io_map, !127, !"uac3_badd_generic_io_map", i1 false, i1 false}
!127 = !{!"../sound/usb/mixer_maps.c", i32 618, i32 37}
!128 = !{ptr @.str.65, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../sound/usb/mixer_maps.c", i32 624, i32 22}
!130 = !{ptr @uac3_badd_headphone_map, !131, !"uac3_badd_headphone_map", i1 false, i1 false}
!131 = !{!"../sound/usb/mixer_maps.c", i32 623, i32 37}
!132 = !{ptr @.str.66, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../sound/usb/mixer_maps.c", i32 628, i32 22}
!134 = !{ptr @uac3_badd_speaker_map, !135, !"uac3_badd_speaker_map", i1 false, i1 false}
!135 = !{!"../sound/usb/mixer_maps.c", i32 627, i32 37}
!136 = !{ptr @.str.67, !137, !"<string literal>", i1 false, i1 false}
!137 = !{!"../sound/usb/mixer_maps.c", i32 632, i32 22}
!138 = !{ptr @uac3_badd_microphone_map, !139, !"uac3_badd_microphone_map", i1 false, i1 false}
!139 = !{!"../sound/usb/mixer_maps.c", i32 631, i32 37}
!140 = !{ptr @.str.68, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../sound/usb/mixer_maps.c", i32 637, i32 22}
!142 = !{ptr @.str.69, !143, !"<string literal>", i1 false, i1 false}
!143 = !{!"../sound/usb/mixer_maps.c", i32 638, i32 22}
!144 = !{ptr @.str.70, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../sound/usb/mixer_maps.c", i32 639, i32 22}
!146 = !{ptr @uac3_badd_headset_map, !147, !"uac3_badd_headset_map", i1 false, i1 false}
!147 = !{!"../sound/usb/mixer_maps.c", i32 636, i32 37}
!148 = !{ptr @uac3_badd_speakerphone_map, !149, !"uac3_badd_speakerphone_map", i1 false, i1 false}
!149 = !{!"../sound/usb/mixer_maps.c", i32 642, i32 37}
!150 = !{ptr @.str.71, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../sound/usb/mixer.c", i32 2961, i32 11}
!152 = !{ptr @.str.72, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../sound/usb/mixer.c", i32 2968, i32 11}
!154 = !{ptr @.str.73, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../sound/usb/mixer.c", i32 2974, i32 11}
!156 = !{ptr @.str.74, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../sound/usb/mixer.c", i32 2980, i32 11}
!158 = !{ptr @.str.75, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../sound/usb/mixer.c", i32 2990, i32 11}
!160 = !{ptr @.str.76, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../sound/usb/mixer.c", i32 2998, i32 11}
!162 = !{ptr @.str.77, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../sound/usb/mixer.c", i32 3006, i32 11}
!164 = !{ptr @uac3_badd_profiles, !165, !"uac3_badd_profiles", i1 false, i1 false}
!165 = !{!"../sound/usb/mixer.c", i32 2953, i32 39}
!166 = !{ptr @.str.78, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../sound/usb/mixer.c", i32 3023, i32 4}
!168 = !{ptr @.str.79, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @uac3_badd_func_has_valid_channels._entry, !167, !"_entry", i1 false, i1 false}
!170 = !{ptr @uac3_badd_func_has_valid_channels._entry_ptr, !167, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @.str.81, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../sound/usb/mixer.c", i32 3032, i32 3}
!173 = !{ptr @uac3_badd_func_has_valid_channels._entry.80, !172, !"_entry", i1 false, i1 false}
!174 = !{ptr @uac3_badd_func_has_valid_channels._entry_ptr.82, !172, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.84, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../sound/usb/mixer.c", i32 3038, i32 3}
!177 = !{ptr @uac3_badd_func_has_valid_channels._entry.83, !176, !"_entry", i1 false, i1 false}
!178 = !{ptr @uac3_badd_func_has_valid_channels._entry_ptr.85, !176, !"_entry_ptr", i1 false, i1 false}
!179 = !{ptr @.str.86, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../sound/usb/mixer.c", i32 1713, i32 3}
!181 = !{ptr @.str.87, !180, !"<string literal>", i1 false, i1 false}
!182 = !{ptr @__build_feature_ctl._entry, !180, !"_entry", i1 false, i1 false}
!183 = !{ptr @__build_feature_ctl._entry_ptr, !180, !"_entry_ptr", i1 false, i1 false}
!184 = !{ptr @.str.88, !185, !"<string literal>", i1 false, i1 false}
!185 = !{!"../sound/usb/mixer.c", i32 1747, i32 7}
!186 = !{ptr @.str.89, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../sound/usb/mixer.c", i32 1760, i32 27}
!188 = !{ptr @.str.90, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../sound/usb/mixer.c", i32 1762, i32 27}
!190 = !{ptr @.str.91, !191, !"<string literal>", i1 false, i1 false}
!191 = !{!"../sound/usb/mixer.c", i32 1765, i32 5}
!192 = !{ptr @.str.92, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../sound/usb/mixer.c", i32 1765, i32 17}
!194 = !{ptr @.str.93, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../sound/usb/mixer.c", i32 1779, i32 3}
!196 = !{ptr @__build_feature_ctl.__UNIQUE_ID_ddebug245, !195, !"__UNIQUE_ID_ddebug245", i1 false, i1 false}
!197 = !{ptr @.str.95, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../sound/usb/mixer.c", i32 1806, i32 3}
!199 = !{ptr @__build_feature_ctl._entry.94, !198, !"_entry", i1 false, i1 false}
!200 = !{ptr @__build_feature_ctl._entry_ptr.96, !198, !"_entry_ptr", i1 false, i1 false}
!201 = !{ptr @.str.98, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../sound/usb/mixer.c", i32 1809, i32 3}
!203 = !{ptr @__build_feature_ctl._entry.97, !202, !"_entry", i1 false, i1 false}
!204 = !{ptr @__build_feature_ctl._entry_ptr.99, !202, !"_entry_ptr", i1 false, i1 false}
!205 = !{ptr @.str.100, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../sound/usb/mixer.c", i32 1815, i32 2}
!207 = !{ptr @__build_feature_ctl.__UNIQUE_ID_ddebug246, !206, !"__UNIQUE_ID_ddebug246", i1 false, i1 false}
!208 = !{ptr @usb_feature_unit_ctl_ro, !209, !"usb_feature_unit_ctl_ro", i1 false, i1 false}
!209 = !{!"../sound/usb/mixer.c", i32 1565, i32 38}
!210 = !{ptr @.str.101, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../sound/usb/mixer.c", i32 677, i32 17}
!212 = !{ptr @.str.102, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../sound/usb/mixer.c", i32 680, i32 17}
!214 = !{ptr @.str.103, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../sound/usb/mixer.c", i32 683, i32 17}
!216 = !{ptr @.str.104, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../sound/usb/mixer.c", i32 686, i32 17}
!218 = !{ptr @.str.105, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../sound/usb/mixer.c", i32 689, i32 25}
!220 = !{ptr @.str.106, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../sound/usb/mixer.c", i32 695, i32 16}
!222 = !{ptr @.str.107, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../sound/usb/mixer.c", i32 698, i32 16}
!224 = !{ptr @.str.108, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../sound/usb/mixer.c", i32 701, i32 16}
!226 = !{ptr @.str.109, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../sound/usb/mixer.c", i32 704, i32 16}
!228 = !{ptr @.str.110, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../sound/usb/mixer.c", i32 619, i32 12}
!230 = !{ptr @.str.111, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../sound/usb/mixer.c", i32 620, i32 12}
!232 = !{ptr @.str.112, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../sound/usb/mixer.c", i32 621, i32 12}
!234 = !{ptr @.str.113, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../sound/usb/mixer.c", i32 622, i32 12}
!236 = !{ptr @.str.114, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../sound/usb/mixer.c", i32 623, i32 12}
!238 = !{ptr @.str.115, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../sound/usb/mixer.c", i32 624, i32 12}
!240 = !{ptr @.str.116, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../sound/usb/mixer.c", i32 625, i32 12}
!242 = !{ptr @.str.117, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../sound/usb/mixer.c", i32 626, i32 12}
!244 = !{ptr @.str.118, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../sound/usb/mixer.c", i32 627, i32 12}
!246 = !{ptr @.str.119, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../sound/usb/mixer.c", i32 628, i32 12}
!248 = !{ptr @.str.120, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../sound/usb/mixer.c", i32 629, i32 12}
!250 = !{ptr @.str.121, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../sound/usb/mixer.c", i32 630, i32 12}
!252 = !{ptr @.str.122, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../sound/usb/mixer.c", i32 631, i32 12}
!254 = !{ptr @.str.123, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../sound/usb/mixer.c", i32 632, i32 12}
!256 = !{ptr @.str.124, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../sound/usb/mixer.c", i32 633, i32 12}
!258 = !{ptr @.str.125, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../sound/usb/mixer.c", i32 634, i32 12}
!260 = !{ptr @.str.126, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../sound/usb/mixer.c", i32 635, i32 12}
!262 = !{ptr @.str.127, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../sound/usb/mixer.c", i32 636, i32 12}
!264 = !{ptr @.str.128, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../sound/usb/mixer.c", i32 637, i32 12}
!266 = !{ptr @.str.129, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../sound/usb/mixer.c", i32 638, i32 12}
!268 = !{ptr @.str.130, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../sound/usb/mixer.c", i32 639, i32 12}
!270 = !{ptr @.str.131, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../sound/usb/mixer.c", i32 640, i32 12}
!272 = !{ptr @.str.132, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../sound/usb/mixer.c", i32 641, i32 12}
!274 = !{ptr @.str.133, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../sound/usb/mixer.c", i32 642, i32 12}
!276 = !{ptr @.str.134, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../sound/usb/mixer.c", i32 643, i32 12}
!278 = !{ptr @.str.135, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../sound/usb/mixer.c", i32 644, i32 12}
!280 = !{ptr @.str.136, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../sound/usb/mixer.c", i32 645, i32 12}
!282 = !{ptr @.str.137, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../sound/usb/mixer.c", i32 646, i32 12}
!284 = !{ptr @.str.138, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../sound/usb/mixer.c", i32 647, i32 12}
!286 = !{ptr @.str.139, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../sound/usb/mixer.c", i32 648, i32 12}
!288 = !{ptr @.str.140, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../sound/usb/mixer.c", i32 649, i32 12}
!290 = !{ptr @.str.141, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../sound/usb/mixer.c", i32 650, i32 12}
!292 = !{ptr @.str.142, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../sound/usb/mixer.c", i32 651, i32 12}
!294 = !{ptr @.str.143, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../sound/usb/mixer.c", i32 652, i32 12}
!296 = !{ptr @.str.144, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../sound/usb/mixer.c", i32 653, i32 12}
!298 = !{ptr @.str.145, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../sound/usb/mixer.c", i32 654, i32 12}
!300 = !{ptr @iterm_names, !301, !"iterm_names", i1 false, i1 false}
!301 = !{!"../sound/usb/mixer.c", i32 618, i32 3}
!302 = !{ptr @.str.146, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../sound/usb/mixer.c", i32 1618, i32 14}
!304 = !{ptr @.str.147, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../sound/usb/mixer.c", i32 1618, i32 38}
!306 = distinct !{null, !307, !"names_to_check", i1 false, i1 false}
!307 = !{!"../sound/usb/mixer.c", i32 1617, i32 28}
!308 = !{ptr @.str.148, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../sound/usb/mixer.c", i32 1050, i32 19}
!310 = !{ptr @.str.149, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../sound/usb/mixer.c", i32 1051, i32 20}
!312 = !{ptr @.str.150, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../sound/usb/mixer.c", i32 1052, i32 19}
!314 = !{ptr @.str.151, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../sound/usb/mixer.c", i32 1053, i32 18}
!316 = !{ptr @.str.152, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../sound/usb/mixer.c", i32 1054, i32 20}
!318 = !{ptr @.str.153, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../sound/usb/mixer.c", i32 1055, i32 30}
!320 = !{ptr @.str.154, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../sound/usb/mixer.c", i32 1056, i32 27}
!322 = !{ptr @.str.155, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../sound/usb/mixer.c", i32 1057, i32 20}
!324 = !{ptr @.str.156, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../sound/usb/mixer.c", i32 1058, i32 24}
!326 = !{ptr @.str.157, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../sound/usb/mixer.c", i32 1059, i32 22}
!328 = !{ptr @.str.158, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../sound/usb/mixer.c", i32 1061, i32 25}
!330 = !{ptr @.str.159, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../sound/usb/mixer.c", i32 1062, i32 28}
!332 = !{ptr @.str.160, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../sound/usb/mixer.c", i32 1063, i32 29}
!334 = !{ptr @audio_feature_info, !335, !"audio_feature_info", i1 false, i1 false}
!335 = !{!"../sound/usb/mixer.c", i32 1049, i32 46}
!336 = !{ptr @.str.161, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../sound/usb/mixer.c", i32 1912, i32 3}
!338 = !{ptr @build_connector_control._entry, !337, !"_entry", i1 false, i1 false}
!339 = !{ptr @build_connector_control._entry_ptr, !337, !"_entry_ptr", i1 false, i1 false}
!340 = !{ptr @.str.162, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../sound/usb/mixer.c", i32 1918, i32 26}
!342 = !{ptr @.str.163, !343, !"<string literal>", i1 false, i1 false}
!343 = !{!"../sound/usb/mixer.c", i32 1527, i32 3}
!344 = !{ptr @.str.164, !343, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @get_connector_value._entry, !343, !"_entry", i1 false, i1 false}
!346 = !{ptr @get_connector_value._entry_ptr, !343, !"_entry_ptr", i1 false, i1 false}
!347 = !{ptr @usb_connector_ctl_ro, !348, !"usb_connector_ctl_ro", i1 false, i1 false}
!348 = !{!"../sound/usb/mixer.c", i32 1586, i32 38}
!349 = !{ptr @.str.165, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../sound/usb/mixer.c", i32 1848, i32 17}
!351 = !{ptr @.str.166, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../sound/usb/mixer.c", i32 1856, i32 17}
!353 = !{ptr @.str.167, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../sound/usb/mixer.c", i32 1858, i32 17}
!355 = !{ptr @usbmix_ctl_maps, !356, !"usbmix_ctl_maps", i1 false, i1 false}
!356 = !{!"../sound/usb/mixer_maps.c", i32 446, i32 36}
!357 = !{ptr @.str.168, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../sound/usb/mixer_maps.c", i32 58, i32 7}
!359 = !{ptr @.str.169, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../sound/usb/mixer_maps.c", i32 64, i32 7}
!361 = !{ptr @.str.170, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../sound/usb/mixer_maps.c", i32 66, i32 8}
!363 = !{ptr @.str.171, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../sound/usb/mixer_maps.c", i32 67, i32 8}
!365 = !{ptr @.str.172, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../sound/usb/mixer_maps.c", i32 68, i32 8}
!367 = !{ptr @.str.173, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../sound/usb/mixer_maps.c", i32 74, i32 8}
!369 = !{ptr @.str.174, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../sound/usb/mixer_maps.c", i32 77, i32 8}
!371 = !{ptr @.str.175, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../sound/usb/mixer_maps.c", i32 81, i32 8}
!373 = !{ptr @.str.176, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../sound/usb/mixer_maps.c", i32 82, i32 8}
!375 = !{ptr @.str.177, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../sound/usb/mixer_maps.c", i32 84, i32 8}
!377 = !{ptr @extigy_map, !378, !"extigy_map", i1 false, i1 false}
!378 = !{!"../sound/usb/mixer_maps.c", i32 56, i32 37}
!379 = !{ptr @.str.178, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../sound/usb/mixer_maps.c", i32 116, i32 8}
!381 = !{ptr @.str.179, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../sound/usb/mixer_maps.c", i32 117, i32 8}
!383 = !{ptr @.str.180, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../sound/usb/mixer_maps.c", i32 119, i32 8}
!385 = !{ptr @mp3plus_map, !386, !"mp3plus_map", i1 false, i1 false}
!386 = !{!"../sound/usb/mixer_maps.c", i32 102, i32 37}
!387 = !{ptr @mp3plus_dB_2, !388, !"mp3plus_dB_2", i1 false, i1 false}
!388 = !{!"../sound/usb/mixer_maps.c", i32 99, i32 35}
!389 = !{ptr @mp3plus_dB_1, !390, !"mp3plus_dB_1", i1 false, i1 false}
!390 = !{!"../sound/usb/mixer_maps.c", i32 97, i32 35}
!391 = !{ptr @.str.181, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../sound/usb/mixer_maps.c", i32 149, i32 8}
!393 = !{ptr @.str.182, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../sound/usb/mixer_maps.c", i32 151, i32 8}
!395 = !{ptr @.str.183, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../sound/usb/mixer_maps.c", i32 165, i32 8}
!397 = !{ptr @.str.184, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../sound/usb/mixer_maps.c", i32 167, i32 8}
!399 = !{ptr @audigy2nx_map, !400, !"audigy2nx_map", i1 false, i1 false}
!400 = !{!"../sound/usb/mixer_maps.c", i32 143, i32 37}
!401 = !{ptr @.str.185, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../sound/usb/mixer_maps.c", i32 189, i32 51}
!403 = !{ptr @.str.186, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../sound/usb/mixer_maps.c", i32 194, i32 29}
!405 = !{ptr @.str.188, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../sound/usb/mixer_maps.c", i32 199, i32 38}
!407 = !{ptr @audigy2nx_selectors, !408, !"audigy2nx_selectors", i1 false, i1 false}
!408 = !{!"../sound/usb/mixer_maps.c", i32 185, i32 41}
!409 = !{ptr @live24ext_map, !410, !"live24ext_map", i1 false, i1 false}
!410 = !{!"../sound/usb/mixer_maps.c", i32 205, i32 37}
!411 = !{ptr @gamecom780_map, !412, !"gamecom780_map", i1 false, i1 false}
!412 = !{!"../sound/usb/mixer_maps.c", i32 320, i32 37}
!413 = !{ptr @.str.190, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../sound/usb/mixer_maps.c", i32 314, i32 8}
!415 = !{ptr @.str.191, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../sound/usb/mixer_maps.c", i32 315, i32 8}
!417 = !{ptr @hercules_usb51_map, !418, !"hercules_usb51_map", i1 false, i1 false}
!418 = !{!"../sound/usb/mixer_maps.c", i32 309, i32 37}
!419 = !{ptr @.str.192, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../sound/usb/mixer_maps.c", i32 180, i32 29}
!421 = !{ptr @.str.193, !422, !"<string literal>", i1 false, i1 false}
!422 = !{!"../sound/usb/mixer_maps.c", i32 180, i32 41}
!423 = !{ptr @c400_selectors, !424, !"c400_selectors", i1 false, i1 false}
!424 = !{!"../sound/usb/mixer_maps.c", i32 176, i32 41}
!425 = !{ptr @.str.195, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../sound/usb/mixer_maps.c", i32 215, i32 7}
!427 = !{ptr @linex_map, !428, !"linex_map", i1 false, i1 false}
!428 = !{!"../sound/usb/mixer_maps.c", i32 212, i32 37}
!429 = !{ptr @maya44_map, !430, !"maya44_map", i1 false, i1 false}
!430 = !{!"../sound/usb/mixer_maps.c", i32 219, i32 37}
!431 = !{ptr @justlink_map, !432, !"justlink_map", i1 false, i1 false}
!432 = !{!"../sound/usb/mixer_maps.c", i32 242, i32 37}
!433 = !{ptr @.str.196, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../sound/usb/mixer_maps.c", i32 271, i32 8}
!435 = !{ptr @aureon_51_2_map, !436, !"aureon_51_2_map", i1 false, i1 false}
!436 = !{!"../sound/usb/mixer_maps.c", i32 259, i32 37}
!437 = !{ptr @dell_alc4020_map, !438, !"dell_alc4020_map", i1 false, i1 false}
!438 = !{!"../sound/usb/mixer_maps.c", i32 360, i32 37}
!439 = !{ptr @.str.197, !440, !"<string literal>", i1 false, i1 false}
!440 = !{!"../sound/usb/mixer_maps.c", i32 172, i32 7}
!441 = !{ptr @mbox1_map, !442, !"mbox1_map", i1 false, i1 false}
!442 = !{!"../sound/usb/mixer_maps.c", i32 171, i32 37}
!443 = !{ptr @.str.198, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../sound/usb/mixer_maps.c", i32 282, i32 7}
!445 = !{ptr @.str.199, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../sound/usb/mixer_maps.c", i32 287, i32 7}
!447 = !{ptr @scratch_live_map, !448, !"scratch_live_map", i1 false, i1 false}
!448 = !{!"../sound/usb/mixer_maps.c", i32 278, i32 37}
!449 = !{ptr @ebox44_map, !450, !"ebox44_map", i1 false, i1 false}
!450 = !{!"../sound/usb/mixer_maps.c", i32 294, i32 37}
!451 = !{ptr @scms_usb3318_map, !452, !"scms_usb3318_map", i1 false, i1 false}
!452 = !{!"../sound/usb/mixer_maps.c", i32 328, i32 37}
!453 = !{ptr @bose_companion5_map, !454, !"bose_companion5_map", i1 false, i1 false}
!454 = !{!"../sound/usb/mixer_maps.c", i32 335, i32 37}
!455 = !{ptr @bose_companion5_dB, !456, !"bose_companion5_dB", i1 false, i1 false}
!456 = !{!"../sound/usb/mixer_maps.c", i32 334, i32 35}
!457 = !{ptr @bose_soundlink_map, !458, !"bose_soundlink_map", i1 false, i1 false}
!458 = !{!"../sound/usb/mixer_maps.c", i32 342, i32 37}
!459 = !{ptr @bose_soundlink_dB, !460, !"bose_soundlink_dB", i1 false, i1 false}
!460 = !{!"../sound/usb/mixer_maps.c", i32 341, i32 35}
!461 = !{ptr @.str.200, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../sound/usb/mixer_maps.c", i32 373, i32 7}
!463 = !{ptr @corsair_virtuoso_map, !464, !"corsair_virtuoso_map", i1 false, i1 false}
!464 = !{!"../sound/usb/mixer_maps.c", i32 371, i32 37}
!465 = !{ptr @.str.201, !466, !"<string literal>", i1 false, i1 false}
!466 = !{!"../sound/usb/mixer_maps.c", i32 423, i32 8}
!467 = !{ptr @.str.202, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../sound/usb/mixer_maps.c", i32 424, i32 8}
!469 = !{ptr @.str.203, !470, !"<string literal>", i1 false, i1 false}
!470 = !{!"../sound/usb/mixer_maps.c", i32 429, i32 7}
!471 = !{ptr @.str.204, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../sound/usb/mixer_maps.c", i32 430, i32 8}
!473 = !{ptr @aorus_master_alc1220vb_map, !474, !"aorus_master_alc1220vb_map", i1 false, i1 false}
!474 = !{!"../sound/usb/mixer_maps.c", i32 420, i32 37}
!475 = !{ptr @.str.205, !476, !"<string literal>", i1 false, i1 false}
!476 = !{!"../sound/usb/mixer_maps.c", i32 400, i32 8}
!477 = !{ptr @.str.206, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../sound/usb/mixer_maps.c", i32 401, i32 8}
!479 = !{ptr @.str.207, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../sound/usb/mixer_maps.c", i32 406, i32 8}
!481 = !{ptr @trx40_mobo_map, !482, !"trx40_mobo_map", i1 false, i1 false}
!482 = !{!"../sound/usb/mixer_maps.c", i32 393, i32 37}
!483 = !{ptr @trx40_mobo_connector_map, !484, !"trx40_mobo_connector_map", i1 false, i1 false}
!484 = !{!"../sound/usb/mixer_maps.c", i32 410, i32 42}
!485 = !{ptr @asus_rog_map, !486, !"asus_rog_map", i1 false, i1 false}
!486 = !{!"../sound/usb/mixer_maps.c", i32 381, i32 37}
!487 = !{ptr @msi_mpg_x570s_carbon_max_wifi_alc4080_map, !488, !"msi_mpg_x570s_carbon_max_wifi_alc4080_map", i1 false, i1 false}
!488 = !{!"../sound/usb/mixer_maps.c", i32 435, i32 37}
!489 = !{ptr @lenovo_p620_rear_map, !490, !"lenovo_p620_rear_map", i1 false, i1 false}
!490 = !{!"../sound/usb/mixer_maps.c", i32 387, i32 37}
!491 = !{ptr @sennheiser_pc8_map, !492, !"sennheiser_pc8_map", i1 false, i1 false}
!492 = !{!"../sound/usb/mixer_maps.c", i32 349, i32 37}
!493 = !{ptr @sennheiser_pc8_dB, !494, !"sennheiser_pc8_dB", i1 false, i1 false}
!494 = !{!"../sound/usb/mixer_maps.c", i32 348, i32 35}
!495 = !{ptr @.str.208, !496, !"<string literal>", i1 false, i1 false}
!496 = !{!"../sound/usb/mixer.c", i32 2872, i32 3}
!497 = !{ptr @.str.209, !496, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @parse_audio_unit._entry, !496, !"_entry", i1 false, i1 false}
!499 = !{ptr @parse_audio_unit._entry_ptr, !496, !"_entry_ptr", i1 false, i1 false}
!500 = !{ptr @.str.210, !501, !"<string literal>", i1 false, i1 false}
!501 = !{!"../sound/usb/mixer.c", i32 2877, i32 3}
!502 = !{ptr @parse_audio_unit.__UNIQUE_ID_ddebug250, !501, !"__UNIQUE_ID_ddebug250", i1 false, i1 false}
!503 = !{ptr @.str.212, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../sound/usb/mixer.c", i32 2915, i32 3}
!505 = !{ptr @parse_audio_unit._entry.211, !504, !"_entry", i1 false, i1 false}
!506 = !{ptr @parse_audio_unit._entry_ptr.213, !504, !"_entry_ptr", i1 false, i1 false}
!507 = !{ptr @.str.214, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../sound/usb/mixer.c", i32 743, i32 2}
!509 = !{ptr @.str.215, !508, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @get_cluster_channels_v3._entry, !508, !"_entry", i1 false, i1 false}
!511 = !{ptr @get_cluster_channels_v3._entry_ptr, !508, !"_entry_ptr", i1 false, i1 false}
!512 = !{ptr @.str.216, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../sound/usb/mixer.c", i32 2244, i32 3}
!514 = !{ptr @.str.217, !513, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @parse_audio_mixer_unit._entry, !513, !"_entry", i1 false, i1 false}
!516 = !{ptr @parse_audio_mixer_unit._entry_ptr, !513, !"_entry_ptr", i1 false, i1 false}
!517 = !{ptr @.str.218, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../sound/usb/mixer.c", i32 2182, i32 3}
!519 = !{ptr @build_mixer_unit_ctl._entry, !518, !"_entry", i1 false, i1 false}
!520 = !{ptr @build_mixer_unit_ctl._entry_ptr, !518, !"_entry_ptr", i1 false, i1 false}
!521 = !{ptr @.str.219, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../sound/usb/mixer.c", i32 2193, i32 32}
!523 = !{ptr @.str.220, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../sound/usb/mixer.c", i32 2196, i32 2}
!525 = !{ptr @build_mixer_unit_ctl.__UNIQUE_ID_ddebug247, !524, !"__UNIQUE_ID_ddebug247", i1 false, i1 false}
!526 = !{ptr @.str.221, !527, !"<string literal>", i1 false, i1 false}
!527 = !{!"../sound/usb/mixer.c", i32 1972, i32 5}
!528 = !{ptr @.str.222, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../sound/usb/mixer.c", i32 1975, i32 5}
!530 = !{ptr @usb_bool_master_control_ctl_ro, !531, !"usb_bool_master_control_ctl_ro", i1 false, i1 false}
!531 = !{!"../sound/usb/mixer.c", i32 1577, i32 38}
!532 = !{ptr @.str.223, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../sound/usb/mixer.c", i32 2795, i32 25}
!534 = !{ptr @.str.224, !535, !"<string literal>", i1 false, i1 false}
!535 = !{!"../sound/usb/mixer.c", i32 2800, i32 3}
!536 = !{ptr @parse_audio_selector_unit._entry, !535, !"_entry", i1 false, i1 false}
!537 = !{ptr @parse_audio_selector_unit._entry_ptr, !535, !"_entry_ptr", i1 false, i1 false}
!538 = !{ptr @.str.225, !539, !"<string literal>", i1 false, i1 false}
!539 = !{!"../sound/usb/mixer.c", i32 2833, i32 27}
!540 = !{ptr @.str.226, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../sound/usb/mixer.c", i32 2838, i32 26}
!542 = !{ptr @.str.227, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../sound/usb/mixer.c", i32 2840, i32 26}
!544 = !{ptr @.str.228, !545, !"<string literal>", i1 false, i1 false}
!545 = !{!"../sound/usb/mixer.c", i32 2842, i32 26}
!546 = !{ptr @.str.229, !547, !"<string literal>", i1 false, i1 false}
!547 = !{!"../sound/usb/mixer.c", i32 2845, i32 2}
!548 = !{ptr @parse_audio_selector_unit.__UNIQUE_ID_ddebug249, !547, !"__UNIQUE_ID_ddebug249", i1 false, i1 false}
!549 = !{ptr @mixer_selectunit_ctl, !550, !"mixer_selectunit_ctl", i1 false, i1 false}
!550 = !{!"../sound/usb/mixer.c", i32 2692, i32 38}
!551 = !{ptr @.str.230, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../sound/usb/mixer.c", i32 2026, i32 3}
!553 = !{ptr @.str.231, !552, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @parse_audio_feature_unit._entry, !552, !"_entry", i1 false, i1 false}
!555 = !{ptr @parse_audio_feature_unit._entry_ptr, !552, !"_entry_ptr", i1 false, i1 false}
!556 = !{ptr @.str.233, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../sound/usb/mixer.c", i32 2032, i32 3}
!558 = !{ptr @parse_audio_feature_unit._entry.232, !557, !"_entry", i1 false, i1 false}
!559 = !{ptr @parse_audio_feature_unit._entry_ptr.234, !557, !"_entry_ptr", i1 false, i1 false}
!560 = !{ptr @.str.235, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../sound/usb/mixer.c", i32 2467, i32 11}
!562 = !{ptr @build_audio_procunit.default_value_info, !563, !"default_value_info", i1 false, i1 false}
!563 = !{!"../sound/usb/mixer.c", i32 2466, i32 42}
!564 = !{ptr @build_audio_procunit.default_info, !565, !"default_info", i1 false, i1 false}
!565 = !{!"../sound/usb/mixer.c", i32 2470, i32 36}
!566 = !{ptr @.str.236, !567, !"<string literal>", i1 false, i1 false}
!567 = !{!"../sound/usb/mixer.c", i32 2474, i32 3}
!568 = !{ptr @.str.237, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../sound/usb/mixer.c", i32 2474, i32 22}
!570 = !{ptr @.str.238, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../sound/usb/mixer.c", i32 2596, i32 25}
!572 = !{ptr @.str.239, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../sound/usb/mixer.c", i32 2599, i32 3}
!574 = !{ptr @.str.240, !573, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @build_audio_procunit.__UNIQUE_ID_ddebug248, !573, !"__UNIQUE_ID_ddebug248", i1 false, i1 false}
!576 = !{ptr @mixer_procunit_ctl, !577, !"mixer_procunit_ctl", i1 false, i1 false}
!577 = !{!"../sound/usb/mixer.c", i32 2330, i32 38}
!578 = !{ptr @.str.241, !579, !"<string literal>", i1 false, i1 false}
!579 = !{!"../sound/usb/mixer.c", i32 2399, i32 28}
!580 = !{ptr @.str.242, !581, !"<string literal>", i1 false, i1 false}
!581 = !{!"../sound/usb/mixer.c", i32 2400, i32 32}
!582 = !{ptr @.str.243, !583, !"<string literal>", i1 false, i1 false}
!583 = !{!"../sound/usb/mixer.c", i32 2401, i32 33}
!584 = !{ptr @.str.244, !585, !"<string literal>", i1 false, i1 false}
!585 = !{!"../sound/usb/mixer.c", i32 2402, i32 24}
!586 = !{ptr @.str.245, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../sound/usb/mixer.c", i32 2403, i32 24}
!588 = !{ptr @.str.246, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../sound/usb/mixer.c", i32 2404, i32 32}
!590 = !{ptr @procunits, !591, !"procunits", i1 false, i1 false}
!591 = !{!"../sound/usb/mixer.c", i32 2398, i32 35}
!592 = !{ptr @.str.247, !593, !"<string literal>", i1 false, i1 false}
!593 = !{!"../sound/usb/mixer.c", i32 2361, i32 24}
!594 = !{ptr @updown_proc_info, !595, !"updown_proc_info", i1 false, i1 false}
!595 = !{!"../sound/usb/mixer.c", i32 2359, i32 41}
!596 = !{ptr @prologic_proc_info, !597, !"prologic_proc_info", i1 false, i1 false}
!597 = !{!"../sound/usb/mixer.c", i32 2364, i32 41}
!598 = !{ptr @.str.248, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../sound/usb/mixer.c", i32 2371, i32 18}
!600 = !{ptr @threed_enh_proc_info, !601, !"threed_enh_proc_info", i1 false, i1 false}
!601 = !{!"../sound/usb/mixer.c", i32 2369, i32 41}
!602 = !{ptr @.str.249, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../sound/usb/mixer.c", i32 2376, i32 22}
!604 = !{ptr @.str.250, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../sound/usb/mixer.c", i32 2377, i32 21}
!606 = !{ptr @.str.251, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../sound/usb/mixer.c", i32 2378, i32 25}
!608 = !{ptr @reverb_proc_info, !609, !"reverb_proc_info", i1 false, i1 false}
!609 = !{!"../sound/usb/mixer.c", i32 2374, i32 41}
!610 = !{ptr @.str.252, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../sound/usb/mixer.c", i32 2384, i32 21}
!612 = !{ptr @.str.253, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../sound/usb/mixer.c", i32 2385, i32 22}
!614 = !{ptr @chorus_proc_info, !615, !"chorus_proc_info", i1 false, i1 false}
!615 = !{!"../sound/usb/mixer.c", i32 2381, i32 41}
!616 = !{ptr @.str.254, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../sound/usb/mixer.c", i32 2390, i32 18}
!618 = !{ptr @.str.255, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../sound/usb/mixer.c", i32 2391, i32 21}
!620 = !{ptr @.str.256, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../sound/usb/mixer.c", i32 2392, i32 23}
!622 = !{ptr @.str.257, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../sound/usb/mixer.c", i32 2393, i32 25}
!624 = !{ptr @.str.258, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../sound/usb/mixer.c", i32 2394, i32 26}
!626 = !{ptr @dcr_proc_info, !627, !"dcr_proc_info", i1 false, i1 false}
!627 = !{!"../sound/usb/mixer.c", i32 2388, i32 41}
!628 = !{ptr @.str.259, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../sound/usb/mixer.c", i32 2420, i32 33}
!630 = !{ptr @uac3_procunits, !631, !"uac3_procunits", i1 false, i1 false}
!631 = !{!"../sound/usb/mixer.c", i32 2417, i32 35}
!632 = !{ptr @uac3_updown_proc_info, !633, !"uac3_updown_proc_info", i1 false, i1 false}
!633 = !{!"../sound/usb/mixer.c", i32 2408, i32 41}
!634 = !{ptr @.str.260, !635, !"<string literal>", i1 false, i1 false}
!635 = !{!"../sound/usb/mixer.c", i32 2413, i32 28}
!636 = !{ptr @uac3_stereo_ext_proc_info, !637, !"uac3_stereo_ext_proc_info", i1 false, i1 false}
!637 = !{!"../sound/usb/mixer.c", i32 2412, i32 41}
!638 = !{ptr @.str.261, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../sound/usb/mixer.c", i32 2355, i32 10}
!640 = !{ptr @undefined_proc_info, !641, !"undefined_proc_info", i1 false, i1 false}
!641 = !{!"../sound/usb/mixer.c", i32 2354, i32 41}
!642 = !{ptr @.str.262, !643, !"<string literal>", i1 false, i1 false}
!643 = !{!"../sound/usb/mixer.c", i32 2444, i32 23}
!644 = !{ptr @.str.263, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../sound/usb/mixer.c", i32 2445, i32 25}
!646 = !{ptr @.str.264, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../sound/usb/mixer.c", i32 2446, i32 30}
!648 = !{ptr @.str.265, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../sound/usb/mixer.c", i32 2447, i32 27}
!650 = !{ptr @extunits, !651, !"extunits", i1 false, i1 false}
!651 = !{!"../sound/usb/mixer.c", i32 2443, i32 35}
!652 = !{ptr @clock_rate_xu_info, !653, !"clock_rate_xu_info", i1 false, i1 false}
!653 = !{!"../sound/usb/mixer.c", i32 2427, i32 41}
!654 = !{ptr @.str.266, !655, !"<string literal>", i1 false, i1 false}
!655 = !{!"../sound/usb/mixer.c", i32 2432, i32 34}
!656 = !{ptr @clock_source_xu_info, !657, !"clock_source_xu_info", i1 false, i1 false}
!657 = !{!"../sound/usb/mixer.c", i32 2431, i32 41}
!658 = !{ptr @.str.267, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../sound/usb/mixer.c", i32 2436, i32 36}
!660 = !{ptr @spdif_format_xu_info, !661, !"spdif_format_xu_info", i1 false, i1 false}
!661 = !{!"../sound/usb/mixer.c", i32 2435, i32 41}
!662 = !{ptr @soft_limit_xu_info, !663, !"soft_limit_xu_info", i1 false, i1 false}
!663 = !{!"../sound/usb/mixer.c", i32 2439, i32 41}
!664 = !{ptr @.str.268, !665, !"<string literal>", i1 false, i1 false}
!665 = !{!"../sound/usb/mixer.c", i32 3479, i32 4}
!666 = !{ptr @.str.269, !665, !"<string literal>", i1 false, i1 false}
!667 = !{ptr @snd_usb_mixer_interrupt.__UNIQUE_ID_ddebug254, !665, !"__UNIQUE_ID_ddebug254", i1 false, i1 false}
!668 = !{ptr @.str.270, !669, !"<string literal>", i1 false, i1 false}
!669 = !{!"../sound/usb/mixer.c", i32 3409, i32 3}
!670 = !{ptr @.str.271, !669, !"<string literal>", i1 false, i1 false}
!671 = !{ptr @snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug252, !669, !"__UNIQUE_ID_ddebug252", i1 false, i1 false}
!672 = !{ptr @.str.272, !673, !"<string literal>", i1 false, i1 false}
!673 = !{!"../sound/usb/mixer.c", i32 3456, i32 4}
!674 = !{ptr @snd_usb_mixer_interrupt_v2.__UNIQUE_ID_ddebug253, !673, !"__UNIQUE_ID_ddebug253", i1 false, i1 false}
!675 = !{ptr @.str.273, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../sound/usb/mixer.c", i32 3379, i32 3}
!677 = !{ptr @.str.274, !678, !"<string literal>", i1 false, i1 false}
!678 = !{!"../sound/usb/mixer.c", i32 3383, i32 3}
!679 = !{ptr @.str.275, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../sound/usb/mixer.c", i32 3386, i32 5}
!681 = !{ptr @.str.276, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../sound/usb/mixer.c", i32 3388, i32 6}
!683 = !{ptr @.str.277, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../sound/usb/mixer.c", i32 3352, i32 25}
!685 = !{ptr @.str.278, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../sound/usb/mixer.c", i32 3353, i32 29}
!687 = !{ptr @.str.279, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../sound/usb/mixer.c", i32 3354, i32 20}
!689 = !{ptr @.str.280, !690, !"<string literal>", i1 false, i1 false}
!690 = !{!"../sound/usb/mixer.c", i32 3355, i32 20}
!691 = !{ptr @.str.281, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../sound/usb/mixer.c", i32 3356, i32 21}
!693 = !{ptr @.str.282, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../sound/usb/mixer.c", i32 3357, i32 21}
!695 = !{ptr @.str.283, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../sound/usb/mixer.c", i32 3358, i32 21}
!697 = !{ptr @.str.284, !698, !"<string literal>", i1 false, i1 false}
!698 = !{!"../sound/usb/mixer.c", i32 3359, i32 21}
!699 = !{ptr @.str.285, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../sound/usb/mixer.c", i32 3360, i32 26}
!701 = !{ptr @snd_usb_mixer_dump_cval.val_types, !702, !"val_types", i1 false, i1 false}
!702 = !{!"../sound/usb/mixer.c", i32 3351, i32 28}
!703 = !{ptr @.str.286, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../sound/usb/mixer.c", i32 3362, i32 2}
!705 = !{ptr @.str.287, !706, !"<string literal>", i1 false, i1 false}
!706 = !{!"../sound/usb/mixer.c", i32 3366, i32 2}
!707 = !{i32 1, !"wchar_size", i32 2}
!708 = !{i32 1, !"min_enum_size", i32 4}
!709 = !{i32 8, !"branch-target-enforcement", i32 0}
!710 = !{i32 8, !"sign-return-address", i32 0}
!711 = !{i32 8, !"sign-return-address-all", i32 0}
!712 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!713 = !{i32 7, !"uwtable", i32 1}
!714 = !{i32 7, !"frame-pointer", i32 2}
!715 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!716 = !{i64 2148909112, i64 2148909117, i64 2148909130, i64 2148909174, i64 2148909208, i64 2148909229}
!717 = !{i64 2153614671, i64 2153614696}
!718 = !{i8 0, i8 2}
!719 = !{!"auto-init"}
!720 = !{!"branch_weights", i32 1, i32 2000}
